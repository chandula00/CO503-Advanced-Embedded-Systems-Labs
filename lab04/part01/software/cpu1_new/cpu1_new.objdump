
cpu1_new.elf:     file format elf32-littlenios2
cpu1_new.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000201b8

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0001404c memsz 0x0001404c flags r-x
    LOAD off    0x0001506c vaddr 0x0003406c paddr 0x00035b60 align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x00017654 vaddr 0x00037654 paddr 0x00037654 align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000198  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000137cc  000201b8  000201b8  000011b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006e8  00033984  00033984  00014984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  0003406c  00035b60  0001506c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  00037654  00037654  00017654  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00016b60  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001238  00000000  00000000  00016b88  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0003619f  00000000  00000000  00017dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000d325  00000000  00000000  0004df5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000f18c  00000000  00000000  0005b284  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00002370  00000000  00000000  0006a410  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00003ef3  00000000  00000000  0006c780  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00019292  00000000  00000000  00070673  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_alt_sim_info 00000010  00000000  00000000  00089908  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000dd0  00000000  00000000  00089918  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  0008e501  2**0
                  CONTENTS, READONLY
 17 .cpu          00000004  00000000  00000000  0008e504  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  0008e508  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0008e509  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  0008e50a  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  0008e50e  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  0008e512  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000a  00000000  00000000  0008e516  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000a  00000000  00000000  0008e520  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000a  00000000  00000000  0008e52a  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000004  00000000  00000000  0008e534  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000052  00000000  00000000  0008e538  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00181393  00000000  00000000  0008e58a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
000201b8 l    d  .text	00000000 .text
00033984 l    d  .rodata	00000000 .rodata
0003406c l    d  .rwdata	00000000 .rwdata
00037654 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../cpu1_new_bsp//obj/HAL/src/crt0.o
000201f0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00020094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 FIFO.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00021518 l     F .text	00000008 __fp_lock
00021520 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fscanf.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
0003406c l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
000234ac l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000238e4 l     F .text	00000034 __sprint_r
00033a8a l     O .rodata	00000010 blanks.3515
00033a9a l     O .rodata	00000010 zeroes.3516
00000000 l    df *ABS*	00000000 vfscanf.c
00033ab2 l     O .rodata	00000022 basefix.3427
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00033bd5 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00027184 l     F .text	0000023c quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00033d78 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00033ec0 l     O .rodata	0000000c p05.2435
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
00034880 l     O .rwdata	00000014 fpi.2015
00033edc l     O .rodata	00000028 tinytens
00034894 l     O .rwdata	00000014 fpinan.2051
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0002d418 l     F .text	00000110 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
0002eecc l     F .text	00000354 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0002fcc8 l     F .text	00000074 udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
00030600 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0003071c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00030748 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
00030848 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0003093c l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00030a28 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
00030c04 l     F .text	00000050 alt_get_errno
00030c54 l     F .text	000000f0 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
00030e9c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00035b08 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00031110 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00031250 l     F .text	00000038 alt_dev_reg
00034a50 l     O .rwdata	00001060 jtag_uart1
00035ab0 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_fifo_util.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00031a54 l     F .text	00000204 altera_avalon_jtag_uart_irq
00031c58 l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00032294 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_hostfs.c
00035b48 l     O .rwdata	00000004 hcinfo.2311
00035b3c l     O .rwdata	00000004 hcinfo.2324
00035b30 l     O .rwdata	00000004 hcinfo.2333
00035b24 l     O .rwdata	00000004 hcinfo.2346
00035b18 l     O .rwdata	00000004 hcinfo.2359
00035b0c l     O .rwdata	00000004 hcinfo.2385
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00032b14 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0003329c l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 
0002a384 g     F .text	00000074 _mprec_log10
0002a474 g     F .text	00000084 __any_on
00028f58 g     F .text	00000064 _isatty_r
00033da8 g     O .rodata	00000028 __mprec_tinytens
00030b4c g     F .text	00000078 alt_main
00030490 g     F .text	00000044 __ashldi3
00023414 g     F .text	00000084 _puts_r
000377b0 g     O .bss	00000100 alt_irq
000290d0 g     F .text	0000006c _lseek_r
000315c0 g     F .text	00000058 altera_avalon_fifo_write_almostfull
00035b60 g       *ABS*	00000000 __flash_rwdata_start
000289dc g     F .text	00000098 __sflags
0002f76c g     F .text	0000005c __eqdf2
00037a40 g       *ABS*	00000000 __alt_heap_start
000233d8 g     F .text	0000003c printf
000237f4 g     F .text	0000005c __sseek
000215bc g     F .text	0000010c __sinit
00028ff4 g     F .text	0000009c _setlocale_r
00021534 g     F .text	00000078 __sfmoreglue
0002d330 g     F .text	0000001c ungetc
00030be4 g     F .text	00000020 __malloc_unlock
00032390 g     F .text	0000016c alt_hostfs_open
0002adf8 g     F .text	00001548 _strtod_r
0002931c g     F .text	0000018c memmove
00031340 g     F .text	00000098 altera_avalon_fifo_init
000215ac g     F .text	00000010 _cleanup
00031670 g     F .text	00000058 altera_avalon_fifo_write_fifo
000294a8 g     F .text	000000a8 _Balloc
0002f824 g     F .text	00000064 __gtdf2
00000000  w      *UND*	00000000 __errno
00020000 g     F .entry	0000000c __reset
00031808 g     F .text	00000028 altera_avalon_fifo_read_backpressure
00020020 g       *ABS*	00000000 __flash_exceptions_start
00022518 g     F .text	00000068 _fstat_r
00037654 g     O .bss	00000004 errno
00026eac g     F .text	00000024 __svfscanf
00030028 g     F .text	0000002c __make_fp
00037674 g     O .bss	00000004 alt_argv
0003dad8 g       *ABS*	00000000 _gp
0003150c g     F .text	0000005c altera_avalon_fifo_clear_event
00022024 g     F .text	0000003c fscanf
000348d0 g     O .rwdata	00000180 alt_fd_list
000326d8 g     F .text	000000b8 alt_hostfs_seek
00032cbc g     F .text	00000090 alt_find_dev
00023124 g     F .text	00000140 memcpy
0002dd30 g     F .text	0000028c __hexnan
00021528 g     F .text	0000000c _cleanup_r
0002f9a4 g     F .text	000000d4 __floatsidf
00032e60 g     F .text	00000084 alt_fs_reg
0003337c g     F .text	00000078 alt_io_redirect
0002f8ec g     F .text	0000005c __ltdf2
00033984 g       *ABS*	00000000 __DTOR_END__
00023498 g     F .text	00000014 puts
000291a0 g     F .text	00000040 mbrtowc
00026e60 g     F .text	0000004c _vfscanf_r
0002a2e0 g     F .text	000000a4 __ratio
00031e58 g     F .text	00000218 altera_avalon_jtag_uart_read
00022978 g     F .text	00000014 malloc
000233ac g     F .text	0000002c _printf_r
0002fde8 g     F .text	00000008 __udivsi3
00030898 g     F .text	000000a4 isatty
00028fbc g     F .text	00000038 iswspace
00033df8 g     O .rodata	000000c8 __mprec_tens
00029090 g     F .text	0000000c __locale_charset
0002e0cc g     F .text	00000084 __fixunsdfsi
00037660 g     O .bss	00000004 __malloc_top_pad
0002ccec g     F .text	00000024 strtoul
00035aec g     O .rwdata	00000004 __mb_cur_max
0002909c g     F .text	0000000c _localeconv_r
0002cd10 g     F .text	00000394 _strtoull_r
000298d8 g     F .text	0000003c __i2b
00028a74 g     F .text	000004e4 __sfvwrite_r
000236b4 g     F .text	00000064 _sbrk_r
00020338 g     F .text	00000860 read_444_format
00032568 g     F .text	000000b8 alt_hostfs_read
0002a4f8 g     F .text	0000006c _read_r
00034874 g     O .rwdata	0000000c __lc_ctype
00035b00 g     O .rwdata	00000004 alt_max_fd
00030278 g     F .text	00000104 __unpack_d
000211b0 g     F .text	0000013c _fclose_r
000214e8 g     F .text	00000030 fflush
0003765c g     O .bss	00000004 __malloc_max_sbrked_mem
0002f220 g     F .text	00000054 __adddf3
0002a054 g     F .text	00000148 __b2d
0002e7a0 g     F .text	00000628 __umoddi3
00030a78 g     F .text	000000d4 lseek
00035ad8 g     O .rwdata	00000004 _global_impure_ptr
0002a564 g     F .text	000005fc _realloc_r
00037a40 g       *ABS*	00000000 __bss_end
000331ac g     F .text	000000f0 alt_iic_isr_register
0003348c g     F .text	00000104 alt_tick
000376b0 g     O .bss	00000100 __hexdig
0002e150 g     F .text	00000650 __udivdi3
00033dd0 g     O .rodata	00000028 __mprec_bigtens
000296bc g     F .text	00000104 __s2b
0002fbac g     F .text	0000011c __floatunsidf
00029df4 g     F .text	00000058 __mcmp
00035ae8 g     O .rwdata	00000004 __ctype_ptr
000217d4 g     F .text	00000018 __fp_lock_all
00033160 g     F .text	0000004c alt_ic_irq_enabled
000202b8 g     F .text	00000040 FIFO_INIT
000333f4 g     F .text	00000098 alt_alarm_stop
0002c6f4 g     F .text	00000024 strtol
0003767c g     O .bss	00000004 alt_irq_active
000324fc g     F .text	0000006c alt_hostfs_close
000200ec g     F .exceptions	000000cc alt_irq_handler
000348a8 g     O .rwdata	00000028 alt_dev_null
0002fea4 g     F .text	000000c8 __unpack_f
00032af8 g     F .text	0000001c alt_dcache_flush_all
000297c0 g     F .text	00000068 __hi0bits
0002fa78 g     F .text	000000d4 __fixdfsi
0002c340 g     F .text	0000001c strtod
00031568 g     F .text	00000058 altera_avalon_fifo_write_ienable
00035b60 g       *ABS*	00000000 __ram_rwdata_end
0003147c g     F .text	0000002c altera_avalon_fifo_read_almostempty
00035af8 g     O .rwdata	00000008 alt_dev_list
00031160 g     F .text	000000f0 write
0002ee1c g     F .text	0000005c __gtsf2
0003406c g       *ABS*	00000000 __ram_rodata_end
00030798 g     F .text	000000b0 fstat
00021978 g     F .text	00000024 fprintf
0003044c g     F .text	00000044 __lshrdi3
0002f948 g     F .text	0000005c __ledf2
00029b6c g     F .text	0000012c __pow5mult
0003766c g     O .bss	00000004 __nlocale_changed
0002fdf0 g     F .text	00000008 __umodsi3
00037a40 g       *ABS*	00000000 end
000304d4 g     F .text	0000012c __pack_f
000224f4 g     F .text	00000024 fseek
00031994 g     F .text	000000c0 altera_avalon_jtag_uart_init
000314a8 g     F .text	0000003c altera_avalon_fifo_read_event
00033984 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
00032308 g     F .text	00000088 alt_avalon_timer_sc_init
0002fdf8 g     F .text	000000ac __clzsi2
00032070 g     F .text	00000224 altera_avalon_jtag_uart_write
000217c4 g     F .text	00000004 __sfp_lock_acquire
00031734 g     F .text	0000004c altera_avalon_fifo_read_fifo
00029224 g     F .text	000000f8 memchr
00023918 g     F .text	00001e7c ___vfprintf_internal_r
0002ac90 g     F .text	00000058 _sprintf_r
00020000 g       *ABS*	00000000 __alt_mem_mem1
00021d54 g     F .text	000002d0 _free_r
000337a8 g     F .text	000001a0 __call_exitprocs
00037668 g     O .bss	00000004 __mlocale_changed
00035ae0 g     O .rwdata	00000004 __malloc_sbrk_base
000201b8 g     F .text	0000003c _start
00037680 g     O .bss	00000004 _alt_tick_rate
0002c718 g     F .text	00000330 _strtoll_r
00020d90 g     F .text	000002b0 encode_image
00029c98 g     F .text	0000015c __lshift
00037684 g     O .bss	00000004 _alt_nticks
00030eec g     F .text	000000f4 read
000312bc g     F .text	00000084 alt_sys_init
00023340 g     F .text	0000006c _open_r
00033678 g     F .text	00000130 __register_exitproc
00029914 g     F .text	00000258 __multiply
00031cfc g     F .text	00000068 altera_avalon_jtag_uart_close
00021188 g     F .text	00000028 __mulsi3
0003406c g       *ABS*	00000000 __ram_rwdata_start
00033984 g       *ABS*	00000000 __ram_rodata_start
00037688 g     O .bss	00000028 __malloc_current_mallinfo
0002edc8 g     F .text	00000054 __eqsf2
0002a19c g     F .text	00000144 __d2b
00031830 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002ca48 g     F .text	000002a4 _strtoul_r
00032ee4 g     F .text	000000d4 alt_get_fd
0003037c g     F .text	000000d0 __fpcmp_parts_d
00027120 g     F .text	00000064 _close_r
000335fc g     F .text	0000007c memcmp
000318f0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00037a40 g       *ABS*	00000000 __alt_stack_base
00031940 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000226e0 g     F .text	000000b0 _fwrite_r
00026fac g     F .text	00000174 __swsetup_r
000313d8 g     F .text	0000003c altera_avalon_fifo_read_status
0002f5b8 g     F .text	000001b4 __divdf3
000216c8 g     F .text	000000fc __sfp
0002a3f8 g     F .text	0000007c __copybits
0003446c g     O .rwdata	00000408 __malloc_av_
000217d0 g     F .text	00000004 __sinit_lock_release
0002f2d4 g     F .text	000002e4 __muldf3
00023718 g     F .text	00000054 __sread
00021bd8 g     F .text	00000040 fread
000317dc g     F .text	0000002c altera_avalon_fifo_read_other_info
00032d4c g     F .text	00000114 alt_find_file
00032b64 g     F .text	000000a0 alt_dev_llist_insert
00030bc4 g     F .text	00000020 __malloc_lock
00021950 g     F .text	00000028 _fprintf_r
00031060 g     F .text	000000b0 sbrk
00021300 g     F .text	000001e8 _fflush_r
0002d34c g     F .text	000000cc _calloc_r
00021934 g     F .text	0000001c fopen
00037654 g       *ABS*	00000000 __bss_start
00022060 g     F .text	00000020 _fscanf_r
00023264 g     F .text	000000dc memset
00021040 g     F .text	00000148 main
00037678 g     O .bss	00000004 alt_envp
00037658 g     O .bss	00000004 __malloc_max_total_mem
00031890 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000314e4 g     F .text	00000028 altera_avalon_fifo_read_level
0002ee78 g     F .text	00000054 __ltsf2
0002199c g     F .text	0000023c _fread_r
00023850 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
000212ec g     F .text	00000014 fclose
0002c47c g     F .text	00000278 _strtol_r
0002fb4c g     F .text	00000060 __truncdfsf2
000378b0 g     O .bss	00000190 _atexit0
000273c0 g     F .text	0000161c _dtoa_r
000229a0 g     F .text	00000784 _malloc_r
00035b04 g     O .rwdata	00000004 alt_errno
0002d0a4 g     F .text	000000f0 __submore
00022580 g     F .text	000000a8 _fwalk
000291e0 g     F .text	00000044 _mbtowc_r
0002fd3c g     F .text	00000050 __divsi3
00033f20 g     O .rodata	00000014 __thenan_df
00021c18 g     F .text	0000013c _malloc_trim_r
00033984 g       *ABS*	00000000 __CTOR_END__
0002ad54 g     F .text	000000a4 strcmp
00033984 g       *ABS*	00000000 __flash_rodata_start
00033984 g       *ABS*	00000000 __DTOR_LIST__
000202f8 g     F .text	00000040 delay
0002f7c8 g     F .text	0000005c __nedf2
00031288 g     F .text	00000034 alt_irq_init
00030fe0 g     F .text	00000080 alt_release_fd
0002ace8 g     F .text	0000006c sprintf
00033f34 g     O .rodata	00000100 __clz_tab
00037664 g     O .bss	00000004 _PathLocale
0002c35c g     F .text	00000120 strtof
000335b0 g     F .text	00000014 atexit
00026f40 g     F .text	0000006c _write_r
000290a8 g     F .text	0000001c setlocale
0002ac88 g     F .text	00000008 nanf
00035adc g     O .rwdata	00000004 _impure_ptr
00037670 g     O .bss	00000004 alt_argc
0002913c g     F .text	00000064 _mbrtowc_r
00032c60 g     F .text	0000005c _do_dtors
00022080 g     F .text	00000474 _fseek_r
00020258 g     F .text	00000060 READ_FIFO
000234c8 g     F .text	000001ec __srefill_r
00020020 g       .exceptions	00000000 alt_irq_entry
00029ff4 g     F .text	00000060 __ulp
0002ab60 g     F .text	00000038 __isinfd
000217ec g     F .text	00000018 __fp_unlock_all
00035af0 g     O .rwdata	00000008 alt_fs_list
00032620 g     F .text	000000b8 alt_hostfs_write
00020020 g       *ABS*	00000000 __ram_exceptions_start
000290c4 g     F .text	0000000c localeconv
00031780 g     F .text	0000005c altera_avalon_fifo_write_other_info
00032fd4 g     F .text	00000050 alt_ic_isr_register
00022790 g     F .text	00000040 fwrite
0002d528 g     F .text	00000090 __hexdig_init
00035b60 g       *ABS*	00000000 _edata
00037a40 g       *ABS*	00000000 _end
000201b8 g       *ABS*	00000000 __ram_exceptions_end
00026ed0 g     F .text	00000070 vfscanf
00031d64 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
000330c0 g     F .text	000000a0 alt_ic_irq_disable
0002376c g     F .text	00000088 __swrite
00035ae4 g     O .rwdata	00000004 __malloc_trim_threshold
00033590 g     F .text	00000020 altera_nios2_qsys_irq_init
000335c4 g     F .text	00000038 exit
00022628 g     F .text	000000b8 _fwalk_reent
00029e4c g     F .text	000001a8 __mdiff
0002fd8c g     F .text	0000005c __modsi3
00031414 g     F .text	0000003c altera_avalon_fifo_read_ienable
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
000217c8 g     F .text	00000004 __sfp_lock_release
0002abc4 g     F .text	000000c4 __sccl
00033ad4 g     O .rodata	00000101 _ctype_
0002ff6c g     F .text	000000bc __fpcmp_parts_f
00021804 g     F .text	00000130 _fopen_r
00033948 g     F .text	0000003c _exit
0002ab98 g     F .text	0000002c __isnand
000329b8 g     F .text	00000140 alt_alarm_start
0002dfbc g     F .text	00000110 __muldi3
00031450 g     F .text	0000002c altera_avalon_fifo_read_almostfull
000227d0 g     F .text	000001a8 __smakebuf_r
00023858 g     F .text	0000008c strlen
00030d44 g     F .text	00000158 open
000316c8 g     F .text	0000006c altera_avalon_read_fifo
0002f888 g     F .text	00000064 __gedf2
00020b98 g     F .text	000001f8 initialization
0002d5b8 g     F .text	00000778 __gethex
00032fb8 g     F .text	0000001c alt_icache_flush_all
000201f4 g     F .text	00000064 WRITE_FIFO
00035b54 g     O .rwdata	00000004 alt_priority_mask
00033024 g     F .text	0000009c alt_ic_irq_enable
00025794 g     F .text	00000024 __vfprintf_internal
0002f274 g     F .text	00000060 __subdf3
00029828 g     F .text	000000b0 __lo0bits
000257b8 g     F .text	000016a8 __svfscanf_r
00031618 g     F .text	00000058 altera_avalon_fifo_write_almostempty
00035b58 g     O .rwdata	00000008 alt_alarm_list
0002d194 g     F .text	0000019c _ungetc_r
00032c04 g     F .text	0000005c _do_ctors
00030650 g     F .text	000000cc close
000309a8 g     F .text	00000080 alt_load
00030054 g     F .text	00000224 __pack_d
0002298c g     F .text	00000014 free
000217cc g     F .text	00000004 __sinit_lock_acquire
00029578 g     F .text	00000144 __multadd
00029550 g     F .text	00000028 _Bfree
00032790 g     F .text	00000228 alt_hostfs_fstat



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08406e14 	ori	at,at,440
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200ec0 	call	200ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000306 	br	20098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   2008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)

00020094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   20094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   20098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   2009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200e8:	ef80083a 	eret

000200ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200ec:	defff904 	addi	sp,sp,-28
   200f0:	dfc00615 	stw	ra,24(sp)
   200f4:	df000515 	stw	fp,20(sp)
   200f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   200fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20100:	0005313a 	rdctl	r2,ipending
   20104:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20114:	00800044 	movi	r2,1
   20118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2011c:	e0fffb17 	ldw	r3,-20(fp)
   20120:	e0bffc17 	ldw	r2,-16(fp)
   20124:	1884703a 	and	r2,r3,r2
   20128:	10001726 	beq	r2,zero,20188 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2012c:	00c000f4 	movhi	r3,3
   20130:	18ddec04 	addi	r3,r3,30640
   20134:	e0bffd17 	ldw	r2,-12(fp)
   20138:	100490fa 	slli	r2,r2,3
   2013c:	1885883a 	add	r2,r3,r2
   20140:	10c00017 	ldw	r3,0(r2)
   20144:	010000f4 	movhi	r4,3
   20148:	211dec04 	addi	r4,r4,30640
   2014c:	e0bffd17 	ldw	r2,-12(fp)
   20150:	100490fa 	slli	r2,r2,3
   20154:	2085883a 	add	r2,r4,r2
   20158:	10800104 	addi	r2,r2,4
   2015c:	10800017 	ldw	r2,0(r2)
   20160:	1009883a 	mov	r4,r2
   20164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2016c:	0005313a 	rdctl	r2,ipending
   20170:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20174:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   20178:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   2017c:	e0bffb17 	ldw	r2,-20(fp)
   20180:	103fe31e 	bne	r2,zero,20110 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   20184:	00000706 	br	201a4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   20188:	e0bffc17 	ldw	r2,-16(fp)
   2018c:	1085883a 	add	r2,r2,r2
   20190:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20194:	e0bffd17 	ldw	r2,-12(fp)
   20198:	10800044 	addi	r2,r2,1
   2019c:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a0:	003fde06 	br	2011c <alt_irq_handler+0x30>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   201a4:	e037883a 	mov	sp,fp
   201a8:	dfc00117 	ldw	ra,4(sp)
   201ac:	df000017 	ldw	fp,0(sp)
   201b0:	dec00204 	addi	sp,sp,8
   201b4:	f800283a 	ret

Disassembly of section .text:

000201b8 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   201b8:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   201bc:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   201c0:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   201c4:	d6b6b614 	ori	gp,gp,56024
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   201c8:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   201cc:	109d9514 	ori	r2,r2,30292

    movhi r3, %hi(__bss_end)
   201d0:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   201d4:	18de9014 	ori	r3,r3,31296

    beq r2, r3, 1f
   201d8:	10c00326 	beq	r2,r3,201e8 <_start+0x30>

0:
    stw zero, (r2)
   201dc:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   201e0:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   201e4:	10fffd36 	bltu	r2,r3,201dc <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   201e8:	00309a80 	call	309a8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   201ec:	0030b4c0 	call	30b4c <alt_main>

000201f0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   201f0:	003fff06 	br	201f0 <alt_after_alt_main>

000201f4 <WRITE_FIFO>:
 */

#include "FIFO.h"

void WRITE_FIFO(int *buffer, int inBase, int controllBase)
{
   201f4:	defffb04 	addi	sp,sp,-20
   201f8:	dfc00415 	stw	ra,16(sp)
   201fc:	df000315 	stw	fp,12(sp)
   20200:	df000304 	addi	fp,sp,12
   20204:	e13ffd15 	stw	r4,-12(fp)
   20208:	e17ffe15 	stw	r5,-8(fp)
   2020c:	e1bfff15 	stw	r6,-4(fp)

	// printf("Sending\n");
	// printf("Count - %d, ", altera_avalon_fifo_read_level(controllBase));

	// Check if FIFO is full before writing
	while (altera_avalon_fifo_read_level(controllBase) == ALMOST_FULL)
   20210:	0001883a 	nop
   20214:	e0bfff17 	ldw	r2,-4(fp)
   20218:	1009883a 	mov	r4,r2
   2021c:	00314e40 	call	314e4 <altera_avalon_fifo_read_level>
   20220:	10800220 	cmpeqi	r2,r2,8
   20224:	103ffb1e 	bne	r2,zero,20214 <WRITE_FIFO+0x20>
	{
	}

	// Write data to FIFO
	altera_avalon_fifo_write_fifo(inBase, controllBase, *buffer);
   20228:	e13ffe17 	ldw	r4,-8(fp)
   2022c:	e0ffff17 	ldw	r3,-4(fp)
   20230:	e0bffd17 	ldw	r2,-12(fp)
   20234:	10800017 	ldw	r2,0(r2)
   20238:	180b883a 	mov	r5,r3
   2023c:	100d883a 	mov	r6,r2
   20240:	00316700 	call	31670 <altera_avalon_fifo_write_fifo>
}
   20244:	e037883a 	mov	sp,fp
   20248:	dfc00117 	ldw	ra,4(sp)
   2024c:	df000017 	ldw	fp,0(sp)
   20250:	dec00204 	addi	sp,sp,8
   20254:	f800283a 	ret

00020258 <READ_FIFO>:

void READ_FIFO(int *buffer, int outBase, int controllBase)
{
   20258:	defffb04 	addi	sp,sp,-20
   2025c:	dfc00415 	stw	ra,16(sp)
   20260:	df000315 	stw	fp,12(sp)
   20264:	df000304 	addi	fp,sp,12
   20268:	e13ffd15 	stw	r4,-12(fp)
   2026c:	e17ffe15 	stw	r5,-8(fp)
   20270:	e1bfff15 	stw	r6,-4(fp)
	// Wait if the FIFO is empty
	// while (altera_avalon_fifo_read_status(FIFO_MEM_IN_CSR_BASE, ALTERA_AVALON_FIFO_STATUS_EMPTY))
	// 	;

	while (altera_avalon_fifo_read_level(controllBase) == ALMOST_EMTY)
   20274:	0001883a 	nop
   20278:	e0bfff17 	ldw	r2,-4(fp)
   2027c:	1009883a 	mov	r4,r2
   20280:	00314e40 	call	314e4 <altera_avalon_fifo_read_level>
   20284:	103ffc26 	beq	r2,zero,20278 <READ_FIFO+0x20>
	{
	}

	// Read the data
	*buffer = altera_avalon_fifo_read_fifo(outBase, controllBase);
   20288:	e0fffe17 	ldw	r3,-8(fp)
   2028c:	e0bfff17 	ldw	r2,-4(fp)
   20290:	1809883a 	mov	r4,r3
   20294:	100b883a 	mov	r5,r2
   20298:	00317340 	call	31734 <altera_avalon_fifo_read_fifo>
   2029c:	e0fffd17 	ldw	r3,-12(fp)
   202a0:	18800015 	stw	r2,0(r3)
}
   202a4:	e037883a 	mov	sp,fp
   202a8:	dfc00117 	ldw	ra,4(sp)
   202ac:	df000017 	ldw	fp,0(sp)
   202b0:	dec00204 	addi	sp,sp,8
   202b4:	f800283a 	ret

000202b8 <FIFO_INIT>:

// Initialization
void FIFO_INIT(int controllBase)
{
   202b8:	defffd04 	addi	sp,sp,-12
   202bc:	dfc00215 	stw	ra,8(sp)
   202c0:	df000115 	stw	fp,4(sp)
   202c4:	df000104 	addi	fp,sp,4
   202c8:	e13fff15 	stw	r4,-4(fp)
	altera_avalon_fifo_init(controllBase,
   202cc:	e0bfff17 	ldw	r2,-4(fp)
   202d0:	1009883a 	mov	r4,r2
   202d4:	000b883a 	mov	r5,zero
   202d8:	000d883a 	mov	r6,zero
   202dc:	01c00204 	movi	r7,8
   202e0:	00313400 	call	31340 <altera_avalon_fifo_init>
							0,
							ALMOST_EMTY,  // Almost empty threshold
							ALMOST_FULL); // Almost full threshold
   202e4:	e037883a 	mov	sp,fp
   202e8:	dfc00117 	ldw	ra,4(sp)
   202ec:	df000017 	ldw	fp,0(sp)
   202f0:	dec00204 	addi	sp,sp,8
   202f4:	f800283a 	ret

000202f8 <delay>:

#ifndef READYUV_H
#define READYUV_H

void delay(int n)
{
   202f8:	defffd04 	addi	sp,sp,-12
   202fc:	df000215 	stw	fp,8(sp)
   20300:	df000204 	addi	fp,sp,8
   20304:	e13fff15 	stw	r4,-4(fp)
	int i;
	for (i = n; i > 0; i--)
   20308:	e0bfff17 	ldw	r2,-4(fp)
   2030c:	e0bffe15 	stw	r2,-8(fp)
   20310:	00000306 	br	20320 <delay+0x28>
   20314:	e0bffe17 	ldw	r2,-8(fp)
   20318:	10bfffc4 	addi	r2,r2,-1
   2031c:	e0bffe15 	stw	r2,-8(fp)
   20320:	e0bffe17 	ldw	r2,-8(fp)
   20324:	00bffb16 	blt	zero,r2,20314 <delay+0x1c>
	{
		continue;
	}
}
   20328:	e037883a 	mov	sp,fp
   2032c:	df000017 	ldw	fp,0(sp)
   20330:	dec00104 	addi	sp,sp,4
   20334:	f800283a 	ret

00020338 <read_444_format>:
	UINT16 offset;

} JPEG_ENCODER_STRUCTURE;

void read_444_format(JPEG_ENCODER_STRUCTURE *jpeg_encoder_structure, UINT8 *input_ptr)
{
   20338:	defff304 	addi	sp,sp,-52
   2033c:	dfc00c15 	stw	ra,48(sp)
   20340:	df000b15 	stw	fp,44(sp)
   20344:	dc000a15 	stw	r16,40(sp)
   20348:	df000a04 	addi	fp,sp,40
   2034c:	e13ffe15 	stw	r4,-8(fp)
   20350:	e17fff15 	stw	r5,-4(fp)
	INT32 i, j;

	UINT8 R, G, B;
	INT32 Y, Cb, Cr;

	UINT16 rows = jpeg_encoder_structure->rows;
   20354:	e0bffe17 	ldw	r2,-8(fp)
   20358:	1080030b 	ldhu	r2,12(r2)
   2035c:	e0bff80d 	sth	r2,-32(fp)
	UINT16 cols = jpeg_encoder_structure->cols;
   20360:	e0bffe17 	ldw	r2,-8(fp)
   20364:	1080038b 	ldhu	r2,14(r2)
   20368:	e0bff88d 	sth	r2,-30(fp)
	UINT16 incr = jpeg_encoder_structure->incr;
   2036c:	e0bffe17 	ldw	r2,-8(fp)
   20370:	1080050b 	ldhu	r2,20(r2)
   20374:	e0bff90d 	sth	r2,-28(fp)

	for (i = rows; i > 0; i--)
   20378:	e0bff80b 	ldhu	r2,-32(fp)
   2037c:	e0bff615 	stw	r2,-40(fp)
   20380:	0000f606 	br	2075c <read_444_format+0x424>
	{
		// printf("\nRow ");
		for (j = cols; j > 0; j--)
   20384:	e0bff88b 	ldhu	r2,-30(fp)
   20388:	e0bff715 	stw	r2,-36(fp)
   2038c:	00007506 	br	20564 <read_444_format+0x22c>
		{
			R = *input_ptr++;
   20390:	e0bfff17 	ldw	r2,-4(fp)
   20394:	10800003 	ldbu	r2,0(r2)
   20398:	e0bff985 	stb	r2,-26(fp)
   2039c:	e0bfff17 	ldw	r2,-4(fp)
   203a0:	10800044 	addi	r2,r2,1
   203a4:	e0bfff15 	stw	r2,-4(fp)
			G = *input_ptr++;
   203a8:	e0bfff17 	ldw	r2,-4(fp)
   203ac:	10800003 	ldbu	r2,0(r2)
   203b0:	e0bff9c5 	stb	r2,-25(fp)
   203b4:	e0bfff17 	ldw	r2,-4(fp)
   203b8:	10800044 	addi	r2,r2,1
   203bc:	e0bfff15 	stw	r2,-4(fp)
			B = *input_ptr++;
   203c0:	e0bfff17 	ldw	r2,-4(fp)
   203c4:	10800003 	ldbu	r2,0(r2)
   203c8:	e0bffa05 	stb	r2,-24(fp)
   203cc:	e0bfff17 	ldw	r2,-4(fp)
   203d0:	10800044 	addi	r2,r2,1
   203d4:	e0bfff15 	stw	r2,-4(fp)

			Y = ((77 * R + 150 * G + 29 * B) >> 8);
   203d8:	e0bff983 	ldbu	r2,-26(fp)
   203dc:	1009883a 	mov	r4,r2
   203e0:	01401344 	movi	r5,77
   203e4:	00211880 	call	21188 <__mulsi3>
   203e8:	1021883a 	mov	r16,r2
   203ec:	e0bff9c3 	ldbu	r2,-25(fp)
   203f0:	1009883a 	mov	r4,r2
   203f4:	01402584 	movi	r5,150
   203f8:	00211880 	call	21188 <__mulsi3>
   203fc:	80a1883a 	add	r16,r16,r2
   20400:	e0bffa03 	ldbu	r2,-24(fp)
   20404:	1009883a 	mov	r4,r2
   20408:	01400744 	movi	r5,29
   2040c:	00211880 	call	21188 <__mulsi3>
   20410:	8085883a 	add	r2,r16,r2
   20414:	1005d23a 	srai	r2,r2,8
   20418:	e0bffb15 	stw	r2,-20(fp)
			Cb = ((-43 * R - 85 * G + 128 * B) >> 8) + 128;
   2041c:	e0bff983 	ldbu	r2,-26(fp)
   20420:	1009883a 	mov	r4,r2
   20424:	017ff544 	movi	r5,-43
   20428:	00211880 	call	21188 <__mulsi3>
   2042c:	1021883a 	mov	r16,r2
   20430:	e0bff9c3 	ldbu	r2,-25(fp)
   20434:	1009883a 	mov	r4,r2
   20438:	017feac4 	movi	r5,-85
   2043c:	00211880 	call	21188 <__mulsi3>
   20440:	8087883a 	add	r3,r16,r2
   20444:	e0bffa03 	ldbu	r2,-24(fp)
   20448:	100491fa 	slli	r2,r2,7
   2044c:	1885883a 	add	r2,r3,r2
   20450:	1005d23a 	srai	r2,r2,8
   20454:	10802004 	addi	r2,r2,128
   20458:	e0bffc15 	stw	r2,-16(fp)
			Cr = ((128 * R - 107 * G - 21 * B) >> 8) + 128;
   2045c:	e0bff983 	ldbu	r2,-26(fp)
   20460:	102091fa 	slli	r16,r2,7
   20464:	e0bff9c3 	ldbu	r2,-25(fp)
   20468:	1009883a 	mov	r4,r2
   2046c:	017fe544 	movi	r5,-107
   20470:	00211880 	call	21188 <__mulsi3>
   20474:	80a1883a 	add	r16,r16,r2
   20478:	e0bffa03 	ldbu	r2,-24(fp)
   2047c:	1009883a 	mov	r4,r2
   20480:	017ffac4 	movi	r5,-21
   20484:	00211880 	call	21188 <__mulsi3>
   20488:	8085883a 	add	r2,r16,r2
   2048c:	1005d23a 	srai	r2,r2,8
   20490:	10802004 	addi	r2,r2,128
   20494:	e0bffd15 	stw	r2,-12(fp)

			if (Y < 0)
   20498:	e0bffb17 	ldw	r2,-20(fp)
   2049c:	1000020e 	bge	r2,zero,204a8 <read_444_format+0x170>
				Y = 0;
   204a0:	e03ffb15 	stw	zero,-20(fp)
   204a4:	00000506 	br	204bc <read_444_format+0x184>
			else if (Y > 255)
   204a8:	e0bffb17 	ldw	r2,-20(fp)
   204ac:	10804010 	cmplti	r2,r2,256
   204b0:	1000021e 	bne	r2,zero,204bc <read_444_format+0x184>
				Y = 255;
   204b4:	00803fc4 	movi	r2,255
   204b8:	e0bffb15 	stw	r2,-20(fp)

			if (Cb < 0)
   204bc:	e0bffc17 	ldw	r2,-16(fp)
   204c0:	1000020e 	bge	r2,zero,204cc <read_444_format+0x194>
				Cb = 0;
   204c4:	e03ffc15 	stw	zero,-16(fp)
   204c8:	00000506 	br	204e0 <read_444_format+0x1a8>
			else if (Cb > 255)
   204cc:	e0bffc17 	ldw	r2,-16(fp)
   204d0:	10804010 	cmplti	r2,r2,256
   204d4:	1000021e 	bne	r2,zero,204e0 <read_444_format+0x1a8>
				Cb = 255;
   204d8:	00803fc4 	movi	r2,255
   204dc:	e0bffc15 	stw	r2,-16(fp)

			if (Cr < 0)
   204e0:	e0bffd17 	ldw	r2,-12(fp)
   204e4:	1000020e 	bge	r2,zero,204f0 <read_444_format+0x1b8>
				Cr = 0;
   204e8:	e03ffd15 	stw	zero,-12(fp)
   204ec:	00000506 	br	20504 <read_444_format+0x1cc>
			else if (Cr > 255)
   204f0:	e0bffd17 	ldw	r2,-12(fp)
   204f4:	10804010 	cmplti	r2,r2,256
   204f8:	1000021e 	bne	r2,zero,20504 <read_444_format+0x1cc>
				Cr = 255;
   204fc:	00803fc4 	movi	r2,255
   20500:	e0bffd15 	stw	r2,-12(fp)

			// send into fifo
			WRITE_FIFO(&Y, IN_BASE_1to2A, CONTROL_BASE_1to2A);
   20504:	e0bffb04 	addi	r2,fp,-20
   20508:	1009883a 	mov	r4,r2
   2050c:	01400134 	movhi	r5,4
   20510:	29444104 	addi	r5,r5,4356
   20514:	01800134 	movhi	r6,4
   20518:	31842804 	addi	r6,r6,4256
   2051c:	00201f40 	call	201f4 <WRITE_FIFO>
			WRITE_FIFO(&Cb, IN_BASE_1to2B, CONTROL_BASE_1to2B);
   20520:	e0bffc04 	addi	r2,fp,-16
   20524:	1009883a 	mov	r4,r2
   20528:	01400134 	movhi	r5,4
   2052c:	29444004 	addi	r5,r5,4352
   20530:	01800134 	movhi	r6,4
   20534:	31842004 	addi	r6,r6,4224
   20538:	00201f40 	call	201f4 <WRITE_FIFO>
			WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);
   2053c:	e0bffd04 	addi	r2,fp,-12
   20540:	1009883a 	mov	r4,r2
   20544:	01400134 	movhi	r5,4
   20548:	29443f04 	addi	r5,r5,4348
   2054c:	01800134 	movhi	r6,4
   20550:	31841804 	addi	r6,r6,4192
   20554:	00201f40 	call	201f4 <WRITE_FIFO>
	UINT16 incr = jpeg_encoder_structure->incr;

	for (i = rows; i > 0; i--)
	{
		// printf("\nRow ");
		for (j = cols; j > 0; j--)
   20558:	e0bff717 	ldw	r2,-36(fp)
   2055c:	10bfffc4 	addi	r2,r2,-1
   20560:	e0bff715 	stw	r2,-36(fp)
   20564:	e0bff717 	ldw	r2,-36(fp)
   20568:	00bf8916 	blt	zero,r2,20390 <read_444_format+0x58>
			WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);

			// delay(1000);
		}

		if ((j = (8 - cols)) > 0)
   2056c:	e0bff88b 	ldhu	r2,-30(fp)
   20570:	00c00204 	movi	r3,8
   20574:	1885c83a 	sub	r2,r3,r2
   20578:	e0bff715 	stw	r2,-36(fp)
   2057c:	e0bff717 	ldw	r2,-36(fp)
   20580:	00806f0e 	bge	zero,r2,20740 <read_444_format+0x408>
		{
			R = *(input_ptr - 3);
   20584:	e0bfff17 	ldw	r2,-4(fp)
   20588:	10bfff43 	ldbu	r2,-3(r2)
   2058c:	e0bff985 	stb	r2,-26(fp)
			G = *(input_ptr - 2);
   20590:	e0bfff17 	ldw	r2,-4(fp)
   20594:	10bfff83 	ldbu	r2,-2(r2)
   20598:	e0bff9c5 	stb	r2,-25(fp)
			B = *(input_ptr - 1);
   2059c:	e0bfff17 	ldw	r2,-4(fp)
   205a0:	10bfffc3 	ldbu	r2,-1(r2)
   205a4:	e0bffa05 	stb	r2,-24(fp)

			Y = ((77 * R + 150 * G + 29 * B) >> 8);
   205a8:	e0bff983 	ldbu	r2,-26(fp)
   205ac:	1009883a 	mov	r4,r2
   205b0:	01401344 	movi	r5,77
   205b4:	00211880 	call	21188 <__mulsi3>
   205b8:	1021883a 	mov	r16,r2
   205bc:	e0bff9c3 	ldbu	r2,-25(fp)
   205c0:	1009883a 	mov	r4,r2
   205c4:	01402584 	movi	r5,150
   205c8:	00211880 	call	21188 <__mulsi3>
   205cc:	80a1883a 	add	r16,r16,r2
   205d0:	e0bffa03 	ldbu	r2,-24(fp)
   205d4:	1009883a 	mov	r4,r2
   205d8:	01400744 	movi	r5,29
   205dc:	00211880 	call	21188 <__mulsi3>
   205e0:	8085883a 	add	r2,r16,r2
   205e4:	1005d23a 	srai	r2,r2,8
   205e8:	e0bffb15 	stw	r2,-20(fp)
			Cb = ((-43 * R - 85 * G + 128 * B) >> 8) + 128;
   205ec:	e0bff983 	ldbu	r2,-26(fp)
   205f0:	1009883a 	mov	r4,r2
   205f4:	017ff544 	movi	r5,-43
   205f8:	00211880 	call	21188 <__mulsi3>
   205fc:	1021883a 	mov	r16,r2
   20600:	e0bff9c3 	ldbu	r2,-25(fp)
   20604:	1009883a 	mov	r4,r2
   20608:	017feac4 	movi	r5,-85
   2060c:	00211880 	call	21188 <__mulsi3>
   20610:	8087883a 	add	r3,r16,r2
   20614:	e0bffa03 	ldbu	r2,-24(fp)
   20618:	100491fa 	slli	r2,r2,7
   2061c:	1885883a 	add	r2,r3,r2
   20620:	1005d23a 	srai	r2,r2,8
   20624:	10802004 	addi	r2,r2,128
   20628:	e0bffc15 	stw	r2,-16(fp)
			Cr = ((128 * R - 107 * G - 21 * B) >> 8) + 128;
   2062c:	e0bff983 	ldbu	r2,-26(fp)
   20630:	102091fa 	slli	r16,r2,7
   20634:	e0bff9c3 	ldbu	r2,-25(fp)
   20638:	1009883a 	mov	r4,r2
   2063c:	017fe544 	movi	r5,-107
   20640:	00211880 	call	21188 <__mulsi3>
   20644:	80a1883a 	add	r16,r16,r2
   20648:	e0bffa03 	ldbu	r2,-24(fp)
   2064c:	1009883a 	mov	r4,r2
   20650:	017ffac4 	movi	r5,-21
   20654:	00211880 	call	21188 <__mulsi3>
   20658:	8085883a 	add	r2,r16,r2
   2065c:	1005d23a 	srai	r2,r2,8
   20660:	10802004 	addi	r2,r2,128
   20664:	e0bffd15 	stw	r2,-12(fp)

			if (Y < 0)
   20668:	e0bffb17 	ldw	r2,-20(fp)
   2066c:	1000020e 	bge	r2,zero,20678 <read_444_format+0x340>
				Y = 0;
   20670:	e03ffb15 	stw	zero,-20(fp)
   20674:	00000506 	br	2068c <read_444_format+0x354>
			else if (Y > 255)
   20678:	e0bffb17 	ldw	r2,-20(fp)
   2067c:	10804010 	cmplti	r2,r2,256
   20680:	1000021e 	bne	r2,zero,2068c <read_444_format+0x354>
				Y = 255;
   20684:	00803fc4 	movi	r2,255
   20688:	e0bffb15 	stw	r2,-20(fp)

			if (Cb < 0)
   2068c:	e0bffc17 	ldw	r2,-16(fp)
   20690:	1000020e 	bge	r2,zero,2069c <read_444_format+0x364>
				Cb = 0;
   20694:	e03ffc15 	stw	zero,-16(fp)
   20698:	00000506 	br	206b0 <read_444_format+0x378>
			else if (Cb > 255)
   2069c:	e0bffc17 	ldw	r2,-16(fp)
   206a0:	10804010 	cmplti	r2,r2,256
   206a4:	1000021e 	bne	r2,zero,206b0 <read_444_format+0x378>
				Cb = 255;
   206a8:	00803fc4 	movi	r2,255
   206ac:	e0bffc15 	stw	r2,-16(fp)

			if (Cr < 0)
   206b0:	e0bffd17 	ldw	r2,-12(fp)
   206b4:	1000020e 	bge	r2,zero,206c0 <read_444_format+0x388>
				Cr = 0;
   206b8:	e03ffd15 	stw	zero,-12(fp)
			else if (Cr > 255)
				Cr = 255;

			for (; j > 0; j--)
   206bc:	00001e06 	br	20738 <read_444_format+0x400>
			else if (Cb > 255)
				Cb = 255;

			if (Cr < 0)
				Cr = 0;
			else if (Cr > 255)
   206c0:	e0bffd17 	ldw	r2,-12(fp)
   206c4:	10804010 	cmplti	r2,r2,256
   206c8:	10001b1e 	bne	r2,zero,20738 <read_444_format+0x400>
				Cr = 255;
   206cc:	00803fc4 	movi	r2,255
   206d0:	e0bffd15 	stw	r2,-12(fp)

			for (; j > 0; j--)
   206d4:	00001806 	br	20738 <read_444_format+0x400>
			{

				WRITE_FIFO(&Y, IN_BASE_1to2A, CONTROL_BASE_1to2A);
   206d8:	e0bffb04 	addi	r2,fp,-20
   206dc:	1009883a 	mov	r4,r2
   206e0:	01400134 	movhi	r5,4
   206e4:	29444104 	addi	r5,r5,4356
   206e8:	01800134 	movhi	r6,4
   206ec:	31842804 	addi	r6,r6,4256
   206f0:	00201f40 	call	201f4 <WRITE_FIFO>
				WRITE_FIFO(&Cb, IN_BASE_1to2B, CONTROL_BASE_1to2B);
   206f4:	e0bffc04 	addi	r2,fp,-16
   206f8:	1009883a 	mov	r4,r2
   206fc:	01400134 	movhi	r5,4
   20700:	29444004 	addi	r5,r5,4352
   20704:	01800134 	movhi	r6,4
   20708:	31842004 	addi	r6,r6,4224
   2070c:	00201f40 	call	201f4 <WRITE_FIFO>
				WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);
   20710:	e0bffd04 	addi	r2,fp,-12
   20714:	1009883a 	mov	r4,r2
   20718:	01400134 	movhi	r5,4
   2071c:	29443f04 	addi	r5,r5,4348
   20720:	01800134 	movhi	r6,4
   20724:	31841804 	addi	r6,r6,4192
   20728:	00201f40 	call	201f4 <WRITE_FIFO>
			if (Cr < 0)
				Cr = 0;
			else if (Cr > 255)
				Cr = 255;

			for (; j > 0; j--)
   2072c:	e0bff717 	ldw	r2,-36(fp)
   20730:	10bfffc4 	addi	r2,r2,-1
   20734:	e0bff715 	stw	r2,-36(fp)
   20738:	e0bff717 	ldw	r2,-36(fp)
   2073c:	00bfe616 	blt	zero,r2,206d8 <read_444_format+0x3a0>

				// delay(1000);
			}
		}

		input_ptr += incr;
   20740:	e0bff90b 	ldhu	r2,-28(fp)
   20744:	e0ffff17 	ldw	r3,-4(fp)
   20748:	1885883a 	add	r2,r3,r2
   2074c:	e0bfff15 	stw	r2,-4(fp)

	UINT16 rows = jpeg_encoder_structure->rows;
	UINT16 cols = jpeg_encoder_structure->cols;
	UINT16 incr = jpeg_encoder_structure->incr;

	for (i = rows; i > 0; i--)
   20750:	e0bff617 	ldw	r2,-40(fp)
   20754:	10bfffc4 	addi	r2,r2,-1
   20758:	e0bff615 	stw	r2,-40(fp)
   2075c:	e0bff617 	ldw	r2,-40(fp)
   20760:	00bf0816 	blt	zero,r2,20384 <read_444_format+0x4c>
		}

		input_ptr += incr;
	}

	input_ptr -= incr;
   20764:	e0bff90b 	ldhu	r2,-28(fp)
   20768:	0085c83a 	sub	r2,zero,r2
   2076c:	e0ffff17 	ldw	r3,-4(fp)
   20770:	1885883a 	add	r2,r3,r2
   20774:	e0bfff15 	stw	r2,-4(fp)

	for (i = 8 - rows; i > 0; i--)
   20778:	e0bff80b 	ldhu	r2,-32(fp)
   2077c:	00c00204 	movi	r3,8
   20780:	1885c83a 	sub	r2,r3,r2
   20784:	e0bff615 	stw	r2,-40(fp)
   20788:	0000fb06 	br	20b78 <read_444_format+0x840>
	{
		// printf("\nColumn ");
		for (j = cols * 3; j > 0;)
   2078c:	e0fff88b 	ldhu	r3,-30(fp)
   20790:	1805883a 	mov	r2,r3
   20794:	1085883a 	add	r2,r2,r2
   20798:	10c5883a 	add	r2,r2,r3
   2079c:	e0bff715 	stw	r2,-36(fp)
   207a0:	00007b06 	br	20990 <read_444_format+0x658>
		{
			R = *(input_ptr - (j--));
   207a4:	e0bff717 	ldw	r2,-36(fp)
   207a8:	0085c83a 	sub	r2,zero,r2
   207ac:	e0ffff17 	ldw	r3,-4(fp)
   207b0:	1885883a 	add	r2,r3,r2
   207b4:	10800003 	ldbu	r2,0(r2)
   207b8:	e0bff985 	stb	r2,-26(fp)
   207bc:	e0bff717 	ldw	r2,-36(fp)
   207c0:	10bfffc4 	addi	r2,r2,-1
   207c4:	e0bff715 	stw	r2,-36(fp)
			G = *(input_ptr - (j--));
   207c8:	e0bff717 	ldw	r2,-36(fp)
   207cc:	0085c83a 	sub	r2,zero,r2
   207d0:	e0ffff17 	ldw	r3,-4(fp)
   207d4:	1885883a 	add	r2,r3,r2
   207d8:	10800003 	ldbu	r2,0(r2)
   207dc:	e0bff9c5 	stb	r2,-25(fp)
   207e0:	e0bff717 	ldw	r2,-36(fp)
   207e4:	10bfffc4 	addi	r2,r2,-1
   207e8:	e0bff715 	stw	r2,-36(fp)
			B = *(input_ptr - (j--));
   207ec:	e0bff717 	ldw	r2,-36(fp)
   207f0:	0085c83a 	sub	r2,zero,r2
   207f4:	e0ffff17 	ldw	r3,-4(fp)
   207f8:	1885883a 	add	r2,r3,r2
   207fc:	10800003 	ldbu	r2,0(r2)
   20800:	e0bffa05 	stb	r2,-24(fp)
   20804:	e0bff717 	ldw	r2,-36(fp)
   20808:	10bfffc4 	addi	r2,r2,-1
   2080c:	e0bff715 	stw	r2,-36(fp)

			Y = ((77 * R + 150 * G + 29 * B) >> 8);
   20810:	e0bff983 	ldbu	r2,-26(fp)
   20814:	1009883a 	mov	r4,r2
   20818:	01401344 	movi	r5,77
   2081c:	00211880 	call	21188 <__mulsi3>
   20820:	1021883a 	mov	r16,r2
   20824:	e0bff9c3 	ldbu	r2,-25(fp)
   20828:	1009883a 	mov	r4,r2
   2082c:	01402584 	movi	r5,150
   20830:	00211880 	call	21188 <__mulsi3>
   20834:	80a1883a 	add	r16,r16,r2
   20838:	e0bffa03 	ldbu	r2,-24(fp)
   2083c:	1009883a 	mov	r4,r2
   20840:	01400744 	movi	r5,29
   20844:	00211880 	call	21188 <__mulsi3>
   20848:	8085883a 	add	r2,r16,r2
   2084c:	1005d23a 	srai	r2,r2,8
   20850:	e0bffb15 	stw	r2,-20(fp)
			Cb = ((-43 * R - 85 * G + 128 * B) >> 8) + 128;
   20854:	e0bff983 	ldbu	r2,-26(fp)
   20858:	1009883a 	mov	r4,r2
   2085c:	017ff544 	movi	r5,-43
   20860:	00211880 	call	21188 <__mulsi3>
   20864:	1021883a 	mov	r16,r2
   20868:	e0bff9c3 	ldbu	r2,-25(fp)
   2086c:	1009883a 	mov	r4,r2
   20870:	017feac4 	movi	r5,-85
   20874:	00211880 	call	21188 <__mulsi3>
   20878:	8087883a 	add	r3,r16,r2
   2087c:	e0bffa03 	ldbu	r2,-24(fp)
   20880:	100491fa 	slli	r2,r2,7
   20884:	1885883a 	add	r2,r3,r2
   20888:	1005d23a 	srai	r2,r2,8
   2088c:	10802004 	addi	r2,r2,128
   20890:	e0bffc15 	stw	r2,-16(fp)
			Cr = ((128 * R - 107 * G - 21 * B) >> 8) + 128;
   20894:	e0bff983 	ldbu	r2,-26(fp)
   20898:	102091fa 	slli	r16,r2,7
   2089c:	e0bff9c3 	ldbu	r2,-25(fp)
   208a0:	1009883a 	mov	r4,r2
   208a4:	017fe544 	movi	r5,-107
   208a8:	00211880 	call	21188 <__mulsi3>
   208ac:	80a1883a 	add	r16,r16,r2
   208b0:	e0bffa03 	ldbu	r2,-24(fp)
   208b4:	1009883a 	mov	r4,r2
   208b8:	017ffac4 	movi	r5,-21
   208bc:	00211880 	call	21188 <__mulsi3>
   208c0:	8085883a 	add	r2,r16,r2
   208c4:	1005d23a 	srai	r2,r2,8
   208c8:	10802004 	addi	r2,r2,128
   208cc:	e0bffd15 	stw	r2,-12(fp)

			if (Y < 0)
   208d0:	e0bffb17 	ldw	r2,-20(fp)
   208d4:	1000020e 	bge	r2,zero,208e0 <read_444_format+0x5a8>
				Y = 0;
   208d8:	e03ffb15 	stw	zero,-20(fp)
   208dc:	00000506 	br	208f4 <read_444_format+0x5bc>
			else if (Y > 255)
   208e0:	e0bffb17 	ldw	r2,-20(fp)
   208e4:	10804010 	cmplti	r2,r2,256
   208e8:	1000021e 	bne	r2,zero,208f4 <read_444_format+0x5bc>
				Y = 255;
   208ec:	00803fc4 	movi	r2,255
   208f0:	e0bffb15 	stw	r2,-20(fp)

			if (Cb < 0)
   208f4:	e0bffc17 	ldw	r2,-16(fp)
   208f8:	1000020e 	bge	r2,zero,20904 <read_444_format+0x5cc>
				Cb = 0;
   208fc:	e03ffc15 	stw	zero,-16(fp)
   20900:	00000506 	br	20918 <read_444_format+0x5e0>
			else if (Cb > 255)
   20904:	e0bffc17 	ldw	r2,-16(fp)
   20908:	10804010 	cmplti	r2,r2,256
   2090c:	1000021e 	bne	r2,zero,20918 <read_444_format+0x5e0>
				Cb = 255;
   20910:	00803fc4 	movi	r2,255
   20914:	e0bffc15 	stw	r2,-16(fp)

			if (Cr < 0)
   20918:	e0bffd17 	ldw	r2,-12(fp)
   2091c:	1000020e 	bge	r2,zero,20928 <read_444_format+0x5f0>
				Cr = 0;
   20920:	e03ffd15 	stw	zero,-12(fp)
   20924:	00000506 	br	2093c <read_444_format+0x604>
			else if (Cr > 255)
   20928:	e0bffd17 	ldw	r2,-12(fp)
   2092c:	10804010 	cmplti	r2,r2,256
   20930:	1000021e 	bne	r2,zero,2093c <read_444_format+0x604>
				Cr = 255;
   20934:	00803fc4 	movi	r2,255
   20938:	e0bffd15 	stw	r2,-12(fp)

			WRITE_FIFO(&Y, IN_BASE_1to2A, CONTROL_BASE_1to2A);
   2093c:	e0bffb04 	addi	r2,fp,-20
   20940:	1009883a 	mov	r4,r2
   20944:	01400134 	movhi	r5,4
   20948:	29444104 	addi	r5,r5,4356
   2094c:	01800134 	movhi	r6,4
   20950:	31842804 	addi	r6,r6,4256
   20954:	00201f40 	call	201f4 <WRITE_FIFO>
			WRITE_FIFO(&Cb, IN_BASE_1to2B, CONTROL_BASE_1to2B);
   20958:	e0bffc04 	addi	r2,fp,-16
   2095c:	1009883a 	mov	r4,r2
   20960:	01400134 	movhi	r5,4
   20964:	29444004 	addi	r5,r5,4352
   20968:	01800134 	movhi	r6,4
   2096c:	31842004 	addi	r6,r6,4224
   20970:	00201f40 	call	201f4 <WRITE_FIFO>
			WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);
   20974:	e0bffd04 	addi	r2,fp,-12
   20978:	1009883a 	mov	r4,r2
   2097c:	01400134 	movhi	r5,4
   20980:	29443f04 	addi	r5,r5,4348
   20984:	01800134 	movhi	r6,4
   20988:	31841804 	addi	r6,r6,4192
   2098c:	00201f40 	call	201f4 <WRITE_FIFO>
	input_ptr -= incr;

	for (i = 8 - rows; i > 0; i--)
	{
		// printf("\nColumn ");
		for (j = cols * 3; j > 0;)
   20990:	e0bff717 	ldw	r2,-36(fp)
   20994:	00bf8316 	blt	zero,r2,207a4 <read_444_format+0x46c>
			WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);

			// delay(1000);
		}

		if ((j = (8 - cols)) > 0)
   20998:	e0bff88b 	ldhu	r2,-30(fp)
   2099c:	00c00204 	movi	r3,8
   209a0:	1885c83a 	sub	r2,r3,r2
   209a4:	e0bff715 	stw	r2,-36(fp)
   209a8:	e0bff717 	ldw	r2,-36(fp)
   209ac:	00806f0e 	bge	zero,r2,20b6c <read_444_format+0x834>
		{
			R = *(input_ptr - 3);
   209b0:	e0bfff17 	ldw	r2,-4(fp)
   209b4:	10bfff43 	ldbu	r2,-3(r2)
   209b8:	e0bff985 	stb	r2,-26(fp)
			G = *(input_ptr - 2);
   209bc:	e0bfff17 	ldw	r2,-4(fp)
   209c0:	10bfff83 	ldbu	r2,-2(r2)
   209c4:	e0bff9c5 	stb	r2,-25(fp)
			B = *(input_ptr - 1);
   209c8:	e0bfff17 	ldw	r2,-4(fp)
   209cc:	10bfffc3 	ldbu	r2,-1(r2)
   209d0:	e0bffa05 	stb	r2,-24(fp)

			Y = ((77 * R + 150 * G + 29 * B) >> 8);
   209d4:	e0bff983 	ldbu	r2,-26(fp)
   209d8:	1009883a 	mov	r4,r2
   209dc:	01401344 	movi	r5,77
   209e0:	00211880 	call	21188 <__mulsi3>
   209e4:	1021883a 	mov	r16,r2
   209e8:	e0bff9c3 	ldbu	r2,-25(fp)
   209ec:	1009883a 	mov	r4,r2
   209f0:	01402584 	movi	r5,150
   209f4:	00211880 	call	21188 <__mulsi3>
   209f8:	80a1883a 	add	r16,r16,r2
   209fc:	e0bffa03 	ldbu	r2,-24(fp)
   20a00:	1009883a 	mov	r4,r2
   20a04:	01400744 	movi	r5,29
   20a08:	00211880 	call	21188 <__mulsi3>
   20a0c:	8085883a 	add	r2,r16,r2
   20a10:	1005d23a 	srai	r2,r2,8
   20a14:	e0bffb15 	stw	r2,-20(fp)
			Cb = ((-43 * R - 85 * G + 128 * B) >> 8) + 128;
   20a18:	e0bff983 	ldbu	r2,-26(fp)
   20a1c:	1009883a 	mov	r4,r2
   20a20:	017ff544 	movi	r5,-43
   20a24:	00211880 	call	21188 <__mulsi3>
   20a28:	1021883a 	mov	r16,r2
   20a2c:	e0bff9c3 	ldbu	r2,-25(fp)
   20a30:	1009883a 	mov	r4,r2
   20a34:	017feac4 	movi	r5,-85
   20a38:	00211880 	call	21188 <__mulsi3>
   20a3c:	8087883a 	add	r3,r16,r2
   20a40:	e0bffa03 	ldbu	r2,-24(fp)
   20a44:	100491fa 	slli	r2,r2,7
   20a48:	1885883a 	add	r2,r3,r2
   20a4c:	1005d23a 	srai	r2,r2,8
   20a50:	10802004 	addi	r2,r2,128
   20a54:	e0bffc15 	stw	r2,-16(fp)
			Cr = ((128 * R - 107 * G - 21 * B) >> 8) + 128;
   20a58:	e0bff983 	ldbu	r2,-26(fp)
   20a5c:	102091fa 	slli	r16,r2,7
   20a60:	e0bff9c3 	ldbu	r2,-25(fp)
   20a64:	1009883a 	mov	r4,r2
   20a68:	017fe544 	movi	r5,-107
   20a6c:	00211880 	call	21188 <__mulsi3>
   20a70:	80a1883a 	add	r16,r16,r2
   20a74:	e0bffa03 	ldbu	r2,-24(fp)
   20a78:	1009883a 	mov	r4,r2
   20a7c:	017ffac4 	movi	r5,-21
   20a80:	00211880 	call	21188 <__mulsi3>
   20a84:	8085883a 	add	r2,r16,r2
   20a88:	1005d23a 	srai	r2,r2,8
   20a8c:	10802004 	addi	r2,r2,128
   20a90:	e0bffd15 	stw	r2,-12(fp)

			if (Y < 0)
   20a94:	e0bffb17 	ldw	r2,-20(fp)
   20a98:	1000020e 	bge	r2,zero,20aa4 <read_444_format+0x76c>
				Y = 0;
   20a9c:	e03ffb15 	stw	zero,-20(fp)
   20aa0:	00000506 	br	20ab8 <read_444_format+0x780>
			else if (Y > 255)
   20aa4:	e0bffb17 	ldw	r2,-20(fp)
   20aa8:	10804010 	cmplti	r2,r2,256
   20aac:	1000021e 	bne	r2,zero,20ab8 <read_444_format+0x780>
				Y = 255;
   20ab0:	00803fc4 	movi	r2,255
   20ab4:	e0bffb15 	stw	r2,-20(fp)

			if (Cb < 0)
   20ab8:	e0bffc17 	ldw	r2,-16(fp)
   20abc:	1000020e 	bge	r2,zero,20ac8 <read_444_format+0x790>
				Cb = 0;
   20ac0:	e03ffc15 	stw	zero,-16(fp)
   20ac4:	00000506 	br	20adc <read_444_format+0x7a4>
			else if (Cb > 255)
   20ac8:	e0bffc17 	ldw	r2,-16(fp)
   20acc:	10804010 	cmplti	r2,r2,256
   20ad0:	1000021e 	bne	r2,zero,20adc <read_444_format+0x7a4>
				Cb = 255;
   20ad4:	00803fc4 	movi	r2,255
   20ad8:	e0bffc15 	stw	r2,-16(fp)

			if (Cr < 0)
   20adc:	e0bffd17 	ldw	r2,-12(fp)
   20ae0:	1000020e 	bge	r2,zero,20aec <read_444_format+0x7b4>
				Cr = 0;
   20ae4:	e03ffd15 	stw	zero,-12(fp)
			else if (Cr > 255)
				Cr = 255;

			for (; j > 0; j--)
   20ae8:	00001e06 	br	20b64 <read_444_format+0x82c>
			else if (Cb > 255)
				Cb = 255;

			if (Cr < 0)
				Cr = 0;
			else if (Cr > 255)
   20aec:	e0bffd17 	ldw	r2,-12(fp)
   20af0:	10804010 	cmplti	r2,r2,256
   20af4:	10001b1e 	bne	r2,zero,20b64 <read_444_format+0x82c>
				Cr = 255;
   20af8:	00803fc4 	movi	r2,255
   20afc:	e0bffd15 	stw	r2,-12(fp)

			for (; j > 0; j--)
   20b00:	00001806 	br	20b64 <read_444_format+0x82c>
			{
				WRITE_FIFO(&Y, IN_BASE_1to2A, CONTROL_BASE_1to2A);
   20b04:	e0bffb04 	addi	r2,fp,-20
   20b08:	1009883a 	mov	r4,r2
   20b0c:	01400134 	movhi	r5,4
   20b10:	29444104 	addi	r5,r5,4356
   20b14:	01800134 	movhi	r6,4
   20b18:	31842804 	addi	r6,r6,4256
   20b1c:	00201f40 	call	201f4 <WRITE_FIFO>
				WRITE_FIFO(&Cb, IN_BASE_1to2B, CONTROL_BASE_1to2B);
   20b20:	e0bffc04 	addi	r2,fp,-16
   20b24:	1009883a 	mov	r4,r2
   20b28:	01400134 	movhi	r5,4
   20b2c:	29444004 	addi	r5,r5,4352
   20b30:	01800134 	movhi	r6,4
   20b34:	31842004 	addi	r6,r6,4224
   20b38:	00201f40 	call	201f4 <WRITE_FIFO>
				WRITE_FIFO(&Cr, IN_BASE_1to2C, CONTROL_BASE_1to2C);
   20b3c:	e0bffd04 	addi	r2,fp,-12
   20b40:	1009883a 	mov	r4,r2
   20b44:	01400134 	movhi	r5,4
   20b48:	29443f04 	addi	r5,r5,4348
   20b4c:	01800134 	movhi	r6,4
   20b50:	31841804 	addi	r6,r6,4192
   20b54:	00201f40 	call	201f4 <WRITE_FIFO>
			if (Cr < 0)
				Cr = 0;
			else if (Cr > 255)
				Cr = 255;

			for (; j > 0; j--)
   20b58:	e0bff717 	ldw	r2,-36(fp)
   20b5c:	10bfffc4 	addi	r2,r2,-1
   20b60:	e0bff715 	stw	r2,-36(fp)
   20b64:	e0bff717 	ldw	r2,-36(fp)
   20b68:	00bfe616 	blt	zero,r2,20b04 <read_444_format+0x7cc>
		input_ptr += incr;
	}

	input_ptr -= incr;

	for (i = 8 - rows; i > 0; i--)
   20b6c:	e0bff617 	ldw	r2,-40(fp)
   20b70:	10bfffc4 	addi	r2,r2,-1
   20b74:	e0bff615 	stw	r2,-40(fp)
   20b78:	e0bff617 	ldw	r2,-40(fp)
   20b7c:	00bf0316 	blt	zero,r2,2078c <read_444_format+0x454>

				// delay(1000);
			}
		}
	}
}
   20b80:	e037883a 	mov	sp,fp
   20b84:	dfc00217 	ldw	ra,8(sp)
   20b88:	df000117 	ldw	fp,4(sp)
   20b8c:	dc000017 	ldw	r16,0(sp)
   20b90:	dec00304 	addi	sp,sp,12
   20b94:	f800283a 	ret

00020b98 <initialization>:

#ifndef ENCODER_H
#define ENCODER_H

void initialization(JPEG_ENCODER_STRUCTURE *jpeg, UINT32 image_width, UINT32 image_height)
{
   20b98:	defff804 	addi	sp,sp,-32
   20b9c:	dfc00715 	stw	ra,28(sp)
   20ba0:	df000615 	stw	fp,24(sp)
   20ba4:	dc000515 	stw	r16,20(sp)
   20ba8:	df000504 	addi	fp,sp,20
   20bac:	e13ffd15 	stw	r4,-12(fp)
   20bb0:	e17ffe15 	stw	r5,-8(fp)
   20bb4:	e1bfff15 	stw	r6,-4(fp)
	UINT16 mcu_width, mcu_height, bytes_per_pixel;

	jpeg->mcu_width = mcu_width = 8;
   20bb8:	00800204 	movi	r2,8
   20bbc:	e0bffb0d 	sth	r2,-20(fp)
   20bc0:	e0bffd17 	ldw	r2,-12(fp)
   20bc4:	e0fffb0b 	ldhu	r3,-20(fp)
   20bc8:	10c0000d 	sth	r3,0(r2)
	jpeg->mcu_height = mcu_height = 8;
   20bcc:	00800204 	movi	r2,8
   20bd0:	e0bffb8d 	sth	r2,-18(fp)
   20bd4:	e0bffd17 	ldw	r2,-12(fp)
   20bd8:	e0fffb8b 	ldhu	r3,-18(fp)
   20bdc:	10c0008d 	sth	r3,2(r2)

	jpeg->horizontal_mcus = (UINT16)((image_width + mcu_width - 1) >> 3);
   20be0:	e0fffb0b 	ldhu	r3,-20(fp)
   20be4:	e0bffe17 	ldw	r2,-8(fp)
   20be8:	1885883a 	add	r2,r3,r2
   20bec:	10bfffc4 	addi	r2,r2,-1
   20bf0:	1004d0fa 	srli	r2,r2,3
   20bf4:	1007883a 	mov	r3,r2
   20bf8:	e0bffd17 	ldw	r2,-12(fp)
   20bfc:	10c0010d 	sth	r3,4(r2)
	jpeg->vertical_mcus = (UINT16)((image_height + mcu_height - 1) >> 3);
   20c00:	e0fffb8b 	ldhu	r3,-18(fp)
   20c04:	e0bfff17 	ldw	r2,-4(fp)
   20c08:	1885883a 	add	r2,r3,r2
   20c0c:	10bfffc4 	addi	r2,r2,-1
   20c10:	1004d0fa 	srli	r2,r2,3
   20c14:	1007883a 	mov	r3,r2
   20c18:	e0bffd17 	ldw	r2,-12(fp)
   20c1c:	10c0018d 	sth	r3,6(r2)

	bytes_per_pixel = 3;
   20c20:	008000c4 	movi	r2,3
   20c24:	e0bffc0d 	sth	r2,-16(fp)

	jpeg->rows_in_bottom_mcus = (UINT16)(image_height - (jpeg->vertical_mcus - 1) * mcu_height);
   20c28:	e0bfff17 	ldw	r2,-4(fp)
   20c2c:	1021883a 	mov	r16,r2
   20c30:	e0bffd17 	ldw	r2,-12(fp)
   20c34:	1080018b 	ldhu	r2,6(r2)
   20c38:	10bfffcc 	andi	r2,r2,65535
   20c3c:	10bfffc4 	addi	r2,r2,-1
   20c40:	1007883a 	mov	r3,r2
   20c44:	e0bffb8b 	ldhu	r2,-18(fp)
   20c48:	1809883a 	mov	r4,r3
   20c4c:	100b883a 	mov	r5,r2
   20c50:	00211880 	call	21188 <__mulsi3>
   20c54:	8085c83a 	sub	r2,r16,r2
   20c58:	1007883a 	mov	r3,r2
   20c5c:	e0bffd17 	ldw	r2,-12(fp)
   20c60:	10c0028d 	sth	r3,10(r2)
	jpeg->cols_in_right_mcus = (UINT16)(image_width - (jpeg->horizontal_mcus - 1) * mcu_width);
   20c64:	e0bffe17 	ldw	r2,-8(fp)
   20c68:	1021883a 	mov	r16,r2
   20c6c:	e0bffd17 	ldw	r2,-12(fp)
   20c70:	1080010b 	ldhu	r2,4(r2)
   20c74:	10bfffcc 	andi	r2,r2,65535
   20c78:	10bfffc4 	addi	r2,r2,-1
   20c7c:	1007883a 	mov	r3,r2
   20c80:	e0bffb0b 	ldhu	r2,-20(fp)
   20c84:	1809883a 	mov	r4,r3
   20c88:	100b883a 	mov	r5,r2
   20c8c:	00211880 	call	21188 <__mulsi3>
   20c90:	8085c83a 	sub	r2,r16,r2
   20c94:	1007883a 	mov	r3,r2
   20c98:	e0bffd17 	ldw	r2,-12(fp)
   20c9c:	10c0020d 	sth	r3,8(r2)

	jpeg->length_minus_mcu_width = (UINT16)((image_width - mcu_width) * bytes_per_pixel);
   20ca0:	e0bffb0b 	ldhu	r2,-20(fp)
   20ca4:	e0fffe17 	ldw	r3,-8(fp)
   20ca8:	1885c83a 	sub	r2,r3,r2
   20cac:	1007883a 	mov	r3,r2
   20cb0:	e0bffc0b 	ldhu	r2,-16(fp)
   20cb4:	1809883a 	mov	r4,r3
   20cb8:	100b883a 	mov	r5,r2
   20cbc:	00211880 	call	21188 <__mulsi3>
   20cc0:	1007883a 	mov	r3,r2
   20cc4:	e0bffd17 	ldw	r2,-12(fp)
   20cc8:	10c0040d 	sth	r3,16(r2)
	jpeg->length_minus_width = (UINT16)((image_width - jpeg->cols_in_right_mcus) * bytes_per_pixel);
   20ccc:	e0bffd17 	ldw	r2,-12(fp)
   20cd0:	1080020b 	ldhu	r2,8(r2)
   20cd4:	10bfffcc 	andi	r2,r2,65535
   20cd8:	e0fffe17 	ldw	r3,-8(fp)
   20cdc:	1885c83a 	sub	r2,r3,r2
   20ce0:	1007883a 	mov	r3,r2
   20ce4:	e0bffc0b 	ldhu	r2,-16(fp)
   20ce8:	1809883a 	mov	r4,r3
   20cec:	100b883a 	mov	r5,r2
   20cf0:	00211880 	call	21188 <__mulsi3>
   20cf4:	1007883a 	mov	r3,r2
   20cf8:	e0bffd17 	ldw	r2,-12(fp)
   20cfc:	10c0048d 	sth	r3,18(r2)

	jpeg->mcu_width_size = (UINT16)(mcu_width * bytes_per_pixel);
   20d00:	e0fffb0b 	ldhu	r3,-20(fp)
   20d04:	e0bffc0b 	ldhu	r2,-16(fp)
   20d08:	1809883a 	mov	r4,r3
   20d0c:	100b883a 	mov	r5,r2
   20d10:	00211880 	call	21188 <__mulsi3>
   20d14:	1007883a 	mov	r3,r2
   20d18:	e0bffd17 	ldw	r2,-12(fp)
   20d1c:	10c0058d 	sth	r3,22(r2)

	jpeg->offset = (UINT16)((image_width * ((mcu_height >> 1) - 1) - (mcu_width - jpeg->cols_in_right_mcus)) * bytes_per_pixel);
   20d20:	e0bffb8b 	ldhu	r2,-18(fp)
   20d24:	1004d07a 	srli	r2,r2,1
   20d28:	10bfffcc 	andi	r2,r2,65535
   20d2c:	10bfffc4 	addi	r2,r2,-1
   20d30:	1009883a 	mov	r4,r2
   20d34:	e17ffe17 	ldw	r5,-8(fp)
   20d38:	00211880 	call	21188 <__mulsi3>
   20d3c:	1007883a 	mov	r3,r2
   20d40:	e0bffd17 	ldw	r2,-12(fp)
   20d44:	1080020b 	ldhu	r2,8(r2)
   20d48:	113fffcc 	andi	r4,r2,65535
   20d4c:	e0bffb0b 	ldhu	r2,-20(fp)
   20d50:	2085c83a 	sub	r2,r4,r2
   20d54:	1885883a 	add	r2,r3,r2
   20d58:	1007883a 	mov	r3,r2
   20d5c:	e0bffc0b 	ldhu	r2,-16(fp)
   20d60:	1809883a 	mov	r4,r3
   20d64:	100b883a 	mov	r5,r2
   20d68:	00211880 	call	21188 <__mulsi3>
   20d6c:	1007883a 	mov	r3,r2
   20d70:	e0bffd17 	ldw	r2,-12(fp)
   20d74:	10c0060d 	sth	r3,24(r2)
}
   20d78:	e037883a 	mov	sp,fp
   20d7c:	dfc00217 	ldw	ra,8(sp)
   20d80:	df000117 	ldw	fp,4(sp)
   20d84:	dc000017 	ldw	r16,0(sp)
   20d88:	dec00304 	addi	sp,sp,12
   20d8c:	f800283a 	ret

00020d90 <encode_image>:

UINT8 encode_image(char *input_file_name, UINT32 quality_factor, UINT32 image_width, UINT32 image_height)
{
   20d90:	deffee04 	addi	sp,sp,-72
   20d94:	dfc01115 	stw	ra,68(sp)
   20d98:	df001015 	stw	fp,64(sp)
   20d9c:	df001004 	addi	fp,sp,64
   20da0:	e13ffc15 	stw	r4,-16(fp)
   20da4:	e17ffd15 	stw	r5,-12(fp)
   20da8:	e1bffe15 	stw	r6,-8(fp)
   20dac:	e1ffff15 	stw	r7,-4(fp)
	UINT16 i, j;

	JPEG_ENCODER_STRUCTURE JpegStruct;
	JPEG_ENCODER_STRUCTURE *jpeg_encoder_structure = &JpegStruct;
   20db0:	e0bff504 	addi	r2,fp,-44
   20db4:	e0bff215 	stw	r2,-56(fp)

	FILE *fpt;

	/* Initialization of JPEG control structure */
	initialization(jpeg_encoder_structure, image_width, image_height);
   20db8:	e13ff217 	ldw	r4,-56(fp)
   20dbc:	e17ffe17 	ldw	r5,-8(fp)
   20dc0:	e1bfff17 	ldw	r6,-4(fp)
   20dc4:	0020b980 	call	20b98 <initialization>
	/* Writing Marker Data */
	// SEND5(image_width);
	// SEND5(image_height);
	// SEND5((jpeg_encoder_structure->vertical_mcus) * (jpeg_encoder_structure->horizontal_mcus));

	fpt = fopen(input_file_name, "rb");
   20dc8:	e13ffc17 	ldw	r4,-16(fp)
   20dcc:	014000f4 	movhi	r5,3
   20dd0:	294e6104 	addi	r5,r5,14724
   20dd4:	00219340 	call	21934 <fopen>
   20dd8:	e0bff315 	stw	r2,-52(fp)
	if (fpt == NULL)
   20ddc:	e0bff317 	ldw	r2,-52(fp)
   20de0:	10000b1e 	bne	r2,zero,20e10 <encode_image+0x80>
	{
		fprintf(stderr, "Error opening input file: %s\n", input_file_name);
   20de4:	008000f4 	movhi	r2,3
   20de8:	1096b704 	addi	r2,r2,23260
   20dec:	10800017 	ldw	r2,0(r2)
   20df0:	10800317 	ldw	r2,12(r2)
   20df4:	1009883a 	mov	r4,r2
   20df8:	014000f4 	movhi	r5,3
   20dfc:	294e6204 	addi	r5,r5,14728
   20e00:	e1bffc17 	ldw	r6,-16(fp)
   20e04:	00219780 	call	21978 <fprintf>
		return 1;
   20e08:	00800044 	movi	r2,1
   20e0c:	00008706 	br	2102c <encode_image+0x29c>
	}

	UINT8 *input = (UINT8 *)malloc(((jpeg_encoder_structure->mcu_height * image_width * 3) + 1) * sizeof(UINT8));
   20e10:	e0bff217 	ldw	r2,-56(fp)
   20e14:	1080008b 	ldhu	r2,2(r2)
   20e18:	10bfffcc 	andi	r2,r2,65535
   20e1c:	1009883a 	mov	r4,r2
   20e20:	e17ffe17 	ldw	r5,-8(fp)
   20e24:	00211880 	call	21188 <__mulsi3>
   20e28:	1007883a 	mov	r3,r2
   20e2c:	1805883a 	mov	r2,r3
   20e30:	1085883a 	add	r2,r2,r2
   20e34:	10c5883a 	add	r2,r2,r3
   20e38:	10800044 	addi	r2,r2,1
   20e3c:	1009883a 	mov	r4,r2
   20e40:	00229780 	call	22978 <malloc>
   20e44:	e0bff415 	stw	r2,-48(fp)
	if (input == NULL)
   20e48:	e0bff417 	ldw	r2,-48(fp)
   20e4c:	10000e1e 	bne	r2,zero,20e88 <encode_image+0xf8>
	{
		fprintf(stderr, "Memory allocation failed\n");
   20e50:	008000f4 	movhi	r2,3
   20e54:	1096b704 	addi	r2,r2,23260
   20e58:	10800017 	ldw	r2,0(r2)
   20e5c:	10800317 	ldw	r2,12(r2)
   20e60:	010000f4 	movhi	r4,3
   20e64:	210e6a04 	addi	r4,r4,14760
   20e68:	01400044 	movi	r5,1
   20e6c:	01800644 	movi	r6,25
   20e70:	100f883a 	mov	r7,r2
   20e74:	00227900 	call	22790 <fwrite>
		fclose(fpt);
   20e78:	e13ff317 	ldw	r4,-52(fp)
   20e7c:	00212ec0 	call	212ec <fclose>
		return 1;
   20e80:	00800044 	movi	r2,1
   20e84:	00006906 	br	2102c <encode_image+0x29c>
	}

	for (i = 1; i <= jpeg_encoder_structure->vertical_mcus; i++)
   20e88:	00800044 	movi	r2,1
   20e8c:	e0bff00d 	sth	r2,-64(fp)
   20e90:	00005106 	br	20fd8 <encode_image+0x248>
	{
		printf("Input image data (hex) - %d\n", i);
   20e94:	e0bff00b 	ldhu	r2,-64(fp)
   20e98:	010000f4 	movhi	r4,3
   20e9c:	210e7104 	addi	r4,r4,14788
   20ea0:	100b883a 	mov	r5,r2
   20ea4:	00233d80 	call	233d8 <printf>

		if (i < jpeg_encoder_structure->vertical_mcus)
   20ea8:	e0bff217 	ldw	r2,-56(fp)
   20eac:	1080018b 	ldhu	r2,6(r2)
   20eb0:	10bfffcc 	andi	r2,r2,65535
   20eb4:	e0fff00b 	ldhu	r3,-64(fp)
   20eb8:	1880052e 	bgeu	r3,r2,20ed0 <encode_image+0x140>
			jpeg_encoder_structure->rows = jpeg_encoder_structure->mcu_height;
   20ebc:	e0bff217 	ldw	r2,-56(fp)
   20ec0:	10c0008b 	ldhu	r3,2(r2)
   20ec4:	e0bff217 	ldw	r2,-56(fp)
   20ec8:	10c0030d 	sth	r3,12(r2)
   20ecc:	00000406 	br	20ee0 <encode_image+0x150>
		else
			jpeg_encoder_structure->rows = jpeg_encoder_structure->rows_in_bottom_mcus;
   20ed0:	e0bff217 	ldw	r2,-56(fp)
   20ed4:	10c0028b 	ldhu	r3,10(r2)
   20ed8:	e0bff217 	ldw	r2,-56(fp)
   20edc:	10c0030d 	sth	r3,12(r2)

		fread(input, 1, (jpeg_encoder_structure->rows * image_width * 3), fpt);
   20ee0:	e0bff217 	ldw	r2,-56(fp)
   20ee4:	1080030b 	ldhu	r2,12(r2)
   20ee8:	10bfffcc 	andi	r2,r2,65535
   20eec:	1009883a 	mov	r4,r2
   20ef0:	e17ffe17 	ldw	r5,-8(fp)
   20ef4:	00211880 	call	21188 <__mulsi3>
   20ef8:	1007883a 	mov	r3,r2
   20efc:	1805883a 	mov	r2,r3
   20f00:	1085883a 	add	r2,r2,r2
   20f04:	10c5883a 	add	r2,r2,r3
   20f08:	e13ff417 	ldw	r4,-48(fp)
   20f0c:	01400044 	movi	r5,1
   20f10:	100d883a 	mov	r6,r2
   20f14:	e1fff317 	ldw	r7,-52(fp)
   20f18:	0021bd80 	call	21bd8 <fread>

		UINT8 *temp_ptr = input; // Use a temporary pointer for the loop
   20f1c:	e0bff417 	ldw	r2,-48(fp)
   20f20:	e0bff115 	stw	r2,-60(fp)

		for (j = 1; j <= jpeg_encoder_structure->horizontal_mcus; j++)
   20f24:	00800044 	movi	r2,1
   20f28:	e0bff08d 	sth	r2,-62(fp)
   20f2c:	00002206 	br	20fb8 <encode_image+0x228>
		{
			if (j < jpeg_encoder_structure->horizontal_mcus)
   20f30:	e0bff217 	ldw	r2,-56(fp)
   20f34:	1080010b 	ldhu	r2,4(r2)
   20f38:	10bfffcc 	andi	r2,r2,65535
   20f3c:	e0fff08b 	ldhu	r3,-62(fp)
   20f40:	1880092e 	bgeu	r3,r2,20f68 <encode_image+0x1d8>
			{
				jpeg_encoder_structure->cols = jpeg_encoder_structure->mcu_width;
   20f44:	e0bff217 	ldw	r2,-56(fp)
   20f48:	10c0000b 	ldhu	r3,0(r2)
   20f4c:	e0bff217 	ldw	r2,-56(fp)
   20f50:	10c0038d 	sth	r3,14(r2)
				jpeg_encoder_structure->incr = jpeg_encoder_structure->length_minus_mcu_width;
   20f54:	e0bff217 	ldw	r2,-56(fp)
   20f58:	10c0040b 	ldhu	r3,16(r2)
   20f5c:	e0bff217 	ldw	r2,-56(fp)
   20f60:	10c0050d 	sth	r3,20(r2)
   20f64:	00000806 	br	20f88 <encode_image+0x1f8>
			}
			else
			{
				jpeg_encoder_structure->cols = jpeg_encoder_structure->cols_in_right_mcus;
   20f68:	e0bff217 	ldw	r2,-56(fp)
   20f6c:	10c0020b 	ldhu	r3,8(r2)
   20f70:	e0bff217 	ldw	r2,-56(fp)
   20f74:	10c0038d 	sth	r3,14(r2)
				jpeg_encoder_structure->incr = jpeg_encoder_structure->length_minus_width;
   20f78:	e0bff217 	ldw	r2,-56(fp)
   20f7c:	10c0048b 	ldhu	r3,18(r2)
   20f80:	e0bff217 	ldw	r2,-56(fp)
   20f84:	10c0050d 	sth	r3,20(r2)
			}

			read_444_format(jpeg_encoder_structure, temp_ptr);
   20f88:	e13ff217 	ldw	r4,-56(fp)
   20f8c:	e17ff117 	ldw	r5,-60(fp)
   20f90:	00203380 	call	20338 <read_444_format>

			temp_ptr += jpeg_encoder_structure->mcu_width_size;
   20f94:	e0bff217 	ldw	r2,-56(fp)
   20f98:	1080058b 	ldhu	r2,22(r2)
   20f9c:	10bfffcc 	andi	r2,r2,65535
   20fa0:	e0fff117 	ldw	r3,-60(fp)
   20fa4:	1885883a 	add	r2,r3,r2
   20fa8:	e0bff115 	stw	r2,-60(fp)

		fread(input, 1, (jpeg_encoder_structure->rows * image_width * 3), fpt);

		UINT8 *temp_ptr = input; // Use a temporary pointer for the loop

		for (j = 1; j <= jpeg_encoder_structure->horizontal_mcus; j++)
   20fac:	e0bff08b 	ldhu	r2,-62(fp)
   20fb0:	10800044 	addi	r2,r2,1
   20fb4:	e0bff08d 	sth	r2,-62(fp)
   20fb8:	e0bff217 	ldw	r2,-56(fp)
   20fbc:	1080010b 	ldhu	r2,4(r2)
   20fc0:	10ffffcc 	andi	r3,r2,65535
   20fc4:	e0bff08b 	ldhu	r2,-62(fp)
   20fc8:	18bfd92e 	bgeu	r3,r2,20f30 <encode_image+0x1a0>
		fprintf(stderr, "Memory allocation failed\n");
		fclose(fpt);
		return 1;
	}

	for (i = 1; i <= jpeg_encoder_structure->vertical_mcus; i++)
   20fcc:	e0bff00b 	ldhu	r2,-64(fp)
   20fd0:	10800044 	addi	r2,r2,1
   20fd4:	e0bff00d 	sth	r2,-64(fp)
   20fd8:	e0bff217 	ldw	r2,-56(fp)
   20fdc:	1080018b 	ldhu	r2,6(r2)
   20fe0:	10ffffcc 	andi	r3,r2,65535
   20fe4:	e0bff00b 	ldhu	r2,-64(fp)
   20fe8:	18bfaa2e 	bgeu	r3,r2,20e94 <encode_image+0x104>

			temp_ptr += jpeg_encoder_structure->mcu_width_size;
		}
	}

	free(input);
   20fec:	e13ff417 	ldw	r4,-48(fp)
   20ff0:	002298c0 	call	2298c <free>

	if (fclose(fpt) != 0)
   20ff4:	e13ff317 	ldw	r4,-52(fp)
   20ff8:	00212ec0 	call	212ec <fclose>
   20ffc:	10000a26 	beq	r2,zero,21028 <encode_image+0x298>
	{
		fprintf(stderr, "Error closing file\n");
   21000:	008000f4 	movhi	r2,3
   21004:	1096b704 	addi	r2,r2,23260
   21008:	10800017 	ldw	r2,0(r2)
   2100c:	10800317 	ldw	r2,12(r2)
   21010:	010000f4 	movhi	r4,3
   21014:	210e7904 	addi	r4,r4,14820
   21018:	01400044 	movi	r5,1
   2101c:	018004c4 	movi	r6,19
   21020:	100f883a 	mov	r7,r2
   21024:	00227900 	call	22790 <fwrite>
	}

	return 0;
   21028:	0005883a 	mov	r2,zero
}
   2102c:	e037883a 	mov	sp,fp
   21030:	dfc00117 	ldw	ra,4(sp)
   21034:	df000017 	ldw	fp,0(sp)
   21038:	dec00204 	addi	sp,sp,8
   2103c:	f800283a 	ret

00021040 <main>:
#include "datatype.h"
#include "encoder.h"
#include "FIFO.h"

int main(int argc, char *argv[])
{
   21040:	deffd204 	addi	sp,sp,-184
   21044:	dfc02d15 	stw	ra,180(sp)
   21048:	df002c15 	stw	fp,176(sp)
   2104c:	df002c04 	addi	fp,sp,176
   21050:	e13ffe15 	stw	r4,-8(fp)
   21054:	e17fff15 	stw	r5,-4(fp)

	INT8 input_file_name[150];
	FILE *fp;
	UINT32 quality_factor, image_width, image_height;

	delay(100000);
   21058:	010000b4 	movhi	r4,2
   2105c:	2121a804 	addi	r4,r4,-31072
   21060:	00202f80 	call	202f8 <delay>
	FIFO_INIT(CONTROL_BASE_1to2A);
   21064:	01000134 	movhi	r4,4
   21068:	21042804 	addi	r4,r4,4256
   2106c:	00202b80 	call	202b8 <FIFO_INIT>
	delay(100000);
   21070:	010000b4 	movhi	r4,2
   21074:	2121a804 	addi	r4,r4,-31072
   21078:	00202f80 	call	202f8 <delay>
	FIFO_INIT(CONTROL_BASE_1to2B);
   2107c:	01000134 	movhi	r4,4
   21080:	21042004 	addi	r4,r4,4224
   21084:	00202b80 	call	202b8 <FIFO_INIT>
	delay(100000);
   21088:	010000b4 	movhi	r4,2
   2108c:	2121a804 	addi	r4,r4,-31072
   21090:	00202f80 	call	202f8 <delay>
	FIFO_INIT(CONTROL_BASE_1to2C);
   21094:	01000134 	movhi	r4,4
   21098:	21041804 	addi	r4,r4,4192
   2109c:	00202b80 	call	202b8 <FIFO_INIT>
	delay(100000);
   210a0:	010000b4 	movhi	r4,2
   210a4:	2121a804 	addi	r4,r4,-31072
   210a8:	00202f80 	call	202f8 <delay>

	printf("Starting the program\n");
   210ac:	010000f4 	movhi	r4,3
   210b0:	210e7e04 	addi	r4,r4,14840
   210b4:	00234980 	call	23498 <puts>

	fp = fopen("/mnt/host/files/param.txt", "r");
   210b8:	010000f4 	movhi	r4,3
   210bc:	210e8404 	addi	r4,r4,14864
   210c0:	014000f4 	movhi	r5,3
   210c4:	294e8b04 	addi	r5,r5,14892
   210c8:	00219340 	call	21934 <fopen>
   210cc:	e0bfd415 	stw	r2,-176(fp)

	if (fp == NULL)
   210d0:	e0bfd417 	ldw	r2,-176(fp)
   210d4:	1000021e 	bne	r2,zero,210e0 <main+0xa0>
	{
		// fprintf(stderr, "Error opening parameter file\n");
		return 1;
   210d8:	00800044 	movi	r2,1
   210dc:	00002506 	br	21174 <main+0x134>
	}

	fscanf(fp, "%s", input_file_name);
   210e0:	e0bfd504 	addi	r2,fp,-172
   210e4:	e13fd417 	ldw	r4,-176(fp)
   210e8:	014000f4 	movhi	r5,3
   210ec:	294e8c04 	addi	r5,r5,14896
   210f0:	100d883a 	mov	r6,r2
   210f4:	00220240 	call	22024 <fscanf>

	fscanf(fp, "%d", &quality_factor);
   210f8:	e0bffb04 	addi	r2,fp,-20
   210fc:	e13fd417 	ldw	r4,-176(fp)
   21100:	014000f4 	movhi	r5,3
   21104:	294e8d04 	addi	r5,r5,14900
   21108:	100d883a 	mov	r6,r2
   2110c:	00220240 	call	22024 <fscanf>
	fscanf(fp, "%d", &image_width);
   21110:	e0bffc04 	addi	r2,fp,-16
   21114:	e13fd417 	ldw	r4,-176(fp)
   21118:	014000f4 	movhi	r5,3
   2111c:	294e8d04 	addi	r5,r5,14900
   21120:	100d883a 	mov	r6,r2
   21124:	00220240 	call	22024 <fscanf>
	fscanf(fp, "%d", &image_height);
   21128:	e0bffd04 	addi	r2,fp,-12
   2112c:	e13fd417 	ldw	r4,-176(fp)
   21130:	014000f4 	movhi	r5,3
   21134:	294e8d04 	addi	r5,r5,14900
   21138:	100d883a 	mov	r6,r2
   2113c:	00220240 	call	22024 <fscanf>

	fclose(fp);
   21140:	e13fd417 	ldw	r4,-176(fp)
   21144:	00212ec0 	call	212ec <fclose>

	encode_image(input_file_name, quality_factor, image_width, image_height);
   21148:	e17ffb17 	ldw	r5,-20(fp)
   2114c:	e0fffc17 	ldw	r3,-16(fp)
   21150:	e0bffd17 	ldw	r2,-12(fp)
   21154:	e13fd504 	addi	r4,fp,-172
   21158:	180d883a 	mov	r6,r3
   2115c:	100f883a 	mov	r7,r2
   21160:	0020d900 	call	20d90 <encode_image>

	printf("\nDone!\n");
   21164:	010000f4 	movhi	r4,3
   21168:	210e8e04 	addi	r4,r4,14904
   2116c:	00234980 	call	23498 <puts>

	return 0;
   21170:	0005883a 	mov	r2,zero
}
   21174:	e037883a 	mov	sp,fp
   21178:	dfc00117 	ldw	ra,4(sp)
   2117c:	df000017 	ldw	fp,0(sp)
   21180:	dec00204 	addi	sp,sp,8
   21184:	f800283a 	ret

00021188 <__mulsi3>:
   21188:	0005883a 	mov	r2,zero
   2118c:	20000726 	beq	r4,zero,211ac <__mulsi3+0x24>
   21190:	20c0004c 	andi	r3,r4,1
   21194:	2008d07a 	srli	r4,r4,1
   21198:	18000126 	beq	r3,zero,211a0 <__mulsi3+0x18>
   2119c:	1145883a 	add	r2,r2,r5
   211a0:	294b883a 	add	r5,r5,r5
   211a4:	203ffa1e 	bne	r4,zero,21190 <__mulsi3+0x8>
   211a8:	f800283a 	ret
   211ac:	f800283a 	ret

000211b0 <_fclose_r>:
   211b0:	defffc04 	addi	sp,sp,-16
   211b4:	dc400115 	stw	r17,4(sp)
   211b8:	dc000015 	stw	r16,0(sp)
   211bc:	dfc00315 	stw	ra,12(sp)
   211c0:	dc800215 	stw	r18,8(sp)
   211c4:	2821883a 	mov	r16,r5
   211c8:	2023883a 	mov	r17,r4
   211cc:	28003426 	beq	r5,zero,212a0 <_fclose_r+0xf0>
   211d0:	00217c40 	call	217c4 <__sfp_lock_acquire>
   211d4:	88000226 	beq	r17,zero,211e0 <_fclose_r+0x30>
   211d8:	88800e17 	ldw	r2,56(r17)
   211dc:	10003826 	beq	r2,zero,212c0 <_fclose_r+0x110>
   211e0:	8080030f 	ldh	r2,12(r16)
   211e4:	10002526 	beq	r2,zero,2127c <_fclose_r+0xcc>
   211e8:	8809883a 	mov	r4,r17
   211ec:	800b883a 	mov	r5,r16
   211f0:	00213000 	call	21300 <_fflush_r>
   211f4:	1025883a 	mov	r18,r2
   211f8:	80800b17 	ldw	r2,44(r16)
   211fc:	10000426 	beq	r2,zero,21210 <_fclose_r+0x60>
   21200:	81400717 	ldw	r5,28(r16)
   21204:	8809883a 	mov	r4,r17
   21208:	103ee83a 	callr	r2
   2120c:	10003516 	blt	r2,zero,212e4 <_fclose_r+0x134>
   21210:	8080030b 	ldhu	r2,12(r16)
   21214:	1080200c 	andi	r2,r2,128
   21218:	10bfffcc 	andi	r2,r2,65535
   2121c:	10a0001c 	xori	r2,r2,32768
   21220:	10a00004 	addi	r2,r2,-32768
   21224:	10002b1e 	bne	r2,zero,212d4 <_fclose_r+0x124>
   21228:	81400c17 	ldw	r5,48(r16)
   2122c:	28000526 	beq	r5,zero,21244 <_fclose_r+0x94>
   21230:	80801004 	addi	r2,r16,64
   21234:	28800226 	beq	r5,r2,21240 <_fclose_r+0x90>
   21238:	8809883a 	mov	r4,r17
   2123c:	0021d540 	call	21d54 <_free_r>
   21240:	80000c15 	stw	zero,48(r16)
   21244:	81401117 	ldw	r5,68(r16)
   21248:	28000326 	beq	r5,zero,21258 <_fclose_r+0xa8>
   2124c:	8809883a 	mov	r4,r17
   21250:	0021d540 	call	21d54 <_free_r>
   21254:	80001115 	stw	zero,68(r16)
   21258:	8000030d 	sth	zero,12(r16)
   2125c:	00217c80 	call	217c8 <__sfp_lock_release>
   21260:	9005883a 	mov	r2,r18
   21264:	dfc00317 	ldw	ra,12(sp)
   21268:	dc800217 	ldw	r18,8(sp)
   2126c:	dc400117 	ldw	r17,4(sp)
   21270:	dc000017 	ldw	r16,0(sp)
   21274:	dec00404 	addi	sp,sp,16
   21278:	f800283a 	ret
   2127c:	00217c80 	call	217c8 <__sfp_lock_release>
   21280:	0025883a 	mov	r18,zero
   21284:	9005883a 	mov	r2,r18
   21288:	dfc00317 	ldw	ra,12(sp)
   2128c:	dc800217 	ldw	r18,8(sp)
   21290:	dc400117 	ldw	r17,4(sp)
   21294:	dc000017 	ldw	r16,0(sp)
   21298:	dec00404 	addi	sp,sp,16
   2129c:	f800283a 	ret
   212a0:	0025883a 	mov	r18,zero
   212a4:	9005883a 	mov	r2,r18
   212a8:	dfc00317 	ldw	ra,12(sp)
   212ac:	dc800217 	ldw	r18,8(sp)
   212b0:	dc400117 	ldw	r17,4(sp)
   212b4:	dc000017 	ldw	r16,0(sp)
   212b8:	dec00404 	addi	sp,sp,16
   212bc:	f800283a 	ret
   212c0:	8809883a 	mov	r4,r17
   212c4:	00215bc0 	call	215bc <__sinit>
   212c8:	8080030f 	ldh	r2,12(r16)
   212cc:	103fc61e 	bne	r2,zero,211e8 <_fclose_r+0x38>
   212d0:	003fea06 	br	2127c <_fclose_r+0xcc>
   212d4:	81400417 	ldw	r5,16(r16)
   212d8:	8809883a 	mov	r4,r17
   212dc:	0021d540 	call	21d54 <_free_r>
   212e0:	003fd106 	br	21228 <_fclose_r+0x78>
   212e4:	04bfffc4 	movi	r18,-1
   212e8:	003fc906 	br	21210 <_fclose_r+0x60>

000212ec <fclose>:
   212ec:	008000f4 	movhi	r2,3
   212f0:	1096b704 	addi	r2,r2,23260
   212f4:	200b883a 	mov	r5,r4
   212f8:	11000017 	ldw	r4,0(r2)
   212fc:	00211b01 	jmpi	211b0 <_fclose_r>

00021300 <_fflush_r>:
   21300:	defffb04 	addi	sp,sp,-20
   21304:	dcc00315 	stw	r19,12(sp)
   21308:	dc400115 	stw	r17,4(sp)
   2130c:	dfc00415 	stw	ra,16(sp)
   21310:	dc800215 	stw	r18,8(sp)
   21314:	dc000015 	stw	r16,0(sp)
   21318:	2027883a 	mov	r19,r4
   2131c:	2823883a 	mov	r17,r5
   21320:	20000226 	beq	r4,zero,2132c <_fflush_r+0x2c>
   21324:	20800e17 	ldw	r2,56(r4)
   21328:	10005726 	beq	r2,zero,21488 <_fflush_r+0x188>
   2132c:	8880030b 	ldhu	r2,12(r17)
   21330:	10c0020c 	andi	r3,r2,8
   21334:	18ffffcc 	andi	r3,r3,65535
   21338:	18e0001c 	xori	r3,r3,32768
   2133c:	18e00004 	addi	r3,r3,-32768
   21340:	1800311e 	bne	r3,zero,21408 <_fflush_r+0x108>
   21344:	89000117 	ldw	r4,4(r17)
   21348:	10c20014 	ori	r3,r2,2048
   2134c:	88c0030d 	sth	r3,12(r17)
   21350:	180b883a 	mov	r5,r3
   21354:	0100520e 	bge	zero,r4,214a0 <_fflush_r+0x1a0>
   21358:	88c00a17 	ldw	r3,40(r17)
   2135c:	18002226 	beq	r3,zero,213e8 <_fflush_r+0xe8>
   21360:	1084000c 	andi	r2,r2,4096
   21364:	10bfffcc 	andi	r2,r2,65535
   21368:	10a0001c 	xori	r2,r2,32768
   2136c:	10a00004 	addi	r2,r2,-32768
   21370:	10004e26 	beq	r2,zero,214ac <_fflush_r+0x1ac>
   21374:	8c001417 	ldw	r16,80(r17)
   21378:	2940010c 	andi	r5,r5,4
   2137c:	297fffcc 	andi	r5,r5,65535
   21380:	2960001c 	xori	r5,r5,32768
   21384:	29600004 	addi	r5,r5,-32768
   21388:	28000626 	beq	r5,zero,213a4 <_fflush_r+0xa4>
   2138c:	89000117 	ldw	r4,4(r17)
   21390:	88800c17 	ldw	r2,48(r17)
   21394:	8121c83a 	sub	r16,r16,r4
   21398:	10000226 	beq	r2,zero,213a4 <_fflush_r+0xa4>
   2139c:	88800f17 	ldw	r2,60(r17)
   213a0:	80a1c83a 	sub	r16,r16,r2
   213a4:	89400717 	ldw	r5,28(r17)
   213a8:	9809883a 	mov	r4,r19
   213ac:	800d883a 	mov	r6,r16
   213b0:	000f883a 	mov	r7,zero
   213b4:	183ee83a 	callr	r3
   213b8:	8080281e 	bne	r16,r2,2145c <_fflush_r+0x15c>
   213bc:	8880030b 	ldhu	r2,12(r17)
   213c0:	88c00417 	ldw	r3,16(r17)
   213c4:	88000115 	stw	zero,4(r17)
   213c8:	113dffcc 	andi	r4,r2,63487
   213cc:	1084000c 	andi	r2,r2,4096
   213d0:	10bfffcc 	andi	r2,r2,65535
   213d4:	10a0001c 	xori	r2,r2,32768
   213d8:	8900030d 	sth	r4,12(r17)
   213dc:	88c00015 	stw	r3,0(r17)
   213e0:	10a00004 	addi	r2,r2,-32768
   213e4:	10002c1e 	bne	r2,zero,21498 <_fflush_r+0x198>
   213e8:	0005883a 	mov	r2,zero
   213ec:	dfc00417 	ldw	ra,16(sp)
   213f0:	dcc00317 	ldw	r19,12(sp)
   213f4:	dc800217 	ldw	r18,8(sp)
   213f8:	dc400117 	ldw	r17,4(sp)
   213fc:	dc000017 	ldw	r16,0(sp)
   21400:	dec00504 	addi	sp,sp,20
   21404:	f800283a 	ret
   21408:	8c800417 	ldw	r18,16(r17)
   2140c:	903ff626 	beq	r18,zero,213e8 <_fflush_r+0xe8>
   21410:	8c000017 	ldw	r16,0(r17)
   21414:	108000cc 	andi	r2,r2,3
   21418:	8c800015 	stw	r18,0(r17)
   2141c:	84a1c83a 	sub	r16,r16,r18
   21420:	10001b1e 	bne	r2,zero,21490 <_fflush_r+0x190>
   21424:	88800517 	ldw	r2,20(r17)
   21428:	88800215 	stw	r2,8(r17)
   2142c:	04000316 	blt	zero,r16,2143c <_fflush_r+0x13c>
   21430:	003fed06 	br	213e8 <_fflush_r+0xe8>
   21434:	90a5883a 	add	r18,r18,r2
   21438:	043feb0e 	bge	zero,r16,213e8 <_fflush_r+0xe8>
   2143c:	88800917 	ldw	r2,36(r17)
   21440:	89400717 	ldw	r5,28(r17)
   21444:	800f883a 	mov	r7,r16
   21448:	900d883a 	mov	r6,r18
   2144c:	9809883a 	mov	r4,r19
   21450:	103ee83a 	callr	r2
   21454:	80a1c83a 	sub	r16,r16,r2
   21458:	00bff616 	blt	zero,r2,21434 <_fflush_r+0x134>
   2145c:	88c0030b 	ldhu	r3,12(r17)
   21460:	00bfffc4 	movi	r2,-1
   21464:	18c01014 	ori	r3,r3,64
   21468:	88c0030d 	sth	r3,12(r17)
   2146c:	dfc00417 	ldw	ra,16(sp)
   21470:	dcc00317 	ldw	r19,12(sp)
   21474:	dc800217 	ldw	r18,8(sp)
   21478:	dc400117 	ldw	r17,4(sp)
   2147c:	dc000017 	ldw	r16,0(sp)
   21480:	dec00504 	addi	sp,sp,20
   21484:	f800283a 	ret
   21488:	00215bc0 	call	215bc <__sinit>
   2148c:	003fa706 	br	2132c <_fflush_r+0x2c>
   21490:	0005883a 	mov	r2,zero
   21494:	003fe406 	br	21428 <_fflush_r+0x128>
   21498:	8c001415 	stw	r16,80(r17)
   2149c:	003fd206 	br	213e8 <_fflush_r+0xe8>
   214a0:	88c00f17 	ldw	r3,60(r17)
   214a4:	00ffac16 	blt	zero,r3,21358 <_fflush_r+0x58>
   214a8:	003fcf06 	br	213e8 <_fflush_r+0xe8>
   214ac:	89400717 	ldw	r5,28(r17)
   214b0:	9809883a 	mov	r4,r19
   214b4:	000d883a 	mov	r6,zero
   214b8:	01c00044 	movi	r7,1
   214bc:	183ee83a 	callr	r3
   214c0:	1021883a 	mov	r16,r2
   214c4:	00bfffc4 	movi	r2,-1
   214c8:	80800326 	beq	r16,r2,214d8 <_fflush_r+0x1d8>
   214cc:	8940030b 	ldhu	r5,12(r17)
   214d0:	88c00a17 	ldw	r3,40(r17)
   214d4:	003fa806 	br	21378 <_fflush_r+0x78>
   214d8:	98c00017 	ldw	r3,0(r19)
   214dc:	00800744 	movi	r2,29
   214e0:	18bfde1e 	bne	r3,r2,2145c <_fflush_r+0x15c>
   214e4:	003fc006 	br	213e8 <_fflush_r+0xe8>

000214e8 <fflush>:
   214e8:	200b883a 	mov	r5,r4
   214ec:	20000426 	beq	r4,zero,21500 <fflush+0x18>
   214f0:	008000f4 	movhi	r2,3
   214f4:	1096b704 	addi	r2,r2,23260
   214f8:	11000017 	ldw	r4,0(r2)
   214fc:	00213001 	jmpi	21300 <_fflush_r>
   21500:	008000f4 	movhi	r2,3
   21504:	1096b604 	addi	r2,r2,23256
   21508:	11000017 	ldw	r4,0(r2)
   2150c:	014000b4 	movhi	r5,2
   21510:	2944c004 	addi	r5,r5,4864
   21514:	00226281 	jmpi	22628 <_fwalk_reent>

00021518 <__fp_lock>:
   21518:	0005883a 	mov	r2,zero
   2151c:	f800283a 	ret

00021520 <__fp_unlock>:
   21520:	0005883a 	mov	r2,zero
   21524:	f800283a 	ret

00021528 <_cleanup_r>:
   21528:	014000b4 	movhi	r5,2
   2152c:	2944bb04 	addi	r5,r5,4844
   21530:	00225801 	jmpi	22580 <_fwalk>

00021534 <__sfmoreglue>:
   21534:	defffc04 	addi	sp,sp,-16
   21538:	dc800215 	stw	r18,8(sp)
   2153c:	2825883a 	mov	r18,r5
   21540:	dc000015 	stw	r16,0(sp)
   21544:	01401704 	movi	r5,92
   21548:	2021883a 	mov	r16,r4
   2154c:	9009883a 	mov	r4,r18
   21550:	dfc00315 	stw	ra,12(sp)
   21554:	dc400115 	stw	r17,4(sp)
   21558:	00211880 	call	21188 <__mulsi3>
   2155c:	8009883a 	mov	r4,r16
   21560:	11400304 	addi	r5,r2,12
   21564:	1023883a 	mov	r17,r2
   21568:	00229a00 	call	229a0 <_malloc_r>
   2156c:	1021883a 	mov	r16,r2
   21570:	10000726 	beq	r2,zero,21590 <__sfmoreglue+0x5c>
   21574:	11000304 	addi	r4,r2,12
   21578:	10000015 	stw	zero,0(r2)
   2157c:	14800115 	stw	r18,4(r2)
   21580:	11000215 	stw	r4,8(r2)
   21584:	000b883a 	mov	r5,zero
   21588:	880d883a 	mov	r6,r17
   2158c:	00232640 	call	23264 <memset>
   21590:	8005883a 	mov	r2,r16
   21594:	dfc00317 	ldw	ra,12(sp)
   21598:	dc800217 	ldw	r18,8(sp)
   2159c:	dc400117 	ldw	r17,4(sp)
   215a0:	dc000017 	ldw	r16,0(sp)
   215a4:	dec00404 	addi	sp,sp,16
   215a8:	f800283a 	ret

000215ac <_cleanup>:
   215ac:	008000f4 	movhi	r2,3
   215b0:	1096b604 	addi	r2,r2,23256
   215b4:	11000017 	ldw	r4,0(r2)
   215b8:	00215281 	jmpi	21528 <_cleanup_r>

000215bc <__sinit>:
   215bc:	20800e17 	ldw	r2,56(r4)
   215c0:	1000401e 	bne	r2,zero,216c4 <__sinit+0x108>
   215c4:	21400117 	ldw	r5,4(r4)
   215c8:	018000b4 	movhi	r6,2
   215cc:	31854a04 	addi	r6,r6,5416
   215d0:	20c00217 	ldw	r3,8(r4)
   215d4:	21800f15 	stw	r6,60(r4)
   215d8:	2080bb04 	addi	r2,r4,748
   215dc:	02400044 	movi	r9,1
   215e0:	018000c4 	movi	r6,3
   215e4:	2180b915 	stw	r6,740(r4)
   215e8:	2080ba15 	stw	r2,744(r4)
   215ec:	22400e15 	stw	r9,56(r4)
   215f0:	20800317 	ldw	r2,12(r4)
   215f4:	2000b815 	stw	zero,736(r4)
   215f8:	020000b4 	movhi	r8,2
   215fc:	420dc604 	addi	r8,r8,14104
   21600:	01c000b4 	movhi	r7,2
   21604:	39cddb04 	addi	r7,r7,14188
   21608:	018000b4 	movhi	r6,2
   2160c:	318dfd04 	addi	r6,r6,14324
   21610:	010000b4 	movhi	r4,2
   21614:	210e1404 	addi	r4,r4,14416
   21618:	02800104 	movi	r10,4
   2161c:	28000015 	stw	zero,0(r5)
   21620:	28000115 	stw	zero,4(r5)
   21624:	28000215 	stw	zero,8(r5)
   21628:	2a80030d 	sth	r10,12(r5)
   2162c:	2800038d 	sth	zero,14(r5)
   21630:	28000415 	stw	zero,16(r5)
   21634:	28000515 	stw	zero,20(r5)
   21638:	28000615 	stw	zero,24(r5)
   2163c:	29400715 	stw	r5,28(r5)
   21640:	2a000815 	stw	r8,32(r5)
   21644:	29c00915 	stw	r7,36(r5)
   21648:	29800a15 	stw	r6,40(r5)
   2164c:	29000b15 	stw	r4,44(r5)
   21650:	01400284 	movi	r5,10
   21654:	18000015 	stw	zero,0(r3)
   21658:	18000115 	stw	zero,4(r3)
   2165c:	18000215 	stw	zero,8(r3)
   21660:	1940030d 	sth	r5,12(r3)
   21664:	1a40038d 	sth	r9,14(r3)
   21668:	18000415 	stw	zero,16(r3)
   2166c:	18000515 	stw	zero,20(r3)
   21670:	18000615 	stw	zero,24(r3)
   21674:	18c00715 	stw	r3,28(r3)
   21678:	1a000815 	stw	r8,32(r3)
   2167c:	19c00915 	stw	r7,36(r3)
   21680:	19800a15 	stw	r6,40(r3)
   21684:	19000b15 	stw	r4,44(r3)
   21688:	00c00484 	movi	r3,18
   2168c:	10c0030d 	sth	r3,12(r2)
   21690:	00c00084 	movi	r3,2
   21694:	10000015 	stw	zero,0(r2)
   21698:	10000115 	stw	zero,4(r2)
   2169c:	10000215 	stw	zero,8(r2)
   216a0:	10c0038d 	sth	r3,14(r2)
   216a4:	10000415 	stw	zero,16(r2)
   216a8:	10000515 	stw	zero,20(r2)
   216ac:	10000615 	stw	zero,24(r2)
   216b0:	10800715 	stw	r2,28(r2)
   216b4:	12000815 	stw	r8,32(r2)
   216b8:	11c00915 	stw	r7,36(r2)
   216bc:	11800a15 	stw	r6,40(r2)
   216c0:	11000b15 	stw	r4,44(r2)
   216c4:	f800283a 	ret

000216c8 <__sfp>:
   216c8:	defffc04 	addi	sp,sp,-16
   216cc:	008000f4 	movhi	r2,3
   216d0:	1096b604 	addi	r2,r2,23256
   216d4:	dc400115 	stw	r17,4(sp)
   216d8:	14400017 	ldw	r17,0(r2)
   216dc:	dc800215 	stw	r18,8(sp)
   216e0:	dfc00315 	stw	ra,12(sp)
   216e4:	88800e17 	ldw	r2,56(r17)
   216e8:	dc000015 	stw	r16,0(sp)
   216ec:	2025883a 	mov	r18,r4
   216f0:	10002826 	beq	r2,zero,21794 <__sfp+0xcc>
   216f4:	8c40b804 	addi	r17,r17,736
   216f8:	043fffc4 	movi	r16,-1
   216fc:	89400117 	ldw	r5,4(r17)
   21700:	88800217 	ldw	r2,8(r17)
   21704:	297fffc4 	addi	r5,r5,-1
   21708:	28000a16 	blt	r5,zero,21734 <__sfp+0x6c>
   2170c:	10c0030f 	ldh	r3,12(r2)
   21710:	18000c26 	beq	r3,zero,21744 <__sfp+0x7c>
   21714:	10c01a04 	addi	r3,r2,104
   21718:	00000206 	br	21724 <__sfp+0x5c>
   2171c:	19bfe90f 	ldh	r6,-92(r3)
   21720:	30000826 	beq	r6,zero,21744 <__sfp+0x7c>
   21724:	297fffc4 	addi	r5,r5,-1
   21728:	18bffd04 	addi	r2,r3,-12
   2172c:	18c01704 	addi	r3,r3,92
   21730:	2c3ffa1e 	bne	r5,r16,2171c <__sfp+0x54>
   21734:	88800017 	ldw	r2,0(r17)
   21738:	10001926 	beq	r2,zero,217a0 <__sfp+0xd8>
   2173c:	1023883a 	mov	r17,r2
   21740:	003fee06 	br	216fc <__sfp+0x34>
   21744:	00ffffc4 	movi	r3,-1
   21748:	10c0038d 	sth	r3,14(r2)
   2174c:	00c00044 	movi	r3,1
   21750:	10c0030d 	sth	r3,12(r2)
   21754:	10000015 	stw	zero,0(r2)
   21758:	10000215 	stw	zero,8(r2)
   2175c:	10000115 	stw	zero,4(r2)
   21760:	10000415 	stw	zero,16(r2)
   21764:	10000515 	stw	zero,20(r2)
   21768:	10000615 	stw	zero,24(r2)
   2176c:	10000c15 	stw	zero,48(r2)
   21770:	10000d15 	stw	zero,52(r2)
   21774:	10001115 	stw	zero,68(r2)
   21778:	10001215 	stw	zero,72(r2)
   2177c:	dfc00317 	ldw	ra,12(sp)
   21780:	dc800217 	ldw	r18,8(sp)
   21784:	dc400117 	ldw	r17,4(sp)
   21788:	dc000017 	ldw	r16,0(sp)
   2178c:	dec00404 	addi	sp,sp,16
   21790:	f800283a 	ret
   21794:	8809883a 	mov	r4,r17
   21798:	00215bc0 	call	215bc <__sinit>
   2179c:	003fd506 	br	216f4 <__sfp+0x2c>
   217a0:	9009883a 	mov	r4,r18
   217a4:	01400104 	movi	r5,4
   217a8:	00215340 	call	21534 <__sfmoreglue>
   217ac:	88800015 	stw	r2,0(r17)
   217b0:	103fe21e 	bne	r2,zero,2173c <__sfp+0x74>
   217b4:	00800304 	movi	r2,12
   217b8:	90800015 	stw	r2,0(r18)
   217bc:	0005883a 	mov	r2,zero
   217c0:	003fee06 	br	2177c <__sfp+0xb4>

000217c4 <__sfp_lock_acquire>:
   217c4:	f800283a 	ret

000217c8 <__sfp_lock_release>:
   217c8:	f800283a 	ret

000217cc <__sinit_lock_acquire>:
   217cc:	f800283a 	ret

000217d0 <__sinit_lock_release>:
   217d0:	f800283a 	ret

000217d4 <__fp_lock_all>:
   217d4:	008000f4 	movhi	r2,3
   217d8:	1096b704 	addi	r2,r2,23260
   217dc:	11000017 	ldw	r4,0(r2)
   217e0:	014000b4 	movhi	r5,2
   217e4:	29454604 	addi	r5,r5,5400
   217e8:	00225801 	jmpi	22580 <_fwalk>

000217ec <__fp_unlock_all>:
   217ec:	008000f4 	movhi	r2,3
   217f0:	1096b704 	addi	r2,r2,23260
   217f4:	11000017 	ldw	r4,0(r2)
   217f8:	014000b4 	movhi	r5,2
   217fc:	29454804 	addi	r5,r5,5408
   21800:	00225801 	jmpi	22580 <_fwalk>

00021804 <_fopen_r>:
   21804:	defffa04 	addi	sp,sp,-24
   21808:	dcc00415 	stw	r19,16(sp)
   2180c:	2827883a 	mov	r19,r5
   21810:	300b883a 	mov	r5,r6
   21814:	d80d883a 	mov	r6,sp
   21818:	dc800315 	stw	r18,12(sp)
   2181c:	dc400215 	stw	r17,8(sp)
   21820:	dfc00515 	stw	ra,20(sp)
   21824:	dc000115 	stw	r16,4(sp)
   21828:	2025883a 	mov	r18,r4
   2182c:	00289dc0 	call	289dc <__sflags>
   21830:	1023883a 	mov	r17,r2
   21834:	10002926 	beq	r2,zero,218dc <_fopen_r+0xd8>
   21838:	9009883a 	mov	r4,r18
   2183c:	00216c80 	call	216c8 <__sfp>
   21840:	1021883a 	mov	r16,r2
   21844:	10002526 	beq	r2,zero,218dc <_fopen_r+0xd8>
   21848:	d9800017 	ldw	r6,0(sp)
   2184c:	9009883a 	mov	r4,r18
   21850:	980b883a 	mov	r5,r19
   21854:	01c06d84 	movi	r7,438
   21858:	00233400 	call	23340 <_open_r>
   2185c:	10001c16 	blt	r2,zero,218d0 <_fopen_r+0xcc>
   21860:	8080038d 	sth	r2,14(r16)
   21864:	008000b4 	movhi	r2,2
   21868:	108dc604 	addi	r2,r2,14104
   2186c:	80800815 	stw	r2,32(r16)
   21870:	008000b4 	movhi	r2,2
   21874:	108ddb04 	addi	r2,r2,14188
   21878:	80800915 	stw	r2,36(r16)
   2187c:	008000b4 	movhi	r2,2
   21880:	108dfd04 	addi	r2,r2,14324
   21884:	88c0400c 	andi	r3,r17,256
   21888:	80800a15 	stw	r2,40(r16)
   2188c:	008000b4 	movhi	r2,2
   21890:	108e1404 	addi	r2,r2,14416
   21894:	80800b15 	stw	r2,44(r16)
   21898:	18bfffcc 	andi	r2,r3,65535
   2189c:	10a0001c 	xori	r2,r2,32768
   218a0:	8440030d 	sth	r17,12(r16)
   218a4:	84000715 	stw	r16,28(r16)
   218a8:	10a00004 	addi	r2,r2,-32768
   218ac:	1000141e 	bne	r2,zero,21900 <_fopen_r+0xfc>
   218b0:	8005883a 	mov	r2,r16
   218b4:	dfc00517 	ldw	ra,20(sp)
   218b8:	dcc00417 	ldw	r19,16(sp)
   218bc:	dc800317 	ldw	r18,12(sp)
   218c0:	dc400217 	ldw	r17,8(sp)
   218c4:	dc000117 	ldw	r16,4(sp)
   218c8:	dec00604 	addi	sp,sp,24
   218cc:	f800283a 	ret
   218d0:	00217c40 	call	217c4 <__sfp_lock_acquire>
   218d4:	8000030d 	sth	zero,12(r16)
   218d8:	00217c80 	call	217c8 <__sfp_lock_release>
   218dc:	0021883a 	mov	r16,zero
   218e0:	8005883a 	mov	r2,r16
   218e4:	dfc00517 	ldw	ra,20(sp)
   218e8:	dcc00417 	ldw	r19,16(sp)
   218ec:	dc800317 	ldw	r18,12(sp)
   218f0:	dc400217 	ldw	r17,8(sp)
   218f4:	dc000117 	ldw	r16,4(sp)
   218f8:	dec00604 	addi	sp,sp,24
   218fc:	f800283a 	ret
   21900:	9009883a 	mov	r4,r18
   21904:	800b883a 	mov	r5,r16
   21908:	000d883a 	mov	r6,zero
   2190c:	01c00084 	movi	r7,2
   21910:	00220800 	call	22080 <_fseek_r>
   21914:	8005883a 	mov	r2,r16
   21918:	dfc00517 	ldw	ra,20(sp)
   2191c:	dcc00417 	ldw	r19,16(sp)
   21920:	dc800317 	ldw	r18,12(sp)
   21924:	dc400217 	ldw	r17,8(sp)
   21928:	dc000117 	ldw	r16,4(sp)
   2192c:	dec00604 	addi	sp,sp,24
   21930:	f800283a 	ret

00021934 <fopen>:
   21934:	00c000f4 	movhi	r3,3
   21938:	18d6b704 	addi	r3,r3,23260
   2193c:	2005883a 	mov	r2,r4
   21940:	19000017 	ldw	r4,0(r3)
   21944:	280d883a 	mov	r6,r5
   21948:	100b883a 	mov	r5,r2
   2194c:	00218041 	jmpi	21804 <_fopen_r>

00021950 <_fprintf_r>:
   21950:	defffe04 	addi	sp,sp,-8
   21954:	2809883a 	mov	r4,r5
   21958:	dfc00015 	stw	ra,0(sp)
   2195c:	d9c00115 	stw	r7,4(sp)
   21960:	300b883a 	mov	r5,r6
   21964:	d9800104 	addi	r6,sp,4
   21968:	00257940 	call	25794 <__vfprintf_internal>
   2196c:	dfc00017 	ldw	ra,0(sp)
   21970:	dec00204 	addi	sp,sp,8
   21974:	f800283a 	ret

00021978 <fprintf>:
   21978:	defffd04 	addi	sp,sp,-12
   2197c:	dfc00015 	stw	ra,0(sp)
   21980:	d9800115 	stw	r6,4(sp)
   21984:	d9c00215 	stw	r7,8(sp)
   21988:	d9800104 	addi	r6,sp,4
   2198c:	00257940 	call	25794 <__vfprintf_internal>
   21990:	dfc00017 	ldw	ra,0(sp)
   21994:	dec00304 	addi	sp,sp,12
   21998:	f800283a 	ret

0002199c <_fread_r>:
   2199c:	defff504 	addi	sp,sp,-44
   219a0:	dd000515 	stw	r20,20(sp)
   219a4:	dcc00415 	stw	r19,16(sp)
   219a8:	2029883a 	mov	r20,r4
   219ac:	2827883a 	mov	r19,r5
   219b0:	3809883a 	mov	r4,r7
   219b4:	300b883a 	mov	r5,r6
   219b8:	ddc00815 	stw	r23,32(sp)
   219bc:	dd800715 	stw	r22,28(sp)
   219c0:	dd400615 	stw	r21,24(sp)
   219c4:	dc000115 	stw	r16,4(sp)
   219c8:	dfc00a15 	stw	ra,40(sp)
   219cc:	df000915 	stw	fp,36(sp)
   219d0:	dc800315 	stw	r18,12(sp)
   219d4:	dc400215 	stw	r17,8(sp)
   219d8:	302f883a 	mov	r23,r6
   219dc:	382b883a 	mov	r21,r7
   219e0:	00211880 	call	21188 <__mulsi3>
   219e4:	102d883a 	mov	r22,r2
   219e8:	dc000b17 	ldw	r16,44(sp)
   219ec:	10002e26 	beq	r2,zero,21aa8 <_fread_r+0x10c>
   219f0:	a0000226 	beq	r20,zero,219fc <_fread_r+0x60>
   219f4:	a0800e17 	ldw	r2,56(r20)
   219f8:	10006726 	beq	r2,zero,21b98 <_fread_r+0x1fc>
   219fc:	84400117 	ldw	r17,4(r16)
   21a00:	88002b16 	blt	r17,zero,21ab0 <_fread_r+0x114>
   21a04:	8080030b 	ldhu	r2,12(r16)
   21a08:	8807883a 	mov	r3,r17
   21a0c:	1080008c 	andi	r2,r2,2
   21a10:	10bfffcc 	andi	r2,r2,65535
   21a14:	10a0001c 	xori	r2,r2,32768
   21a18:	10a00004 	addi	r2,r2,-32768
   21a1c:	10002d1e 	bne	r2,zero,21ad4 <_fread_r+0x138>
   21a20:	b025883a 	mov	r18,r22
   21a24:	00000106 	br	21a2c <_fread_r+0x90>
   21a28:	84400117 	ldw	r17,4(r16)
   21a2c:	9809883a 	mov	r4,r19
   21a30:	880d883a 	mov	r6,r17
   21a34:	81400017 	ldw	r5,0(r16)
   21a38:	8c805c2e 	bgeu	r17,r18,21bac <_fread_r+0x210>
   21a3c:	00231240 	call	23124 <memcpy>
   21a40:	80800017 	ldw	r2,0(r16)
   21a44:	9c67883a 	add	r19,r19,r17
   21a48:	9465c83a 	sub	r18,r18,r17
   21a4c:	1463883a 	add	r17,r2,r17
   21a50:	a009883a 	mov	r4,r20
   21a54:	800b883a 	mov	r5,r16
   21a58:	84400015 	stw	r17,0(r16)
   21a5c:	00234c80 	call	234c8 <__srefill_r>
   21a60:	103ff126 	beq	r2,zero,21a28 <_fread_r+0x8c>
   21a64:	b489c83a 	sub	r4,r22,r18
   21a68:	b80b883a 	mov	r5,r23
   21a6c:	002fde80 	call	2fde8 <__udivsi3>
   21a70:	102b883a 	mov	r21,r2
   21a74:	a805883a 	mov	r2,r21
   21a78:	dfc00a17 	ldw	ra,40(sp)
   21a7c:	df000917 	ldw	fp,36(sp)
   21a80:	ddc00817 	ldw	r23,32(sp)
   21a84:	dd800717 	ldw	r22,28(sp)
   21a88:	dd400617 	ldw	r21,24(sp)
   21a8c:	dd000517 	ldw	r20,20(sp)
   21a90:	dcc00417 	ldw	r19,16(sp)
   21a94:	dc800317 	ldw	r18,12(sp)
   21a98:	dc400217 	ldw	r17,8(sp)
   21a9c:	dc000117 	ldw	r16,4(sp)
   21aa0:	dec00b04 	addi	sp,sp,44
   21aa4:	f800283a 	ret
   21aa8:	002b883a 	mov	r21,zero
   21aac:	003ff106 	br	21a74 <_fread_r+0xd8>
   21ab0:	8080030b 	ldhu	r2,12(r16)
   21ab4:	80000115 	stw	zero,4(r16)
   21ab8:	0007883a 	mov	r3,zero
   21abc:	1080008c 	andi	r2,r2,2
   21ac0:	10bfffcc 	andi	r2,r2,65535
   21ac4:	10a0001c 	xori	r2,r2,32768
   21ac8:	10a00004 	addi	r2,r2,-32768
   21acc:	0023883a 	mov	r17,zero
   21ad0:	103fd326 	beq	r2,zero,21a20 <_fread_r+0x84>
   21ad4:	1823883a 	mov	r17,r3
   21ad8:	b0c0012e 	bgeu	r22,r3,21ae0 <_fread_r+0x144>
   21adc:	b023883a 	mov	r17,r22
   21ae0:	81400017 	ldw	r5,0(r16)
   21ae4:	9809883a 	mov	r4,r19
   21ae8:	880d883a 	mov	r6,r17
   21aec:	00231240 	call	23124 <memcpy>
   21af0:	80800117 	ldw	r2,4(r16)
   21af4:	84800017 	ldw	r18,0(r16)
   21af8:	81400c17 	ldw	r5,48(r16)
   21afc:	1445c83a 	sub	r2,r2,r17
   21b00:	9465883a 	add	r18,r18,r17
   21b04:	84800015 	stw	r18,0(r16)
   21b08:	80800115 	stw	r2,4(r16)
   21b0c:	9c67883a 	add	r19,r19,r17
   21b10:	b463c83a 	sub	r17,r22,r17
   21b14:	28002e26 	beq	r5,zero,21bd0 <_fread_r+0x234>
   21b18:	883fd626 	beq	r17,zero,21a74 <_fread_r+0xd8>
   21b1c:	80801004 	addi	r2,r16,64
   21b20:	28800326 	beq	r5,r2,21b30 <_fread_r+0x194>
   21b24:	a009883a 	mov	r4,r20
   21b28:	0021d540 	call	21d54 <_free_r>
   21b2c:	84800017 	ldw	r18,0(r16)
   21b30:	80000c15 	stw	zero,48(r16)
   21b34:	80c00517 	ldw	r3,20(r16)
   21b38:	87000417 	ldw	fp,16(r16)
   21b3c:	d8c00015 	stw	r3,0(sp)
   21b40:	00000106 	br	21b48 <_fread_r+0x1ac>
   21b44:	883fcb26 	beq	r17,zero,21a74 <_fread_r+0xd8>
   21b48:	84c00415 	stw	r19,16(r16)
   21b4c:	84400515 	stw	r17,20(r16)
   21b50:	84c00015 	stw	r19,0(r16)
   21b54:	a009883a 	mov	r4,r20
   21b58:	800b883a 	mov	r5,r16
   21b5c:	00234c80 	call	234c8 <__srefill_r>
   21b60:	d8c00017 	ldw	r3,0(sp)
   21b64:	81000117 	ldw	r4,4(r16)
   21b68:	87000415 	stw	fp,16(r16)
   21b6c:	80c00515 	stw	r3,20(r16)
   21b70:	84800015 	stw	r18,0(r16)
   21b74:	80000115 	stw	zero,4(r16)
   21b78:	8923c83a 	sub	r17,r17,r4
   21b7c:	9927883a 	add	r19,r19,r4
   21b80:	103ff026 	beq	r2,zero,21b44 <_fread_r+0x1a8>
   21b84:	b449c83a 	sub	r4,r22,r17
   21b88:	b80b883a 	mov	r5,r23
   21b8c:	002fde80 	call	2fde8 <__udivsi3>
   21b90:	102b883a 	mov	r21,r2
   21b94:	003fb706 	br	21a74 <_fread_r+0xd8>
   21b98:	a009883a 	mov	r4,r20
   21b9c:	00215bc0 	call	215bc <__sinit>
   21ba0:	84400117 	ldw	r17,4(r16)
   21ba4:	883f970e 	bge	r17,zero,21a04 <_fread_r+0x68>
   21ba8:	003fc106 	br	21ab0 <_fread_r+0x114>
   21bac:	900d883a 	mov	r6,r18
   21bb0:	00231240 	call	23124 <memcpy>
   21bb4:	80800117 	ldw	r2,4(r16)
   21bb8:	80c00017 	ldw	r3,0(r16)
   21bbc:	1485c83a 	sub	r2,r2,r18
   21bc0:	1ca5883a 	add	r18,r3,r18
   21bc4:	80800115 	stw	r2,4(r16)
   21bc8:	84800015 	stw	r18,0(r16)
   21bcc:	003fa906 	br	21a74 <_fread_r+0xd8>
   21bd0:	883fd81e 	bne	r17,zero,21b34 <_fread_r+0x198>
   21bd4:	003fa706 	br	21a74 <_fread_r+0xd8>

00021bd8 <fread>:
   21bd8:	008000f4 	movhi	r2,3
   21bdc:	1096b704 	addi	r2,r2,23260
   21be0:	2011883a 	mov	r8,r4
   21be4:	11000017 	ldw	r4,0(r2)
   21be8:	defffe04 	addi	sp,sp,-8
   21bec:	2807883a 	mov	r3,r5
   21bf0:	3005883a 	mov	r2,r6
   21bf4:	d9c00015 	stw	r7,0(sp)
   21bf8:	400b883a 	mov	r5,r8
   21bfc:	180d883a 	mov	r6,r3
   21c00:	100f883a 	mov	r7,r2
   21c04:	dfc00115 	stw	ra,4(sp)
   21c08:	002199c0 	call	2199c <_fread_r>
   21c0c:	dfc00117 	ldw	ra,4(sp)
   21c10:	dec00204 	addi	sp,sp,8
   21c14:	f800283a 	ret

00021c18 <_malloc_trim_r>:
   21c18:	defffb04 	addi	sp,sp,-20
   21c1c:	dcc00315 	stw	r19,12(sp)
   21c20:	dc800215 	stw	r18,8(sp)
   21c24:	dc400115 	stw	r17,4(sp)
   21c28:	dc000015 	stw	r16,0(sp)
   21c2c:	2827883a 	mov	r19,r5
   21c30:	dfc00415 	stw	ra,16(sp)
   21c34:	044000f4 	movhi	r17,3
   21c38:	8c511b04 	addi	r17,r17,17516
   21c3c:	2021883a 	mov	r16,r4
   21c40:	0030bc40 	call	30bc4 <__malloc_lock>
   21c44:	88800217 	ldw	r2,8(r17)
   21c48:	14800117 	ldw	r18,4(r2)
   21c4c:	00bfff04 	movi	r2,-4
   21c50:	90a4703a 	and	r18,r18,r2
   21c54:	9083fbc4 	addi	r2,r18,4079
   21c58:	14e7c83a 	sub	r19,r2,r19
   21c5c:	9826d33a 	srli	r19,r19,12
   21c60:	0083ffc4 	movi	r2,4095
   21c64:	9cffffc4 	addi	r19,r19,-1
   21c68:	9826933a 	slli	r19,r19,12
   21c6c:	14c0060e 	bge	r2,r19,21c88 <_malloc_trim_r+0x70>
   21c70:	8009883a 	mov	r4,r16
   21c74:	000b883a 	mov	r5,zero
   21c78:	00236b40 	call	236b4 <_sbrk_r>
   21c7c:	88c00217 	ldw	r3,8(r17)
   21c80:	1c87883a 	add	r3,r3,r18
   21c84:	10c00a26 	beq	r2,r3,21cb0 <_malloc_trim_r+0x98>
   21c88:	8009883a 	mov	r4,r16
   21c8c:	0030be40 	call	30be4 <__malloc_unlock>
   21c90:	0005883a 	mov	r2,zero
   21c94:	dfc00417 	ldw	ra,16(sp)
   21c98:	dcc00317 	ldw	r19,12(sp)
   21c9c:	dc800217 	ldw	r18,8(sp)
   21ca0:	dc400117 	ldw	r17,4(sp)
   21ca4:	dc000017 	ldw	r16,0(sp)
   21ca8:	dec00504 	addi	sp,sp,20
   21cac:	f800283a 	ret
   21cb0:	8009883a 	mov	r4,r16
   21cb4:	04cbc83a 	sub	r5,zero,r19
   21cb8:	00236b40 	call	236b4 <_sbrk_r>
   21cbc:	00ffffc4 	movi	r3,-1
   21cc0:	10c01326 	beq	r2,r3,21d10 <_malloc_trim_r+0xf8>
   21cc4:	008000f4 	movhi	r2,3
   21cc8:	109da204 	addi	r2,r2,30344
   21ccc:	11000017 	ldw	r4,0(r2)
   21cd0:	88c00217 	ldw	r3,8(r17)
   21cd4:	94e5c83a 	sub	r18,r18,r19
   21cd8:	94800054 	ori	r18,r18,1
   21cdc:	24e7c83a 	sub	r19,r4,r19
   21ce0:	1c800115 	stw	r18,4(r3)
   21ce4:	8009883a 	mov	r4,r16
   21ce8:	14c00015 	stw	r19,0(r2)
   21cec:	0030be40 	call	30be4 <__malloc_unlock>
   21cf0:	00800044 	movi	r2,1
   21cf4:	dfc00417 	ldw	ra,16(sp)
   21cf8:	dcc00317 	ldw	r19,12(sp)
   21cfc:	dc800217 	ldw	r18,8(sp)
   21d00:	dc400117 	ldw	r17,4(sp)
   21d04:	dc000017 	ldw	r16,0(sp)
   21d08:	dec00504 	addi	sp,sp,20
   21d0c:	f800283a 	ret
   21d10:	8009883a 	mov	r4,r16
   21d14:	000b883a 	mov	r5,zero
   21d18:	00236b40 	call	236b4 <_sbrk_r>
   21d1c:	88c00217 	ldw	r3,8(r17)
   21d20:	014003c4 	movi	r5,15
   21d24:	10c9c83a 	sub	r4,r2,r3
   21d28:	293fd70e 	bge	r5,r4,21c88 <_malloc_trim_r+0x70>
   21d2c:	014000f4 	movhi	r5,3
   21d30:	2956b804 	addi	r5,r5,23264
   21d34:	29400017 	ldw	r5,0(r5)
   21d38:	21000054 	ori	r4,r4,1
   21d3c:	19000115 	stw	r4,4(r3)
   21d40:	1145c83a 	sub	r2,r2,r5
   21d44:	014000f4 	movhi	r5,3
   21d48:	295da204 	addi	r5,r5,30344
   21d4c:	28800015 	stw	r2,0(r5)
   21d50:	003fcd06 	br	21c88 <_malloc_trim_r+0x70>

00021d54 <_free_r>:
   21d54:	defffd04 	addi	sp,sp,-12
   21d58:	dc400115 	stw	r17,4(sp)
   21d5c:	dc000015 	stw	r16,0(sp)
   21d60:	dfc00215 	stw	ra,8(sp)
   21d64:	2821883a 	mov	r16,r5
   21d68:	2023883a 	mov	r17,r4
   21d6c:	28004b26 	beq	r5,zero,21e9c <_free_r+0x148>
   21d70:	0030bc40 	call	30bc4 <__malloc_lock>
   21d74:	823fff17 	ldw	r8,-4(r16)
   21d78:	00bfff84 	movi	r2,-2
   21d7c:	81bffe04 	addi	r6,r16,-8
   21d80:	4084703a 	and	r2,r8,r2
   21d84:	3087883a 	add	r3,r6,r2
   21d88:	014000f4 	movhi	r5,3
   21d8c:	29511b04 	addi	r5,r5,17516
   21d90:	1a400117 	ldw	r9,4(r3)
   21d94:	29000217 	ldw	r4,8(r5)
   21d98:	01ffff04 	movi	r7,-4
   21d9c:	49ce703a 	and	r7,r9,r7
   21da0:	20c06526 	beq	r4,r3,21f38 <_free_r+0x1e4>
   21da4:	19c00115 	stw	r7,4(r3)
   21da8:	4200004c 	andi	r8,r8,1
   21dac:	40003026 	beq	r8,zero,21e70 <_free_r+0x11c>
   21db0:	0009883a 	mov	r4,zero
   21db4:	19d1883a 	add	r8,r3,r7
   21db8:	42000117 	ldw	r8,4(r8)
   21dbc:	4200004c 	andi	r8,r8,1
   21dc0:	4000061e 	bne	r8,zero,21ddc <_free_r+0x88>
   21dc4:	11c5883a 	add	r2,r2,r7
   21dc8:	19c00217 	ldw	r7,8(r3)
   21dcc:	20004e26 	beq	r4,zero,21f08 <_free_r+0x1b4>
   21dd0:	18c00317 	ldw	r3,12(r3)
   21dd4:	38c00315 	stw	r3,12(r7)
   21dd8:	19c00215 	stw	r7,8(r3)
   21ddc:	11c00054 	ori	r7,r2,1
   21de0:	3087883a 	add	r3,r6,r2
   21de4:	31c00115 	stw	r7,4(r6)
   21de8:	18800015 	stw	r2,0(r3)
   21dec:	20001a1e 	bne	r4,zero,21e58 <_free_r+0x104>
   21df0:	00c07fc4 	movi	r3,511
   21df4:	18802e2e 	bgeu	r3,r2,21eb0 <_free_r+0x15c>
   21df8:	1006d27a 	srli	r3,r2,9
   21dfc:	01000104 	movi	r4,4
   21e00:	20c06636 	bltu	r4,r3,21f9c <_free_r+0x248>
   21e04:	1008d1ba 	srli	r4,r2,6
   21e08:	21000e04 	addi	r4,r4,56
   21e0c:	210f883a 	add	r7,r4,r4
   21e10:	39cf883a 	add	r7,r7,r7
   21e14:	39cf883a 	add	r7,r7,r7
   21e18:	29cf883a 	add	r7,r5,r7
   21e1c:	38c00217 	ldw	r3,8(r7)
   21e20:	014000f4 	movhi	r5,3
   21e24:	29511b04 	addi	r5,r5,17516
   21e28:	19c06126 	beq	r3,r7,21fb0 <_free_r+0x25c>
   21e2c:	013fff04 	movi	r4,-4
   21e30:	19400117 	ldw	r5,4(r3)
   21e34:	290a703a 	and	r5,r5,r4
   21e38:	1140022e 	bgeu	r2,r5,21e44 <_free_r+0xf0>
   21e3c:	18c00217 	ldw	r3,8(r3)
   21e40:	38fffb1e 	bne	r7,r3,21e30 <_free_r+0xdc>
   21e44:	18800317 	ldw	r2,12(r3)
   21e48:	30800315 	stw	r2,12(r6)
   21e4c:	30c00215 	stw	r3,8(r6)
   21e50:	11800215 	stw	r6,8(r2)
   21e54:	19800315 	stw	r6,12(r3)
   21e58:	8809883a 	mov	r4,r17
   21e5c:	dfc00217 	ldw	ra,8(sp)
   21e60:	dc400117 	ldw	r17,4(sp)
   21e64:	dc000017 	ldw	r16,0(sp)
   21e68:	dec00304 	addi	sp,sp,12
   21e6c:	0030be41 	jmpi	30be4 <__malloc_unlock>
   21e70:	813ffe17 	ldw	r4,-8(r16)
   21e74:	2a400204 	addi	r9,r5,8
   21e78:	310dc83a 	sub	r6,r6,r4
   21e7c:	32000217 	ldw	r8,8(r6)
   21e80:	1105883a 	add	r2,r2,r4
   21e84:	42404326 	beq	r8,r9,21f94 <_free_r+0x240>
   21e88:	32400317 	ldw	r9,12(r6)
   21e8c:	0009883a 	mov	r4,zero
   21e90:	42400315 	stw	r9,12(r8)
   21e94:	4a000215 	stw	r8,8(r9)
   21e98:	003fc606 	br	21db4 <_free_r+0x60>
   21e9c:	dfc00217 	ldw	ra,8(sp)
   21ea0:	dc400117 	ldw	r17,4(sp)
   21ea4:	dc000017 	ldw	r16,0(sp)
   21ea8:	dec00304 	addi	sp,sp,12
   21eac:	f800283a 	ret
   21eb0:	1004d0fa 	srli	r2,r2,3
   21eb4:	02000044 	movi	r8,1
   21eb8:	29c00117 	ldw	r7,4(r5)
   21ebc:	1087883a 	add	r3,r2,r2
   21ec0:	18c7883a 	add	r3,r3,r3
   21ec4:	1005d0ba 	srai	r2,r2,2
   21ec8:	18c7883a 	add	r3,r3,r3
   21ecc:	28c7883a 	add	r3,r5,r3
   21ed0:	19000217 	ldw	r4,8(r3)
   21ed4:	4084983a 	sll	r2,r8,r2
   21ed8:	30c00315 	stw	r3,12(r6)
   21edc:	31000215 	stw	r4,8(r6)
   21ee0:	11c4b03a 	or	r2,r2,r7
   21ee4:	21800315 	stw	r6,12(r4)
   21ee8:	8809883a 	mov	r4,r17
   21eec:	28800115 	stw	r2,4(r5)
   21ef0:	19800215 	stw	r6,8(r3)
   21ef4:	dfc00217 	ldw	ra,8(sp)
   21ef8:	dc400117 	ldw	r17,4(sp)
   21efc:	dc000017 	ldw	r16,0(sp)
   21f00:	dec00304 	addi	sp,sp,12
   21f04:	0030be41 	jmpi	30be4 <__malloc_unlock>
   21f08:	020000f4 	movhi	r8,3
   21f0c:	42111d04 	addi	r8,r8,17524
   21f10:	3a3faf1e 	bne	r7,r8,21dd0 <_free_r+0x7c>
   21f14:	29800515 	stw	r6,20(r5)
   21f18:	29800415 	stw	r6,16(r5)
   21f1c:	11000054 	ori	r4,r2,1
   21f20:	3087883a 	add	r3,r6,r2
   21f24:	31c00315 	stw	r7,12(r6)
   21f28:	31c00215 	stw	r7,8(r6)
   21f2c:	31000115 	stw	r4,4(r6)
   21f30:	18800015 	stw	r2,0(r3)
   21f34:	003fc806 	br	21e58 <_free_r+0x104>
   21f38:	4200004c 	andi	r8,r8,1
   21f3c:	3885883a 	add	r2,r7,r2
   21f40:	4000071e 	bne	r8,zero,21f60 <_free_r+0x20c>
   21f44:	81fffe17 	ldw	r7,-8(r16)
   21f48:	31cdc83a 	sub	r6,r6,r7
   21f4c:	30c00317 	ldw	r3,12(r6)
   21f50:	31000217 	ldw	r4,8(r6)
   21f54:	11c5883a 	add	r2,r2,r7
   21f58:	20c00315 	stw	r3,12(r4)
   21f5c:	19000215 	stw	r4,8(r3)
   21f60:	00c000f4 	movhi	r3,3
   21f64:	18d6b904 	addi	r3,r3,23268
   21f68:	18c00017 	ldw	r3,0(r3)
   21f6c:	11000054 	ori	r4,r2,1
   21f70:	31000115 	stw	r4,4(r6)
   21f74:	29800215 	stw	r6,8(r5)
   21f78:	10ffb736 	bltu	r2,r3,21e58 <_free_r+0x104>
   21f7c:	008000f4 	movhi	r2,3
   21f80:	109d9804 	addi	r2,r2,30304
   21f84:	11400017 	ldw	r5,0(r2)
   21f88:	8809883a 	mov	r4,r17
   21f8c:	0021c180 	call	21c18 <_malloc_trim_r>
   21f90:	003fb106 	br	21e58 <_free_r+0x104>
   21f94:	01000044 	movi	r4,1
   21f98:	003f8606 	br	21db4 <_free_r+0x60>
   21f9c:	01000504 	movi	r4,20
   21fa0:	20c00b36 	bltu	r4,r3,21fd0 <_free_r+0x27c>
   21fa4:	190016c4 	addi	r4,r3,91
   21fa8:	210f883a 	add	r7,r4,r4
   21fac:	003f9806 	br	21e10 <_free_r+0xbc>
   21fb0:	2009d0ba 	srai	r4,r4,2
   21fb4:	00800044 	movi	r2,1
   21fb8:	29c00117 	ldw	r7,4(r5)
   21fbc:	1108983a 	sll	r4,r2,r4
   21fc0:	1805883a 	mov	r2,r3
   21fc4:	21c8b03a 	or	r4,r4,r7
   21fc8:	29000115 	stw	r4,4(r5)
   21fcc:	003f9e06 	br	21e48 <_free_r+0xf4>
   21fd0:	01001504 	movi	r4,84
   21fd4:	20c00436 	bltu	r4,r3,21fe8 <_free_r+0x294>
   21fd8:	1008d33a 	srli	r4,r2,12
   21fdc:	21001b84 	addi	r4,r4,110
   21fe0:	210f883a 	add	r7,r4,r4
   21fe4:	003f8a06 	br	21e10 <_free_r+0xbc>
   21fe8:	01005504 	movi	r4,340
   21fec:	20c00436 	bltu	r4,r3,22000 <_free_r+0x2ac>
   21ff0:	1008d3fa 	srli	r4,r2,15
   21ff4:	21001dc4 	addi	r4,r4,119
   21ff8:	210f883a 	add	r7,r4,r4
   21ffc:	003f8406 	br	21e10 <_free_r+0xbc>
   22000:	01015504 	movi	r4,1364
   22004:	20c00436 	bltu	r4,r3,22018 <_free_r+0x2c4>
   22008:	1008d4ba 	srli	r4,r2,18
   2200c:	21001f04 	addi	r4,r4,124
   22010:	210f883a 	add	r7,r4,r4
   22014:	003f7e06 	br	21e10 <_free_r+0xbc>
   22018:	01c03f04 	movi	r7,252
   2201c:	01001f84 	movi	r4,126
   22020:	003f7b06 	br	21e10 <_free_r+0xbc>

00022024 <fscanf>:
   22024:	defffd04 	addi	sp,sp,-12
   22028:	2005883a 	mov	r2,r4
   2202c:	dfc00015 	stw	ra,0(sp)
   22030:	d9800115 	stw	r6,4(sp)
   22034:	d9c00215 	stw	r7,8(sp)
   22038:	00c000f4 	movhi	r3,3
   2203c:	18d6b704 	addi	r3,r3,23260
   22040:	19000017 	ldw	r4,0(r3)
   22044:	280d883a 	mov	r6,r5
   22048:	d9c00104 	addi	r7,sp,4
   2204c:	100b883a 	mov	r5,r2
   22050:	00257b80 	call	257b8 <__svfscanf_r>
   22054:	dfc00017 	ldw	ra,0(sp)
   22058:	dec00304 	addi	sp,sp,12
   2205c:	f800283a 	ret

00022060 <_fscanf_r>:
   22060:	defffe04 	addi	sp,sp,-8
   22064:	dfc00015 	stw	ra,0(sp)
   22068:	d9c00115 	stw	r7,4(sp)
   2206c:	d9c00104 	addi	r7,sp,4
   22070:	00257b80 	call	257b8 <__svfscanf_r>
   22074:	dfc00017 	ldw	ra,0(sp)
   22078:	dec00204 	addi	sp,sp,8
   2207c:	f800283a 	ret

00022080 <_fseek_r>:
   22080:	deffe804 	addi	sp,sp,-96
   22084:	dd001315 	stw	r20,76(sp)
   22088:	dc801115 	stw	r18,68(sp)
   2208c:	dc401015 	stw	r17,64(sp)
   22090:	dc000f15 	stw	r16,60(sp)
   22094:	dfc01715 	stw	ra,92(sp)
   22098:	ddc01615 	stw	r23,88(sp)
   2209c:	dd801515 	stw	r22,84(sp)
   220a0:	dd401415 	stw	r21,80(sp)
   220a4:	dcc01215 	stw	r19,72(sp)
   220a8:	2023883a 	mov	r17,r4
   220ac:	2821883a 	mov	r16,r5
   220b0:	3029883a 	mov	r20,r6
   220b4:	3825883a 	mov	r18,r7
   220b8:	20000226 	beq	r4,zero,220c4 <_fseek_r+0x44>
   220bc:	20800e17 	ldw	r2,56(r4)
   220c0:	10006226 	beq	r2,zero,2224c <_fseek_r+0x1cc>
   220c4:	80c0030b 	ldhu	r3,12(r16)
   220c8:	00804204 	movi	r2,264
   220cc:	18c0420c 	andi	r3,r3,264
   220d0:	18806326 	beq	r3,r2,22260 <_fseek_r+0x1e0>
   220d4:	84c00a17 	ldw	r19,40(r16)
   220d8:	98010226 	beq	r19,zero,224e4 <_fseek_r+0x464>
   220dc:	00800044 	movi	r2,1
   220e0:	90803d26 	beq	r18,r2,221d8 <_fseek_r+0x158>
   220e4:	00800084 	movi	r2,2
   220e8:	90800126 	beq	r18,r2,220f0 <_fseek_r+0x70>
   220ec:	90002c1e 	bne	r18,zero,221a0 <_fseek_r+0x120>
   220f0:	80800417 	ldw	r2,16(r16)
   220f4:	002d883a 	mov	r22,zero
   220f8:	002b883a 	mov	r21,zero
   220fc:	1000e526 	beq	r2,zero,22494 <_fseek_r+0x414>
   22100:	80c0030b 	ldhu	r3,12(r16)
   22104:	1882068c 	andi	r2,r3,2074
   22108:	1809883a 	mov	r4,r3
   2210c:	10000a1e 	bne	r2,zero,22138 <_fseek_r+0xb8>
   22110:	1881000c 	andi	r2,r3,1024
   22114:	10bfffcc 	andi	r2,r2,65535
   22118:	10a0001c 	xori	r2,r2,32768
   2211c:	10a00004 	addi	r2,r2,-32768
   22120:	1000631e 	bne	r2,zero,222b0 <_fseek_r+0x230>
   22124:	008000b4 	movhi	r2,2
   22128:	108dfd04 	addi	r2,r2,14324
   2212c:	98805026 	beq	r19,r2,22270 <_fseek_r+0x1f0>
   22130:	18c20014 	ori	r3,r3,2048
   22134:	80c0030d 	sth	r3,12(r16)
   22138:	8809883a 	mov	r4,r17
   2213c:	800b883a 	mov	r5,r16
   22140:	00213000 	call	21300 <_fflush_r>
   22144:	1000181e 	bne	r2,zero,221a8 <_fseek_r+0x128>
   22148:	81400717 	ldw	r5,28(r16)
   2214c:	8809883a 	mov	r4,r17
   22150:	a00d883a 	mov	r6,r20
   22154:	900f883a 	mov	r7,r18
   22158:	983ee83a 	callr	r19
   2215c:	00ffffc4 	movi	r3,-1
   22160:	10c01126 	beq	r2,r3,221a8 <_fseek_r+0x128>
   22164:	81400c17 	ldw	r5,48(r16)
   22168:	28000526 	beq	r5,zero,22180 <_fseek_r+0x100>
   2216c:	80801004 	addi	r2,r16,64
   22170:	28800226 	beq	r5,r2,2217c <_fseek_r+0xfc>
   22174:	8809883a 	mov	r4,r17
   22178:	0021d540 	call	21d54 <_free_r>
   2217c:	80000c15 	stw	zero,48(r16)
   22180:	8080030b 	ldhu	r2,12(r16)
   22184:	80c00417 	ldw	r3,16(r16)
   22188:	80000115 	stw	zero,4(r16)
   2218c:	10bdf7cc 	andi	r2,r2,63455
   22190:	8080030d 	sth	r2,12(r16)
   22194:	80c00015 	stw	r3,0(r16)
   22198:	0005883a 	mov	r2,zero
   2219c:	00000306 	br	221ac <_fseek_r+0x12c>
   221a0:	00800584 	movi	r2,22
   221a4:	88800015 	stw	r2,0(r17)
   221a8:	00bfffc4 	movi	r2,-1
   221ac:	dfc01717 	ldw	ra,92(sp)
   221b0:	ddc01617 	ldw	r23,88(sp)
   221b4:	dd801517 	ldw	r22,84(sp)
   221b8:	dd401417 	ldw	r21,80(sp)
   221bc:	dd001317 	ldw	r20,76(sp)
   221c0:	dcc01217 	ldw	r19,72(sp)
   221c4:	dc801117 	ldw	r18,68(sp)
   221c8:	dc401017 	ldw	r17,64(sp)
   221cc:	dc000f17 	ldw	r16,60(sp)
   221d0:	dec01804 	addi	sp,sp,96
   221d4:	f800283a 	ret
   221d8:	8809883a 	mov	r4,r17
   221dc:	800b883a 	mov	r5,r16
   221e0:	00213000 	call	21300 <_fflush_r>
   221e4:	8080030b 	ldhu	r2,12(r16)
   221e8:	10c4000c 	andi	r3,r2,4096
   221ec:	18ffffcc 	andi	r3,r3,65535
   221f0:	18e0001c 	xori	r3,r3,32768
   221f4:	18e00004 	addi	r3,r3,-32768
   221f8:	18007d26 	beq	r3,zero,223f0 <_fseek_r+0x370>
   221fc:	85401417 	ldw	r21,80(r16)
   22200:	10c0010c 	andi	r3,r2,4
   22204:	18ffffcc 	andi	r3,r3,65535
   22208:	18e0001c 	xori	r3,r3,32768
   2220c:	18e00004 	addi	r3,r3,-32768
   22210:	18005f1e 	bne	r3,zero,22390 <_fseek_r+0x310>
   22214:	1080020c 	andi	r2,r2,8
   22218:	10bfffcc 	andi	r2,r2,65535
   2221c:	10a0001c 	xori	r2,r2,32768
   22220:	10a00004 	addi	r2,r2,-32768
   22224:	10007026 	beq	r2,zero,223e8 <_fseek_r+0x368>
   22228:	80c00017 	ldw	r3,0(r16)
   2222c:	80800417 	ldw	r2,16(r16)
   22230:	18000226 	beq	r3,zero,2223c <_fseek_r+0x1bc>
   22234:	1887c83a 	sub	r3,r3,r2
   22238:	a8eb883a 	add	r21,r21,r3
   2223c:	a569883a 	add	r20,r20,r21
   22240:	05800044 	movi	r22,1
   22244:	0025883a 	mov	r18,zero
   22248:	003fac06 	br	220fc <_fseek_r+0x7c>
   2224c:	00215bc0 	call	215bc <__sinit>
   22250:	80c0030b 	ldhu	r3,12(r16)
   22254:	00804204 	movi	r2,264
   22258:	18c0420c 	andi	r3,r3,264
   2225c:	18bf9d1e 	bne	r3,r2,220d4 <_fseek_r+0x54>
   22260:	8809883a 	mov	r4,r17
   22264:	800b883a 	mov	r5,r16
   22268:	00213000 	call	21300 <_fflush_r>
   2226c:	003f9906 	br	220d4 <_fseek_r+0x54>
   22270:	8140038f 	ldh	r5,14(r16)
   22274:	283fae16 	blt	r5,zero,22130 <_fseek_r+0xb0>
   22278:	8809883a 	mov	r4,r17
   2227c:	d80d883a 	mov	r6,sp
   22280:	00225180 	call	22518 <_fstat_r>
   22284:	1000741e 	bne	r2,zero,22458 <_fseek_r+0x3d8>
   22288:	d8c00117 	ldw	r3,4(sp)
   2228c:	00a00014 	movui	r2,32768
   22290:	18fc000c 	andi	r3,r3,61440
   22294:	1880701e 	bne	r3,r2,22458 <_fseek_r+0x3d8>
   22298:	8100030b 	ldhu	r4,12(r16)
   2229c:	00810004 	movi	r2,1024
   222a0:	80801315 	stw	r2,76(r16)
   222a4:	2084b03a 	or	r2,r4,r2
   222a8:	1009883a 	mov	r4,r2
   222ac:	8080030d 	sth	r2,12(r16)
   222b0:	90003f1e 	bne	r18,zero,223b0 <_fseek_r+0x330>
   222b4:	a02f883a 	mov	r23,r20
   222b8:	b000461e 	bne	r22,zero,223d4 <_fseek_r+0x354>
   222bc:	2084000c 	andi	r2,r4,4096
   222c0:	10bfffcc 	andi	r2,r2,65535
   222c4:	10a0001c 	xori	r2,r2,32768
   222c8:	10a00004 	addi	r2,r2,-32768
   222cc:	10007526 	beq	r2,zero,224a4 <_fseek_r+0x424>
   222d0:	80801417 	ldw	r2,80(r16)
   222d4:	80c00117 	ldw	r3,4(r16)
   222d8:	81400c17 	ldw	r5,48(r16)
   222dc:	10ebc83a 	sub	r21,r2,r3
   222e0:	28007926 	beq	r5,zero,224c8 <_fseek_r+0x448>
   222e4:	81c00f17 	ldw	r7,60(r16)
   222e8:	a9ebc83a 	sub	r21,r21,r7
   222ec:	80800e17 	ldw	r2,56(r16)
   222f0:	81800417 	ldw	r6,16(r16)
   222f4:	a8eb883a 	add	r21,r21,r3
   222f8:	1185c83a 	sub	r2,r2,r6
   222fc:	a8abc83a 	sub	r21,r21,r2
   22300:	3885883a 	add	r2,r7,r2
   22304:	2208000c 	andi	r8,r4,8192
   22308:	423fffcc 	andi	r8,r8,65535
   2230c:	4220001c 	xori	r8,r8,32768
   22310:	42200004 	addi	r8,r8,-32768
   22314:	4000031e 	bne	r8,zero,22324 <_fseek_r+0x2a4>
   22318:	bd400216 	blt	r23,r21,22324 <_fseek_r+0x2a4>
   2231c:	a887883a 	add	r3,r21,r2
   22320:	b8c03d36 	bltu	r23,r3,22418 <_fseek_r+0x398>
   22324:	85401317 	ldw	r21,76(r16)
   22328:	81400717 	ldw	r5,28(r16)
   2232c:	8809883a 	mov	r4,r17
   22330:	056bc83a 	sub	r21,zero,r21
   22334:	bd6a703a 	and	r21,r23,r21
   22338:	a80d883a 	mov	r6,r21
   2233c:	000f883a 	mov	r7,zero
   22340:	983ee83a 	callr	r19
   22344:	00ffffc4 	movi	r3,-1
   22348:	10ff7b26 	beq	r2,r3,22138 <_fseek_r+0xb8>
   2234c:	80800417 	ldw	r2,16(r16)
   22350:	81400c17 	ldw	r5,48(r16)
   22354:	80000115 	stw	zero,4(r16)
   22358:	80800015 	stw	r2,0(r16)
   2235c:	28000526 	beq	r5,zero,22374 <_fseek_r+0x2f4>
   22360:	80801004 	addi	r2,r16,64
   22364:	28800226 	beq	r5,r2,22370 <_fseek_r+0x2f0>
   22368:	8809883a 	mov	r4,r17
   2236c:	0021d540 	call	21d54 <_free_r>
   22370:	80000c15 	stw	zero,48(r16)
   22374:	8080030b 	ldhu	r2,12(r16)
   22378:	bd6fc83a 	sub	r23,r23,r21
   2237c:	10bff7cc 	andi	r2,r2,65503
   22380:	8080030d 	sth	r2,12(r16)
   22384:	b800361e 	bne	r23,zero,22460 <_fseek_r+0x3e0>
   22388:	0005883a 	mov	r2,zero
   2238c:	003f8706 	br	221ac <_fseek_r+0x12c>
   22390:	80c00117 	ldw	r3,4(r16)
   22394:	80800c17 	ldw	r2,48(r16)
   22398:	a8ebc83a 	sub	r21,r21,r3
   2239c:	10001226 	beq	r2,zero,223e8 <_fseek_r+0x368>
   223a0:	80c00f17 	ldw	r3,60(r16)
   223a4:	80800417 	ldw	r2,16(r16)
   223a8:	a8ebc83a 	sub	r21,r21,r3
   223ac:	003fa306 	br	2223c <_fseek_r+0x1bc>
   223b0:	8140038f 	ldh	r5,14(r16)
   223b4:	8809883a 	mov	r4,r17
   223b8:	d80d883a 	mov	r6,sp
   223bc:	00225180 	call	22518 <_fstat_r>
   223c0:	103f5d1e 	bne	r2,zero,22138 <_fseek_r+0xb8>
   223c4:	ddc00417 	ldw	r23,16(sp)
   223c8:	8100030b 	ldhu	r4,12(r16)
   223cc:	a5ef883a 	add	r23,r20,r23
   223d0:	b03fba26 	beq	r22,zero,222bc <_fseek_r+0x23c>
   223d4:	81400c17 	ldw	r5,48(r16)
   223d8:	80c00117 	ldw	r3,4(r16)
   223dc:	28003a26 	beq	r5,zero,224c8 <_fseek_r+0x448>
   223e0:	81c00f17 	ldw	r7,60(r16)
   223e4:	003fc106 	br	222ec <_fseek_r+0x26c>
   223e8:	80800417 	ldw	r2,16(r16)
   223ec:	003f9306 	br	2223c <_fseek_r+0x1bc>
   223f0:	81400717 	ldw	r5,28(r16)
   223f4:	8809883a 	mov	r4,r17
   223f8:	000d883a 	mov	r6,zero
   223fc:	900f883a 	mov	r7,r18
   22400:	983ee83a 	callr	r19
   22404:	102b883a 	mov	r21,r2
   22408:	00bfffc4 	movi	r2,-1
   2240c:	a8bf6626 	beq	r21,r2,221a8 <_fseek_r+0x128>
   22410:	8080030b 	ldhu	r2,12(r16)
   22414:	003f7a06 	br	22200 <_fseek_r+0x180>
   22418:	bd6bc83a 	sub	r21,r23,r21
   2241c:	354d883a 	add	r6,r6,r21
   22420:	1545c83a 	sub	r2,r2,r21
   22424:	81800015 	stw	r6,0(r16)
   22428:	80800115 	stw	r2,4(r16)
   2242c:	28000626 	beq	r5,zero,22448 <_fseek_r+0x3c8>
   22430:	80801004 	addi	r2,r16,64
   22434:	28800326 	beq	r5,r2,22444 <_fseek_r+0x3c4>
   22438:	8809883a 	mov	r4,r17
   2243c:	0021d540 	call	21d54 <_free_r>
   22440:	8100030b 	ldhu	r4,12(r16)
   22444:	80000c15 	stw	zero,48(r16)
   22448:	213ff7cc 	andi	r4,r4,65503
   2244c:	8100030d 	sth	r4,12(r16)
   22450:	0005883a 	mov	r2,zero
   22454:	003f5506 	br	221ac <_fseek_r+0x12c>
   22458:	80c0030b 	ldhu	r3,12(r16)
   2245c:	003f3406 	br	22130 <_fseek_r+0xb0>
   22460:	8809883a 	mov	r4,r17
   22464:	800b883a 	mov	r5,r16
   22468:	00234c80 	call	234c8 <__srefill_r>
   2246c:	103f321e 	bne	r2,zero,22138 <_fseek_r+0xb8>
   22470:	80800117 	ldw	r2,4(r16)
   22474:	15ff3036 	bltu	r2,r23,22138 <_fseek_r+0xb8>
   22478:	80c00017 	ldw	r3,0(r16)
   2247c:	15c5c83a 	sub	r2,r2,r23
   22480:	80800115 	stw	r2,4(r16)
   22484:	1def883a 	add	r23,r3,r23
   22488:	85c00015 	stw	r23,0(r16)
   2248c:	0005883a 	mov	r2,zero
   22490:	003f4606 	br	221ac <_fseek_r+0x12c>
   22494:	8809883a 	mov	r4,r17
   22498:	800b883a 	mov	r5,r16
   2249c:	00227d00 	call	227d0 <__smakebuf_r>
   224a0:	003f1706 	br	22100 <_fseek_r+0x80>
   224a4:	81400717 	ldw	r5,28(r16)
   224a8:	8809883a 	mov	r4,r17
   224ac:	000d883a 	mov	r6,zero
   224b0:	01c00044 	movi	r7,1
   224b4:	983ee83a 	callr	r19
   224b8:	00ffffc4 	movi	r3,-1
   224bc:	10ff1e26 	beq	r2,r3,22138 <_fseek_r+0xb8>
   224c0:	8100030b 	ldhu	r4,12(r16)
   224c4:	003f8306 	br	222d4 <_fseek_r+0x254>
   224c8:	80800017 	ldw	r2,0(r16)
   224cc:	81800417 	ldw	r6,16(r16)
   224d0:	000b883a 	mov	r5,zero
   224d4:	1185c83a 	sub	r2,r2,r6
   224d8:	a8abc83a 	sub	r21,r21,r2
   224dc:	1885883a 	add	r2,r3,r2
   224e0:	003f8806 	br	22304 <_fseek_r+0x284>
   224e4:	00800744 	movi	r2,29
   224e8:	88800015 	stw	r2,0(r17)
   224ec:	00bfffc4 	movi	r2,-1
   224f0:	003f2e06 	br	221ac <_fseek_r+0x12c>

000224f4 <fseek>:
   224f4:	008000f4 	movhi	r2,3
   224f8:	1096b704 	addi	r2,r2,23260
   224fc:	2007883a 	mov	r3,r4
   22500:	11000017 	ldw	r4,0(r2)
   22504:	2805883a 	mov	r2,r5
   22508:	300f883a 	mov	r7,r6
   2250c:	180b883a 	mov	r5,r3
   22510:	100d883a 	mov	r6,r2
   22514:	00220801 	jmpi	22080 <_fseek_r>

00022518 <_fstat_r>:
   22518:	defffd04 	addi	sp,sp,-12
   2251c:	dc400115 	stw	r17,4(sp)
   22520:	dc000015 	stw	r16,0(sp)
   22524:	2023883a 	mov	r17,r4
   22528:	040000f4 	movhi	r16,3
   2252c:	841d9504 	addi	r16,r16,30292
   22530:	2809883a 	mov	r4,r5
   22534:	300b883a 	mov	r5,r6
   22538:	dfc00215 	stw	ra,8(sp)
   2253c:	80000015 	stw	zero,0(r16)
   22540:	00307980 	call	30798 <fstat>
   22544:	00ffffc4 	movi	r3,-1
   22548:	10c00526 	beq	r2,r3,22560 <_fstat_r+0x48>
   2254c:	dfc00217 	ldw	ra,8(sp)
   22550:	dc400117 	ldw	r17,4(sp)
   22554:	dc000017 	ldw	r16,0(sp)
   22558:	dec00304 	addi	sp,sp,12
   2255c:	f800283a 	ret
   22560:	80c00017 	ldw	r3,0(r16)
   22564:	183ff926 	beq	r3,zero,2254c <_fstat_r+0x34>
   22568:	88c00015 	stw	r3,0(r17)
   2256c:	dfc00217 	ldw	ra,8(sp)
   22570:	dc400117 	ldw	r17,4(sp)
   22574:	dc000017 	ldw	r16,0(sp)
   22578:	dec00304 	addi	sp,sp,12
   2257c:	f800283a 	ret

00022580 <_fwalk>:
   22580:	defff904 	addi	sp,sp,-28
   22584:	dcc00315 	stw	r19,12(sp)
   22588:	24c0b804 	addi	r19,r4,736
   2258c:	dd400515 	stw	r21,20(sp)
   22590:	dd000415 	stw	r20,16(sp)
   22594:	dfc00615 	stw	ra,24(sp)
   22598:	dc800215 	stw	r18,8(sp)
   2259c:	dc400115 	stw	r17,4(sp)
   225a0:	dc000015 	stw	r16,0(sp)
   225a4:	282b883a 	mov	r21,r5
   225a8:	0029883a 	mov	r20,zero
   225ac:	00217c40 	call	217c4 <__sfp_lock_acquire>
   225b0:	98001226 	beq	r19,zero,225fc <_fwalk+0x7c>
   225b4:	04bfffc4 	movi	r18,-1
   225b8:	9c400117 	ldw	r17,4(r19)
   225bc:	9c000217 	ldw	r16,8(r19)
   225c0:	8c7fffc4 	addi	r17,r17,-1
   225c4:	88000b16 	blt	r17,zero,225f4 <_fwalk+0x74>
   225c8:	84000304 	addi	r16,r16,12
   225cc:	80c0000f 	ldh	r3,0(r16)
   225d0:	8c7fffc4 	addi	r17,r17,-1
   225d4:	813ffd04 	addi	r4,r16,-12
   225d8:	18000426 	beq	r3,zero,225ec <_fwalk+0x6c>
   225dc:	80c0008f 	ldh	r3,2(r16)
   225e0:	1c800226 	beq	r3,r18,225ec <_fwalk+0x6c>
   225e4:	a83ee83a 	callr	r21
   225e8:	a0a8b03a 	or	r20,r20,r2
   225ec:	84001704 	addi	r16,r16,92
   225f0:	8cbff61e 	bne	r17,r18,225cc <_fwalk+0x4c>
   225f4:	9cc00017 	ldw	r19,0(r19)
   225f8:	983fef1e 	bne	r19,zero,225b8 <_fwalk+0x38>
   225fc:	00217c80 	call	217c8 <__sfp_lock_release>
   22600:	a005883a 	mov	r2,r20
   22604:	dfc00617 	ldw	ra,24(sp)
   22608:	dd400517 	ldw	r21,20(sp)
   2260c:	dd000417 	ldw	r20,16(sp)
   22610:	dcc00317 	ldw	r19,12(sp)
   22614:	dc800217 	ldw	r18,8(sp)
   22618:	dc400117 	ldw	r17,4(sp)
   2261c:	dc000017 	ldw	r16,0(sp)
   22620:	dec00704 	addi	sp,sp,28
   22624:	f800283a 	ret

00022628 <_fwalk_reent>:
   22628:	defff804 	addi	sp,sp,-32
   2262c:	dcc00315 	stw	r19,12(sp)
   22630:	24c0b804 	addi	r19,r4,736
   22634:	dd800615 	stw	r22,24(sp)
   22638:	dd400515 	stw	r21,20(sp)
   2263c:	dd000415 	stw	r20,16(sp)
   22640:	dfc00715 	stw	ra,28(sp)
   22644:	dc800215 	stw	r18,8(sp)
   22648:	dc400115 	stw	r17,4(sp)
   2264c:	dc000015 	stw	r16,0(sp)
   22650:	2029883a 	mov	r20,r4
   22654:	282b883a 	mov	r21,r5
   22658:	002d883a 	mov	r22,zero
   2265c:	00217c40 	call	217c4 <__sfp_lock_acquire>
   22660:	98001326 	beq	r19,zero,226b0 <_fwalk_reent+0x88>
   22664:	04bfffc4 	movi	r18,-1
   22668:	9c400117 	ldw	r17,4(r19)
   2266c:	9c000217 	ldw	r16,8(r19)
   22670:	8c7fffc4 	addi	r17,r17,-1
   22674:	88000c16 	blt	r17,zero,226a8 <_fwalk_reent+0x80>
   22678:	84000304 	addi	r16,r16,12
   2267c:	80c0000f 	ldh	r3,0(r16)
   22680:	8c7fffc4 	addi	r17,r17,-1
   22684:	817ffd04 	addi	r5,r16,-12
   22688:	18000526 	beq	r3,zero,226a0 <_fwalk_reent+0x78>
   2268c:	80c0008f 	ldh	r3,2(r16)
   22690:	a009883a 	mov	r4,r20
   22694:	1c800226 	beq	r3,r18,226a0 <_fwalk_reent+0x78>
   22698:	a83ee83a 	callr	r21
   2269c:	b0acb03a 	or	r22,r22,r2
   226a0:	84001704 	addi	r16,r16,92
   226a4:	8cbff51e 	bne	r17,r18,2267c <_fwalk_reent+0x54>
   226a8:	9cc00017 	ldw	r19,0(r19)
   226ac:	983fee1e 	bne	r19,zero,22668 <_fwalk_reent+0x40>
   226b0:	00217c80 	call	217c8 <__sfp_lock_release>
   226b4:	b005883a 	mov	r2,r22
   226b8:	dfc00717 	ldw	ra,28(sp)
   226bc:	dd800617 	ldw	r22,24(sp)
   226c0:	dd400517 	ldw	r21,20(sp)
   226c4:	dd000417 	ldw	r20,16(sp)
   226c8:	dcc00317 	ldw	r19,12(sp)
   226cc:	dc800217 	ldw	r18,8(sp)
   226d0:	dc400117 	ldw	r17,4(sp)
   226d4:	dc000017 	ldw	r16,0(sp)
   226d8:	dec00804 	addi	sp,sp,32
   226dc:	f800283a 	ret

000226e0 <_fwrite_r>:
   226e0:	defff604 	addi	sp,sp,-40
   226e4:	dc000515 	stw	r16,20(sp)
   226e8:	d9400315 	stw	r5,12(sp)
   226ec:	2021883a 	mov	r16,r4
   226f0:	300b883a 	mov	r5,r6
   226f4:	3809883a 	mov	r4,r7
   226f8:	dcc00815 	stw	r19,32(sp)
   226fc:	dc800715 	stw	r18,28(sp)
   22700:	dc400615 	stw	r17,24(sp)
   22704:	dfc00915 	stw	ra,36(sp)
   22708:	3027883a 	mov	r19,r6
   2270c:	3823883a 	mov	r17,r7
   22710:	00211880 	call	21188 <__mulsi3>
   22714:	1025883a 	mov	r18,r2
   22718:	d8800415 	stw	r2,16(sp)
   2271c:	d8800215 	stw	r2,8(sp)
   22720:	d8800304 	addi	r2,sp,12
   22724:	d8800015 	stw	r2,0(sp)
   22728:	00800044 	movi	r2,1
   2272c:	d8800115 	stw	r2,4(sp)
   22730:	80000226 	beq	r16,zero,2273c <_fwrite_r+0x5c>
   22734:	80800e17 	ldw	r2,56(r16)
   22738:	10001226 	beq	r2,zero,22784 <_fwrite_r+0xa4>
   2273c:	d9400a17 	ldw	r5,40(sp)
   22740:	8009883a 	mov	r4,r16
   22744:	d80d883a 	mov	r6,sp
   22748:	0028a740 	call	28a74 <__sfvwrite_r>
   2274c:	10000526 	beq	r2,zero,22764 <_fwrite_r+0x84>
   22750:	d9000217 	ldw	r4,8(sp)
   22754:	980b883a 	mov	r5,r19
   22758:	9109c83a 	sub	r4,r18,r4
   2275c:	002fde80 	call	2fde8 <__udivsi3>
   22760:	1023883a 	mov	r17,r2
   22764:	8805883a 	mov	r2,r17
   22768:	dfc00917 	ldw	ra,36(sp)
   2276c:	dcc00817 	ldw	r19,32(sp)
   22770:	dc800717 	ldw	r18,28(sp)
   22774:	dc400617 	ldw	r17,24(sp)
   22778:	dc000517 	ldw	r16,20(sp)
   2277c:	dec00a04 	addi	sp,sp,40
   22780:	f800283a 	ret
   22784:	8009883a 	mov	r4,r16
   22788:	00215bc0 	call	215bc <__sinit>
   2278c:	003feb06 	br	2273c <_fwrite_r+0x5c>

00022790 <fwrite>:
   22790:	008000f4 	movhi	r2,3
   22794:	1096b704 	addi	r2,r2,23260
   22798:	2011883a 	mov	r8,r4
   2279c:	11000017 	ldw	r4,0(r2)
   227a0:	defffe04 	addi	sp,sp,-8
   227a4:	2807883a 	mov	r3,r5
   227a8:	3005883a 	mov	r2,r6
   227ac:	d9c00015 	stw	r7,0(sp)
   227b0:	400b883a 	mov	r5,r8
   227b4:	180d883a 	mov	r6,r3
   227b8:	100f883a 	mov	r7,r2
   227bc:	dfc00115 	stw	ra,4(sp)
   227c0:	00226e00 	call	226e0 <_fwrite_r>
   227c4:	dfc00117 	ldw	ra,4(sp)
   227c8:	dec00204 	addi	sp,sp,8
   227cc:	f800283a 	ret

000227d0 <__smakebuf_r>:
   227d0:	2880030b 	ldhu	r2,12(r5)
   227d4:	deffed04 	addi	sp,sp,-76
   227d8:	dc401015 	stw	r17,64(sp)
   227dc:	10c0008c 	andi	r3,r2,2
   227e0:	18ffffcc 	andi	r3,r3,65535
   227e4:	18e0001c 	xori	r3,r3,32768
   227e8:	dc000f15 	stw	r16,60(sp)
   227ec:	dfc01215 	stw	ra,72(sp)
   227f0:	dc801115 	stw	r18,68(sp)
   227f4:	18e00004 	addi	r3,r3,-32768
   227f8:	2821883a 	mov	r16,r5
   227fc:	2023883a 	mov	r17,r4
   22800:	1800381e 	bne	r3,zero,228e4 <__smakebuf_r+0x114>
   22804:	2940038f 	ldh	r5,14(r5)
   22808:	28002d16 	blt	r5,zero,228c0 <__smakebuf_r+0xf0>
   2280c:	d80d883a 	mov	r6,sp
   22810:	00225180 	call	22518 <_fstat_r>
   22814:	10002916 	blt	r2,zero,228bc <__smakebuf_r+0xec>
   22818:	d8800117 	ldw	r2,4(sp)
   2281c:	00e00014 	movui	r3,32768
   22820:	10bc000c 	andi	r2,r2,61440
   22824:	10c03c26 	beq	r2,r3,22918 <__smakebuf_r+0x148>
   22828:	80c0030b 	ldhu	r3,12(r16)
   2282c:	18c20014 	ori	r3,r3,2048
   22830:	80c0030d 	sth	r3,12(r16)
   22834:	00c80004 	movi	r3,8192
   22838:	10c00c1e 	bne	r2,r3,2286c <__smakebuf_r+0x9c>
   2283c:	8140038f 	ldh	r5,14(r16)
   22840:	8809883a 	mov	r4,r17
   22844:	0028f580 	call	28f58 <_isatty_r>
   22848:	10000826 	beq	r2,zero,2286c <__smakebuf_r+0x9c>
   2284c:	80c0030b 	ldhu	r3,12(r16)
   22850:	808010c4 	addi	r2,r16,67
   22854:	80800015 	stw	r2,0(r16)
   22858:	18c00054 	ori	r3,r3,1
   2285c:	80800415 	stw	r2,16(r16)
   22860:	00800044 	movi	r2,1
   22864:	80c0030d 	sth	r3,12(r16)
   22868:	80800515 	stw	r2,20(r16)
   2286c:	04810004 	movi	r18,1024
   22870:	8809883a 	mov	r4,r17
   22874:	900b883a 	mov	r5,r18
   22878:	00229a00 	call	229a0 <_malloc_r>
   2287c:	10003026 	beq	r2,zero,22940 <__smakebuf_r+0x170>
   22880:	80c0030b 	ldhu	r3,12(r16)
   22884:	010000b4 	movhi	r4,2
   22888:	21054a04 	addi	r4,r4,5416
   2288c:	89000f15 	stw	r4,60(r17)
   22890:	18c02014 	ori	r3,r3,128
   22894:	80c0030d 	sth	r3,12(r16)
   22898:	80800015 	stw	r2,0(r16)
   2289c:	80800415 	stw	r2,16(r16)
   228a0:	84800515 	stw	r18,20(r16)
   228a4:	dfc01217 	ldw	ra,72(sp)
   228a8:	dc801117 	ldw	r18,68(sp)
   228ac:	dc401017 	ldw	r17,64(sp)
   228b0:	dc000f17 	ldw	r16,60(sp)
   228b4:	dec01304 	addi	sp,sp,76
   228b8:	f800283a 	ret
   228bc:	8080030b 	ldhu	r2,12(r16)
   228c0:	10c0200c 	andi	r3,r2,128
   228c4:	18ffffcc 	andi	r3,r3,65535
   228c8:	18e0001c 	xori	r3,r3,32768
   228cc:	18e00004 	addi	r3,r3,-32768
   228d0:	18000f1e 	bne	r3,zero,22910 <__smakebuf_r+0x140>
   228d4:	04810004 	movi	r18,1024
   228d8:	10820014 	ori	r2,r2,2048
   228dc:	8080030d 	sth	r2,12(r16)
   228e0:	003fe306 	br	22870 <__smakebuf_r+0xa0>
   228e4:	288010c4 	addi	r2,r5,67
   228e8:	28800015 	stw	r2,0(r5)
   228ec:	28800415 	stw	r2,16(r5)
   228f0:	00800044 	movi	r2,1
   228f4:	28800515 	stw	r2,20(r5)
   228f8:	dfc01217 	ldw	ra,72(sp)
   228fc:	dc801117 	ldw	r18,68(sp)
   22900:	dc401017 	ldw	r17,64(sp)
   22904:	dc000f17 	ldw	r16,60(sp)
   22908:	dec01304 	addi	sp,sp,76
   2290c:	f800283a 	ret
   22910:	04801004 	movi	r18,64
   22914:	003ff006 	br	228d8 <__smakebuf_r+0x108>
   22918:	81000a17 	ldw	r4,40(r16)
   2291c:	00c000b4 	movhi	r3,2
   22920:	18cdfd04 	addi	r3,r3,14324
   22924:	20ffc01e 	bne	r4,r3,22828 <__smakebuf_r+0x58>
   22928:	8080030b 	ldhu	r2,12(r16)
   2292c:	00c10004 	movi	r3,1024
   22930:	80c01315 	stw	r3,76(r16)
   22934:	10c4b03a 	or	r2,r2,r3
   22938:	8080030d 	sth	r2,12(r16)
   2293c:	003fcb06 	br	2286c <__smakebuf_r+0x9c>
   22940:	8080030b 	ldhu	r2,12(r16)
   22944:	10c0800c 	andi	r3,r2,512
   22948:	18ffffcc 	andi	r3,r3,65535
   2294c:	18e0001c 	xori	r3,r3,32768
   22950:	18e00004 	addi	r3,r3,-32768
   22954:	183fd31e 	bne	r3,zero,228a4 <__smakebuf_r+0xd4>
   22958:	10800094 	ori	r2,r2,2
   2295c:	80c010c4 	addi	r3,r16,67
   22960:	8080030d 	sth	r2,12(r16)
   22964:	00800044 	movi	r2,1
   22968:	80c00015 	stw	r3,0(r16)
   2296c:	80c00415 	stw	r3,16(r16)
   22970:	80800515 	stw	r2,20(r16)
   22974:	003fcb06 	br	228a4 <__smakebuf_r+0xd4>

00022978 <malloc>:
   22978:	008000f4 	movhi	r2,3
   2297c:	1096b704 	addi	r2,r2,23260
   22980:	200b883a 	mov	r5,r4
   22984:	11000017 	ldw	r4,0(r2)
   22988:	00229a01 	jmpi	229a0 <_malloc_r>

0002298c <free>:
   2298c:	008000f4 	movhi	r2,3
   22990:	1096b704 	addi	r2,r2,23260
   22994:	200b883a 	mov	r5,r4
   22998:	11000017 	ldw	r4,0(r2)
   2299c:	0021d541 	jmpi	21d54 <_free_r>

000229a0 <_malloc_r>:
   229a0:	defff604 	addi	sp,sp,-40
   229a4:	dc800215 	stw	r18,8(sp)
   229a8:	dfc00915 	stw	ra,36(sp)
   229ac:	df000815 	stw	fp,32(sp)
   229b0:	ddc00715 	stw	r23,28(sp)
   229b4:	dd800615 	stw	r22,24(sp)
   229b8:	dd400515 	stw	r21,20(sp)
   229bc:	dd000415 	stw	r20,16(sp)
   229c0:	dcc00315 	stw	r19,12(sp)
   229c4:	dc400115 	stw	r17,4(sp)
   229c8:	dc000015 	stw	r16,0(sp)
   229cc:	288002c4 	addi	r2,r5,11
   229d0:	00c00584 	movi	r3,22
   229d4:	2025883a 	mov	r18,r4
   229d8:	18802b2e 	bgeu	r3,r2,22a88 <_malloc_r+0xe8>
   229dc:	047ffe04 	movi	r17,-8
   229e0:	1462703a 	and	r17,r2,r17
   229e4:	88002a16 	blt	r17,zero,22a90 <_malloc_r+0xf0>
   229e8:	89402936 	bltu	r17,r5,22a90 <_malloc_r+0xf0>
   229ec:	9009883a 	mov	r4,r18
   229f0:	0030bc40 	call	30bc4 <__malloc_lock>
   229f4:	00807dc4 	movi	r2,503
   229f8:	14402936 	bltu	r2,r17,22aa0 <_malloc_r+0x100>
   229fc:	8808d0fa 	srli	r4,r17,3
   22a00:	04c000f4 	movhi	r19,3
   22a04:	9cd11b04 	addi	r19,r19,17516
   22a08:	2105883a 	add	r2,r4,r4
   22a0c:	1085883a 	add	r2,r2,r2
   22a10:	1085883a 	add	r2,r2,r2
   22a14:	9885883a 	add	r2,r19,r2
   22a18:	14000317 	ldw	r16,12(r2)
   22a1c:	80815526 	beq	r16,r2,22f74 <_malloc_r+0x5d4>
   22a20:	81000117 	ldw	r4,4(r16)
   22a24:	00bfff04 	movi	r2,-4
   22a28:	80c00317 	ldw	r3,12(r16)
   22a2c:	2084703a 	and	r2,r4,r2
   22a30:	8085883a 	add	r2,r16,r2
   22a34:	11800117 	ldw	r6,4(r2)
   22a38:	81400217 	ldw	r5,8(r16)
   22a3c:	9009883a 	mov	r4,r18
   22a40:	31800054 	ori	r6,r6,1
   22a44:	11800115 	stw	r6,4(r2)
   22a48:	28c00315 	stw	r3,12(r5)
   22a4c:	19400215 	stw	r5,8(r3)
   22a50:	0030be40 	call	30be4 <__malloc_unlock>
   22a54:	80800204 	addi	r2,r16,8
   22a58:	dfc00917 	ldw	ra,36(sp)
   22a5c:	df000817 	ldw	fp,32(sp)
   22a60:	ddc00717 	ldw	r23,28(sp)
   22a64:	dd800617 	ldw	r22,24(sp)
   22a68:	dd400517 	ldw	r21,20(sp)
   22a6c:	dd000417 	ldw	r20,16(sp)
   22a70:	dcc00317 	ldw	r19,12(sp)
   22a74:	dc800217 	ldw	r18,8(sp)
   22a78:	dc400117 	ldw	r17,4(sp)
   22a7c:	dc000017 	ldw	r16,0(sp)
   22a80:	dec00a04 	addi	sp,sp,40
   22a84:	f800283a 	ret
   22a88:	04400404 	movi	r17,16
   22a8c:	897fd72e 	bgeu	r17,r5,229ec <_malloc_r+0x4c>
   22a90:	00800304 	movi	r2,12
   22a94:	90800015 	stw	r2,0(r18)
   22a98:	0005883a 	mov	r2,zero
   22a9c:	003fee06 	br	22a58 <_malloc_r+0xb8>
   22aa0:	8808d27a 	srli	r4,r17,9
   22aa4:	20007126 	beq	r4,zero,22c6c <_malloc_r+0x2cc>
   22aa8:	00800104 	movi	r2,4
   22aac:	1100eb36 	bltu	r2,r4,22e5c <_malloc_r+0x4bc>
   22ab0:	8808d1ba 	srli	r4,r17,6
   22ab4:	21000e04 	addi	r4,r4,56
   22ab8:	210b883a 	add	r5,r4,r4
   22abc:	294b883a 	add	r5,r5,r5
   22ac0:	294b883a 	add	r5,r5,r5
   22ac4:	04c000f4 	movhi	r19,3
   22ac8:	9cd11b04 	addi	r19,r19,17516
   22acc:	994b883a 	add	r5,r19,r5
   22ad0:	2c000317 	ldw	r16,12(r5)
   22ad4:	2c000e26 	beq	r5,r16,22b10 <_malloc_r+0x170>
   22ad8:	80c00117 	ldw	r3,4(r16)
   22adc:	01ffff04 	movi	r7,-4
   22ae0:	018003c4 	movi	r6,15
   22ae4:	19c6703a 	and	r3,r3,r7
   22ae8:	1c45c83a 	sub	r2,r3,r17
   22aec:	30800716 	blt	r6,r2,22b0c <_malloc_r+0x16c>
   22af0:	1000610e 	bge	r2,zero,22c78 <_malloc_r+0x2d8>
   22af4:	84000317 	ldw	r16,12(r16)
   22af8:	2c000526 	beq	r5,r16,22b10 <_malloc_r+0x170>
   22afc:	80c00117 	ldw	r3,4(r16)
   22b00:	19c6703a 	and	r3,r3,r7
   22b04:	1c45c83a 	sub	r2,r3,r17
   22b08:	30bff90e 	bge	r6,r2,22af0 <_malloc_r+0x150>
   22b0c:	213fffc4 	addi	r4,r4,-1
   22b10:	21000044 	addi	r4,r4,1
   22b14:	9c000417 	ldw	r16,16(r19)
   22b18:	00c000f4 	movhi	r3,3
   22b1c:	18d11b04 	addi	r3,r3,17516
   22b20:	1a400204 	addi	r9,r3,8
   22b24:	8240ff26 	beq	r16,r9,22f24 <_malloc_r+0x584>
   22b28:	81400117 	ldw	r5,4(r16)
   22b2c:	00bfff04 	movi	r2,-4
   22b30:	018003c4 	movi	r6,15
   22b34:	2884703a 	and	r2,r5,r2
   22b38:	144bc83a 	sub	r5,r2,r17
   22b3c:	3140ea16 	blt	r6,r5,22ee8 <_malloc_r+0x548>
   22b40:	1a400515 	stw	r9,20(r3)
   22b44:	1a400415 	stw	r9,16(r3)
   22b48:	2800570e 	bge	r5,zero,22ca8 <_malloc_r+0x308>
   22b4c:	01407fc4 	movi	r5,511
   22b50:	2880ca36 	bltu	r5,r2,22e7c <_malloc_r+0x4dc>
   22b54:	1004d0fa 	srli	r2,r2,3
   22b58:	02000044 	movi	r8,1
   22b5c:	19c00117 	ldw	r7,4(r3)
   22b60:	108b883a 	add	r5,r2,r2
   22b64:	294b883a 	add	r5,r5,r5
   22b68:	1005d0ba 	srai	r2,r2,2
   22b6c:	294b883a 	add	r5,r5,r5
   22b70:	28cb883a 	add	r5,r5,r3
   22b74:	29800217 	ldw	r6,8(r5)
   22b78:	4084983a 	sll	r2,r8,r2
   22b7c:	81400315 	stw	r5,12(r16)
   22b80:	81800215 	stw	r6,8(r16)
   22b84:	11c4b03a 	or	r2,r2,r7
   22b88:	18800115 	stw	r2,4(r3)
   22b8c:	2c000215 	stw	r16,8(r5)
   22b90:	34000315 	stw	r16,12(r6)
   22b94:	200bd0ba 	srai	r5,r4,2
   22b98:	00c00044 	movi	r3,1
   22b9c:	194a983a 	sll	r5,r3,r5
   22ba0:	11404936 	bltu	r2,r5,22cc8 <_malloc_r+0x328>
   22ba4:	1146703a 	and	r3,r2,r5
   22ba8:	18000a1e 	bne	r3,zero,22bd4 <_malloc_r+0x234>
   22bac:	00ffff04 	movi	r3,-4
   22bb0:	294b883a 	add	r5,r5,r5
   22bb4:	20c8703a 	and	r4,r4,r3
   22bb8:	1146703a 	and	r3,r2,r5
   22bbc:	21000104 	addi	r4,r4,4
   22bc0:	1800041e 	bne	r3,zero,22bd4 <_malloc_r+0x234>
   22bc4:	294b883a 	add	r5,r5,r5
   22bc8:	1146703a 	and	r3,r2,r5
   22bcc:	21000104 	addi	r4,r4,4
   22bd0:	183ffc26 	beq	r3,zero,22bc4 <_malloc_r+0x224>
   22bd4:	023fff04 	movi	r8,-4
   22bd8:	01c003c4 	movi	r7,15
   22bdc:	2105883a 	add	r2,r4,r4
   22be0:	1085883a 	add	r2,r2,r2
   22be4:	1085883a 	add	r2,r2,r2
   22be8:	9899883a 	add	r12,r19,r2
   22bec:	62800304 	addi	r10,r12,12
   22bf0:	2017883a 	mov	r11,r4
   22bf4:	54000017 	ldw	r16,0(r10)
   22bf8:	51bffd04 	addi	r6,r10,-12
   22bfc:	8180041e 	bne	r16,r6,22c10 <_malloc_r+0x270>
   22c00:	0000ca06 	br	22f2c <_malloc_r+0x58c>
   22c04:	10001c0e 	bge	r2,zero,22c78 <_malloc_r+0x2d8>
   22c08:	84000317 	ldw	r16,12(r16)
   22c0c:	8180c726 	beq	r16,r6,22f2c <_malloc_r+0x58c>
   22c10:	80c00117 	ldw	r3,4(r16)
   22c14:	1a06703a 	and	r3,r3,r8
   22c18:	1c45c83a 	sub	r2,r3,r17
   22c1c:	38bff90e 	bge	r7,r2,22c04 <_malloc_r+0x264>
   22c20:	81000317 	ldw	r4,12(r16)
   22c24:	81400217 	ldw	r5,8(r16)
   22c28:	8447883a 	add	r3,r16,r17
   22c2c:	8c400054 	ori	r17,r17,1
   22c30:	29000315 	stw	r4,12(r5)
   22c34:	21400215 	stw	r5,8(r4)
   22c38:	84400115 	stw	r17,4(r16)
   22c3c:	1889883a 	add	r4,r3,r2
   22c40:	11400054 	ori	r5,r2,1
   22c44:	98c00515 	stw	r3,20(r19)
   22c48:	98c00415 	stw	r3,16(r19)
   22c4c:	20800015 	stw	r2,0(r4)
   22c50:	1a400315 	stw	r9,12(r3)
   22c54:	1a400215 	stw	r9,8(r3)
   22c58:	19400115 	stw	r5,4(r3)
   22c5c:	9009883a 	mov	r4,r18
   22c60:	0030be40 	call	30be4 <__malloc_unlock>
   22c64:	80800204 	addi	r2,r16,8
   22c68:	003f7b06 	br	22a58 <_malloc_r+0xb8>
   22c6c:	8808d0fa 	srli	r4,r17,3
   22c70:	210b883a 	add	r5,r4,r4
   22c74:	003f9106 	br	22abc <_malloc_r+0x11c>
   22c78:	80c7883a 	add	r3,r16,r3
   22c7c:	19400117 	ldw	r5,4(r3)
   22c80:	80800317 	ldw	r2,12(r16)
   22c84:	81000217 	ldw	r4,8(r16)
   22c88:	29400054 	ori	r5,r5,1
   22c8c:	19400115 	stw	r5,4(r3)
   22c90:	20800315 	stw	r2,12(r4)
   22c94:	11000215 	stw	r4,8(r2)
   22c98:	9009883a 	mov	r4,r18
   22c9c:	0030be40 	call	30be4 <__malloc_unlock>
   22ca0:	80800204 	addi	r2,r16,8
   22ca4:	003f6c06 	br	22a58 <_malloc_r+0xb8>
   22ca8:	8085883a 	add	r2,r16,r2
   22cac:	10c00117 	ldw	r3,4(r2)
   22cb0:	9009883a 	mov	r4,r18
   22cb4:	18c00054 	ori	r3,r3,1
   22cb8:	10c00115 	stw	r3,4(r2)
   22cbc:	0030be40 	call	30be4 <__malloc_unlock>
   22cc0:	80800204 	addi	r2,r16,8
   22cc4:	003f6406 	br	22a58 <_malloc_r+0xb8>
   22cc8:	9c000217 	ldw	r16,8(r19)
   22ccc:	00bfff04 	movi	r2,-4
   22cd0:	85400117 	ldw	r21,4(r16)
   22cd4:	a8aa703a 	and	r21,r21,r2
   22cd8:	ac400336 	bltu	r21,r17,22ce8 <_malloc_r+0x348>
   22cdc:	ac45c83a 	sub	r2,r21,r17
   22ce0:	00c003c4 	movi	r3,15
   22ce4:	18805316 	blt	r3,r2,22e34 <_malloc_r+0x494>
   22ce8:	d5e6e217 	ldw	r23,-25720(gp)
   22cec:	d0e00217 	ldw	r3,-32760(gp)
   22cf0:	00bfffc4 	movi	r2,-1
   22cf4:	8579883a 	add	fp,r16,r21
   22cf8:	8def883a 	add	r23,r17,r23
   22cfc:	1880d226 	beq	r3,r2,23048 <_malloc_r+0x6a8>
   22d00:	bdc403c4 	addi	r23,r23,4111
   22d04:	00bc0004 	movi	r2,-4096
   22d08:	b8ae703a 	and	r23,r23,r2
   22d0c:	9009883a 	mov	r4,r18
   22d10:	b80b883a 	mov	r5,r23
   22d14:	00236b40 	call	236b4 <_sbrk_r>
   22d18:	1029883a 	mov	r20,r2
   22d1c:	00bfffc4 	movi	r2,-1
   22d20:	a080d126 	beq	r20,r2,23068 <_malloc_r+0x6c8>
   22d24:	a7009f36 	bltu	r20,fp,22fa4 <_malloc_r+0x604>
   22d28:	058000f4 	movhi	r22,3
   22d2c:	b59da204 	addi	r22,r22,30344
   22d30:	b0800017 	ldw	r2,0(r22)
   22d34:	b885883a 	add	r2,r23,r2
   22d38:	b0800015 	stw	r2,0(r22)
   22d3c:	e500cf26 	beq	fp,r20,2307c <_malloc_r+0x6dc>
   22d40:	d1200217 	ldw	r4,-32760(gp)
   22d44:	00ffffc4 	movi	r3,-1
   22d48:	20c0e026 	beq	r4,r3,230cc <_malloc_r+0x72c>
   22d4c:	a739c83a 	sub	fp,r20,fp
   22d50:	1705883a 	add	r2,r2,fp
   22d54:	b0800015 	stw	r2,0(r22)
   22d58:	a08001cc 	andi	r2,r20,7
   22d5c:	1000a526 	beq	r2,zero,22ff4 <_malloc_r+0x654>
   22d60:	a0a9c83a 	sub	r20,r20,r2
   22d64:	00c40204 	movi	r3,4104
   22d68:	a5000204 	addi	r20,r20,8
   22d6c:	1885c83a 	sub	r2,r3,r2
   22d70:	a5c7883a 	add	r3,r20,r23
   22d74:	18c3ffcc 	andi	r3,r3,4095
   22d78:	10efc83a 	sub	r23,r2,r3
   22d7c:	9009883a 	mov	r4,r18
   22d80:	b80b883a 	mov	r5,r23
   22d84:	00236b40 	call	236b4 <_sbrk_r>
   22d88:	00ffffc4 	movi	r3,-1
   22d8c:	10c0cc26 	beq	r2,r3,230c0 <_malloc_r+0x720>
   22d90:	1505c83a 	sub	r2,r2,r20
   22d94:	b887883a 	add	r3,r23,r2
   22d98:	18c00054 	ori	r3,r3,1
   22d9c:	b0800017 	ldw	r2,0(r22)
   22da0:	9d000215 	stw	r20,8(r19)
   22da4:	a0c00115 	stw	r3,4(r20)
   22da8:	b885883a 	add	r2,r23,r2
   22dac:	b0800015 	stw	r2,0(r22)
   22db0:	84c00e26 	beq	r16,r19,22dec <_malloc_r+0x44c>
   22db4:	00c003c4 	movi	r3,15
   22db8:	1d40902e 	bgeu	r3,r21,22ffc <_malloc_r+0x65c>
   22dbc:	ad7ffd04 	addi	r21,r21,-12
   22dc0:	013ffe04 	movi	r4,-8
   22dc4:	a908703a 	and	r4,r21,r4
   22dc8:	810b883a 	add	r5,r16,r4
   22dcc:	01800144 	movi	r6,5
   22dd0:	29800115 	stw	r6,4(r5)
   22dd4:	29800215 	stw	r6,8(r5)
   22dd8:	81400117 	ldw	r5,4(r16)
   22ddc:	2940004c 	andi	r5,r5,1
   22de0:	214ab03a 	or	r5,r4,r5
   22de4:	81400115 	stw	r5,4(r16)
   22de8:	1900ae36 	bltu	r3,r4,230a4 <_malloc_r+0x704>
   22dec:	d0e6e117 	ldw	r3,-25724(gp)
   22df0:	1880012e 	bgeu	r3,r2,22df8 <_malloc_r+0x458>
   22df4:	d0a6e115 	stw	r2,-25724(gp)
   22df8:	d0e6e017 	ldw	r3,-25728(gp)
   22dfc:	9c000217 	ldw	r16,8(r19)
   22e00:	1880012e 	bgeu	r3,r2,22e08 <_malloc_r+0x468>
   22e04:	d0a6e015 	stw	r2,-25728(gp)
   22e08:	80c00117 	ldw	r3,4(r16)
   22e0c:	00bfff04 	movi	r2,-4
   22e10:	1886703a 	and	r3,r3,r2
   22e14:	1c45c83a 	sub	r2,r3,r17
   22e18:	1c400236 	bltu	r3,r17,22e24 <_malloc_r+0x484>
   22e1c:	00c003c4 	movi	r3,15
   22e20:	18800416 	blt	r3,r2,22e34 <_malloc_r+0x494>
   22e24:	9009883a 	mov	r4,r18
   22e28:	0030be40 	call	30be4 <__malloc_unlock>
   22e2c:	0005883a 	mov	r2,zero
   22e30:	003f0906 	br	22a58 <_malloc_r+0xb8>
   22e34:	88c00054 	ori	r3,r17,1
   22e38:	10800054 	ori	r2,r2,1
   22e3c:	80c00115 	stw	r3,4(r16)
   22e40:	8463883a 	add	r17,r16,r17
   22e44:	88800115 	stw	r2,4(r17)
   22e48:	9009883a 	mov	r4,r18
   22e4c:	9c400215 	stw	r17,8(r19)
   22e50:	0030be40 	call	30be4 <__malloc_unlock>
   22e54:	80800204 	addi	r2,r16,8
   22e58:	003eff06 	br	22a58 <_malloc_r+0xb8>
   22e5c:	00800504 	movi	r2,20
   22e60:	1100492e 	bgeu	r2,r4,22f88 <_malloc_r+0x5e8>
   22e64:	00801504 	movi	r2,84
   22e68:	11005c36 	bltu	r2,r4,22fdc <_malloc_r+0x63c>
   22e6c:	8808d33a 	srli	r4,r17,12
   22e70:	21001b84 	addi	r4,r4,110
   22e74:	210b883a 	add	r5,r4,r4
   22e78:	003f1006 	br	22abc <_malloc_r+0x11c>
   22e7c:	1006d27a 	srli	r3,r2,9
   22e80:	01400104 	movi	r5,4
   22e84:	28c0432e 	bgeu	r5,r3,22f94 <_malloc_r+0x5f4>
   22e88:	01400504 	movi	r5,20
   22e8c:	28c07036 	bltu	r5,r3,23050 <_malloc_r+0x6b0>
   22e90:	194016c4 	addi	r5,r3,91
   22e94:	294d883a 	add	r6,r5,r5
   22e98:	318d883a 	add	r6,r6,r6
   22e9c:	318d883a 	add	r6,r6,r6
   22ea0:	998d883a 	add	r6,r19,r6
   22ea4:	30c00217 	ldw	r3,8(r6)
   22ea8:	01c000f4 	movhi	r7,3
   22eac:	39d11b04 	addi	r7,r7,17516
   22eb0:	19805726 	beq	r3,r6,23010 <_malloc_r+0x670>
   22eb4:	01ffff04 	movi	r7,-4
   22eb8:	19400117 	ldw	r5,4(r3)
   22ebc:	29ca703a 	and	r5,r5,r7
   22ec0:	1140022e 	bgeu	r2,r5,22ecc <_malloc_r+0x52c>
   22ec4:	18c00217 	ldw	r3,8(r3)
   22ec8:	30fffb1e 	bne	r6,r3,22eb8 <_malloc_r+0x518>
   22ecc:	19400317 	ldw	r5,12(r3)
   22ed0:	98800117 	ldw	r2,4(r19)
   22ed4:	81400315 	stw	r5,12(r16)
   22ed8:	80c00215 	stw	r3,8(r16)
   22edc:	2c000215 	stw	r16,8(r5)
   22ee0:	1c000315 	stw	r16,12(r3)
   22ee4:	003f2b06 	br	22b94 <_malloc_r+0x1f4>
   22ee8:	8445883a 	add	r2,r16,r17
   22eec:	8c400054 	ori	r17,r17,1
   22ef0:	18800515 	stw	r2,20(r3)
   22ef4:	18800415 	stw	r2,16(r3)
   22ef8:	29000054 	ori	r4,r5,1
   22efc:	1147883a 	add	r3,r2,r5
   22f00:	84400115 	stw	r17,4(r16)
   22f04:	11000115 	stw	r4,4(r2)
   22f08:	12400315 	stw	r9,12(r2)
   22f0c:	12400215 	stw	r9,8(r2)
   22f10:	19400015 	stw	r5,0(r3)
   22f14:	9009883a 	mov	r4,r18
   22f18:	0030be40 	call	30be4 <__malloc_unlock>
   22f1c:	80800204 	addi	r2,r16,8
   22f20:	003ecd06 	br	22a58 <_malloc_r+0xb8>
   22f24:	18800117 	ldw	r2,4(r3)
   22f28:	003f1a06 	br	22b94 <_malloc_r+0x1f4>
   22f2c:	5ac00044 	addi	r11,r11,1
   22f30:	588000cc 	andi	r2,r11,3
   22f34:	52800204 	addi	r10,r10,8
   22f38:	103f2e1e 	bne	r2,zero,22bf4 <_malloc_r+0x254>
   22f3c:	20c000cc 	andi	r3,r4,3
   22f40:	60bffe04 	addi	r2,r12,-8
   22f44:	18006f26 	beq	r3,zero,23104 <_malloc_r+0x764>
   22f48:	63000017 	ldw	r12,0(r12)
   22f4c:	213fffc4 	addi	r4,r4,-1
   22f50:	60bffa26 	beq	r12,r2,22f3c <_malloc_r+0x59c>
   22f54:	98800117 	ldw	r2,4(r19)
   22f58:	294b883a 	add	r5,r5,r5
   22f5c:	117f5a36 	bltu	r2,r5,22cc8 <_malloc_r+0x328>
   22f60:	283f5926 	beq	r5,zero,22cc8 <_malloc_r+0x328>
   22f64:	1146703a 	and	r3,r2,r5
   22f68:	18001626 	beq	r3,zero,22fc4 <_malloc_r+0x624>
   22f6c:	5809883a 	mov	r4,r11
   22f70:	003f1a06 	br	22bdc <_malloc_r+0x23c>
   22f74:	80800204 	addi	r2,r16,8
   22f78:	84000517 	ldw	r16,20(r16)
   22f7c:	143ea81e 	bne	r2,r16,22a20 <_malloc_r+0x80>
   22f80:	21000084 	addi	r4,r4,2
   22f84:	003ee306 	br	22b14 <_malloc_r+0x174>
   22f88:	210016c4 	addi	r4,r4,91
   22f8c:	210b883a 	add	r5,r4,r4
   22f90:	003eca06 	br	22abc <_malloc_r+0x11c>
   22f94:	100ad1ba 	srli	r5,r2,6
   22f98:	29400e04 	addi	r5,r5,56
   22f9c:	294d883a 	add	r6,r5,r5
   22fa0:	003fbd06 	br	22e98 <_malloc_r+0x4f8>
   22fa4:	84ff6026 	beq	r16,r19,22d28 <_malloc_r+0x388>
   22fa8:	008000f4 	movhi	r2,3
   22fac:	10911b04 	addi	r2,r2,17516
   22fb0:	14000217 	ldw	r16,8(r2)
   22fb4:	00bfff04 	movi	r2,-4
   22fb8:	80c00117 	ldw	r3,4(r16)
   22fbc:	1886703a 	and	r3,r3,r2
   22fc0:	003f9406 	br	22e14 <_malloc_r+0x474>
   22fc4:	294b883a 	add	r5,r5,r5
   22fc8:	1146703a 	and	r3,r2,r5
   22fcc:	5ac00104 	addi	r11,r11,4
   22fd0:	183ffc26 	beq	r3,zero,22fc4 <_malloc_r+0x624>
   22fd4:	5809883a 	mov	r4,r11
   22fd8:	003f0006 	br	22bdc <_malloc_r+0x23c>
   22fdc:	00805504 	movi	r2,340
   22fe0:	11001336 	bltu	r2,r4,23030 <_malloc_r+0x690>
   22fe4:	8808d3fa 	srli	r4,r17,15
   22fe8:	21001dc4 	addi	r4,r4,119
   22fec:	210b883a 	add	r5,r4,r4
   22ff0:	003eb206 	br	22abc <_malloc_r+0x11c>
   22ff4:	00840004 	movi	r2,4096
   22ff8:	003f5d06 	br	22d70 <_malloc_r+0x3d0>
   22ffc:	00800044 	movi	r2,1
   23000:	a0800115 	stw	r2,4(r20)
   23004:	a021883a 	mov	r16,r20
   23008:	0007883a 	mov	r3,zero
   2300c:	003f8106 	br	22e14 <_malloc_r+0x474>
   23010:	280bd0ba 	srai	r5,r5,2
   23014:	01800044 	movi	r6,1
   23018:	38800117 	ldw	r2,4(r7)
   2301c:	314c983a 	sll	r6,r6,r5
   23020:	180b883a 	mov	r5,r3
   23024:	3084b03a 	or	r2,r6,r2
   23028:	38800115 	stw	r2,4(r7)
   2302c:	003fa906 	br	22ed4 <_malloc_r+0x534>
   23030:	00815504 	movi	r2,1364
   23034:	11001836 	bltu	r2,r4,23098 <_malloc_r+0x6f8>
   23038:	8808d4ba 	srli	r4,r17,18
   2303c:	21001f04 	addi	r4,r4,124
   23040:	210b883a 	add	r5,r4,r4
   23044:	003e9d06 	br	22abc <_malloc_r+0x11c>
   23048:	bdc00404 	addi	r23,r23,16
   2304c:	003f2f06 	br	22d0c <_malloc_r+0x36c>
   23050:	01401504 	movi	r5,84
   23054:	28c01f36 	bltu	r5,r3,230d4 <_malloc_r+0x734>
   23058:	100ad33a 	srli	r5,r2,12
   2305c:	29401b84 	addi	r5,r5,110
   23060:	294d883a 	add	r6,r5,r5
   23064:	003f8c06 	br	22e98 <_malloc_r+0x4f8>
   23068:	9c000217 	ldw	r16,8(r19)
   2306c:	00bfff04 	movi	r2,-4
   23070:	80c00117 	ldw	r3,4(r16)
   23074:	1886703a 	and	r3,r3,r2
   23078:	003f6606 	br	22e14 <_malloc_r+0x474>
   2307c:	e0c3ffcc 	andi	r3,fp,4095
   23080:	183f2f1e 	bne	r3,zero,22d40 <_malloc_r+0x3a0>
   23084:	98c00217 	ldw	r3,8(r19)
   23088:	bd49883a 	add	r4,r23,r21
   2308c:	21000054 	ori	r4,r4,1
   23090:	19000115 	stw	r4,4(r3)
   23094:	003f5506 	br	22dec <_malloc_r+0x44c>
   23098:	01403f04 	movi	r5,252
   2309c:	01001f84 	movi	r4,126
   230a0:	003e8606 	br	22abc <_malloc_r+0x11c>
   230a4:	9009883a 	mov	r4,r18
   230a8:	81400204 	addi	r5,r16,8
   230ac:	0021d540 	call	21d54 <_free_r>
   230b0:	008000f4 	movhi	r2,3
   230b4:	109da204 	addi	r2,r2,30344
   230b8:	10800017 	ldw	r2,0(r2)
   230bc:	003f4b06 	br	22dec <_malloc_r+0x44c>
   230c0:	00c00044 	movi	r3,1
   230c4:	002f883a 	mov	r23,zero
   230c8:	003f3406 	br	22d9c <_malloc_r+0x3fc>
   230cc:	d5200215 	stw	r20,-32760(gp)
   230d0:	003f2106 	br	22d58 <_malloc_r+0x3b8>
   230d4:	01405504 	movi	r5,340
   230d8:	28c00436 	bltu	r5,r3,230ec <_malloc_r+0x74c>
   230dc:	100ad3fa 	srli	r5,r2,15
   230e0:	29401dc4 	addi	r5,r5,119
   230e4:	294d883a 	add	r6,r5,r5
   230e8:	003f6b06 	br	22e98 <_malloc_r+0x4f8>
   230ec:	01415504 	movi	r5,1364
   230f0:	28c00936 	bltu	r5,r3,23118 <_malloc_r+0x778>
   230f4:	100ad4ba 	srli	r5,r2,18
   230f8:	29401f04 	addi	r5,r5,124
   230fc:	294d883a 	add	r6,r5,r5
   23100:	003f6506 	br	22e98 <_malloc_r+0x4f8>
   23104:	98800117 	ldw	r2,4(r19)
   23108:	0146303a 	nor	r3,zero,r5
   2310c:	1884703a 	and	r2,r3,r2
   23110:	98800115 	stw	r2,4(r19)
   23114:	003f9006 	br	22f58 <_malloc_r+0x5b8>
   23118:	01803f04 	movi	r6,252
   2311c:	01401f84 	movi	r5,126
   23120:	003f5d06 	br	22e98 <_malloc_r+0x4f8>

00023124 <memcpy>:
   23124:	defffb04 	addi	sp,sp,-20
   23128:	dc000015 	stw	r16,0(sp)
   2312c:	dfc00415 	stw	ra,16(sp)
   23130:	dcc00315 	stw	r19,12(sp)
   23134:	dc800215 	stw	r18,8(sp)
   23138:	dc400115 	stw	r17,4(sp)
   2313c:	00c003c4 	movi	r3,15
   23140:	2021883a 	mov	r16,r4
   23144:	3005883a 	mov	r2,r6
   23148:	1980032e 	bgeu	r3,r6,23158 <memcpy+0x34>
   2314c:	2906b03a 	or	r3,r5,r4
   23150:	18c000cc 	andi	r3,r3,3
   23154:	18001026 	beq	r3,zero,23198 <memcpy+0x74>
   23158:	8007883a 	mov	r3,r16
   2315c:	288f883a 	add	r7,r5,r2
   23160:	10000526 	beq	r2,zero,23178 <memcpy+0x54>
   23164:	29800003 	ldbu	r6,0(r5)
   23168:	18c00044 	addi	r3,r3,1
   2316c:	29400044 	addi	r5,r5,1
   23170:	19bfffc5 	stb	r6,-1(r3)
   23174:	29fffb1e 	bne	r5,r7,23164 <memcpy+0x40>
   23178:	8005883a 	mov	r2,r16
   2317c:	dfc00417 	ldw	ra,16(sp)
   23180:	dcc00317 	ldw	r19,12(sp)
   23184:	dc800217 	ldw	r18,8(sp)
   23188:	dc400117 	ldw	r17,4(sp)
   2318c:	dc000017 	ldw	r16,0(sp)
   23190:	dec00504 	addi	sp,sp,20
   23194:	f800283a 	ret
   23198:	32bffc04 	addi	r10,r6,-16
   2319c:	5014d13a 	srli	r10,r10,4
   231a0:	20800404 	addi	r2,r4,16
   231a4:	2007883a 	mov	r3,r4
   231a8:	5008913a 	slli	r4,r10,4
   231ac:	280f883a 	mov	r7,r5
   231b0:	1105883a 	add	r2,r2,r4
   231b4:	3a000017 	ldw	r8,0(r7)
   231b8:	18c00404 	addi	r3,r3,16
   231bc:	39c00404 	addi	r7,r7,16
   231c0:	1a3ffc15 	stw	r8,-16(r3)
   231c4:	3a3ffd17 	ldw	r8,-12(r7)
   231c8:	1a3ffd15 	stw	r8,-12(r3)
   231cc:	3a3ffe17 	ldw	r8,-8(r7)
   231d0:	1a3ffe15 	stw	r8,-8(r3)
   231d4:	3a3fff17 	ldw	r8,-4(r7)
   231d8:	1a3fff15 	stw	r8,-4(r3)
   231dc:	18bff51e 	bne	r3,r2,231b4 <memcpy+0x90>
   231e0:	52800044 	addi	r10,r10,1
   231e4:	5014913a 	slli	r10,r10,4
   231e8:	308003cc 	andi	r2,r6,15
   231ec:	010000c4 	movi	r4,3
   231f0:	8287883a 	add	r3,r16,r10
   231f4:	2a95883a 	add	r10,r5,r10
   231f8:	2080182e 	bgeu	r4,r2,2325c <memcpy+0x138>
   231fc:	147fff04 	addi	r17,r2,-4
   23200:	8808d0ba 	srli	r4,r17,2
   23204:	1a400104 	addi	r9,r3,4
   23208:	180d883a 	mov	r6,r3
   2320c:	2105883a 	add	r2,r4,r4
   23210:	1085883a 	add	r2,r2,r2
   23214:	4893883a 	add	r9,r9,r2
   23218:	500f883a 	mov	r7,r10
   2321c:	3a000017 	ldw	r8,0(r7)
   23220:	31800104 	addi	r6,r6,4
   23224:	39c00104 	addi	r7,r7,4
   23228:	323fff15 	stw	r8,-4(r6)
   2322c:	327ffb1e 	bne	r6,r9,2321c <memcpy+0xf8>
   23230:	20800044 	addi	r2,r4,1
   23234:	1085883a 	add	r2,r2,r2
   23238:	1085883a 	add	r2,r2,r2
   2323c:	017fff04 	movi	r5,-4
   23240:	18a5883a 	add	r18,r3,r2
   23244:	50a7883a 	add	r19,r10,r2
   23248:	00211880 	call	21188 <__mulsi3>
   2324c:	1445883a 	add	r2,r2,r17
   23250:	980b883a 	mov	r5,r19
   23254:	9007883a 	mov	r3,r18
   23258:	003fc006 	br	2315c <memcpy+0x38>
   2325c:	500b883a 	mov	r5,r10
   23260:	003fbe06 	br	2315c <memcpy+0x38>

00023264 <memset>:
   23264:	00c000c4 	movi	r3,3
   23268:	2005883a 	mov	r2,r4
   2326c:	29403fcc 	andi	r5,r5,255
   23270:	19802d2e 	bgeu	r3,r6,23328 <memset+0xc4>
   23274:	20c6703a 	and	r3,r4,r3
   23278:	18002e1e 	bne	r3,zero,23334 <memset+0xd0>
   2327c:	2806923a 	slli	r3,r5,8
   23280:	010003c4 	movi	r4,15
   23284:	3011883a 	mov	r8,r6
   23288:	1946b03a 	or	r3,r3,r5
   2328c:	180e943a 	slli	r7,r3,16
   23290:	38ceb03a 	or	r7,r7,r3
   23294:	1007883a 	mov	r3,r2
   23298:	21800f2e 	bgeu	r4,r6,232d8 <memset+0x74>
   2329c:	19c00015 	stw	r7,0(r3)
   232a0:	19c00115 	stw	r7,4(r3)
   232a4:	19c00215 	stw	r7,8(r3)
   232a8:	19c00315 	stw	r7,12(r3)
   232ac:	423ffc04 	addi	r8,r8,-16
   232b0:	18c00404 	addi	r3,r3,16
   232b4:	223ff936 	bltu	r4,r8,2329c <memset+0x38>
   232b8:	30fffc04 	addi	r3,r6,-16
   232bc:	1806d13a 	srli	r3,r3,4
   232c0:	318003cc 	andi	r6,r6,15
   232c4:	010000c4 	movi	r4,3
   232c8:	18c00044 	addi	r3,r3,1
   232cc:	1806913a 	slli	r3,r3,4
   232d0:	10c7883a 	add	r3,r2,r3
   232d4:	21800e2e 	bgeu	r4,r6,23310 <memset+0xac>
   232d8:	1813883a 	mov	r9,r3
   232dc:	3011883a 	mov	r8,r6
   232e0:	010000c4 	movi	r4,3
   232e4:	49c00015 	stw	r7,0(r9)
   232e8:	423fff04 	addi	r8,r8,-4
   232ec:	4a400104 	addi	r9,r9,4
   232f0:	223ffc36 	bltu	r4,r8,232e4 <memset+0x80>
   232f4:	313fff04 	addi	r4,r6,-4
   232f8:	2008d0ba 	srli	r4,r4,2
   232fc:	318000cc 	andi	r6,r6,3
   23300:	21000044 	addi	r4,r4,1
   23304:	2109883a 	add	r4,r4,r4
   23308:	2109883a 	add	r4,r4,r4
   2330c:	1907883a 	add	r3,r3,r4
   23310:	30000a26 	beq	r6,zero,2333c <memset+0xd8>
   23314:	198d883a 	add	r6,r3,r6
   23318:	19400005 	stb	r5,0(r3)
   2331c:	18c00044 	addi	r3,r3,1
   23320:	19bffd1e 	bne	r3,r6,23318 <memset+0xb4>
   23324:	f800283a 	ret
   23328:	2007883a 	mov	r3,r4
   2332c:	303ff91e 	bne	r6,zero,23314 <memset+0xb0>
   23330:	00000206 	br	2333c <memset+0xd8>
   23334:	2007883a 	mov	r3,r4
   23338:	003ff606 	br	23314 <memset+0xb0>
   2333c:	f800283a 	ret

00023340 <_open_r>:
   23340:	defffd04 	addi	sp,sp,-12
   23344:	dc400115 	stw	r17,4(sp)
   23348:	dc000015 	stw	r16,0(sp)
   2334c:	2023883a 	mov	r17,r4
   23350:	040000f4 	movhi	r16,3
   23354:	841d9504 	addi	r16,r16,30292
   23358:	2809883a 	mov	r4,r5
   2335c:	300b883a 	mov	r5,r6
   23360:	380d883a 	mov	r6,r7
   23364:	dfc00215 	stw	ra,8(sp)
   23368:	80000015 	stw	zero,0(r16)
   2336c:	0030d440 	call	30d44 <open>
   23370:	00ffffc4 	movi	r3,-1
   23374:	10c00526 	beq	r2,r3,2338c <_open_r+0x4c>
   23378:	dfc00217 	ldw	ra,8(sp)
   2337c:	dc400117 	ldw	r17,4(sp)
   23380:	dc000017 	ldw	r16,0(sp)
   23384:	dec00304 	addi	sp,sp,12
   23388:	f800283a 	ret
   2338c:	80c00017 	ldw	r3,0(r16)
   23390:	183ff926 	beq	r3,zero,23378 <_open_r+0x38>
   23394:	88c00015 	stw	r3,0(r17)
   23398:	dfc00217 	ldw	ra,8(sp)
   2339c:	dc400117 	ldw	r17,4(sp)
   233a0:	dc000017 	ldw	r16,0(sp)
   233a4:	dec00304 	addi	sp,sp,12
   233a8:	f800283a 	ret

000233ac <_printf_r>:
   233ac:	defffd04 	addi	sp,sp,-12
   233b0:	dfc00015 	stw	ra,0(sp)
   233b4:	d9800115 	stw	r6,4(sp)
   233b8:	d9c00215 	stw	r7,8(sp)
   233bc:	280d883a 	mov	r6,r5
   233c0:	21400217 	ldw	r5,8(r4)
   233c4:	d9c00104 	addi	r7,sp,4
   233c8:	00239180 	call	23918 <___vfprintf_internal_r>
   233cc:	dfc00017 	ldw	ra,0(sp)
   233d0:	dec00304 	addi	sp,sp,12
   233d4:	f800283a 	ret

000233d8 <printf>:
   233d8:	defffc04 	addi	sp,sp,-16
   233dc:	dfc00015 	stw	ra,0(sp)
   233e0:	d9400115 	stw	r5,4(sp)
   233e4:	d9800215 	stw	r6,8(sp)
   233e8:	d9c00315 	stw	r7,12(sp)
   233ec:	008000f4 	movhi	r2,3
   233f0:	1096b704 	addi	r2,r2,23260
   233f4:	10800017 	ldw	r2,0(r2)
   233f8:	200b883a 	mov	r5,r4
   233fc:	d9800104 	addi	r6,sp,4
   23400:	11000217 	ldw	r4,8(r2)
   23404:	00257940 	call	25794 <__vfprintf_internal>
   23408:	dfc00017 	ldw	ra,0(sp)
   2340c:	dec00404 	addi	sp,sp,16
   23410:	f800283a 	ret

00023414 <_puts_r>:
   23414:	defff604 	addi	sp,sp,-40
   23418:	dc400815 	stw	r17,32(sp)
   2341c:	2023883a 	mov	r17,r4
   23420:	2809883a 	mov	r4,r5
   23424:	dc000715 	stw	r16,28(sp)
   23428:	dfc00915 	stw	ra,36(sp)
   2342c:	2821883a 	mov	r16,r5
   23430:	00238580 	call	23858 <strlen>
   23434:	10c00044 	addi	r3,r2,1
   23438:	d8800115 	stw	r2,4(sp)
   2343c:	89400217 	ldw	r5,8(r17)
   23440:	008000f4 	movhi	r2,3
   23444:	108e9104 	addi	r2,r2,14916
   23448:	d8800215 	stw	r2,8(sp)
   2344c:	00800044 	movi	r2,1
   23450:	d8800315 	stw	r2,12(sp)
   23454:	8809883a 	mov	r4,r17
   23458:	00800084 	movi	r2,2
   2345c:	d9800404 	addi	r6,sp,16
   23460:	dc000015 	stw	r16,0(sp)
   23464:	d8c00615 	stw	r3,24(sp)
   23468:	dec00415 	stw	sp,16(sp)
   2346c:	d8800515 	stw	r2,20(sp)
   23470:	0028a740 	call	28a74 <__sfvwrite_r>
   23474:	1000061e 	bne	r2,zero,23490 <_puts_r+0x7c>
   23478:	00800284 	movi	r2,10
   2347c:	dfc00917 	ldw	ra,36(sp)
   23480:	dc400817 	ldw	r17,32(sp)
   23484:	dc000717 	ldw	r16,28(sp)
   23488:	dec00a04 	addi	sp,sp,40
   2348c:	f800283a 	ret
   23490:	00bfffc4 	movi	r2,-1
   23494:	003ff906 	br	2347c <_puts_r+0x68>

00023498 <puts>:
   23498:	008000f4 	movhi	r2,3
   2349c:	1096b704 	addi	r2,r2,23260
   234a0:	200b883a 	mov	r5,r4
   234a4:	11000017 	ldw	r4,0(r2)
   234a8:	00234141 	jmpi	23414 <_puts_r>

000234ac <lflush>:
   234ac:	20c0030b 	ldhu	r3,12(r4)
   234b0:	00800244 	movi	r2,9
   234b4:	18c0024c 	andi	r3,r3,9
   234b8:	18800226 	beq	r3,r2,234c4 <lflush+0x18>
   234bc:	0005883a 	mov	r2,zero
   234c0:	f800283a 	ret
   234c4:	00214e81 	jmpi	214e8 <fflush>

000234c8 <__srefill_r>:
   234c8:	defffd04 	addi	sp,sp,-12
   234cc:	dc400115 	stw	r17,4(sp)
   234d0:	dc000015 	stw	r16,0(sp)
   234d4:	dfc00215 	stw	ra,8(sp)
   234d8:	2023883a 	mov	r17,r4
   234dc:	2821883a 	mov	r16,r5
   234e0:	20000226 	beq	r4,zero,234ec <__srefill_r+0x24>
   234e4:	20800e17 	ldw	r2,56(r4)
   234e8:	10004426 	beq	r2,zero,235fc <__srefill_r+0x134>
   234ec:	8080030b 	ldhu	r2,12(r16)
   234f0:	80000115 	stw	zero,4(r16)
   234f4:	10c0080c 	andi	r3,r2,32
   234f8:	18ffffcc 	andi	r3,r3,65535
   234fc:	18e0001c 	xori	r3,r3,32768
   23500:	18e00004 	addi	r3,r3,-32768
   23504:	1800371e 	bne	r3,zero,235e4 <__srefill_r+0x11c>
   23508:	10c0010c 	andi	r3,r2,4
   2350c:	18ffffcc 	andi	r3,r3,65535
   23510:	18e0001c 	xori	r3,r3,32768
   23514:	18e00004 	addi	r3,r3,-32768
   23518:	18002226 	beq	r3,zero,235a4 <__srefill_r+0xdc>
   2351c:	81400c17 	ldw	r5,48(r16)
   23520:	28000826 	beq	r5,zero,23544 <__srefill_r+0x7c>
   23524:	80801004 	addi	r2,r16,64
   23528:	28800226 	beq	r5,r2,23534 <__srefill_r+0x6c>
   2352c:	8809883a 	mov	r4,r17
   23530:	0021d540 	call	21d54 <_free_r>
   23534:	80800f17 	ldw	r2,60(r16)
   23538:	80000c15 	stw	zero,48(r16)
   2353c:	80800115 	stw	r2,4(r16)
   23540:	1000401e 	bne	r2,zero,23644 <__srefill_r+0x17c>
   23544:	80800417 	ldw	r2,16(r16)
   23548:	10005026 	beq	r2,zero,2368c <__srefill_r+0x1c4>
   2354c:	8080030b 	ldhu	r2,12(r16)
   23550:	108000cc 	andi	r2,r2,3
   23554:	10002b1e 	bne	r2,zero,23604 <__srefill_r+0x13c>
   23558:	81800417 	ldw	r6,16(r16)
   2355c:	80800817 	ldw	r2,32(r16)
   23560:	81400717 	ldw	r5,28(r16)
   23564:	81c00517 	ldw	r7,20(r16)
   23568:	8809883a 	mov	r4,r17
   2356c:	81800015 	stw	r6,0(r16)
   23570:	103ee83a 	callr	r2
   23574:	8100030b 	ldhu	r4,12(r16)
   23578:	00f7ffc4 	movi	r3,-8193
   2357c:	80800115 	stw	r2,4(r16)
   23580:	20c6703a 	and	r3,r4,r3
   23584:	80c0030d 	sth	r3,12(r16)
   23588:	0080130e 	bge	zero,r2,235d8 <__srefill_r+0x110>
   2358c:	0005883a 	mov	r2,zero
   23590:	dfc00217 	ldw	ra,8(sp)
   23594:	dc400117 	ldw	r17,4(sp)
   23598:	dc000017 	ldw	r16,0(sp)
   2359c:	dec00304 	addi	sp,sp,12
   235a0:	f800283a 	ret
   235a4:	10c0040c 	andi	r3,r2,16
   235a8:	18ffffcc 	andi	r3,r3,65535
   235ac:	18e0001c 	xori	r3,r3,32768
   235b0:	18e00004 	addi	r3,r3,-32768
   235b4:	18003926 	beq	r3,zero,2369c <__srefill_r+0x1d4>
   235b8:	10c0020c 	andi	r3,r2,8
   235bc:	18ffffcc 	andi	r3,r3,65535
   235c0:	18e0001c 	xori	r3,r3,32768
   235c4:	18e00004 	addi	r3,r3,-32768
   235c8:	1800261e 	bne	r3,zero,23664 <__srefill_r+0x19c>
   235cc:	10800114 	ori	r2,r2,4
   235d0:	8080030d 	sth	r2,12(r16)
   235d4:	003fdb06 	br	23544 <__srefill_r+0x7c>
   235d8:	1000111e 	bne	r2,zero,23620 <__srefill_r+0x158>
   235dc:	18c00814 	ori	r3,r3,32
   235e0:	80c0030d 	sth	r3,12(r16)
   235e4:	00bfffc4 	movi	r2,-1
   235e8:	dfc00217 	ldw	ra,8(sp)
   235ec:	dc400117 	ldw	r17,4(sp)
   235f0:	dc000017 	ldw	r16,0(sp)
   235f4:	dec00304 	addi	sp,sp,12
   235f8:	f800283a 	ret
   235fc:	00215bc0 	call	215bc <__sinit>
   23600:	003fba06 	br	234ec <__srefill_r+0x24>
   23604:	008000f4 	movhi	r2,3
   23608:	1096b604 	addi	r2,r2,23256
   2360c:	11000017 	ldw	r4,0(r2)
   23610:	014000b4 	movhi	r5,2
   23614:	294d2b04 	addi	r5,r5,13484
   23618:	00225800 	call	22580 <_fwalk>
   2361c:	003fce06 	br	23558 <__srefill_r+0x90>
   23620:	18c01014 	ori	r3,r3,64
   23624:	00bfffc4 	movi	r2,-1
   23628:	80000115 	stw	zero,4(r16)
   2362c:	80c0030d 	sth	r3,12(r16)
   23630:	dfc00217 	ldw	ra,8(sp)
   23634:	dc400117 	ldw	r17,4(sp)
   23638:	dc000017 	ldw	r16,0(sp)
   2363c:	dec00304 	addi	sp,sp,12
   23640:	f800283a 	ret
   23644:	80c00e17 	ldw	r3,56(r16)
   23648:	0005883a 	mov	r2,zero
   2364c:	80c00015 	stw	r3,0(r16)
   23650:	dfc00217 	ldw	ra,8(sp)
   23654:	dc400117 	ldw	r17,4(sp)
   23658:	dc000017 	ldw	r16,0(sp)
   2365c:	dec00304 	addi	sp,sp,12
   23660:	f800283a 	ret
   23664:	8809883a 	mov	r4,r17
   23668:	800b883a 	mov	r5,r16
   2366c:	00213000 	call	21300 <_fflush_r>
   23670:	103fdc1e 	bne	r2,zero,235e4 <__srefill_r+0x11c>
   23674:	8080030b 	ldhu	r2,12(r16)
   23678:	00fffdc4 	movi	r3,-9
   2367c:	80000215 	stw	zero,8(r16)
   23680:	1884703a 	and	r2,r3,r2
   23684:	80000615 	stw	zero,24(r16)
   23688:	003fd006 	br	235cc <__srefill_r+0x104>
   2368c:	8809883a 	mov	r4,r17
   23690:	800b883a 	mov	r5,r16
   23694:	00227d00 	call	227d0 <__smakebuf_r>
   23698:	003fac06 	br	2354c <__srefill_r+0x84>
   2369c:	00c00244 	movi	r3,9
   236a0:	10801014 	ori	r2,r2,64
   236a4:	88c00015 	stw	r3,0(r17)
   236a8:	8080030d 	sth	r2,12(r16)
   236ac:	00bfffc4 	movi	r2,-1
   236b0:	003fb706 	br	23590 <__srefill_r+0xc8>

000236b4 <_sbrk_r>:
   236b4:	defffd04 	addi	sp,sp,-12
   236b8:	dc400115 	stw	r17,4(sp)
   236bc:	dc000015 	stw	r16,0(sp)
   236c0:	2023883a 	mov	r17,r4
   236c4:	040000f4 	movhi	r16,3
   236c8:	841d9504 	addi	r16,r16,30292
   236cc:	2809883a 	mov	r4,r5
   236d0:	dfc00215 	stw	ra,8(sp)
   236d4:	80000015 	stw	zero,0(r16)
   236d8:	00310600 	call	31060 <sbrk>
   236dc:	00ffffc4 	movi	r3,-1
   236e0:	10c00526 	beq	r2,r3,236f8 <_sbrk_r+0x44>
   236e4:	dfc00217 	ldw	ra,8(sp)
   236e8:	dc400117 	ldw	r17,4(sp)
   236ec:	dc000017 	ldw	r16,0(sp)
   236f0:	dec00304 	addi	sp,sp,12
   236f4:	f800283a 	ret
   236f8:	80c00017 	ldw	r3,0(r16)
   236fc:	183ff926 	beq	r3,zero,236e4 <_sbrk_r+0x30>
   23700:	88c00015 	stw	r3,0(r17)
   23704:	dfc00217 	ldw	ra,8(sp)
   23708:	dc400117 	ldw	r17,4(sp)
   2370c:	dc000017 	ldw	r16,0(sp)
   23710:	dec00304 	addi	sp,sp,12
   23714:	f800283a 	ret

00023718 <__sread>:
   23718:	defffe04 	addi	sp,sp,-8
   2371c:	dc000015 	stw	r16,0(sp)
   23720:	2821883a 	mov	r16,r5
   23724:	2940038f 	ldh	r5,14(r5)
   23728:	dfc00115 	stw	ra,4(sp)
   2372c:	002a4f80 	call	2a4f8 <_read_r>
   23730:	10000716 	blt	r2,zero,23750 <__sread+0x38>
   23734:	80c01417 	ldw	r3,80(r16)
   23738:	1887883a 	add	r3,r3,r2
   2373c:	80c01415 	stw	r3,80(r16)
   23740:	dfc00117 	ldw	ra,4(sp)
   23744:	dc000017 	ldw	r16,0(sp)
   23748:	dec00204 	addi	sp,sp,8
   2374c:	f800283a 	ret
   23750:	80c0030b 	ldhu	r3,12(r16)
   23754:	18fbffcc 	andi	r3,r3,61439
   23758:	80c0030d 	sth	r3,12(r16)
   2375c:	dfc00117 	ldw	ra,4(sp)
   23760:	dc000017 	ldw	r16,0(sp)
   23764:	dec00204 	addi	sp,sp,8
   23768:	f800283a 	ret

0002376c <__swrite>:
   2376c:	2880030b 	ldhu	r2,12(r5)
   23770:	defffb04 	addi	sp,sp,-20
   23774:	dcc00315 	stw	r19,12(sp)
   23778:	10c0400c 	andi	r3,r2,256
   2377c:	18ffffcc 	andi	r3,r3,65535
   23780:	18e0001c 	xori	r3,r3,32768
   23784:	dc800215 	stw	r18,8(sp)
   23788:	dc400115 	stw	r17,4(sp)
   2378c:	dc000015 	stw	r16,0(sp)
   23790:	dfc00415 	stw	ra,16(sp)
   23794:	18e00004 	addi	r3,r3,-32768
   23798:	2821883a 	mov	r16,r5
   2379c:	2027883a 	mov	r19,r4
   237a0:	3025883a 	mov	r18,r6
   237a4:	3823883a 	mov	r17,r7
   237a8:	18000526 	beq	r3,zero,237c0 <__swrite+0x54>
   237ac:	2940038f 	ldh	r5,14(r5)
   237b0:	000d883a 	mov	r6,zero
   237b4:	01c00084 	movi	r7,2
   237b8:	00290d00 	call	290d0 <_lseek_r>
   237bc:	8080030b 	ldhu	r2,12(r16)
   237c0:	8140038f 	ldh	r5,14(r16)
   237c4:	10bbffcc 	andi	r2,r2,61439
   237c8:	9809883a 	mov	r4,r19
   237cc:	900d883a 	mov	r6,r18
   237d0:	880f883a 	mov	r7,r17
   237d4:	8080030d 	sth	r2,12(r16)
   237d8:	dfc00417 	ldw	ra,16(sp)
   237dc:	dcc00317 	ldw	r19,12(sp)
   237e0:	dc800217 	ldw	r18,8(sp)
   237e4:	dc400117 	ldw	r17,4(sp)
   237e8:	dc000017 	ldw	r16,0(sp)
   237ec:	dec00504 	addi	sp,sp,20
   237f0:	0026f401 	jmpi	26f40 <_write_r>

000237f4 <__sseek>:
   237f4:	defffe04 	addi	sp,sp,-8
   237f8:	dc000015 	stw	r16,0(sp)
   237fc:	2821883a 	mov	r16,r5
   23800:	2940038f 	ldh	r5,14(r5)
   23804:	dfc00115 	stw	ra,4(sp)
   23808:	00290d00 	call	290d0 <_lseek_r>
   2380c:	00ffffc4 	movi	r3,-1
   23810:	10c00826 	beq	r2,r3,23834 <__sseek+0x40>
   23814:	80c0030b 	ldhu	r3,12(r16)
   23818:	80801415 	stw	r2,80(r16)
   2381c:	18c40014 	ori	r3,r3,4096
   23820:	80c0030d 	sth	r3,12(r16)
   23824:	dfc00117 	ldw	ra,4(sp)
   23828:	dc000017 	ldw	r16,0(sp)
   2382c:	dec00204 	addi	sp,sp,8
   23830:	f800283a 	ret
   23834:	80c0030b 	ldhu	r3,12(r16)
   23838:	18fbffcc 	andi	r3,r3,61439
   2383c:	80c0030d 	sth	r3,12(r16)
   23840:	dfc00117 	ldw	ra,4(sp)
   23844:	dc000017 	ldw	r16,0(sp)
   23848:	dec00204 	addi	sp,sp,8
   2384c:	f800283a 	ret

00023850 <__sclose>:
   23850:	2940038f 	ldh	r5,14(r5)
   23854:	00271201 	jmpi	27120 <_close_r>

00023858 <strlen>:
   23858:	208000cc 	andi	r2,r4,3
   2385c:	10001f1e 	bne	r2,zero,238dc <strlen+0x84>
   23860:	20800017 	ldw	r2,0(r4)
   23864:	01ffbff4 	movhi	r7,65279
   23868:	39ffbfc4 	addi	r7,r7,-257
   2386c:	01a02074 	movhi	r6,32897
   23870:	31a02004 	addi	r6,r6,-32640
   23874:	11c7883a 	add	r3,r2,r7
   23878:	0084303a 	nor	r2,zero,r2
   2387c:	1886703a 	and	r3,r3,r2
   23880:	1986703a 	and	r3,r3,r6
   23884:	2005883a 	mov	r2,r4
   23888:	1800101e 	bne	r3,zero,238cc <strlen+0x74>
   2388c:	10800104 	addi	r2,r2,4
   23890:	10c00017 	ldw	r3,0(r2)
   23894:	19cb883a 	add	r5,r3,r7
   23898:	00c6303a 	nor	r3,zero,r3
   2389c:	28c6703a 	and	r3,r5,r3
   238a0:	1986703a 	and	r3,r3,r6
   238a4:	1800091e 	bne	r3,zero,238cc <strlen+0x74>
   238a8:	10800104 	addi	r2,r2,4
   238ac:	10c00017 	ldw	r3,0(r2)
   238b0:	19cb883a 	add	r5,r3,r7
   238b4:	00c6303a 	nor	r3,zero,r3
   238b8:	28c6703a 	and	r3,r5,r3
   238bc:	1986703a 	and	r3,r3,r6
   238c0:	183ff226 	beq	r3,zero,2388c <strlen+0x34>
   238c4:	00000106 	br	238cc <strlen+0x74>
   238c8:	10800044 	addi	r2,r2,1
   238cc:	10c00007 	ldb	r3,0(r2)
   238d0:	183ffd1e 	bne	r3,zero,238c8 <strlen+0x70>
   238d4:	1105c83a 	sub	r2,r2,r4
   238d8:	f800283a 	ret
   238dc:	2005883a 	mov	r2,r4
   238e0:	003ffa06 	br	238cc <strlen+0x74>

000238e4 <__sprint_r>:
   238e4:	30800217 	ldw	r2,8(r6)
   238e8:	defffe04 	addi	sp,sp,-8
   238ec:	dc000015 	stw	r16,0(sp)
   238f0:	dfc00115 	stw	ra,4(sp)
   238f4:	3021883a 	mov	r16,r6
   238f8:	10000226 	beq	r2,zero,23904 <__sprint_r+0x20>
   238fc:	0028a740 	call	28a74 <__sfvwrite_r>
   23900:	80000215 	stw	zero,8(r16)
   23904:	80000115 	stw	zero,4(r16)
   23908:	dfc00117 	ldw	ra,4(sp)
   2390c:	dc000017 	ldw	r16,0(sp)
   23910:	dec00204 	addi	sp,sp,8
   23914:	f800283a 	ret

00023918 <___vfprintf_internal_r>:
   23918:	defeb904 	addi	sp,sp,-1308
   2391c:	dc013d15 	stw	r16,1268(sp)
   23920:	d9013015 	stw	r4,1216(sp)
   23924:	dfc14615 	stw	ra,1304(sp)
   23928:	df014515 	stw	fp,1300(sp)
   2392c:	ddc14415 	stw	r23,1296(sp)
   23930:	dd814315 	stw	r22,1292(sp)
   23934:	dd414215 	stw	r21,1288(sp)
   23938:	dd014115 	stw	r20,1284(sp)
   2393c:	dcc14015 	stw	r19,1280(sp)
   23940:	dc813f15 	stw	r18,1276(sp)
   23944:	dc413e15 	stw	r17,1272(sp)
   23948:	d9412915 	stw	r5,1188(sp)
   2394c:	3021883a 	mov	r16,r6
   23950:	d9c12d15 	stw	r7,1204(sp)
   23954:	002909c0 	call	2909c <_localeconv_r>
   23958:	10800017 	ldw	r2,0(r2)
   2395c:	d9013017 	ldw	r4,1216(sp)
   23960:	d8013315 	stw	zero,1228(sp)
   23964:	d8813715 	stw	r2,1244(sp)
   23968:	d8013415 	stw	zero,1232(sp)
   2396c:	20000226 	beq	r4,zero,23978 <___vfprintf_internal_r+0x60>
   23970:	20800e17 	ldw	r2,56(r4)
   23974:	10014b26 	beq	r2,zero,23ea4 <___vfprintf_internal_r+0x58c>
   23978:	d8c12917 	ldw	r3,1188(sp)
   2397c:	1880030b 	ldhu	r2,12(r3)
   23980:	10c0020c 	andi	r3,r2,8
   23984:	18ffffcc 	andi	r3,r3,65535
   23988:	18e0001c 	xori	r3,r3,32768
   2398c:	18e00004 	addi	r3,r3,-32768
   23990:	1800ed26 	beq	r3,zero,23d48 <___vfprintf_internal_r+0x430>
   23994:	d9012917 	ldw	r4,1188(sp)
   23998:	20c00417 	ldw	r3,16(r4)
   2399c:	1800ea26 	beq	r3,zero,23d48 <___vfprintf_internal_r+0x430>
   239a0:	1100068c 	andi	r4,r2,26
   239a4:	00c00284 	movi	r3,10
   239a8:	20c0f026 	beq	r4,r3,23d6c <___vfprintf_internal_r+0x454>
   239ac:	d9010dc4 	addi	r4,sp,1079
   239b0:	d8810e04 	addi	r2,sp,1080
   239b4:	dc413017 	ldw	r17,1216(sp)
   239b8:	d8c00404 	addi	r3,sp,16
   239bc:	d9012615 	stw	r4,1176(sp)
   239c0:	1109c83a 	sub	r4,r2,r4
   239c4:	d8812715 	stw	r2,1180(sp)
   239c8:	d8c11b15 	stw	r3,1132(sp)
   239cc:	d8011d15 	stw	zero,1140(sp)
   239d0:	d8011c15 	stw	zero,1136(sp)
   239d4:	802b883a 	mov	r21,r16
   239d8:	d8013215 	stw	zero,1224(sp)
   239dc:	d8013615 	stw	zero,1240(sp)
   239e0:	d8013515 	stw	zero,1236(sp)
   239e4:	d8012c15 	stw	zero,1200(sp)
   239e8:	1813883a 	mov	r9,r3
   239ec:	d9013915 	stw	r4,1252(sp)
   239f0:	a8800007 	ldb	r2,0(r21)
   239f4:	1002f326 	beq	r2,zero,245c4 <___vfprintf_internal_r+0xcac>
   239f8:	00c00944 	movi	r3,37
   239fc:	a825883a 	mov	r18,r21
   23a00:	10c0021e 	bne	r2,r3,23a0c <___vfprintf_internal_r+0xf4>
   23a04:	00001406 	br	23a58 <___vfprintf_internal_r+0x140>
   23a08:	10c00326 	beq	r2,r3,23a18 <___vfprintf_internal_r+0x100>
   23a0c:	94800044 	addi	r18,r18,1
   23a10:	90800007 	ldb	r2,0(r18)
   23a14:	103ffc1e 	bne	r2,zero,23a08 <___vfprintf_internal_r+0xf0>
   23a18:	9561c83a 	sub	r16,r18,r21
   23a1c:	80000e26 	beq	r16,zero,23a58 <___vfprintf_internal_r+0x140>
   23a20:	da011d17 	ldw	r8,1140(sp)
   23a24:	d8c11c17 	ldw	r3,1136(sp)
   23a28:	4d400015 	stw	r21,0(r9)
   23a2c:	4c000115 	stw	r16,4(r9)
   23a30:	4411883a 	add	r8,r8,r16
   23a34:	18c00044 	addi	r3,r3,1
   23a38:	da011d15 	stw	r8,1140(sp)
   23a3c:	d8c11c15 	stw	r3,1136(sp)
   23a40:	008001c4 	movi	r2,7
   23a44:	10c11016 	blt	r2,r3,23e88 <___vfprintf_internal_r+0x570>
   23a48:	4a400204 	addi	r9,r9,8
   23a4c:	d8812c17 	ldw	r2,1200(sp)
   23a50:	1405883a 	add	r2,r2,r16
   23a54:	d8812c15 	stw	r2,1200(sp)
   23a58:	90800007 	ldb	r2,0(r18)
   23a5c:	1000ee26 	beq	r2,zero,23e18 <___vfprintf_internal_r+0x500>
   23a60:	95400044 	addi	r21,r18,1
   23a64:	94800047 	ldb	r18,1(r18)
   23a68:	073fffc4 	movi	fp,-1
   23a6c:	e007883a 	mov	r3,fp
   23a70:	d8012585 	stb	zero,1174(sp)
   23a74:	d8012e15 	stw	zero,1208(sp)
   23a78:	0021883a 	mov	r16,zero
   23a7c:	05001604 	movi	r20,88
   23a80:	04c00244 	movi	r19,9
   23a84:	4839883a 	mov	fp,r9
   23a88:	ad400044 	addi	r21,r21,1
   23a8c:	90bff804 	addi	r2,r18,-32
   23a90:	a080462e 	bgeu	r20,r2,23bac <___vfprintf_internal_r+0x294>
   23a94:	e013883a 	mov	r9,fp
   23a98:	9000df26 	beq	r18,zero,23e18 <___vfprintf_internal_r+0x500>
   23a9c:	00c00044 	movi	r3,1
   23aa0:	d8c12815 	stw	r3,1184(sp)
   23aa4:	dc810405 	stb	r18,1040(sp)
   23aa8:	d8012585 	stb	zero,1174(sp)
   23aac:	d8c12b15 	stw	r3,1196(sp)
   23ab0:	dcc10404 	addi	r19,sp,1040
   23ab4:	d8013115 	stw	zero,1220(sp)
   23ab8:	80c0008c 	andi	r3,r16,2
   23abc:	d8c12a15 	stw	r3,1192(sp)
   23ac0:	18000326 	beq	r3,zero,23ad0 <___vfprintf_internal_r+0x1b8>
   23ac4:	d8c12817 	ldw	r3,1184(sp)
   23ac8:	18c00084 	addi	r3,r3,2
   23acc:	d8c12815 	stw	r3,1184(sp)
   23ad0:	80c0210c 	andi	r3,r16,132
   23ad4:	d8c12f15 	stw	r3,1212(sp)
   23ad8:	1802251e 	bne	r3,zero,24370 <___vfprintf_internal_r+0xa58>
   23adc:	d9012e17 	ldw	r4,1208(sp)
   23ae0:	d8c12817 	ldw	r3,1184(sp)
   23ae4:	20edc83a 	sub	r22,r4,r3
   23ae8:	0582210e 	bge	zero,r22,24370 <___vfprintf_internal_r+0xa58>
   23aec:	02800404 	movi	r10,16
   23af0:	da011d17 	ldw	r8,1140(sp)
   23af4:	d8c11c17 	ldw	r3,1136(sp)
   23af8:	05c000f4 	movhi	r23,3
   23afc:	bdcea284 	addi	r23,r23,14986
   23b00:	5580200e 	bge	r10,r22,23b84 <___vfprintf_internal_r+0x26c>
   23b04:	dc813815 	stw	r18,1248(sp)
   23b08:	5039883a 	mov	fp,r10
   23b0c:	b825883a 	mov	r18,r23
   23b10:	050001c4 	movi	r20,7
   23b14:	b02f883a 	mov	r23,r22
   23b18:	802d883a 	mov	r22,r16
   23b1c:	dc012917 	ldw	r16,1188(sp)
   23b20:	00000306 	br	23b30 <___vfprintf_internal_r+0x218>
   23b24:	bdfffc04 	addi	r23,r23,-16
   23b28:	4a400204 	addi	r9,r9,8
   23b2c:	e5c0110e 	bge	fp,r23,23b74 <___vfprintf_internal_r+0x25c>
   23b30:	4c800015 	stw	r18,0(r9)
   23b34:	4f000115 	stw	fp,4(r9)
   23b38:	42000404 	addi	r8,r8,16
   23b3c:	18c00044 	addi	r3,r3,1
   23b40:	da011d15 	stw	r8,1140(sp)
   23b44:	d8c11c15 	stw	r3,1136(sp)
   23b48:	a0fff60e 	bge	r20,r3,23b24 <___vfprintf_internal_r+0x20c>
   23b4c:	8809883a 	mov	r4,r17
   23b50:	800b883a 	mov	r5,r16
   23b54:	d9811b04 	addi	r6,sp,1132
   23b58:	00238e40 	call	238e4 <__sprint_r>
   23b5c:	1000b41e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   23b60:	bdfffc04 	addi	r23,r23,-16
   23b64:	da011d17 	ldw	r8,1140(sp)
   23b68:	d8c11c17 	ldw	r3,1136(sp)
   23b6c:	da400404 	addi	r9,sp,16
   23b70:	e5ffef16 	blt	fp,r23,23b30 <___vfprintf_internal_r+0x218>
   23b74:	b021883a 	mov	r16,r22
   23b78:	b82d883a 	mov	r22,r23
   23b7c:	902f883a 	mov	r23,r18
   23b80:	dc813817 	ldw	r18,1248(sp)
   23b84:	4dc00015 	stw	r23,0(r9)
   23b88:	4d800115 	stw	r22,4(r9)
   23b8c:	4591883a 	add	r8,r8,r22
   23b90:	18c00044 	addi	r3,r3,1
   23b94:	da011d15 	stw	r8,1140(sp)
   23b98:	d8c11c15 	stw	r3,1136(sp)
   23b9c:	008001c4 	movi	r2,7
   23ba0:	10c3fe16 	blt	r2,r3,24b9c <___vfprintf_internal_r+0x1284>
   23ba4:	4a400204 	addi	r9,r9,8
   23ba8:	0001f306 	br	24378 <___vfprintf_internal_r+0xa60>
   23bac:	1085883a 	add	r2,r2,r2
   23bb0:	1085883a 	add	r2,r2,r2
   23bb4:	010000b4 	movhi	r4,2
   23bb8:	210ef204 	addi	r4,r4,15304
   23bbc:	1105883a 	add	r2,r2,r4
   23bc0:	10800017 	ldw	r2,0(r2)
   23bc4:	1000683a 	jmp	r2
   23bc8:	000242a4 	muli	zero,zero,2314
   23bcc:	00023a94 	movui	zero,2282
   23bd0:	00023a94 	movui	zero,2282
   23bd4:	000242bc 	xorhi	zero,zero,2314
   23bd8:	00023a94 	movui	zero,2282
   23bdc:	00023a94 	movui	zero,2282
   23be0:	00023a94 	movui	zero,2282
   23be4:	00023a94 	movui	zero,2282
   23be8:	00023a94 	movui	zero,2282
   23bec:	00023a94 	movui	zero,2282
   23bf0:	00024174 	movhi	zero,2309
   23bf4:	00024308 	cmpgei	zero,zero,2316
   23bf8:	00023a94 	movui	zero,2282
   23bfc:	00023d3c 	xorhi	zero,zero,2292
   23c00:	000240dc 	xori	zero,zero,2307
   23c04:	00023a94 	movui	zero,2282
   23c08:	000242c8 	cmpgei	zero,zero,2315
   23c0c:	000242d4 	movui	zero,2315
   23c10:	000242d4 	movui	zero,2315
   23c14:	000242d4 	movui	zero,2315
   23c18:	000242d4 	movui	zero,2315
   23c1c:	000242d4 	movui	zero,2315
   23c20:	000242d4 	movui	zero,2315
   23c24:	000242d4 	movui	zero,2315
   23c28:	000242d4 	movui	zero,2315
   23c2c:	000242d4 	movui	zero,2315
   23c30:	00023a94 	movui	zero,2282
   23c34:	00023a94 	movui	zero,2282
   23c38:	00023a94 	movui	zero,2282
   23c3c:	00023a94 	movui	zero,2282
   23c40:	00023a94 	movui	zero,2282
   23c44:	00023a94 	movui	zero,2282
   23c48:	00023a94 	movui	zero,2282
   23c4c:	00023a94 	movui	zero,2282
   23c50:	00023a94 	movui	zero,2282
   23c54:	00023a94 	movui	zero,2282
   23c58:	00023eac 	andhi	zero,zero,2298
   23c5c:	00023f6c 	andhi	zero,zero,2301
   23c60:	00023a94 	movui	zero,2282
   23c64:	00023f6c 	andhi	zero,zero,2301
   23c68:	00023a94 	movui	zero,2282
   23c6c:	00023a94 	movui	zero,2282
   23c70:	00023a94 	movui	zero,2282
   23c74:	00023a94 	movui	zero,2282
   23c78:	00024000 	call	2400 <__alt_mem_mem1-0x1dc00>
   23c7c:	00023a94 	movui	zero,2282
   23c80:	00023a94 	movui	zero,2282
   23c84:	0002400c 	andi	zero,zero,2304
   23c88:	00023a94 	movui	zero,2282
   23c8c:	00023a94 	movui	zero,2282
   23c90:	00023a94 	movui	zero,2282
   23c94:	00023a94 	movui	zero,2282
   23c98:	00023a94 	movui	zero,2282
   23c9c:	00024044 	movi	zero,2305
   23ca0:	00023a94 	movui	zero,2282
   23ca4:	00023a94 	movui	zero,2282
   23ca8:	00024080 	call	2408 <__alt_mem_mem1-0x1dbf8>
   23cac:	00023a94 	movui	zero,2282
   23cb0:	00023a94 	movui	zero,2282
   23cb4:	00023a94 	movui	zero,2282
   23cb8:	00023a94 	movui	zero,2282
   23cbc:	00023a94 	movui	zero,2282
   23cc0:	00023a94 	movui	zero,2282
   23cc4:	00023a94 	movui	zero,2282
   23cc8:	00023a94 	movui	zero,2282
   23ccc:	00023a94 	movui	zero,2282
   23cd0:	00023a94 	movui	zero,2282
   23cd4:	00024318 	cmpnei	zero,zero,2316
   23cd8:	0002434c 	andi	zero,zero,2317
   23cdc:	00023f6c 	andhi	zero,zero,2301
   23ce0:	00023f6c 	andhi	zero,zero,2301
   23ce4:	00023f6c 	andhi	zero,zero,2301
   23ce8:	00024298 	cmpnei	zero,zero,2314
   23cec:	0002434c 	andi	zero,zero,2317
   23cf0:	00023a94 	movui	zero,2282
   23cf4:	00023a94 	movui	zero,2282
   23cf8:	00024124 	muli	zero,zero,2308
   23cfc:	00023a94 	movui	zero,2282
   23d00:	0002413c 	xorhi	zero,zero,2308
   23d04:	00024358 	cmpnei	zero,zero,2317
   23d08:	0002419c 	xori	zero,zero,2310
   23d0c:	000241ec 	andhi	zero,zero,2311
   23d10:	00023a94 	movui	zero,2282
   23d14:	000241f8 	rdprs	zero,zero,2311
   23d18:	00023a94 	movui	zero,2282
   23d1c:	00024364 	muli	zero,zero,2317
   23d20:	00023a94 	movui	zero,2282
   23d24:	00023a94 	movui	zero,2282
   23d28:	0002425c 	xori	zero,zero,2313
   23d2c:	d9012e17 	ldw	r4,1208(sp)
   23d30:	d8812d15 	stw	r2,1204(sp)
   23d34:	0109c83a 	sub	r4,zero,r4
   23d38:	d9012e15 	stw	r4,1208(sp)
   23d3c:	84000114 	ori	r16,r16,4
   23d40:	ac800007 	ldb	r18,0(r21)
   23d44:	003f5006 	br	23a88 <___vfprintf_internal_r+0x170>
   23d48:	d9013017 	ldw	r4,1216(sp)
   23d4c:	d9412917 	ldw	r5,1188(sp)
   23d50:	0026fac0 	call	26fac <__swsetup_r>
   23d54:	10003d1e 	bne	r2,zero,23e4c <___vfprintf_internal_r+0x534>
   23d58:	d8c12917 	ldw	r3,1188(sp)
   23d5c:	1880030b 	ldhu	r2,12(r3)
   23d60:	00c00284 	movi	r3,10
   23d64:	1100068c 	andi	r4,r2,26
   23d68:	20ff101e 	bne	r4,r3,239ac <___vfprintf_internal_r+0x94>
   23d6c:	d9012917 	ldw	r4,1188(sp)
   23d70:	20c0038b 	ldhu	r3,14(r4)
   23d74:	193fffcc 	andi	r4,r3,65535
   23d78:	2120001c 	xori	r4,r4,32768
   23d7c:	21200004 	addi	r4,r4,-32768
   23d80:	203f0a16 	blt	r4,zero,239ac <___vfprintf_internal_r+0x94>
   23d84:	d9012917 	ldw	r4,1188(sp)
   23d88:	d9c12d17 	ldw	r7,1204(sp)
   23d8c:	10bfff4c 	andi	r2,r2,65533
   23d90:	22800717 	ldw	r10,28(r4)
   23d94:	22400917 	ldw	r9,36(r4)
   23d98:	d9013017 	ldw	r4,1216(sp)
   23d9c:	02010004 	movi	r8,1024
   23da0:	d881070d 	sth	r2,1052(sp)
   23da4:	d9410404 	addi	r5,sp,1040
   23da8:	d8800404 	addi	r2,sp,16
   23dac:	800d883a 	mov	r6,r16
   23db0:	d8c1078d 	sth	r3,1054(sp)
   23db4:	da810b15 	stw	r10,1068(sp)
   23db8:	da410d15 	stw	r9,1076(sp)
   23dbc:	d8810415 	stw	r2,1040(sp)
   23dc0:	d8810815 	stw	r2,1056(sp)
   23dc4:	da010615 	stw	r8,1048(sp)
   23dc8:	da010915 	stw	r8,1060(sp)
   23dcc:	d8010a15 	stw	zero,1064(sp)
   23dd0:	00239180 	call	23918 <___vfprintf_internal_r>
   23dd4:	d8812c15 	stw	r2,1200(sp)
   23dd8:	10000416 	blt	r2,zero,23dec <___vfprintf_internal_r+0x4d4>
   23ddc:	d9013017 	ldw	r4,1216(sp)
   23de0:	d9410404 	addi	r5,sp,1040
   23de4:	00213000 	call	21300 <_fflush_r>
   23de8:	1006501e 	bne	r2,zero,2572c <___vfprintf_internal_r+0x1e14>
   23dec:	d881070b 	ldhu	r2,1052(sp)
   23df0:	1080100c 	andi	r2,r2,64
   23df4:	10bfffcc 	andi	r2,r2,65535
   23df8:	10a0001c 	xori	r2,r2,32768
   23dfc:	10a00004 	addi	r2,r2,-32768
   23e00:	10001426 	beq	r2,zero,23e54 <___vfprintf_internal_r+0x53c>
   23e04:	d8c12917 	ldw	r3,1188(sp)
   23e08:	1880030b 	ldhu	r2,12(r3)
   23e0c:	10801014 	ori	r2,r2,64
   23e10:	1880030d 	sth	r2,12(r3)
   23e14:	00000f06 	br	23e54 <___vfprintf_internal_r+0x53c>
   23e18:	d8811d17 	ldw	r2,1140(sp)
   23e1c:	10000426 	beq	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   23e20:	d9013017 	ldw	r4,1216(sp)
   23e24:	d9412917 	ldw	r5,1188(sp)
   23e28:	d9811b04 	addi	r6,sp,1132
   23e2c:	00238e40 	call	238e4 <__sprint_r>
   23e30:	d8c12917 	ldw	r3,1188(sp)
   23e34:	1880030b 	ldhu	r2,12(r3)
   23e38:	1080100c 	andi	r2,r2,64
   23e3c:	10bfffcc 	andi	r2,r2,65535
   23e40:	10a0001c 	xori	r2,r2,32768
   23e44:	10a00004 	addi	r2,r2,-32768
   23e48:	10000226 	beq	r2,zero,23e54 <___vfprintf_internal_r+0x53c>
   23e4c:	00bfffc4 	movi	r2,-1
   23e50:	d8812c15 	stw	r2,1200(sp)
   23e54:	d8812c17 	ldw	r2,1200(sp)
   23e58:	dfc14617 	ldw	ra,1304(sp)
   23e5c:	df014517 	ldw	fp,1300(sp)
   23e60:	ddc14417 	ldw	r23,1296(sp)
   23e64:	dd814317 	ldw	r22,1292(sp)
   23e68:	dd414217 	ldw	r21,1288(sp)
   23e6c:	dd014117 	ldw	r20,1284(sp)
   23e70:	dcc14017 	ldw	r19,1280(sp)
   23e74:	dc813f17 	ldw	r18,1276(sp)
   23e78:	dc413e17 	ldw	r17,1272(sp)
   23e7c:	dc013d17 	ldw	r16,1268(sp)
   23e80:	dec14704 	addi	sp,sp,1308
   23e84:	f800283a 	ret
   23e88:	d9412917 	ldw	r5,1188(sp)
   23e8c:	8809883a 	mov	r4,r17
   23e90:	d9811b04 	addi	r6,sp,1132
   23e94:	00238e40 	call	238e4 <__sprint_r>
   23e98:	103fe51e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   23e9c:	da400404 	addi	r9,sp,16
   23ea0:	003eea06 	br	23a4c <___vfprintf_internal_r+0x134>
   23ea4:	00215bc0 	call	215bc <__sinit>
   23ea8:	003eb306 	br	23978 <___vfprintf_internal_r+0x60>
   23eac:	e013883a 	mov	r9,fp
   23eb0:	84000414 	ori	r16,r16,16
   23eb4:	1839883a 	mov	fp,r3
   23eb8:	8080080c 	andi	r2,r16,32
   23ebc:	10034426 	beq	r2,zero,24bd0 <___vfprintf_internal_r+0x12b8>
   23ec0:	d8c12d17 	ldw	r3,1204(sp)
   23ec4:	18800117 	ldw	r2,4(r3)
   23ec8:	1dc00017 	ldw	r23,0(r3)
   23ecc:	18c00204 	addi	r3,r3,8
   23ed0:	d8c12d15 	stw	r3,1204(sp)
   23ed4:	102d883a 	mov	r22,r2
   23ed8:	1003020e 	bge	r2,zero,24ae4 <___vfprintf_internal_r+0x11cc>
   23edc:	05efc83a 	sub	r23,zero,r23
   23ee0:	b804c03a 	cmpne	r2,r23,zero
   23ee4:	05adc83a 	sub	r22,zero,r22
   23ee8:	b0adc83a 	sub	r22,r22,r2
   23eec:	00800b44 	movi	r2,45
   23ef0:	d8812585 	stb	r2,1174(sp)
   23ef4:	00c00044 	movi	r3,1
   23ef8:	bd84b03a 	or	r2,r23,r22
   23efc:	e0000216 	blt	fp,zero,23f08 <___vfprintf_internal_r+0x5f0>
   23f00:	013fdfc4 	movi	r4,-129
   23f04:	8120703a 	and	r16,r16,r4
   23f08:	1001cc1e 	bne	r2,zero,2463c <___vfprintf_internal_r+0xd24>
   23f0c:	e001cb1e 	bne	fp,zero,2463c <___vfprintf_internal_r+0xd24>
   23f10:	18c03fcc 	andi	r3,r3,255
   23f14:	1802ca1e 	bne	r3,zero,24a40 <___vfprintf_internal_r+0x1128>
   23f18:	8080004c 	andi	r2,r16,1
   23f1c:	1002c826 	beq	r2,zero,24a40 <___vfprintf_internal_r+0x1128>
   23f20:	d8c13917 	ldw	r3,1252(sp)
   23f24:	00800c04 	movi	r2,48
   23f28:	d8810dc5 	stb	r2,1079(sp)
   23f2c:	d8c12b15 	stw	r3,1196(sp)
   23f30:	dcc10dc4 	addi	r19,sp,1079
   23f34:	d8812b17 	ldw	r2,1196(sp)
   23f38:	d8812815 	stw	r2,1184(sp)
   23f3c:	1700010e 	bge	r2,fp,23f44 <___vfprintf_internal_r+0x62c>
   23f40:	df012815 	stw	fp,1184(sp)
   23f44:	d8812583 	ldbu	r2,1174(sp)
   23f48:	df013115 	stw	fp,1220(sp)
   23f4c:	10803fcc 	andi	r2,r2,255
   23f50:	1080201c 	xori	r2,r2,128
   23f54:	10bfe004 	addi	r2,r2,-128
   23f58:	103ed726 	beq	r2,zero,23ab8 <___vfprintf_internal_r+0x1a0>
   23f5c:	d8c12817 	ldw	r3,1184(sp)
   23f60:	18c00044 	addi	r3,r3,1
   23f64:	d8c12815 	stw	r3,1184(sp)
   23f68:	003ed306 	br	23ab8 <___vfprintf_internal_r+0x1a0>
   23f6c:	8080020c 	andi	r2,r16,8
   23f70:	e013883a 	mov	r9,fp
   23f74:	1839883a 	mov	fp,r3
   23f78:	1003a626 	beq	r2,zero,24e14 <___vfprintf_internal_r+0x14fc>
   23f7c:	d9012d17 	ldw	r4,1204(sp)
   23f80:	25800017 	ldw	r22,0(r4)
   23f84:	25000117 	ldw	r20,4(r4)
   23f88:	21000204 	addi	r4,r4,8
   23f8c:	d9012d15 	stw	r4,1204(sp)
   23f90:	dd813315 	stw	r22,1228(sp)
   23f94:	dd013415 	stw	r20,1232(sp)
   23f98:	b009883a 	mov	r4,r22
   23f9c:	a00b883a 	mov	r5,r20
   23fa0:	da413c15 	stw	r9,1264(sp)
   23fa4:	002ab600 	call	2ab60 <__isinfd>
   23fa8:	da413c17 	ldw	r9,1264(sp)
   23fac:	b009883a 	mov	r4,r22
   23fb0:	a00b883a 	mov	r5,r20
   23fb4:	10041d26 	beq	r2,zero,2502c <___vfprintf_internal_r+0x1714>
   23fb8:	000d883a 	mov	r6,zero
   23fbc:	000f883a 	mov	r7,zero
   23fc0:	002f8ec0 	call	2f8ec <__ltdf2>
   23fc4:	da413c17 	ldw	r9,1264(sp)
   23fc8:	1004da16 	blt	r2,zero,25334 <___vfprintf_internal_r+0x1a1c>
   23fcc:	d8812583 	ldbu	r2,1174(sp)
   23fd0:	00c011c4 	movi	r3,71
   23fd4:	1c83d116 	blt	r3,r18,24f1c <___vfprintf_internal_r+0x1604>
   23fd8:	04c000f4 	movhi	r19,3
   23fdc:	9cce9204 	addi	r19,r19,14920
   23fe0:	00c000c4 	movi	r3,3
   23fe4:	d8c12815 	stw	r3,1184(sp)
   23fe8:	00ffdfc4 	movi	r3,-129
   23fec:	80e0703a 	and	r16,r16,r3
   23ff0:	d8c12817 	ldw	r3,1184(sp)
   23ff4:	d8013115 	stw	zero,1220(sp)
   23ff8:	d8c12b15 	stw	r3,1196(sp)
   23ffc:	003fd306 	br	23f4c <___vfprintf_internal_r+0x634>
   24000:	84000214 	ori	r16,r16,8
   24004:	ac800007 	ldb	r18,0(r21)
   24008:	003e9f06 	br	23a88 <___vfprintf_internal_r+0x170>
   2400c:	e013883a 	mov	r9,fp
   24010:	84000414 	ori	r16,r16,16
   24014:	1839883a 	mov	fp,r3
   24018:	8080080c 	andi	r2,r16,32
   2401c:	10031d26 	beq	r2,zero,24c94 <___vfprintf_internal_r+0x137c>
   24020:	d8812d17 	ldw	r2,1204(sp)
   24024:	0007883a 	mov	r3,zero
   24028:	15c00017 	ldw	r23,0(r2)
   2402c:	15800117 	ldw	r22,4(r2)
   24030:	10800204 	addi	r2,r2,8
   24034:	d8812d15 	stw	r2,1204(sp)
   24038:	d8012585 	stb	zero,1174(sp)
   2403c:	bd84b03a 	or	r2,r23,r22
   24040:	003fae06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24044:	e013883a 	mov	r9,fp
   24048:	84000414 	ori	r16,r16,16
   2404c:	1839883a 	mov	fp,r3
   24050:	8080080c 	andi	r2,r16,32
   24054:	1002e726 	beq	r2,zero,24bf4 <___vfprintf_internal_r+0x12dc>
   24058:	d8c12d17 	ldw	r3,1204(sp)
   2405c:	d9012d17 	ldw	r4,1204(sp)
   24060:	1dc00017 	ldw	r23,0(r3)
   24064:	1d800117 	ldw	r22,4(r3)
   24068:	21000204 	addi	r4,r4,8
   2406c:	00c00044 	movi	r3,1
   24070:	d9012d15 	stw	r4,1204(sp)
   24074:	bd84b03a 	or	r2,r23,r22
   24078:	d8012585 	stb	zero,1174(sp)
   2407c:	003f9f06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24080:	e013883a 	mov	r9,fp
   24084:	1839883a 	mov	fp,r3
   24088:	00c000f4 	movhi	r3,3
   2408c:	18ce9604 	addi	r3,r3,14936
   24090:	d8c13615 	stw	r3,1240(sp)
   24094:	8080080c 	andi	r2,r16,32
   24098:	10007726 	beq	r2,zero,24278 <___vfprintf_internal_r+0x960>
   2409c:	d9012d17 	ldw	r4,1204(sp)
   240a0:	25c00017 	ldw	r23,0(r4)
   240a4:	25800117 	ldw	r22,4(r4)
   240a8:	21000204 	addi	r4,r4,8
   240ac:	d9012d15 	stw	r4,1204(sp)
   240b0:	8080004c 	andi	r2,r16,1
   240b4:	1002c226 	beq	r2,zero,24bc0 <___vfprintf_internal_r+0x12a8>
   240b8:	bd84b03a 	or	r2,r23,r22
   240bc:	10035d26 	beq	r2,zero,24e34 <___vfprintf_internal_r+0x151c>
   240c0:	00c00c04 	movi	r3,48
   240c4:	d8c12505 	stb	r3,1172(sp)
   240c8:	dc812545 	stb	r18,1173(sp)
   240cc:	84000094 	ori	r16,r16,2
   240d0:	00c00084 	movi	r3,2
   240d4:	d8012585 	stb	zero,1174(sp)
   240d8:	003f8806 	br	23efc <___vfprintf_internal_r+0x5e4>
   240dc:	ac800007 	ldb	r18,0(r21)
   240e0:	00c00a84 	movi	r3,42
   240e4:	adc00044 	addi	r23,r21,1
   240e8:	90c57526 	beq	r18,r3,256c0 <___vfprintf_internal_r+0x1da8>
   240ec:	95bff404 	addi	r22,r18,-48
   240f0:	0009883a 	mov	r4,zero
   240f4:	9d84ff36 	bltu	r19,r22,254f4 <___vfprintf_internal_r+0x1bdc>
   240f8:	01400284 	movi	r5,10
   240fc:	00211880 	call	21188 <__mulsi3>
   24100:	bc800007 	ldb	r18,0(r23)
   24104:	b089883a 	add	r4,r22,r2
   24108:	bdc00044 	addi	r23,r23,1
   2410c:	95bff404 	addi	r22,r18,-48
   24110:	9dbff92e 	bgeu	r19,r22,240f8 <___vfprintf_internal_r+0x7e0>
   24114:	2007883a 	mov	r3,r4
   24118:	20044316 	blt	r4,zero,25228 <___vfprintf_internal_r+0x1910>
   2411c:	b82b883a 	mov	r21,r23
   24120:	003e5a06 	br	23a8c <___vfprintf_internal_r+0x174>
   24124:	ac800007 	ldb	r18,0(r21)
   24128:	01001b04 	movi	r4,108
   2412c:	a805883a 	mov	r2,r21
   24130:	91045526 	beq	r18,r4,25288 <___vfprintf_internal_r+0x1970>
   24134:	84000414 	ori	r16,r16,16
   24138:	003e5306 	br	23a88 <___vfprintf_internal_r+0x170>
   2413c:	8080080c 	andi	r2,r16,32
   24140:	e013883a 	mov	r9,fp
   24144:	10034026 	beq	r2,zero,24e48 <___vfprintf_internal_r+0x1530>
   24148:	d9012d17 	ldw	r4,1204(sp)
   2414c:	20800017 	ldw	r2,0(r4)
   24150:	d9012c17 	ldw	r4,1200(sp)
   24154:	2007d7fa 	srai	r3,r4,31
   24158:	d9012d17 	ldw	r4,1204(sp)
   2415c:	10c00115 	stw	r3,4(r2)
   24160:	21000104 	addi	r4,r4,4
   24164:	d9012d15 	stw	r4,1204(sp)
   24168:	d9012c17 	ldw	r4,1200(sp)
   2416c:	11000015 	stw	r4,0(r2)
   24170:	003e1f06 	br	239f0 <___vfprintf_internal_r+0xd8>
   24174:	d9012d17 	ldw	r4,1204(sp)
   24178:	21000017 	ldw	r4,0(r4)
   2417c:	d9012e15 	stw	r4,1208(sp)
   24180:	d9012d17 	ldw	r4,1204(sp)
   24184:	20800104 	addi	r2,r4,4
   24188:	d9012e17 	ldw	r4,1208(sp)
   2418c:	203ee716 	blt	r4,zero,23d2c <___vfprintf_internal_r+0x414>
   24190:	d8812d15 	stw	r2,1204(sp)
   24194:	ac800007 	ldb	r18,0(r21)
   24198:	003e3b06 	br	23a88 <___vfprintf_internal_r+0x170>
   2419c:	e013883a 	mov	r9,fp
   241a0:	1839883a 	mov	fp,r3
   241a4:	d8c12d17 	ldw	r3,1204(sp)
   241a8:	00800c04 	movi	r2,48
   241ac:	010000f4 	movhi	r4,3
   241b0:	210e9b04 	addi	r4,r4,14956
   241b4:	1dc00017 	ldw	r23,0(r3)
   241b8:	18c00104 	addi	r3,r3,4
   241bc:	d8812505 	stb	r2,1172(sp)
   241c0:	00801e04 	movi	r2,120
   241c4:	d8812545 	stb	r2,1173(sp)
   241c8:	d8c12d15 	stw	r3,1204(sp)
   241cc:	002d883a 	mov	r22,zero
   241d0:	84000094 	ori	r16,r16,2
   241d4:	d9013615 	stw	r4,1240(sp)
   241d8:	00c00084 	movi	r3,2
   241dc:	04801e04 	movi	r18,120
   241e0:	b805883a 	mov	r2,r23
   241e4:	d8012585 	stb	zero,1174(sp)
   241e8:	003f4406 	br	23efc <___vfprintf_internal_r+0x5e4>
   241ec:	84000814 	ori	r16,r16,32
   241f0:	ac800007 	ldb	r18,0(r21)
   241f4:	003e2406 	br	23a88 <___vfprintf_internal_r+0x170>
   241f8:	d8812d17 	ldw	r2,1204(sp)
   241fc:	d8012585 	stb	zero,1174(sp)
   24200:	e013883a 	mov	r9,fp
   24204:	14c00017 	ldw	r19,0(r2)
   24208:	1839883a 	mov	fp,r3
   2420c:	15c00104 	addi	r23,r2,4
   24210:	98045526 	beq	r19,zero,25368 <___vfprintf_internal_r+0x1a50>
   24214:	9809883a 	mov	r4,r19
   24218:	18043116 	blt	r3,zero,252e0 <___vfprintf_internal_r+0x19c8>
   2421c:	000b883a 	mov	r5,zero
   24220:	180d883a 	mov	r6,r3
   24224:	da413c15 	stw	r9,1264(sp)
   24228:	00292240 	call	29224 <memchr>
   2422c:	da413c17 	ldw	r9,1264(sp)
   24230:	10047a26 	beq	r2,zero,2541c <___vfprintf_internal_r+0x1b04>
   24234:	14c5c83a 	sub	r2,r2,r19
   24238:	d8812b15 	stw	r2,1196(sp)
   2423c:	e083d40e 	bge	fp,r2,25190 <___vfprintf_internal_r+0x1878>
   24240:	df012815 	stw	fp,1184(sp)
   24244:	e004e416 	blt	fp,zero,255d8 <___vfprintf_internal_r+0x1cc0>
   24248:	d8812583 	ldbu	r2,1174(sp)
   2424c:	df012b15 	stw	fp,1196(sp)
   24250:	ddc12d15 	stw	r23,1204(sp)
   24254:	d8013115 	stw	zero,1220(sp)
   24258:	003f3c06 	br	23f4c <___vfprintf_internal_r+0x634>
   2425c:	008000f4 	movhi	r2,3
   24260:	108e9b04 	addi	r2,r2,14956
   24264:	d8813615 	stw	r2,1240(sp)
   24268:	8080080c 	andi	r2,r16,32
   2426c:	e013883a 	mov	r9,fp
   24270:	1839883a 	mov	fp,r3
   24274:	103f891e 	bne	r2,zero,2409c <___vfprintf_internal_r+0x784>
   24278:	8080040c 	andi	r2,r16,16
   2427c:	1002c326 	beq	r2,zero,24d8c <___vfprintf_internal_r+0x1474>
   24280:	d8812d17 	ldw	r2,1204(sp)
   24284:	002d883a 	mov	r22,zero
   24288:	15c00017 	ldw	r23,0(r2)
   2428c:	10800104 	addi	r2,r2,4
   24290:	d8812d15 	stw	r2,1204(sp)
   24294:	003f8606 	br	240b0 <___vfprintf_internal_r+0x798>
   24298:	84001014 	ori	r16,r16,64
   2429c:	ac800007 	ldb	r18,0(r21)
   242a0:	003df906 	br	23a88 <___vfprintf_internal_r+0x170>
   242a4:	d8812587 	ldb	r2,1174(sp)
   242a8:	1002e51e 	bne	r2,zero,24e40 <___vfprintf_internal_r+0x1528>
   242ac:	00800804 	movi	r2,32
   242b0:	d8812585 	stb	r2,1174(sp)
   242b4:	ac800007 	ldb	r18,0(r21)
   242b8:	003df306 	br	23a88 <___vfprintf_internal_r+0x170>
   242bc:	84000054 	ori	r16,r16,1
   242c0:	ac800007 	ldb	r18,0(r21)
   242c4:	003df006 	br	23a88 <___vfprintf_internal_r+0x170>
   242c8:	84002014 	ori	r16,r16,128
   242cc:	ac800007 	ldb	r18,0(r21)
   242d0:	003ded06 	br	23a88 <___vfprintf_internal_r+0x170>
   242d4:	0009883a 	mov	r4,zero
   242d8:	95bff404 	addi	r22,r18,-48
   242dc:	182f883a 	mov	r23,r3
   242e0:	01400284 	movi	r5,10
   242e4:	00211880 	call	21188 <__mulsi3>
   242e8:	ac800007 	ldb	r18,0(r21)
   242ec:	1589883a 	add	r4,r2,r22
   242f0:	ad400044 	addi	r21,r21,1
   242f4:	95bff404 	addi	r22,r18,-48
   242f8:	9dbff92e 	bgeu	r19,r22,242e0 <___vfprintf_internal_r+0x9c8>
   242fc:	b807883a 	mov	r3,r23
   24300:	d9012e15 	stw	r4,1208(sp)
   24304:	003de106 	br	23a8c <___vfprintf_internal_r+0x174>
   24308:	00800ac4 	movi	r2,43
   2430c:	d8812585 	stb	r2,1174(sp)
   24310:	ac800007 	ldb	r18,0(r21)
   24314:	003ddc06 	br	23a88 <___vfprintf_internal_r+0x170>
   24318:	d8c12d17 	ldw	r3,1204(sp)
   2431c:	d9012d17 	ldw	r4,1204(sp)
   24320:	e013883a 	mov	r9,fp
   24324:	18800017 	ldw	r2,0(r3)
   24328:	21000104 	addi	r4,r4,4
   2432c:	00c00044 	movi	r3,1
   24330:	d8c12815 	stw	r3,1184(sp)
   24334:	d8012585 	stb	zero,1174(sp)
   24338:	d8810405 	stb	r2,1040(sp)
   2433c:	d9012d15 	stw	r4,1204(sp)
   24340:	d8c12b15 	stw	r3,1196(sp)
   24344:	dcc10404 	addi	r19,sp,1040
   24348:	003dda06 	br	23ab4 <___vfprintf_internal_r+0x19c>
   2434c:	e013883a 	mov	r9,fp
   24350:	1839883a 	mov	fp,r3
   24354:	003ed806 	br	23eb8 <___vfprintf_internal_r+0x5a0>
   24358:	e013883a 	mov	r9,fp
   2435c:	1839883a 	mov	fp,r3
   24360:	003f2d06 	br	24018 <___vfprintf_internal_r+0x700>
   24364:	e013883a 	mov	r9,fp
   24368:	1839883a 	mov	fp,r3
   2436c:	003f3806 	br	24050 <___vfprintf_internal_r+0x738>
   24370:	da011d17 	ldw	r8,1140(sp)
   24374:	d8c11c17 	ldw	r3,1136(sp)
   24378:	d8812587 	ldb	r2,1174(sp)
   2437c:	10000b26 	beq	r2,zero,243ac <___vfprintf_internal_r+0xa94>
   24380:	d8812584 	addi	r2,sp,1174
   24384:	48800015 	stw	r2,0(r9)
   24388:	00800044 	movi	r2,1
   2438c:	48800115 	stw	r2,4(r9)
   24390:	4091883a 	add	r8,r8,r2
   24394:	1887883a 	add	r3,r3,r2
   24398:	da011d15 	stw	r8,1140(sp)
   2439c:	d8c11c15 	stw	r3,1136(sp)
   243a0:	008001c4 	movi	r2,7
   243a4:	10c18e16 	blt	r2,r3,249e0 <___vfprintf_internal_r+0x10c8>
   243a8:	4a400204 	addi	r9,r9,8
   243ac:	d9012a17 	ldw	r4,1192(sp)
   243b0:	20000b26 	beq	r4,zero,243e0 <___vfprintf_internal_r+0xac8>
   243b4:	d8812504 	addi	r2,sp,1172
   243b8:	48800015 	stw	r2,0(r9)
   243bc:	00800084 	movi	r2,2
   243c0:	48800115 	stw	r2,4(r9)
   243c4:	4091883a 	add	r8,r8,r2
   243c8:	18c00044 	addi	r3,r3,1
   243cc:	da011d15 	stw	r8,1140(sp)
   243d0:	d8c11c15 	stw	r3,1136(sp)
   243d4:	008001c4 	movi	r2,7
   243d8:	10c17816 	blt	r2,r3,249bc <___vfprintf_internal_r+0x10a4>
   243dc:	4a400204 	addi	r9,r9,8
   243e0:	d9012f17 	ldw	r4,1212(sp)
   243e4:	00802004 	movi	r2,128
   243e8:	2080fc26 	beq	r4,r2,247dc <___vfprintf_internal_r+0xec4>
   243ec:	d8813117 	ldw	r2,1220(sp)
   243f0:	d9012b17 	ldw	r4,1196(sp)
   243f4:	112fc83a 	sub	r23,r2,r4
   243f8:	05c02a0e 	bge	zero,r23,244a4 <___vfprintf_internal_r+0xb8c>
   243fc:	07000404 	movi	fp,16
   24400:	050000f4 	movhi	r20,3
   24404:	a50ea684 	addi	r20,r20,15002
   24408:	e5c01d0e 	bge	fp,r23,24480 <___vfprintf_internal_r+0xb68>
   2440c:	dc812a15 	stw	r18,1192(sp)
   24410:	058001c4 	movi	r22,7
   24414:	a025883a 	mov	r18,r20
   24418:	8029883a 	mov	r20,r16
   2441c:	dc012917 	ldw	r16,1188(sp)
   24420:	00000306 	br	24430 <___vfprintf_internal_r+0xb18>
   24424:	bdfffc04 	addi	r23,r23,-16
   24428:	4a400204 	addi	r9,r9,8
   2442c:	e5c0110e 	bge	fp,r23,24474 <___vfprintf_internal_r+0xb5c>
   24430:	4c800015 	stw	r18,0(r9)
   24434:	4f000115 	stw	fp,4(r9)
   24438:	42000404 	addi	r8,r8,16
   2443c:	18c00044 	addi	r3,r3,1
   24440:	da011d15 	stw	r8,1140(sp)
   24444:	d8c11c15 	stw	r3,1136(sp)
   24448:	b0fff60e 	bge	r22,r3,24424 <___vfprintf_internal_r+0xb0c>
   2444c:	8809883a 	mov	r4,r17
   24450:	800b883a 	mov	r5,r16
   24454:	d9811b04 	addi	r6,sp,1132
   24458:	00238e40 	call	238e4 <__sprint_r>
   2445c:	103e741e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24460:	bdfffc04 	addi	r23,r23,-16
   24464:	da011d17 	ldw	r8,1140(sp)
   24468:	d8c11c17 	ldw	r3,1136(sp)
   2446c:	da400404 	addi	r9,sp,16
   24470:	e5ffef16 	blt	fp,r23,24430 <___vfprintf_internal_r+0xb18>
   24474:	a021883a 	mov	r16,r20
   24478:	9029883a 	mov	r20,r18
   2447c:	dc812a17 	ldw	r18,1192(sp)
   24480:	4d000015 	stw	r20,0(r9)
   24484:	4dc00115 	stw	r23,4(r9)
   24488:	45d1883a 	add	r8,r8,r23
   2448c:	18c00044 	addi	r3,r3,1
   24490:	da011d15 	stw	r8,1140(sp)
   24494:	d8c11c15 	stw	r3,1136(sp)
   24498:	008001c4 	movi	r2,7
   2449c:	10c13e16 	blt	r2,r3,24998 <___vfprintf_internal_r+0x1080>
   244a0:	4a400204 	addi	r9,r9,8
   244a4:	8080400c 	andi	r2,r16,256
   244a8:	1000831e 	bne	r2,zero,246b8 <___vfprintf_internal_r+0xda0>
   244ac:	d8812b17 	ldw	r2,1196(sp)
   244b0:	4cc00015 	stw	r19,0(r9)
   244b4:	48800115 	stw	r2,4(r9)
   244b8:	4091883a 	add	r8,r8,r2
   244bc:	18c00044 	addi	r3,r3,1
   244c0:	da011d15 	stw	r8,1140(sp)
   244c4:	d8c11c15 	stw	r3,1136(sp)
   244c8:	008001c4 	movi	r2,7
   244cc:	10c05316 	blt	r2,r3,2461c <___vfprintf_internal_r+0xd04>
   244d0:	4a400204 	addi	r9,r9,8
   244d4:	8400010c 	andi	r16,r16,4
   244d8:	80002e26 	beq	r16,zero,24594 <___vfprintf_internal_r+0xc7c>
   244dc:	d8812e17 	ldw	r2,1208(sp)
   244e0:	d8c12817 	ldw	r3,1184(sp)
   244e4:	10e1c83a 	sub	r16,r2,r3
   244e8:	04002a0e 	bge	zero,r16,24594 <___vfprintf_internal_r+0xc7c>
   244ec:	04800404 	movi	r18,16
   244f0:	d8c11c17 	ldw	r3,1136(sp)
   244f4:	05c000f4 	movhi	r23,3
   244f8:	bdcea284 	addi	r23,r23,14986
   244fc:	9400170e 	bge	r18,r16,2455c <___vfprintf_internal_r+0xc44>
   24500:	04c001c4 	movi	r19,7
   24504:	dd012917 	ldw	r20,1188(sp)
   24508:	00000306 	br	24518 <___vfprintf_internal_r+0xc00>
   2450c:	843ffc04 	addi	r16,r16,-16
   24510:	4a400204 	addi	r9,r9,8
   24514:	9400110e 	bge	r18,r16,2455c <___vfprintf_internal_r+0xc44>
   24518:	4dc00015 	stw	r23,0(r9)
   2451c:	4c800115 	stw	r18,4(r9)
   24520:	42000404 	addi	r8,r8,16
   24524:	18c00044 	addi	r3,r3,1
   24528:	da011d15 	stw	r8,1140(sp)
   2452c:	d8c11c15 	stw	r3,1136(sp)
   24530:	98fff60e 	bge	r19,r3,2450c <___vfprintf_internal_r+0xbf4>
   24534:	8809883a 	mov	r4,r17
   24538:	a00b883a 	mov	r5,r20
   2453c:	d9811b04 	addi	r6,sp,1132
   24540:	00238e40 	call	238e4 <__sprint_r>
   24544:	103e3a1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24548:	843ffc04 	addi	r16,r16,-16
   2454c:	da011d17 	ldw	r8,1140(sp)
   24550:	d8c11c17 	ldw	r3,1136(sp)
   24554:	da400404 	addi	r9,sp,16
   24558:	943fef16 	blt	r18,r16,24518 <___vfprintf_internal_r+0xc00>
   2455c:	4dc00015 	stw	r23,0(r9)
   24560:	4c000115 	stw	r16,4(r9)
   24564:	8211883a 	add	r8,r16,r8
   24568:	18c00044 	addi	r3,r3,1
   2456c:	da011d15 	stw	r8,1140(sp)
   24570:	d8c11c15 	stw	r3,1136(sp)
   24574:	008001c4 	movi	r2,7
   24578:	10c0060e 	bge	r2,r3,24594 <___vfprintf_internal_r+0xc7c>
   2457c:	d9412917 	ldw	r5,1188(sp)
   24580:	8809883a 	mov	r4,r17
   24584:	d9811b04 	addi	r6,sp,1132
   24588:	00238e40 	call	238e4 <__sprint_r>
   2458c:	103e281e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24590:	da011d17 	ldw	r8,1140(sp)
   24594:	dd012817 	ldw	r20,1184(sp)
   24598:	d9012e17 	ldw	r4,1208(sp)
   2459c:	a100010e 	bge	r20,r4,245a4 <___vfprintf_internal_r+0xc8c>
   245a0:	2029883a 	mov	r20,r4
   245a4:	d8812c17 	ldw	r2,1200(sp)
   245a8:	1505883a 	add	r2,r2,r20
   245ac:	d8812c15 	stw	r2,1200(sp)
   245b0:	4000b91e 	bne	r8,zero,24898 <___vfprintf_internal_r+0xf80>
   245b4:	d8011c15 	stw	zero,1136(sp)
   245b8:	a8800007 	ldb	r2,0(r21)
   245bc:	da400404 	addi	r9,sp,16
   245c0:	103d0d1e 	bne	r2,zero,239f8 <___vfprintf_internal_r+0xe0>
   245c4:	a825883a 	mov	r18,r21
   245c8:	003d2306 	br	23a58 <___vfprintf_internal_r+0x140>
   245cc:	d9412917 	ldw	r5,1188(sp)
   245d0:	8809883a 	mov	r4,r17
   245d4:	d9811b04 	addi	r6,sp,1132
   245d8:	00238e40 	call	238e4 <__sprint_r>
   245dc:	103e141e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   245e0:	da011d17 	ldw	r8,1140(sp)
   245e4:	da400404 	addi	r9,sp,16
   245e8:	8080004c 	andi	r2,r16,1
   245ec:	103fb926 	beq	r2,zero,244d4 <___vfprintf_internal_r+0xbbc>
   245f0:	d8c11c17 	ldw	r3,1136(sp)
   245f4:	d9013717 	ldw	r4,1244(sp)
   245f8:	00800044 	movi	r2,1
   245fc:	48800115 	stw	r2,4(r9)
   24600:	49000015 	stw	r4,0(r9)
   24604:	4091883a 	add	r8,r8,r2
   24608:	1887883a 	add	r3,r3,r2
   2460c:	da011d15 	stw	r8,1140(sp)
   24610:	d8c11c15 	stw	r3,1136(sp)
   24614:	008001c4 	movi	r2,7
   24618:	10ffad0e 	bge	r2,r3,244d0 <___vfprintf_internal_r+0xbb8>
   2461c:	d9412917 	ldw	r5,1188(sp)
   24620:	8809883a 	mov	r4,r17
   24624:	d9811b04 	addi	r6,sp,1132
   24628:	00238e40 	call	238e4 <__sprint_r>
   2462c:	103e001e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24630:	da400404 	addi	r9,sp,16
   24634:	da011d17 	ldw	r8,1140(sp)
   24638:	003fa606 	br	244d4 <___vfprintf_internal_r+0xbbc>
   2463c:	18803fcc 	andi	r2,r3,255
   24640:	00c00044 	movi	r3,1
   24644:	10c10126 	beq	r2,r3,24a4c <___vfprintf_internal_r+0x1134>
   24648:	00c00084 	movi	r3,2
   2464c:	10c0ed26 	beq	r2,r3,24a04 <___vfprintf_internal_r+0x10ec>
   24650:	d8c10dc4 	addi	r3,sp,1079
   24654:	b808d0fa 	srli	r4,r23,3
   24658:	b00a977a 	slli	r5,r22,29
   2465c:	b02cd0fa 	srli	r22,r22,3
   24660:	bdc001cc 	andi	r23,r23,7
   24664:	b8800c04 	addi	r2,r23,48
   24668:	292eb03a 	or	r23,r5,r4
   2466c:	18800005 	stb	r2,0(r3)
   24670:	bd88b03a 	or	r4,r23,r22
   24674:	1827883a 	mov	r19,r3
   24678:	18ffffc4 	addi	r3,r3,-1
   2467c:	203ff51e 	bne	r4,zero,24654 <___vfprintf_internal_r+0xd3c>
   24680:	8100004c 	andi	r4,r16,1
   24684:	980b883a 	mov	r5,r19
   24688:	20000726 	beq	r4,zero,246a8 <___vfprintf_internal_r+0xd90>
   2468c:	10803fcc 	andi	r2,r2,255
   24690:	1080201c 	xori	r2,r2,128
   24694:	10bfe004 	addi	r2,r2,-128
   24698:	01000c04 	movi	r4,48
   2469c:	11000226 	beq	r2,r4,246a8 <___vfprintf_internal_r+0xd90>
   246a0:	1827883a 	mov	r19,r3
   246a4:	293fffc5 	stb	r4,-1(r5)
   246a8:	d8812717 	ldw	r2,1180(sp)
   246ac:	14c5c83a 	sub	r2,r2,r19
   246b0:	d8812b15 	stw	r2,1196(sp)
   246b4:	003e1f06 	br	23f34 <___vfprintf_internal_r+0x61c>
   246b8:	00801944 	movi	r2,101
   246bc:	14807c0e 	bge	r2,r18,248b0 <___vfprintf_internal_r+0xf98>
   246c0:	d9013317 	ldw	r4,1228(sp)
   246c4:	d9413417 	ldw	r5,1232(sp)
   246c8:	000d883a 	mov	r6,zero
   246cc:	000f883a 	mov	r7,zero
   246d0:	d8c13b15 	stw	r3,1260(sp)
   246d4:	da013a15 	stw	r8,1256(sp)
   246d8:	da413c15 	stw	r9,1264(sp)
   246dc:	002f76c0 	call	2f76c <__eqdf2>
   246e0:	d8c13b17 	ldw	r3,1260(sp)
   246e4:	da013a17 	ldw	r8,1256(sp)
   246e8:	da413c17 	ldw	r9,1264(sp)
   246ec:	1001001e 	bne	r2,zero,24af0 <___vfprintf_internal_r+0x11d8>
   246f0:	008000f4 	movhi	r2,3
   246f4:	108ea204 	addi	r2,r2,14984
   246f8:	48800015 	stw	r2,0(r9)
   246fc:	00800044 	movi	r2,1
   24700:	48800115 	stw	r2,4(r9)
   24704:	4091883a 	add	r8,r8,r2
   24708:	1887883a 	add	r3,r3,r2
   2470c:	da011d15 	stw	r8,1140(sp)
   24710:	d8c11c15 	stw	r3,1136(sp)
   24714:	008001c4 	movi	r2,7
   24718:	10c20316 	blt	r2,r3,24f28 <___vfprintf_internal_r+0x1610>
   2471c:	4a400204 	addi	r9,r9,8
   24720:	d8812417 	ldw	r2,1168(sp)
   24724:	d8c13217 	ldw	r3,1224(sp)
   24728:	10c00216 	blt	r2,r3,24734 <___vfprintf_internal_r+0xe1c>
   2472c:	8080004c 	andi	r2,r16,1
   24730:	103f6826 	beq	r2,zero,244d4 <___vfprintf_internal_r+0xbbc>
   24734:	d8c11c17 	ldw	r3,1136(sp)
   24738:	d9013717 	ldw	r4,1244(sp)
   2473c:	00800044 	movi	r2,1
   24740:	48800115 	stw	r2,4(r9)
   24744:	49000015 	stw	r4,0(r9)
   24748:	4091883a 	add	r8,r8,r2
   2474c:	1887883a 	add	r3,r3,r2
   24750:	da011d15 	stw	r8,1140(sp)
   24754:	d8c11c15 	stw	r3,1136(sp)
   24758:	008001c4 	movi	r2,7
   2475c:	10c2ce16 	blt	r2,r3,25298 <___vfprintf_internal_r+0x1980>
   24760:	4a400204 	addi	r9,r9,8
   24764:	d8813217 	ldw	r2,1224(sp)
   24768:	14bfffc4 	addi	r18,r2,-1
   2476c:	04bf590e 	bge	zero,r18,244d4 <___vfprintf_internal_r+0xbbc>
   24770:	04c00404 	movi	r19,16
   24774:	d8c11c17 	ldw	r3,1136(sp)
   24778:	050000f4 	movhi	r20,3
   2477c:	a50ea684 	addi	r20,r20,15002
   24780:	9c818a0e 	bge	r19,r18,24dac <___vfprintf_internal_r+0x1494>
   24784:	058001c4 	movi	r22,7
   24788:	ddc12917 	ldw	r23,1188(sp)
   2478c:	00000306 	br	2479c <___vfprintf_internal_r+0xe84>
   24790:	4a400204 	addi	r9,r9,8
   24794:	94bffc04 	addi	r18,r18,-16
   24798:	9c81840e 	bge	r19,r18,24dac <___vfprintf_internal_r+0x1494>
   2479c:	4d000015 	stw	r20,0(r9)
   247a0:	4cc00115 	stw	r19,4(r9)
   247a4:	42000404 	addi	r8,r8,16
   247a8:	18c00044 	addi	r3,r3,1
   247ac:	da011d15 	stw	r8,1140(sp)
   247b0:	d8c11c15 	stw	r3,1136(sp)
   247b4:	b0fff60e 	bge	r22,r3,24790 <___vfprintf_internal_r+0xe78>
   247b8:	8809883a 	mov	r4,r17
   247bc:	b80b883a 	mov	r5,r23
   247c0:	d9811b04 	addi	r6,sp,1132
   247c4:	00238e40 	call	238e4 <__sprint_r>
   247c8:	103d991e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   247cc:	da011d17 	ldw	r8,1140(sp)
   247d0:	d8c11c17 	ldw	r3,1136(sp)
   247d4:	da400404 	addi	r9,sp,16
   247d8:	003fee06 	br	24794 <___vfprintf_internal_r+0xe7c>
   247dc:	d8812e17 	ldw	r2,1208(sp)
   247e0:	d9012817 	ldw	r4,1184(sp)
   247e4:	112fc83a 	sub	r23,r2,r4
   247e8:	05ff000e 	bge	zero,r23,243ec <___vfprintf_internal_r+0xad4>
   247ec:	07000404 	movi	fp,16
   247f0:	050000f4 	movhi	r20,3
   247f4:	a50ea684 	addi	r20,r20,15002
   247f8:	e5c01d0e 	bge	fp,r23,24870 <___vfprintf_internal_r+0xf58>
   247fc:	dc812a15 	stw	r18,1192(sp)
   24800:	058001c4 	movi	r22,7
   24804:	a025883a 	mov	r18,r20
   24808:	8029883a 	mov	r20,r16
   2480c:	dc012917 	ldw	r16,1188(sp)
   24810:	00000306 	br	24820 <___vfprintf_internal_r+0xf08>
   24814:	bdfffc04 	addi	r23,r23,-16
   24818:	4a400204 	addi	r9,r9,8
   2481c:	e5c0110e 	bge	fp,r23,24864 <___vfprintf_internal_r+0xf4c>
   24820:	4c800015 	stw	r18,0(r9)
   24824:	4f000115 	stw	fp,4(r9)
   24828:	42000404 	addi	r8,r8,16
   2482c:	18c00044 	addi	r3,r3,1
   24830:	da011d15 	stw	r8,1140(sp)
   24834:	d8c11c15 	stw	r3,1136(sp)
   24838:	b0fff60e 	bge	r22,r3,24814 <___vfprintf_internal_r+0xefc>
   2483c:	8809883a 	mov	r4,r17
   24840:	800b883a 	mov	r5,r16
   24844:	d9811b04 	addi	r6,sp,1132
   24848:	00238e40 	call	238e4 <__sprint_r>
   2484c:	103d781e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24850:	bdfffc04 	addi	r23,r23,-16
   24854:	da011d17 	ldw	r8,1140(sp)
   24858:	d8c11c17 	ldw	r3,1136(sp)
   2485c:	da400404 	addi	r9,sp,16
   24860:	e5ffef16 	blt	fp,r23,24820 <___vfprintf_internal_r+0xf08>
   24864:	a021883a 	mov	r16,r20
   24868:	9029883a 	mov	r20,r18
   2486c:	dc812a17 	ldw	r18,1192(sp)
   24870:	4d000015 	stw	r20,0(r9)
   24874:	4dc00115 	stw	r23,4(r9)
   24878:	45d1883a 	add	r8,r8,r23
   2487c:	18c00044 	addi	r3,r3,1
   24880:	da011d15 	stw	r8,1140(sp)
   24884:	d8c11c15 	stw	r3,1136(sp)
   24888:	008001c4 	movi	r2,7
   2488c:	10c13616 	blt	r2,r3,24d68 <___vfprintf_internal_r+0x1450>
   24890:	4a400204 	addi	r9,r9,8
   24894:	003ed506 	br	243ec <___vfprintf_internal_r+0xad4>
   24898:	d9412917 	ldw	r5,1188(sp)
   2489c:	8809883a 	mov	r4,r17
   248a0:	d9811b04 	addi	r6,sp,1132
   248a4:	00238e40 	call	238e4 <__sprint_r>
   248a8:	103f4226 	beq	r2,zero,245b4 <___vfprintf_internal_r+0xc9c>
   248ac:	003d6006 	br	23e30 <___vfprintf_internal_r+0x518>
   248b0:	d9013217 	ldw	r4,1224(sp)
   248b4:	00800044 	movi	r2,1
   248b8:	4cc00015 	stw	r19,0(r9)
   248bc:	1101000e 	bge	r2,r4,24cc0 <___vfprintf_internal_r+0x13a8>
   248c0:	00800044 	movi	r2,1
   248c4:	48800115 	stw	r2,4(r9)
   248c8:	4091883a 	add	r8,r8,r2
   248cc:	1887883a 	add	r3,r3,r2
   248d0:	da011d15 	stw	r8,1140(sp)
   248d4:	d8c11c15 	stw	r3,1136(sp)
   248d8:	008001c4 	movi	r2,7
   248dc:	10c10c16 	blt	r2,r3,24d10 <___vfprintf_internal_r+0x13f8>
   248e0:	4a400204 	addi	r9,r9,8
   248e4:	d8813717 	ldw	r2,1244(sp)
   248e8:	48800015 	stw	r2,0(r9)
   248ec:	00800044 	movi	r2,1
   248f0:	48800115 	stw	r2,4(r9)
   248f4:	4091883a 	add	r8,r8,r2
   248f8:	1887883a 	add	r3,r3,r2
   248fc:	da011d15 	stw	r8,1140(sp)
   24900:	d8c11c15 	stw	r3,1136(sp)
   24904:	008001c4 	movi	r2,7
   24908:	10c10a16 	blt	r2,r3,24d34 <___vfprintf_internal_r+0x141c>
   2490c:	4c800204 	addi	r18,r9,8
   24910:	d9013317 	ldw	r4,1228(sp)
   24914:	d9413417 	ldw	r5,1232(sp)
   24918:	000d883a 	mov	r6,zero
   2491c:	000f883a 	mov	r7,zero
   24920:	d8c13b15 	stw	r3,1260(sp)
   24924:	da013a15 	stw	r8,1256(sp)
   24928:	002f7c80 	call	2f7c8 <__nedf2>
   2492c:	d8c13b17 	ldw	r3,1260(sp)
   24930:	da013a17 	ldw	r8,1256(sp)
   24934:	1000ba26 	beq	r2,zero,24c20 <___vfprintf_internal_r+0x1308>
   24938:	d9013217 	ldw	r4,1224(sp)
   2493c:	9cc00044 	addi	r19,r19,1
   24940:	94c00015 	stw	r19,0(r18)
   24944:	20bfffc4 	addi	r2,r4,-1
   24948:	90800115 	stw	r2,4(r18)
   2494c:	4091883a 	add	r8,r8,r2
   24950:	18c00044 	addi	r3,r3,1
   24954:	da011d15 	stw	r8,1140(sp)
   24958:	d8c11c15 	stw	r3,1136(sp)
   2495c:	008001c4 	movi	r2,7
   24960:	10c0e216 	blt	r2,r3,24cec <___vfprintf_internal_r+0x13d4>
   24964:	94800204 	addi	r18,r18,8
   24968:	d9013517 	ldw	r4,1236(sp)
   2496c:	d8811fc4 	addi	r2,sp,1151
   24970:	90800015 	stw	r2,0(r18)
   24974:	91000115 	stw	r4,4(r18)
   24978:	4111883a 	add	r8,r8,r4
   2497c:	18c00044 	addi	r3,r3,1
   24980:	da011d15 	stw	r8,1140(sp)
   24984:	d8c11c15 	stw	r3,1136(sp)
   24988:	008001c4 	movi	r2,7
   2498c:	10ff2316 	blt	r2,r3,2461c <___vfprintf_internal_r+0xd04>
   24990:	92400204 	addi	r9,r18,8
   24994:	003ecf06 	br	244d4 <___vfprintf_internal_r+0xbbc>
   24998:	d9412917 	ldw	r5,1188(sp)
   2499c:	8809883a 	mov	r4,r17
   249a0:	d9811b04 	addi	r6,sp,1132
   249a4:	00238e40 	call	238e4 <__sprint_r>
   249a8:	103d211e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   249ac:	da011d17 	ldw	r8,1140(sp)
   249b0:	d8c11c17 	ldw	r3,1136(sp)
   249b4:	da400404 	addi	r9,sp,16
   249b8:	003eba06 	br	244a4 <___vfprintf_internal_r+0xb8c>
   249bc:	d9412917 	ldw	r5,1188(sp)
   249c0:	8809883a 	mov	r4,r17
   249c4:	d9811b04 	addi	r6,sp,1132
   249c8:	00238e40 	call	238e4 <__sprint_r>
   249cc:	103d181e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   249d0:	da011d17 	ldw	r8,1140(sp)
   249d4:	d8c11c17 	ldw	r3,1136(sp)
   249d8:	da400404 	addi	r9,sp,16
   249dc:	003e8006 	br	243e0 <___vfprintf_internal_r+0xac8>
   249e0:	d9412917 	ldw	r5,1188(sp)
   249e4:	8809883a 	mov	r4,r17
   249e8:	d9811b04 	addi	r6,sp,1132
   249ec:	00238e40 	call	238e4 <__sprint_r>
   249f0:	103d0f1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   249f4:	da011d17 	ldw	r8,1140(sp)
   249f8:	d8c11c17 	ldw	r3,1136(sp)
   249fc:	da400404 	addi	r9,sp,16
   24a00:	003e6a06 	br	243ac <___vfprintf_internal_r+0xa94>
   24a04:	d9413617 	ldw	r5,1240(sp)
   24a08:	d8810dc4 	addi	r2,sp,1079
   24a0c:	b8c003cc 	andi	r3,r23,15
   24a10:	b008973a 	slli	r4,r22,28
   24a14:	28c7883a 	add	r3,r5,r3
   24a18:	b82ed13a 	srli	r23,r23,4
   24a1c:	18c00003 	ldbu	r3,0(r3)
   24a20:	b02cd13a 	srli	r22,r22,4
   24a24:	25eeb03a 	or	r23,r4,r23
   24a28:	10c00005 	stb	r3,0(r2)
   24a2c:	bd86b03a 	or	r3,r23,r22
   24a30:	1027883a 	mov	r19,r2
   24a34:	10bfffc4 	addi	r2,r2,-1
   24a38:	183ff41e 	bne	r3,zero,24a0c <___vfprintf_internal_r+0x10f4>
   24a3c:	003f1a06 	br	246a8 <___vfprintf_internal_r+0xd90>
   24a40:	d8012b15 	stw	zero,1196(sp)
   24a44:	dcc10e04 	addi	r19,sp,1080
   24a48:	003d3a06 	br	23f34 <___vfprintf_internal_r+0x61c>
   24a4c:	b0025426 	beq	r22,zero,253a0 <___vfprintf_internal_r+0x1a88>
   24a50:	b807883a 	mov	r3,r23
   24a54:	d8810dc4 	addi	r2,sp,1079
   24a58:	882f883a 	mov	r23,r17
   24a5c:	04c00244 	movi	r19,9
   24a60:	8023883a 	mov	r17,r16
   24a64:	da412815 	stw	r9,1184(sp)
   24a68:	1821883a 	mov	r16,r3
   24a6c:	8009883a 	mov	r4,r16
   24a70:	b00b883a 	mov	r5,r22
   24a74:	01800284 	movi	r6,10
   24a78:	000f883a 	mov	r7,zero
   24a7c:	1029883a 	mov	r20,r2
   24a80:	002e7a00 	call	2e7a0 <__umoddi3>
   24a84:	10800c04 	addi	r2,r2,48
   24a88:	8009883a 	mov	r4,r16
   24a8c:	b00b883a 	mov	r5,r22
   24a90:	a0800005 	stb	r2,0(r20)
   24a94:	01800284 	movi	r6,10
   24a98:	000f883a 	mov	r7,zero
   24a9c:	002e1500 	call	2e150 <__udivdi3>
   24aa0:	1021883a 	mov	r16,r2
   24aa4:	182d883a 	mov	r22,r3
   24aa8:	a0bfffc4 	addi	r2,r20,-1
   24aac:	183fef1e 	bne	r3,zero,24a6c <___vfprintf_internal_r+0x1154>
   24ab0:	9c3fee36 	bltu	r19,r16,24a6c <___vfprintf_internal_r+0x1154>
   24ab4:	da412817 	ldw	r9,1184(sp)
   24ab8:	8005883a 	mov	r2,r16
   24abc:	8821883a 	mov	r16,r17
   24ac0:	b823883a 	mov	r17,r23
   24ac4:	102f883a 	mov	r23,r2
   24ac8:	d8812717 	ldw	r2,1180(sp)
   24acc:	a4ffffc4 	addi	r19,r20,-1
   24ad0:	bdc00c04 	addi	r23,r23,48
   24ad4:	14c5c83a 	sub	r2,r2,r19
   24ad8:	a5ffffc5 	stb	r23,-1(r20)
   24adc:	d8812b15 	stw	r2,1196(sp)
   24ae0:	003d1406 	br	23f34 <___vfprintf_internal_r+0x61c>
   24ae4:	00c00044 	movi	r3,1
   24ae8:	bd84b03a 	or	r2,r23,r22
   24aec:	003d0306 	br	23efc <___vfprintf_internal_r+0x5e4>
   24af0:	dc812417 	ldw	r18,1168(sp)
   24af4:	0481140e 	bge	zero,r18,24f48 <___vfprintf_internal_r+0x1630>
   24af8:	d9013217 	ldw	r4,1224(sp)
   24afc:	4cc00015 	stw	r19,0(r9)
   24b00:	9100ec16 	blt	r18,r4,24eb4 <___vfprintf_internal_r+0x159c>
   24b04:	49000115 	stw	r4,4(r9)
   24b08:	4111883a 	add	r8,r8,r4
   24b0c:	18c00044 	addi	r3,r3,1
   24b10:	da011d15 	stw	r8,1140(sp)
   24b14:	d8c11c15 	stw	r3,1136(sp)
   24b18:	008001c4 	movi	r2,7
   24b1c:	10c23616 	blt	r2,r3,253f8 <___vfprintf_internal_r+0x1ae0>
   24b20:	4a400204 	addi	r9,r9,8
   24b24:	d8813217 	ldw	r2,1224(sp)
   24b28:	90a5c83a 	sub	r18,r18,r2
   24b2c:	04beae0e 	bge	zero,r18,245e8 <___vfprintf_internal_r+0xcd0>
   24b30:	04c00404 	movi	r19,16
   24b34:	d8c11c17 	ldw	r3,1136(sp)
   24b38:	050000f4 	movhi	r20,3
   24b3c:	a50ea684 	addi	r20,r20,15002
   24b40:	9c81dd0e 	bge	r19,r18,252b8 <___vfprintf_internal_r+0x19a0>
   24b44:	058001c4 	movi	r22,7
   24b48:	ddc12917 	ldw	r23,1188(sp)
   24b4c:	00000306 	br	24b5c <___vfprintf_internal_r+0x1244>
   24b50:	4a400204 	addi	r9,r9,8
   24b54:	94bffc04 	addi	r18,r18,-16
   24b58:	9c81d70e 	bge	r19,r18,252b8 <___vfprintf_internal_r+0x19a0>
   24b5c:	4d000015 	stw	r20,0(r9)
   24b60:	4cc00115 	stw	r19,4(r9)
   24b64:	42000404 	addi	r8,r8,16
   24b68:	18c00044 	addi	r3,r3,1
   24b6c:	da011d15 	stw	r8,1140(sp)
   24b70:	d8c11c15 	stw	r3,1136(sp)
   24b74:	b0fff60e 	bge	r22,r3,24b50 <___vfprintf_internal_r+0x1238>
   24b78:	8809883a 	mov	r4,r17
   24b7c:	b80b883a 	mov	r5,r23
   24b80:	d9811b04 	addi	r6,sp,1132
   24b84:	00238e40 	call	238e4 <__sprint_r>
   24b88:	103ca91e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24b8c:	da011d17 	ldw	r8,1140(sp)
   24b90:	d8c11c17 	ldw	r3,1136(sp)
   24b94:	da400404 	addi	r9,sp,16
   24b98:	003fee06 	br	24b54 <___vfprintf_internal_r+0x123c>
   24b9c:	d9412917 	ldw	r5,1188(sp)
   24ba0:	8809883a 	mov	r4,r17
   24ba4:	d9811b04 	addi	r6,sp,1132
   24ba8:	00238e40 	call	238e4 <__sprint_r>
   24bac:	103ca01e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24bb0:	da011d17 	ldw	r8,1140(sp)
   24bb4:	d8c11c17 	ldw	r3,1136(sp)
   24bb8:	da400404 	addi	r9,sp,16
   24bbc:	003dee06 	br	24378 <___vfprintf_internal_r+0xa60>
   24bc0:	00c00084 	movi	r3,2
   24bc4:	bd84b03a 	or	r2,r23,r22
   24bc8:	d8012585 	stb	zero,1174(sp)
   24bcc:	003ccb06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24bd0:	8080040c 	andi	r2,r16,16
   24bd4:	1000ae26 	beq	r2,zero,24e90 <___vfprintf_internal_r+0x1578>
   24bd8:	d9012d17 	ldw	r4,1204(sp)
   24bdc:	25c00017 	ldw	r23,0(r4)
   24be0:	21000104 	addi	r4,r4,4
   24be4:	d9012d15 	stw	r4,1204(sp)
   24be8:	b82dd7fa 	srai	r22,r23,31
   24bec:	b005883a 	mov	r2,r22
   24bf0:	003cb906 	br	23ed8 <___vfprintf_internal_r+0x5c0>
   24bf4:	8080040c 	andi	r2,r16,16
   24bf8:	10007026 	beq	r2,zero,24dbc <___vfprintf_internal_r+0x14a4>
   24bfc:	d8812d17 	ldw	r2,1204(sp)
   24c00:	002d883a 	mov	r22,zero
   24c04:	00c00044 	movi	r3,1
   24c08:	15c00017 	ldw	r23,0(r2)
   24c0c:	10800104 	addi	r2,r2,4
   24c10:	d8812d15 	stw	r2,1204(sp)
   24c14:	d8012585 	stb	zero,1174(sp)
   24c18:	b805883a 	mov	r2,r23
   24c1c:	003cb706 	br	23efc <___vfprintf_internal_r+0x5e4>
   24c20:	d8813217 	ldw	r2,1224(sp)
   24c24:	14ffffc4 	addi	r19,r2,-1
   24c28:	04ff4f0e 	bge	zero,r19,24968 <___vfprintf_internal_r+0x1050>
   24c2c:	05800404 	movi	r22,16
   24c30:	050000f4 	movhi	r20,3
   24c34:	a50ea684 	addi	r20,r20,15002
   24c38:	b4c0470e 	bge	r22,r19,24d58 <___vfprintf_internal_r+0x1440>
   24c3c:	05c001c4 	movi	r23,7
   24c40:	df012917 	ldw	fp,1188(sp)
   24c44:	00000306 	br	24c54 <___vfprintf_internal_r+0x133c>
   24c48:	94800204 	addi	r18,r18,8
   24c4c:	9cfffc04 	addi	r19,r19,-16
   24c50:	b4c0410e 	bge	r22,r19,24d58 <___vfprintf_internal_r+0x1440>
   24c54:	95000015 	stw	r20,0(r18)
   24c58:	95800115 	stw	r22,4(r18)
   24c5c:	42000404 	addi	r8,r8,16
   24c60:	18c00044 	addi	r3,r3,1
   24c64:	da011d15 	stw	r8,1140(sp)
   24c68:	d8c11c15 	stw	r3,1136(sp)
   24c6c:	b8fff60e 	bge	r23,r3,24c48 <___vfprintf_internal_r+0x1330>
   24c70:	8809883a 	mov	r4,r17
   24c74:	e00b883a 	mov	r5,fp
   24c78:	d9811b04 	addi	r6,sp,1132
   24c7c:	00238e40 	call	238e4 <__sprint_r>
   24c80:	103c6b1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24c84:	da011d17 	ldw	r8,1140(sp)
   24c88:	d8c11c17 	ldw	r3,1136(sp)
   24c8c:	dc800404 	addi	r18,sp,16
   24c90:	003fee06 	br	24c4c <___vfprintf_internal_r+0x1334>
   24c94:	8080040c 	andi	r2,r16,16
   24c98:	10005326 	beq	r2,zero,24de8 <___vfprintf_internal_r+0x14d0>
   24c9c:	d8c12d17 	ldw	r3,1204(sp)
   24ca0:	002d883a 	mov	r22,zero
   24ca4:	1dc00017 	ldw	r23,0(r3)
   24ca8:	18c00104 	addi	r3,r3,4
   24cac:	d8c12d15 	stw	r3,1204(sp)
   24cb0:	b805883a 	mov	r2,r23
   24cb4:	0007883a 	mov	r3,zero
   24cb8:	d8012585 	stb	zero,1174(sp)
   24cbc:	003c8f06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24cc0:	8088703a 	and	r4,r16,r2
   24cc4:	203efe1e 	bne	r4,zero,248c0 <___vfprintf_internal_r+0xfa8>
   24cc8:	48800115 	stw	r2,4(r9)
   24ccc:	42000044 	addi	r8,r8,1
   24cd0:	18c00044 	addi	r3,r3,1
   24cd4:	da011d15 	stw	r8,1140(sp)
   24cd8:	d8c11c15 	stw	r3,1136(sp)
   24cdc:	008001c4 	movi	r2,7
   24ce0:	10c00216 	blt	r2,r3,24cec <___vfprintf_internal_r+0x13d4>
   24ce4:	4c800204 	addi	r18,r9,8
   24ce8:	003f1f06 	br	24968 <___vfprintf_internal_r+0x1050>
   24cec:	d9412917 	ldw	r5,1188(sp)
   24cf0:	8809883a 	mov	r4,r17
   24cf4:	d9811b04 	addi	r6,sp,1132
   24cf8:	00238e40 	call	238e4 <__sprint_r>
   24cfc:	103c4c1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24d00:	dc800404 	addi	r18,sp,16
   24d04:	da011d17 	ldw	r8,1140(sp)
   24d08:	d8c11c17 	ldw	r3,1136(sp)
   24d0c:	003f1606 	br	24968 <___vfprintf_internal_r+0x1050>
   24d10:	d9412917 	ldw	r5,1188(sp)
   24d14:	8809883a 	mov	r4,r17
   24d18:	d9811b04 	addi	r6,sp,1132
   24d1c:	00238e40 	call	238e4 <__sprint_r>
   24d20:	103c431e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24d24:	da011d17 	ldw	r8,1140(sp)
   24d28:	d8c11c17 	ldw	r3,1136(sp)
   24d2c:	da400404 	addi	r9,sp,16
   24d30:	003eec06 	br	248e4 <___vfprintf_internal_r+0xfcc>
   24d34:	d9412917 	ldw	r5,1188(sp)
   24d38:	8809883a 	mov	r4,r17
   24d3c:	d9811b04 	addi	r6,sp,1132
   24d40:	00238e40 	call	238e4 <__sprint_r>
   24d44:	103c3a1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24d48:	da011d17 	ldw	r8,1140(sp)
   24d4c:	d8c11c17 	ldw	r3,1136(sp)
   24d50:	dc800404 	addi	r18,sp,16
   24d54:	003eee06 	br	24910 <___vfprintf_internal_r+0xff8>
   24d58:	95000015 	stw	r20,0(r18)
   24d5c:	94c00115 	stw	r19,4(r18)
   24d60:	44d1883a 	add	r8,r8,r19
   24d64:	003efa06 	br	24950 <___vfprintf_internal_r+0x1038>
   24d68:	d9412917 	ldw	r5,1188(sp)
   24d6c:	8809883a 	mov	r4,r17
   24d70:	d9811b04 	addi	r6,sp,1132
   24d74:	00238e40 	call	238e4 <__sprint_r>
   24d78:	103c2d1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24d7c:	da011d17 	ldw	r8,1140(sp)
   24d80:	d8c11c17 	ldw	r3,1136(sp)
   24d84:	da400404 	addi	r9,sp,16
   24d88:	003d9806 	br	243ec <___vfprintf_internal_r+0xad4>
   24d8c:	8080100c 	andi	r2,r16,64
   24d90:	10011626 	beq	r2,zero,251ec <___vfprintf_internal_r+0x18d4>
   24d94:	d8c12d17 	ldw	r3,1204(sp)
   24d98:	002d883a 	mov	r22,zero
   24d9c:	1dc0000b 	ldhu	r23,0(r3)
   24da0:	18c00104 	addi	r3,r3,4
   24da4:	d8c12d15 	stw	r3,1204(sp)
   24da8:	003cc106 	br	240b0 <___vfprintf_internal_r+0x798>
   24dac:	4d000015 	stw	r20,0(r9)
   24db0:	4c800115 	stw	r18,4(r9)
   24db4:	4491883a 	add	r8,r8,r18
   24db8:	003dc006 	br	244bc <___vfprintf_internal_r+0xba4>
   24dbc:	8080100c 	andi	r2,r16,64
   24dc0:	10010126 	beq	r2,zero,251c8 <___vfprintf_internal_r+0x18b0>
   24dc4:	d8c12d17 	ldw	r3,1204(sp)
   24dc8:	002d883a 	mov	r22,zero
   24dcc:	1dc0000b 	ldhu	r23,0(r3)
   24dd0:	18c00104 	addi	r3,r3,4
   24dd4:	d8c12d15 	stw	r3,1204(sp)
   24dd8:	b805883a 	mov	r2,r23
   24ddc:	00c00044 	movi	r3,1
   24de0:	d8012585 	stb	zero,1174(sp)
   24de4:	003c4506 	br	23efc <___vfprintf_internal_r+0x5e4>
   24de8:	8080100c 	andi	r2,r16,64
   24dec:	10010526 	beq	r2,zero,25204 <___vfprintf_internal_r+0x18ec>
   24df0:	d9012d17 	ldw	r4,1204(sp)
   24df4:	002d883a 	mov	r22,zero
   24df8:	0007883a 	mov	r3,zero
   24dfc:	25c0000b 	ldhu	r23,0(r4)
   24e00:	21000104 	addi	r4,r4,4
   24e04:	d9012d15 	stw	r4,1204(sp)
   24e08:	b805883a 	mov	r2,r23
   24e0c:	d8012585 	stb	zero,1174(sp)
   24e10:	003c3a06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24e14:	d8812d17 	ldw	r2,1204(sp)
   24e18:	15800017 	ldw	r22,0(r2)
   24e1c:	15000117 	ldw	r20,4(r2)
   24e20:	10800204 	addi	r2,r2,8
   24e24:	d8812d15 	stw	r2,1204(sp)
   24e28:	dd813315 	stw	r22,1228(sp)
   24e2c:	dd013415 	stw	r20,1232(sp)
   24e30:	003c5906 	br	23f98 <___vfprintf_internal_r+0x680>
   24e34:	00c00084 	movi	r3,2
   24e38:	d8012585 	stb	zero,1174(sp)
   24e3c:	003c2f06 	br	23efc <___vfprintf_internal_r+0x5e4>
   24e40:	ac800007 	ldb	r18,0(r21)
   24e44:	003b1006 	br	23a88 <___vfprintf_internal_r+0x170>
   24e48:	8080040c 	andi	r2,r16,16
   24e4c:	1000091e 	bne	r2,zero,24e74 <___vfprintf_internal_r+0x155c>
   24e50:	8400100c 	andi	r16,r16,64
   24e54:	80000726 	beq	r16,zero,24e74 <___vfprintf_internal_r+0x155c>
   24e58:	d8c12d17 	ldw	r3,1204(sp)
   24e5c:	d9012c17 	ldw	r4,1200(sp)
   24e60:	18800017 	ldw	r2,0(r3)
   24e64:	18c00104 	addi	r3,r3,4
   24e68:	d8c12d15 	stw	r3,1204(sp)
   24e6c:	1100000d 	sth	r4,0(r2)
   24e70:	003adf06 	br	239f0 <___vfprintf_internal_r+0xd8>
   24e74:	d8c12d17 	ldw	r3,1204(sp)
   24e78:	d9012c17 	ldw	r4,1200(sp)
   24e7c:	18800017 	ldw	r2,0(r3)
   24e80:	18c00104 	addi	r3,r3,4
   24e84:	d8c12d15 	stw	r3,1204(sp)
   24e88:	11000015 	stw	r4,0(r2)
   24e8c:	003ad806 	br	239f0 <___vfprintf_internal_r+0xd8>
   24e90:	8080100c 	andi	r2,r16,64
   24e94:	1000c526 	beq	r2,zero,251ac <___vfprintf_internal_r+0x1894>
   24e98:	d8812d17 	ldw	r2,1204(sp)
   24e9c:	15c0000f 	ldh	r23,0(r2)
   24ea0:	10800104 	addi	r2,r2,4
   24ea4:	d8812d15 	stw	r2,1204(sp)
   24ea8:	b82dd7fa 	srai	r22,r23,31
   24eac:	b005883a 	mov	r2,r22
   24eb0:	003c0906 	br	23ed8 <___vfprintf_internal_r+0x5c0>
   24eb4:	4c800115 	stw	r18,4(r9)
   24eb8:	9211883a 	add	r8,r18,r8
   24ebc:	18c00044 	addi	r3,r3,1
   24ec0:	da011d15 	stw	r8,1140(sp)
   24ec4:	d8c11c15 	stw	r3,1136(sp)
   24ec8:	008001c4 	movi	r2,7
   24ecc:	10c14016 	blt	r2,r3,253d0 <___vfprintf_internal_r+0x1ab8>
   24ed0:	4a400204 	addi	r9,r9,8
   24ed4:	d8813717 	ldw	r2,1244(sp)
   24ed8:	9ca7883a 	add	r19,r19,r18
   24edc:	48800015 	stw	r2,0(r9)
   24ee0:	00800044 	movi	r2,1
   24ee4:	48800115 	stw	r2,4(r9)
   24ee8:	4091883a 	add	r8,r8,r2
   24eec:	1887883a 	add	r3,r3,r2
   24ef0:	da011d15 	stw	r8,1140(sp)
   24ef4:	d8c11c15 	stw	r3,1136(sp)
   24ef8:	008001c4 	movi	r2,7
   24efc:	10c12c16 	blt	r2,r3,253b0 <___vfprintf_internal_r+0x1a98>
   24f00:	4a400204 	addi	r9,r9,8
   24f04:	d9013217 	ldw	r4,1224(sp)
   24f08:	da011d17 	ldw	r8,1140(sp)
   24f0c:	d8c11c17 	ldw	r3,1136(sp)
   24f10:	24a5c83a 	sub	r18,r4,r18
   24f14:	4cc00015 	stw	r19,0(r9)
   24f18:	003fa506 	br	24db0 <___vfprintf_internal_r+0x1498>
   24f1c:	04c000f4 	movhi	r19,3
   24f20:	9cce9304 	addi	r19,r19,14924
   24f24:	003c2e06 	br	23fe0 <___vfprintf_internal_r+0x6c8>
   24f28:	d9412917 	ldw	r5,1188(sp)
   24f2c:	8809883a 	mov	r4,r17
   24f30:	d9811b04 	addi	r6,sp,1132
   24f34:	00238e40 	call	238e4 <__sprint_r>
   24f38:	103bbd1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   24f3c:	da011d17 	ldw	r8,1140(sp)
   24f40:	da400404 	addi	r9,sp,16
   24f44:	003df606 	br	24720 <___vfprintf_internal_r+0xe08>
   24f48:	008000f4 	movhi	r2,3
   24f4c:	108ea204 	addi	r2,r2,14984
   24f50:	48800015 	stw	r2,0(r9)
   24f54:	00800044 	movi	r2,1
   24f58:	48800115 	stw	r2,4(r9)
   24f5c:	4091883a 	add	r8,r8,r2
   24f60:	1887883a 	add	r3,r3,r2
   24f64:	da011d15 	stw	r8,1140(sp)
   24f68:	d8c11c15 	stw	r3,1136(sp)
   24f6c:	008001c4 	movi	r2,7
   24f70:	10c0bc16 	blt	r2,r3,25264 <___vfprintf_internal_r+0x194c>
   24f74:	4a400204 	addi	r9,r9,8
   24f78:	9000041e 	bne	r18,zero,24f8c <___vfprintf_internal_r+0x1674>
   24f7c:	d8c13217 	ldw	r3,1224(sp)
   24f80:	1800021e 	bne	r3,zero,24f8c <___vfprintf_internal_r+0x1674>
   24f84:	8080004c 	andi	r2,r16,1
   24f88:	103d5226 	beq	r2,zero,244d4 <___vfprintf_internal_r+0xbbc>
   24f8c:	d8c11c17 	ldw	r3,1136(sp)
   24f90:	d9013717 	ldw	r4,1244(sp)
   24f94:	00800044 	movi	r2,1
   24f98:	48800115 	stw	r2,4(r9)
   24f9c:	49000015 	stw	r4,0(r9)
   24fa0:	4091883a 	add	r8,r8,r2
   24fa4:	1887883a 	add	r3,r3,r2
   24fa8:	da011d15 	stw	r8,1140(sp)
   24fac:	d8c11c15 	stw	r3,1136(sp)
   24fb0:	008001c4 	movi	r2,7
   24fb4:	10c14516 	blt	r2,r3,254cc <___vfprintf_internal_r+0x1bb4>
   24fb8:	4a400204 	addi	r9,r9,8
   24fbc:	04a5c83a 	sub	r18,zero,r18
   24fc0:	0480d70e 	bge	zero,r18,25320 <___vfprintf_internal_r+0x1a08>
   24fc4:	05800404 	movi	r22,16
   24fc8:	050000f4 	movhi	r20,3
   24fcc:	a50ea684 	addi	r20,r20,15002
   24fd0:	b480db0e 	bge	r22,r18,25340 <___vfprintf_internal_r+0x1a28>
   24fd4:	05c001c4 	movi	r23,7
   24fd8:	df012917 	ldw	fp,1188(sp)
   24fdc:	00000306 	br	24fec <___vfprintf_internal_r+0x16d4>
   24fe0:	4a400204 	addi	r9,r9,8
   24fe4:	94bffc04 	addi	r18,r18,-16
   24fe8:	b480d50e 	bge	r22,r18,25340 <___vfprintf_internal_r+0x1a28>
   24fec:	4d000015 	stw	r20,0(r9)
   24ff0:	4d800115 	stw	r22,4(r9)
   24ff4:	42000404 	addi	r8,r8,16
   24ff8:	18c00044 	addi	r3,r3,1
   24ffc:	da011d15 	stw	r8,1140(sp)
   25000:	d8c11c15 	stw	r3,1136(sp)
   25004:	b8fff60e 	bge	r23,r3,24fe0 <___vfprintf_internal_r+0x16c8>
   25008:	8809883a 	mov	r4,r17
   2500c:	e00b883a 	mov	r5,fp
   25010:	d9811b04 	addi	r6,sp,1132
   25014:	00238e40 	call	238e4 <__sprint_r>
   25018:	103b851e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   2501c:	da011d17 	ldw	r8,1140(sp)
   25020:	d8c11c17 	ldw	r3,1136(sp)
   25024:	da400404 	addi	r9,sp,16
   25028:	003fee06 	br	24fe4 <___vfprintf_internal_r+0x16cc>
   2502c:	da413c15 	stw	r9,1264(sp)
   25030:	002ab980 	call	2ab98 <__isnand>
   25034:	da413c17 	ldw	r9,1264(sp)
   25038:	10007e1e 	bne	r2,zero,25234 <___vfprintf_internal_r+0x191c>
   2503c:	00bfffc4 	movi	r2,-1
   25040:	e0816a26 	beq	fp,r2,255ec <___vfprintf_internal_r+0x1cd4>
   25044:	008019c4 	movi	r2,103
   25048:	90816526 	beq	r18,r2,255e0 <___vfprintf_internal_r+0x1cc8>
   2504c:	008011c4 	movi	r2,71
   25050:	90816326 	beq	r18,r2,255e0 <___vfprintf_internal_r+0x1cc8>
   25054:	80c04014 	ori	r3,r16,256
   25058:	d8c12a15 	stw	r3,1192(sp)
   2505c:	a0016516 	blt	r20,zero,255f4 <___vfprintf_internal_r+0x1cdc>
   25060:	d8012f05 	stb	zero,1212(sp)
   25064:	00801984 	movi	r2,102
   25068:	9080f226 	beq	r18,r2,25434 <___vfprintf_internal_r+0x1b1c>
   2506c:	00801184 	movi	r2,70
   25070:	9080f026 	beq	r18,r2,25434 <___vfprintf_internal_r+0x1b1c>
   25074:	00801944 	movi	r2,101
   25078:	90818d26 	beq	r18,r2,256b0 <___vfprintf_internal_r+0x1d98>
   2507c:	00801144 	movi	r2,69
   25080:	90818b26 	beq	r18,r2,256b0 <___vfprintf_internal_r+0x1d98>
   25084:	e02f883a 	mov	r23,fp
   25088:	d8812404 	addi	r2,sp,1168
   2508c:	d8800115 	stw	r2,4(sp)
   25090:	d8812304 	addi	r2,sp,1164
   25094:	d8800215 	stw	r2,8(sp)
   25098:	d8812204 	addi	r2,sp,1160
   2509c:	ddc00015 	stw	r23,0(sp)
   250a0:	d8800315 	stw	r2,12(sp)
   250a4:	8809883a 	mov	r4,r17
   250a8:	b00b883a 	mov	r5,r22
   250ac:	a00d883a 	mov	r6,r20
   250b0:	01c00084 	movi	r7,2
   250b4:	da413c15 	stw	r9,1264(sp)
   250b8:	00273c00 	call	273c0 <_dtoa_r>
   250bc:	1027883a 	mov	r19,r2
   250c0:	008019c4 	movi	r2,103
   250c4:	da413c17 	ldw	r9,1264(sp)
   250c8:	9081951e 	bne	r18,r2,25720 <___vfprintf_internal_r+0x1e08>
   250cc:	8080004c 	andi	r2,r16,1
   250d0:	10017926 	beq	r2,zero,256b8 <___vfprintf_internal_r+0x1da0>
   250d4:	00801184 	movi	r2,70
   250d8:	9dc7883a 	add	r3,r19,r23
   250dc:	9080e626 	beq	r18,r2,25478 <___vfprintf_internal_r+0x1b60>
   250e0:	b009883a 	mov	r4,r22
   250e4:	a00b883a 	mov	r5,r20
   250e8:	000d883a 	mov	r6,zero
   250ec:	000f883a 	mov	r7,zero
   250f0:	d8c13b15 	stw	r3,1260(sp)
   250f4:	da413c15 	stw	r9,1264(sp)
   250f8:	002f76c0 	call	2f76c <__eqdf2>
   250fc:	d8c13b17 	ldw	r3,1260(sp)
   25100:	da413c17 	ldw	r9,1264(sp)
   25104:	10000726 	beq	r2,zero,25124 <___vfprintf_internal_r+0x180c>
   25108:	d8812217 	ldw	r2,1160(sp)
   2510c:	10c18a2e 	bgeu	r2,r3,25738 <___vfprintf_internal_r+0x1e20>
   25110:	01000c04 	movi	r4,48
   25114:	11000005 	stb	r4,0(r2)
   25118:	10800044 	addi	r2,r2,1
   2511c:	d8812215 	stw	r2,1160(sp)
   25120:	10fffc1e 	bne	r2,r3,25114 <___vfprintf_internal_r+0x17fc>
   25124:	1cc7c83a 	sub	r3,r3,r19
   25128:	d8c13215 	stw	r3,1224(sp)
   2512c:	008019c4 	movi	r2,103
   25130:	9080fa26 	beq	r18,r2,2551c <___vfprintf_internal_r+0x1c04>
   25134:	008011c4 	movi	r2,71
   25138:	9080f826 	beq	r18,r2,2551c <___vfprintf_internal_r+0x1c04>
   2513c:	00801984 	movi	r2,102
   25140:	90818e1e 	bne	r18,r2,2577c <___vfprintf_internal_r+0x1e64>
   25144:	d8812417 	ldw	r2,1168(sp)
   25148:	d8812b15 	stw	r2,1196(sp)
   2514c:	00817c0e 	bge	zero,r2,25740 <___vfprintf_internal_r+0x1e28>
   25150:	e000021e 	bne	fp,zero,2515c <___vfprintf_internal_r+0x1844>
   25154:	8400004c 	andi	r16,r16,1
   25158:	80000426 	beq	r16,zero,2516c <___vfprintf_internal_r+0x1854>
   2515c:	d8812b17 	ldw	r2,1196(sp)
   25160:	e2000044 	addi	r8,fp,1
   25164:	1205883a 	add	r2,r2,r8
   25168:	d8812b15 	stw	r2,1196(sp)
   2516c:	d8812815 	stw	r2,1184(sp)
   25170:	10010b16 	blt	r2,zero,255a0 <___vfprintf_internal_r+0x1c88>
   25174:	ddc12f07 	ldb	r23,1212(sp)
   25178:	b800e426 	beq	r23,zero,2550c <___vfprintf_internal_r+0x1bf4>
   2517c:	00800b44 	movi	r2,45
   25180:	d8812585 	stb	r2,1174(sp)
   25184:	dc012a17 	ldw	r16,1192(sp)
   25188:	d8013115 	stw	zero,1220(sp)
   2518c:	003b7306 	br	23f5c <___vfprintf_internal_r+0x644>
   25190:	d8812b17 	ldw	r2,1196(sp)
   25194:	d8812815 	stw	r2,1184(sp)
   25198:	10005716 	blt	r2,zero,252f8 <___vfprintf_internal_r+0x19e0>
   2519c:	d8812583 	ldbu	r2,1174(sp)
   251a0:	ddc12d15 	stw	r23,1204(sp)
   251a4:	d8013115 	stw	zero,1220(sp)
   251a8:	003b6806 	br	23f4c <___vfprintf_internal_r+0x634>
   251ac:	d8c12d17 	ldw	r3,1204(sp)
   251b0:	1dc00017 	ldw	r23,0(r3)
   251b4:	18c00104 	addi	r3,r3,4
   251b8:	d8c12d15 	stw	r3,1204(sp)
   251bc:	b82dd7fa 	srai	r22,r23,31
   251c0:	b005883a 	mov	r2,r22
   251c4:	003b4406 	br	23ed8 <___vfprintf_internal_r+0x5c0>
   251c8:	d9012d17 	ldw	r4,1204(sp)
   251cc:	002d883a 	mov	r22,zero
   251d0:	00c00044 	movi	r3,1
   251d4:	25c00017 	ldw	r23,0(r4)
   251d8:	21000104 	addi	r4,r4,4
   251dc:	d9012d15 	stw	r4,1204(sp)
   251e0:	b805883a 	mov	r2,r23
   251e4:	d8012585 	stb	zero,1174(sp)
   251e8:	003b4406 	br	23efc <___vfprintf_internal_r+0x5e4>
   251ec:	d9012d17 	ldw	r4,1204(sp)
   251f0:	002d883a 	mov	r22,zero
   251f4:	25c00017 	ldw	r23,0(r4)
   251f8:	21000104 	addi	r4,r4,4
   251fc:	d9012d15 	stw	r4,1204(sp)
   25200:	003bab06 	br	240b0 <___vfprintf_internal_r+0x798>
   25204:	d8812d17 	ldw	r2,1204(sp)
   25208:	002d883a 	mov	r22,zero
   2520c:	0007883a 	mov	r3,zero
   25210:	15c00017 	ldw	r23,0(r2)
   25214:	10800104 	addi	r2,r2,4
   25218:	d8812d15 	stw	r2,1204(sp)
   2521c:	d8012585 	stb	zero,1174(sp)
   25220:	b805883a 	mov	r2,r23
   25224:	003b3506 	br	23efc <___vfprintf_internal_r+0x5e4>
   25228:	00ffffc4 	movi	r3,-1
   2522c:	b82b883a 	mov	r21,r23
   25230:	003a1606 	br	23a8c <___vfprintf_internal_r+0x174>
   25234:	008011c4 	movi	r2,71
   25238:	1480b116 	blt	r2,r18,25500 <___vfprintf_internal_r+0x1be8>
   2523c:	04c000f4 	movhi	r19,3
   25240:	9cce9404 	addi	r19,r19,14928
   25244:	00c000c4 	movi	r3,3
   25248:	00bfdfc4 	movi	r2,-129
   2524c:	80a0703a 	and	r16,r16,r2
   25250:	d8c12815 	stw	r3,1184(sp)
   25254:	d8812583 	ldbu	r2,1174(sp)
   25258:	d8c12b15 	stw	r3,1196(sp)
   2525c:	d8013115 	stw	zero,1220(sp)
   25260:	003b3a06 	br	23f4c <___vfprintf_internal_r+0x634>
   25264:	d9412917 	ldw	r5,1188(sp)
   25268:	8809883a 	mov	r4,r17
   2526c:	d9811b04 	addi	r6,sp,1132
   25270:	00238e40 	call	238e4 <__sprint_r>
   25274:	103aee1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   25278:	dc812417 	ldw	r18,1168(sp)
   2527c:	da011d17 	ldw	r8,1140(sp)
   25280:	da400404 	addi	r9,sp,16
   25284:	003f3c06 	br	24f78 <___vfprintf_internal_r+0x1660>
   25288:	ad400044 	addi	r21,r21,1
   2528c:	84000814 	ori	r16,r16,32
   25290:	14800047 	ldb	r18,1(r2)
   25294:	0039fc06 	br	23a88 <___vfprintf_internal_r+0x170>
   25298:	d9412917 	ldw	r5,1188(sp)
   2529c:	8809883a 	mov	r4,r17
   252a0:	d9811b04 	addi	r6,sp,1132
   252a4:	00238e40 	call	238e4 <__sprint_r>
   252a8:	103ae11e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   252ac:	da011d17 	ldw	r8,1140(sp)
   252b0:	da400404 	addi	r9,sp,16
   252b4:	003d2b06 	br	24764 <___vfprintf_internal_r+0xe4c>
   252b8:	4d000015 	stw	r20,0(r9)
   252bc:	4c800115 	stw	r18,4(r9)
   252c0:	4491883a 	add	r8,r8,r18
   252c4:	18c00044 	addi	r3,r3,1
   252c8:	da011d15 	stw	r8,1140(sp)
   252cc:	d8c11c15 	stw	r3,1136(sp)
   252d0:	008001c4 	movi	r2,7
   252d4:	10fcbd16 	blt	r2,r3,245cc <___vfprintf_internal_r+0xcb4>
   252d8:	4a400204 	addi	r9,r9,8
   252dc:	003cc206 	br	245e8 <___vfprintf_internal_r+0xcd0>
   252e0:	da413c15 	stw	r9,1264(sp)
   252e4:	00238580 	call	23858 <strlen>
   252e8:	d8812b15 	stw	r2,1196(sp)
   252ec:	d8812815 	stw	r2,1184(sp)
   252f0:	da413c17 	ldw	r9,1264(sp)
   252f4:	103fa90e 	bge	r2,zero,2519c <___vfprintf_internal_r+0x1884>
   252f8:	d8012815 	stw	zero,1184(sp)
   252fc:	003fa706 	br	2519c <___vfprintf_internal_r+0x1884>
   25300:	d9412917 	ldw	r5,1188(sp)
   25304:	8809883a 	mov	r4,r17
   25308:	d9811b04 	addi	r6,sp,1132
   2530c:	00238e40 	call	238e4 <__sprint_r>
   25310:	103ac71e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   25314:	da011d17 	ldw	r8,1140(sp)
   25318:	d8c11c17 	ldw	r3,1136(sp)
   2531c:	da400404 	addi	r9,sp,16
   25320:	d8813217 	ldw	r2,1224(sp)
   25324:	4cc00015 	stw	r19,0(r9)
   25328:	48800115 	stw	r2,4(r9)
   2532c:	4091883a 	add	r8,r8,r2
   25330:	003c6206 	br	244bc <___vfprintf_internal_r+0xba4>
   25334:	00800b44 	movi	r2,45
   25338:	d8812585 	stb	r2,1174(sp)
   2533c:	003b2406 	br	23fd0 <___vfprintf_internal_r+0x6b8>
   25340:	4d000015 	stw	r20,0(r9)
   25344:	4c800115 	stw	r18,4(r9)
   25348:	4491883a 	add	r8,r8,r18
   2534c:	18c00044 	addi	r3,r3,1
   25350:	da011d15 	stw	r8,1140(sp)
   25354:	d8c11c15 	stw	r3,1136(sp)
   25358:	008001c4 	movi	r2,7
   2535c:	10ffe816 	blt	r2,r3,25300 <___vfprintf_internal_r+0x19e8>
   25360:	4a400204 	addi	r9,r9,8
   25364:	003fee06 	br	25320 <___vfprintf_internal_r+0x1a08>
   25368:	d8c12b15 	stw	r3,1196(sp)
   2536c:	00800184 	movi	r2,6
   25370:	10c0062e 	bgeu	r2,r3,2538c <___vfprintf_internal_r+0x1a74>
   25374:	d8812b15 	stw	r2,1196(sp)
   25378:	d8812815 	stw	r2,1184(sp)
   2537c:	ddc12d15 	stw	r23,1204(sp)
   25380:	04c000f4 	movhi	r19,3
   25384:	9ccea004 	addi	r19,r19,14976
   25388:	0039ca06 	br	23ab4 <___vfprintf_internal_r+0x19c>
   2538c:	d8812b17 	ldw	r2,1196(sp)
   25390:	d8812815 	stw	r2,1184(sp)
   25394:	103ff90e 	bge	r2,zero,2537c <___vfprintf_internal_r+0x1a64>
   25398:	d8012815 	stw	zero,1184(sp)
   2539c:	003ff706 	br	2537c <___vfprintf_internal_r+0x1a64>
   253a0:	00800244 	movi	r2,9
   253a4:	15fdaa36 	bltu	r2,r23,24a50 <___vfprintf_internal_r+0x1138>
   253a8:	dd010e04 	addi	r20,sp,1080
   253ac:	003dc606 	br	24ac8 <___vfprintf_internal_r+0x11b0>
   253b0:	d9412917 	ldw	r5,1188(sp)
   253b4:	8809883a 	mov	r4,r17
   253b8:	d9811b04 	addi	r6,sp,1132
   253bc:	00238e40 	call	238e4 <__sprint_r>
   253c0:	103a9b1e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   253c4:	dc812417 	ldw	r18,1168(sp)
   253c8:	da400404 	addi	r9,sp,16
   253cc:	003ecd06 	br	24f04 <___vfprintf_internal_r+0x15ec>
   253d0:	d9412917 	ldw	r5,1188(sp)
   253d4:	8809883a 	mov	r4,r17
   253d8:	d9811b04 	addi	r6,sp,1132
   253dc:	00238e40 	call	238e4 <__sprint_r>
   253e0:	103a931e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   253e4:	dc812417 	ldw	r18,1168(sp)
   253e8:	da011d17 	ldw	r8,1140(sp)
   253ec:	d8c11c17 	ldw	r3,1136(sp)
   253f0:	da400404 	addi	r9,sp,16
   253f4:	003eb706 	br	24ed4 <___vfprintf_internal_r+0x15bc>
   253f8:	d9412917 	ldw	r5,1188(sp)
   253fc:	8809883a 	mov	r4,r17
   25400:	d9811b04 	addi	r6,sp,1132
   25404:	00238e40 	call	238e4 <__sprint_r>
   25408:	103a891e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   2540c:	dc812417 	ldw	r18,1168(sp)
   25410:	da011d17 	ldw	r8,1140(sp)
   25414:	da400404 	addi	r9,sp,16
   25418:	003dc206 	br	24b24 <___vfprintf_internal_r+0x120c>
   2541c:	df012815 	stw	fp,1184(sp)
   25420:	d8812583 	ldbu	r2,1174(sp)
   25424:	df012b15 	stw	fp,1196(sp)
   25428:	ddc12d15 	stw	r23,1204(sp)
   2542c:	d8013115 	stw	zero,1220(sp)
   25430:	003ac606 	br	23f4c <___vfprintf_internal_r+0x634>
   25434:	d8812404 	addi	r2,sp,1168
   25438:	d8800115 	stw	r2,4(sp)
   2543c:	d8812304 	addi	r2,sp,1164
   25440:	d8800215 	stw	r2,8(sp)
   25444:	d8812204 	addi	r2,sp,1160
   25448:	df000015 	stw	fp,0(sp)
   2544c:	d8800315 	stw	r2,12(sp)
   25450:	8809883a 	mov	r4,r17
   25454:	b00b883a 	mov	r5,r22
   25458:	a00d883a 	mov	r6,r20
   2545c:	01c000c4 	movi	r7,3
   25460:	da413c15 	stw	r9,1264(sp)
   25464:	00273c00 	call	273c0 <_dtoa_r>
   25468:	da413c17 	ldw	r9,1264(sp)
   2546c:	1027883a 	mov	r19,r2
   25470:	1707883a 	add	r3,r2,fp
   25474:	e02f883a 	mov	r23,fp
   25478:	99000007 	ldb	r4,0(r19)
   2547c:	00800c04 	movi	r2,48
   25480:	20800326 	beq	r4,r2,25490 <___vfprintf_internal_r+0x1b78>
   25484:	da812417 	ldw	r10,1168(sp)
   25488:	1a87883a 	add	r3,r3,r10
   2548c:	003f1406 	br	250e0 <___vfprintf_internal_r+0x17c8>
   25490:	b009883a 	mov	r4,r22
   25494:	a00b883a 	mov	r5,r20
   25498:	000d883a 	mov	r6,zero
   2549c:	000f883a 	mov	r7,zero
   254a0:	d8c13b15 	stw	r3,1260(sp)
   254a4:	da413c15 	stw	r9,1264(sp)
   254a8:	002f7c80 	call	2f7c8 <__nedf2>
   254ac:	d8c13b17 	ldw	r3,1260(sp)
   254b0:	da413c17 	ldw	r9,1264(sp)
   254b4:	103ff326 	beq	r2,zero,25484 <___vfprintf_internal_r+0x1b6c>
   254b8:	00800044 	movi	r2,1
   254bc:	15d5c83a 	sub	r10,r2,r23
   254c0:	da812415 	stw	r10,1168(sp)
   254c4:	1a87883a 	add	r3,r3,r10
   254c8:	003f0506 	br	250e0 <___vfprintf_internal_r+0x17c8>
   254cc:	d9412917 	ldw	r5,1188(sp)
   254d0:	8809883a 	mov	r4,r17
   254d4:	d9811b04 	addi	r6,sp,1132
   254d8:	00238e40 	call	238e4 <__sprint_r>
   254dc:	103a541e 	bne	r2,zero,23e30 <___vfprintf_internal_r+0x518>
   254e0:	dc812417 	ldw	r18,1168(sp)
   254e4:	da011d17 	ldw	r8,1140(sp)
   254e8:	d8c11c17 	ldw	r3,1136(sp)
   254ec:	da400404 	addi	r9,sp,16
   254f0:	003eb206 	br	24fbc <___vfprintf_internal_r+0x16a4>
   254f4:	b82b883a 	mov	r21,r23
   254f8:	0007883a 	mov	r3,zero
   254fc:	00396306 	br	23a8c <___vfprintf_internal_r+0x174>
   25500:	04c000f4 	movhi	r19,3
   25504:	9cce9504 	addi	r19,r19,14932
   25508:	003f4e06 	br	25244 <___vfprintf_internal_r+0x192c>
   2550c:	d8812583 	ldbu	r2,1174(sp)
   25510:	dc012a17 	ldw	r16,1192(sp)
   25514:	d8013115 	stw	zero,1220(sp)
   25518:	003a8c06 	br	23f4c <___vfprintf_internal_r+0x634>
   2551c:	d8812417 	ldw	r2,1168(sp)
   25520:	d8812b15 	stw	r2,1196(sp)
   25524:	1029883a 	mov	r20,r2
   25528:	00bfff44 	movi	r2,-3
   2552c:	a0800116 	blt	r20,r2,25534 <___vfprintf_internal_r+0x1c1c>
   25530:	e5001d0e 	bge	fp,r20,255a8 <___vfprintf_internal_r+0x1c90>
   25534:	94bfff84 	addi	r18,r18,-2
   25538:	a53fffc4 	addi	r20,r20,-1
   2553c:	dd012415 	stw	r20,1168(sp)
   25540:	dc811fc5 	stb	r18,1151(sp)
   25544:	a0007216 	blt	r20,zero,25710 <___vfprintf_internal_r+0x1df8>
   25548:	00800ac4 	movi	r2,43
   2554c:	d8812005 	stb	r2,1152(sp)
   25550:	00800244 	movi	r2,9
   25554:	15003516 	blt	r2,r20,2562c <___vfprintf_internal_r+0x1d14>
   25558:	00800c04 	movi	r2,48
   2555c:	a5000c04 	addi	r20,r20,48
   25560:	d8812045 	stb	r2,1153(sp)
   25564:	dd012085 	stb	r20,1154(sp)
   25568:	d8c120c4 	addi	r3,sp,1155
   2556c:	d8811fc4 	addi	r2,sp,1151
   25570:	1885c83a 	sub	r2,r3,r2
   25574:	d8c13217 	ldw	r3,1224(sp)
   25578:	d8813515 	stw	r2,1236(sp)
   2557c:	1885883a 	add	r2,r3,r2
   25580:	d8812b15 	stw	r2,1196(sp)
   25584:	00800044 	movi	r2,1
   25588:	10c0580e 	bge	r2,r3,256ec <___vfprintf_internal_r+0x1dd4>
   2558c:	d8812b17 	ldw	r2,1196(sp)
   25590:	10800044 	addi	r2,r2,1
   25594:	d8812b15 	stw	r2,1196(sp)
   25598:	d8812815 	stw	r2,1184(sp)
   2559c:	103ef50e 	bge	r2,zero,25174 <___vfprintf_internal_r+0x185c>
   255a0:	d8012815 	stw	zero,1184(sp)
   255a4:	003ef306 	br	25174 <___vfprintf_internal_r+0x185c>
   255a8:	d8812b17 	ldw	r2,1196(sp)
   255ac:	d8c13217 	ldw	r3,1224(sp)
   255b0:	10c01416 	blt	r2,r3,25604 <___vfprintf_internal_r+0x1cec>
   255b4:	8400004c 	andi	r16,r16,1
   255b8:	80000326 	beq	r16,zero,255c8 <___vfprintf_internal_r+0x1cb0>
   255bc:	d8812b17 	ldw	r2,1196(sp)
   255c0:	10800044 	addi	r2,r2,1
   255c4:	d8812b15 	stw	r2,1196(sp)
   255c8:	d8812815 	stw	r2,1184(sp)
   255cc:	10001416 	blt	r2,zero,25620 <___vfprintf_internal_r+0x1d08>
   255d0:	048019c4 	movi	r18,103
   255d4:	003ee706 	br	25174 <___vfprintf_internal_r+0x185c>
   255d8:	d8012815 	stw	zero,1184(sp)
   255dc:	003b1a06 	br	24248 <___vfprintf_internal_r+0x930>
   255e0:	e03e9c1e 	bne	fp,zero,25054 <___vfprintf_internal_r+0x173c>
   255e4:	07000044 	movi	fp,1
   255e8:	003e9a06 	br	25054 <___vfprintf_internal_r+0x173c>
   255ec:	07000184 	movi	fp,6
   255f0:	003e9806 	br	25054 <___vfprintf_internal_r+0x173c>
   255f4:	00c00b44 	movi	r3,45
   255f8:	a520003c 	xorhi	r20,r20,32768
   255fc:	d8c12f05 	stb	r3,1212(sp)
   25600:	003e9806 	br	25064 <___vfprintf_internal_r+0x174c>
   25604:	05003f0e 	bge	zero,r20,25704 <___vfprintf_internal_r+0x1dec>
   25608:	05000044 	movi	r20,1
   2560c:	d8c13217 	ldw	r3,1224(sp)
   25610:	a0e9883a 	add	r20,r20,r3
   25614:	dd012b15 	stw	r20,1196(sp)
   25618:	dd012815 	stw	r20,1184(sp)
   2561c:	a03fec0e 	bge	r20,zero,255d0 <___vfprintf_internal_r+0x1cb8>
   25620:	d8012815 	stw	zero,1184(sp)
   25624:	048019c4 	movi	r18,103
   25628:	003ed206 	br	25174 <___vfprintf_internal_r+0x185c>
   2562c:	d8c11f84 	addi	r3,sp,1150
   25630:	102f883a 	mov	r23,r2
   25634:	4839883a 	mov	fp,r9
   25638:	a009883a 	mov	r4,r20
   2563c:	01400284 	movi	r5,10
   25640:	182d883a 	mov	r22,r3
   25644:	002fd8c0 	call	2fd8c <__modsi3>
   25648:	10800c04 	addi	r2,r2,48
   2564c:	a009883a 	mov	r4,r20
   25650:	b0800005 	stb	r2,0(r22)
   25654:	01400284 	movi	r5,10
   25658:	002fd3c0 	call	2fd3c <__divsi3>
   2565c:	1029883a 	mov	r20,r2
   25660:	b0ffffc4 	addi	r3,r22,-1
   25664:	b8bff416 	blt	r23,r2,25638 <___vfprintf_internal_r+0x1d20>
   25668:	11400c04 	addi	r5,r2,48
   2566c:	b17fffc5 	stb	r5,-1(r22)
   25670:	d8811fc4 	addi	r2,sp,1151
   25674:	e013883a 	mov	r9,fp
   25678:	18803e2e 	bgeu	r3,r2,25774 <___vfprintf_internal_r+0x1e5c>
   2567c:	b007883a 	mov	r3,r22
   25680:	d9012044 	addi	r4,sp,1153
   25684:	00000206 	br	25690 <___vfprintf_internal_r+0x1d78>
   25688:	19400003 	ldbu	r5,0(r3)
   2568c:	18c00044 	addi	r3,r3,1
   25690:	21400005 	stb	r5,0(r4)
   25694:	21000044 	addi	r4,r4,1
   25698:	10fffb1e 	bne	r2,r3,25688 <___vfprintf_internal_r+0x1d70>
   2569c:	d8c12004 	addi	r3,sp,1152
   256a0:	1d87c83a 	sub	r3,r3,r22
   256a4:	d9012044 	addi	r4,sp,1153
   256a8:	20c7883a 	add	r3,r4,r3
   256ac:	003fb006 	br	25570 <___vfprintf_internal_r+0x1c58>
   256b0:	e5c00044 	addi	r23,fp,1
   256b4:	003e7406 	br	25088 <___vfprintf_internal_r+0x1770>
   256b8:	d8c12217 	ldw	r3,1160(sp)
   256bc:	003e9906 	br	25124 <___vfprintf_internal_r+0x180c>
   256c0:	d9012d17 	ldw	r4,1204(sp)
   256c4:	ac800043 	ldbu	r18,1(r21)
   256c8:	b82b883a 	mov	r21,r23
   256cc:	20c00017 	ldw	r3,0(r4)
   256d0:	20800104 	addi	r2,r4,4
   256d4:	d8812d15 	stw	r2,1204(sp)
   256d8:	18002116 	blt	r3,zero,25760 <___vfprintf_internal_r+0x1e48>
   256dc:	94803fcc 	andi	r18,r18,255
   256e0:	9480201c 	xori	r18,r18,128
   256e4:	94bfe004 	addi	r18,r18,-128
   256e8:	0038e706 	br	23a88 <___vfprintf_internal_r+0x170>
   256ec:	80a0703a 	and	r16,r16,r2
   256f0:	803fa61e 	bne	r16,zero,2558c <___vfprintf_internal_r+0x1c74>
   256f4:	d8812b17 	ldw	r2,1196(sp)
   256f8:	d8812815 	stw	r2,1184(sp)
   256fc:	103e9d0e 	bge	r2,zero,25174 <___vfprintf_internal_r+0x185c>
   25700:	003fa706 	br	255a0 <___vfprintf_internal_r+0x1c88>
   25704:	00800084 	movi	r2,2
   25708:	1529c83a 	sub	r20,r2,r20
   2570c:	003fbf06 	br	2560c <___vfprintf_internal_r+0x1cf4>
   25710:	00800b44 	movi	r2,45
   25714:	0529c83a 	sub	r20,zero,r20
   25718:	d8812005 	stb	r2,1152(sp)
   2571c:	003f8c06 	br	25550 <___vfprintf_internal_r+0x1c38>
   25720:	008011c4 	movi	r2,71
   25724:	90be6926 	beq	r18,r2,250cc <___vfprintf_internal_r+0x17b4>
   25728:	003e6a06 	br	250d4 <___vfprintf_internal_r+0x17bc>
   2572c:	00bfffc4 	movi	r2,-1
   25730:	d8812c15 	stw	r2,1200(sp)
   25734:	0039ad06 	br	23dec <___vfprintf_internal_r+0x4d4>
   25738:	1007883a 	mov	r3,r2
   2573c:	003e7906 	br	25124 <___vfprintf_internal_r+0x180c>
   25740:	e000021e 	bne	fp,zero,2574c <___vfprintf_internal_r+0x1e34>
   25744:	8400004c 	andi	r16,r16,1
   25748:	80000e26 	beq	r16,zero,25784 <___vfprintf_internal_r+0x1e6c>
   2574c:	e7000084 	addi	fp,fp,2
   25750:	df012b15 	stw	fp,1196(sp)
   25754:	df012815 	stw	fp,1184(sp)
   25758:	e03e860e 	bge	fp,zero,25174 <___vfprintf_internal_r+0x185c>
   2575c:	003f9006 	br	255a0 <___vfprintf_internal_r+0x1c88>
   25760:	94803fcc 	andi	r18,r18,255
   25764:	9480201c 	xori	r18,r18,128
   25768:	00ffffc4 	movi	r3,-1
   2576c:	94bfe004 	addi	r18,r18,-128
   25770:	0038c506 	br	23a88 <___vfprintf_internal_r+0x170>
   25774:	d8c12044 	addi	r3,sp,1153
   25778:	003f7d06 	br	25570 <___vfprintf_internal_r+0x1c58>
   2577c:	dd012417 	ldw	r20,1168(sp)
   25780:	003f6d06 	br	25538 <___vfprintf_internal_r+0x1c20>
   25784:	00c00044 	movi	r3,1
   25788:	d8c12815 	stw	r3,1184(sp)
   2578c:	d8c12b15 	stw	r3,1196(sp)
   25790:	003e7806 	br	25174 <___vfprintf_internal_r+0x185c>

00025794 <__vfprintf_internal>:
   25794:	008000f4 	movhi	r2,3
   25798:	1096b704 	addi	r2,r2,23260
   2579c:	2007883a 	mov	r3,r4
   257a0:	11000017 	ldw	r4,0(r2)
   257a4:	2805883a 	mov	r2,r5
   257a8:	300f883a 	mov	r7,r6
   257ac:	180b883a 	mov	r5,r3
   257b0:	100d883a 	mov	r6,r2
   257b4:	00239181 	jmpi	23918 <___vfprintf_internal_r>

000257b8 <__svfscanf_r>:
   257b8:	deff4c04 	addi	sp,sp,-720
   257bc:	ddc0b115 	stw	r23,708(sp)
   257c0:	dd00ae15 	stw	r20,696(sp)
   257c4:	dcc0ad15 	stw	r19,692(sp)
   257c8:	dc80ac15 	stw	r18,688(sp)
   257cc:	dc40ab15 	stw	r17,684(sp)
   257d0:	dc00aa15 	stw	r16,680(sp)
   257d4:	dfc0b315 	stw	ra,716(sp)
   257d8:	df00b215 	stw	fp,712(sp)
   257dc:	dd80b015 	stw	r22,704(sp)
   257e0:	dd40af15 	stw	r21,700(sp)
   257e4:	30800007 	ldb	r2,0(r6)
   257e8:	002f883a 	mov	r23,zero
   257ec:	d9c09c15 	stw	r7,624(sp)
   257f0:	d800a015 	stw	zero,640(sp)
   257f4:	d8009f15 	stw	zero,636(sp)
   257f8:	d8009e15 	stw	zero,632(sp)
   257fc:	d8809b15 	stw	r2,620(sp)
   25800:	2023883a 	mov	r17,r4
   25804:	048000f4 	movhi	r18,3
   25808:	9496ba04 	addi	r18,r18,23272
   2580c:	b829883a 	mov	r20,r23
   25810:	2827883a 	mov	r19,r5
   25814:	34000044 	addi	r16,r6,1
   25818:	10002426 	beq	r2,zero,258ac <__svfscanf_r+0xf4>
   2581c:	95400017 	ldw	r21,0(r18)
   25820:	a887883a 	add	r3,r21,r2
   25824:	18c00003 	ldbu	r3,0(r3)
   25828:	18c0020c 	andi	r3,r3,8
   2582c:	18c03fcc 	andi	r3,r3,255
   25830:	18c0201c 	xori	r3,r3,128
   25834:	18ffe004 	addi	r3,r3,-128
   25838:	18002926 	beq	r3,zero,258e0 <__svfscanf_r+0x128>
   2583c:	98800117 	ldw	r2,4(r19)
   25840:	0080110e 	bge	zero,r2,25888 <__svfscanf_r+0xd0>
   25844:	98c00017 	ldw	r3,0(r19)
   25848:	91000017 	ldw	r4,0(r18)
   2584c:	18800003 	ldbu	r2,0(r3)
   25850:	2085883a 	add	r2,r4,r2
   25854:	10800003 	ldbu	r2,0(r2)
   25858:	1080020c 	andi	r2,r2,8
   2585c:	10803fcc 	andi	r2,r2,255
   25860:	1080201c 	xori	r2,r2,128
   25864:	10bfe004 	addi	r2,r2,-128
   25868:	10000b26 	beq	r2,zero,25898 <__svfscanf_r+0xe0>
   2586c:	98800117 	ldw	r2,4(r19)
   25870:	18c00044 	addi	r3,r3,1
   25874:	98c00015 	stw	r3,0(r19)
   25878:	10bfffc4 	addi	r2,r2,-1
   2587c:	98800115 	stw	r2,4(r19)
   25880:	a5000044 	addi	r20,r20,1
   25884:	00bfef16 	blt	zero,r2,25844 <__svfscanf_r+0x8c>
   25888:	8809883a 	mov	r4,r17
   2588c:	980b883a 	mov	r5,r19
   25890:	00234c80 	call	234c8 <__srefill_r>
   25894:	103feb26 	beq	r2,zero,25844 <__svfscanf_r+0x8c>
   25898:	800d883a 	mov	r6,r16
   2589c:	30800007 	ldb	r2,0(r6)
   258a0:	34000044 	addi	r16,r6,1
   258a4:	d8809b15 	stw	r2,620(sp)
   258a8:	103fdc1e 	bne	r2,zero,2581c <__svfscanf_r+0x64>
   258ac:	d8809e17 	ldw	r2,632(sp)
   258b0:	dfc0b317 	ldw	ra,716(sp)
   258b4:	df00b217 	ldw	fp,712(sp)
   258b8:	ddc0b117 	ldw	r23,708(sp)
   258bc:	dd80b017 	ldw	r22,704(sp)
   258c0:	dd40af17 	ldw	r21,700(sp)
   258c4:	dd00ae17 	ldw	r20,696(sp)
   258c8:	dcc0ad17 	ldw	r19,692(sp)
   258cc:	dc80ac17 	ldw	r18,688(sp)
   258d0:	dc40ab17 	ldw	r17,684(sp)
   258d4:	dc00aa17 	ldw	r16,680(sp)
   258d8:	dec0b404 	addi	sp,sp,720
   258dc:	f800283a 	ret
   258e0:	00c00944 	movi	r3,37
   258e4:	10c00e26 	beq	r2,r3,25920 <__svfscanf_r+0x168>
   258e8:	98800117 	ldw	r2,4(r19)
   258ec:	0080e40e 	bge	zero,r2,25c80 <__svfscanf_r+0x4c8>
   258f0:	98800017 	ldw	r2,0(r19)
   258f4:	80ffffc7 	ldb	r3,-1(r16)
   258f8:	11000003 	ldbu	r4,0(r2)
   258fc:	20ffeb1e 	bne	r4,r3,258ac <__svfscanf_r+0xf4>
   25900:	98c00117 	ldw	r3,4(r19)
   25904:	10800044 	addi	r2,r2,1
   25908:	98800015 	stw	r2,0(r19)
   2590c:	18bfffc4 	addi	r2,r3,-1
   25910:	98800115 	stw	r2,4(r19)
   25914:	a5000044 	addi	r20,r20,1
   25918:	800d883a 	mov	r6,r16
   2591c:	003fdf06 	br	2589c <__svfscanf_r+0xe4>
   25920:	0039883a 	mov	fp,zero
   25924:	35c00043 	ldbu	r23,1(r6)
   25928:	002d883a 	mov	r22,zero
   2592c:	00c01e04 	movi	r3,120
   25930:	01801b04 	movi	r6,108
   25934:	e009883a 	mov	r4,fp
   25938:	b8803fcc 	andi	r2,r23,255
   2593c:	87000044 	addi	fp,r16,1
   25940:	18804f2e 	bgeu	r3,r2,25a80 <__svfscanf_r+0x2c8>
   25944:	bdc03fcc 	andi	r23,r23,255
   25948:	bdc0201c 	xori	r23,r23,128
   2594c:	bdffe004 	addi	r23,r23,-128
   25950:	adeb883a 	add	r21,r21,r23
   25954:	a8800003 	ldbu	r2,0(r21)
   25958:	df009d15 	stw	fp,628(sp)
   2595c:	2039883a 	mov	fp,r4
   25960:	1080004c 	andi	r2,r2,1
   25964:	1002d926 	beq	r2,zero,264cc <__svfscanf_r+0xd14>
   25968:	b5800054 	ori	r22,r22,1
   2596c:	008000f4 	movhi	r2,3
   25970:	10b11f04 	addi	r2,r2,-15236
   25974:	00c00284 	movi	r3,10
   25978:	d880a015 	stw	r2,640(sp)
   2597c:	d8c09f15 	stw	r3,636(sp)
   25980:	040000c4 	movi	r16,3
   25984:	98800117 	ldw	r2,4(r19)
   25988:	0081bd0e 	bge	zero,r2,26080 <__svfscanf_r+0x8c8>
   2598c:	b080100c 	andi	r2,r22,64
   25990:	1000ce26 	beq	r2,zero,25ccc <__svfscanf_r+0x514>
   25994:	00800084 	movi	r2,2
   25998:	80818426 	beq	r16,r2,25fac <__svfscanf_r+0x7f4>
   2599c:	1400f716 	blt	r2,r16,25d7c <__svfscanf_r+0x5c4>
   259a0:	00800044 	movi	r2,1
   259a4:	8080dc26 	beq	r16,r2,25d18 <__svfscanf_r+0x560>
   259a8:	e000011e 	bne	fp,zero,259b0 <__svfscanf_r+0x1f8>
   259ac:	07000044 	movi	fp,1
   259b0:	b080004c 	andi	r2,r22,1
   259b4:	10022826 	beq	r2,zero,26258 <__svfscanf_r+0xaa0>
   259b8:	b5c0040c 	andi	r23,r22,16
   259bc:	b804601e 	bne	r23,zero,26b40 <__svfscanf_r+0x1388>
   259c0:	d8c09c17 	ldw	r3,624(sp)
   259c4:	1d800017 	ldw	r22,0(r3)
   259c8:	18c00104 	addi	r3,r3,4
   259cc:	d8c09c15 	stw	r3,624(sp)
   259d0:	0021883a 	mov	r16,zero
   259d4:	dd409904 	addi	r21,sp,612
   259d8:	010000f4 	movhi	r4,3
   259dc:	2116bb04 	addi	r4,r4,23276
   259e0:	20800017 	ldw	r2,0(r4)
   259e4:	8080aa26 	beq	r16,r2,25c90 <__svfscanf_r+0x4d8>
   259e8:	98800017 	ldw	r2,0(r19)
   259ec:	9a000117 	ldw	r8,4(r19)
   259f0:	d9400104 	addi	r5,sp,4
   259f4:	11c00003 	ldbu	r7,0(r2)
   259f8:	423fffc4 	addi	r8,r8,-1
   259fc:	10800044 	addi	r2,r2,1
   25a00:	2c07883a 	add	r3,r5,r16
   25a04:	a809883a 	mov	r4,r21
   25a08:	000b883a 	mov	r5,zero
   25a0c:	01800204 	movi	r6,8
   25a10:	9a000115 	stw	r8,4(r19)
   25a14:	98800015 	stw	r2,0(r19)
   25a18:	19c00005 	stb	r7,0(r3)
   25a1c:	84000044 	addi	r16,r16,1
   25a20:	00232640 	call	23264 <memset>
   25a24:	8809883a 	mov	r4,r17
   25a28:	dd400015 	stw	r21,0(sp)
   25a2c:	b00b883a 	mov	r5,r22
   25a30:	d9800104 	addi	r6,sp,4
   25a34:	800f883a 	mov	r7,r16
   25a38:	002913c0 	call	2913c <_mbrtowc_r>
   25a3c:	00ffffc4 	movi	r3,-1
   25a40:	10c09326 	beq	r2,r3,25c90 <__svfscanf_r+0x4d8>
   25a44:	1003281e 	bne	r2,zero,266e8 <__svfscanf_r+0xf30>
   25a48:	b800011e 	bne	r23,zero,25a50 <__svfscanf_r+0x298>
   25a4c:	b0000015 	stw	zero,0(r22)
   25a50:	a429883a 	add	r20,r20,r16
   25a54:	e73fffc4 	addi	fp,fp,-1
   25a58:	b803281e 	bne	r23,zero,266fc <__svfscanf_r+0xf44>
   25a5c:	b5800104 	addi	r22,r22,4
   25a60:	0021883a 	mov	r16,zero
   25a64:	98800117 	ldw	r2,4(r19)
   25a68:	00820b0e 	bge	zero,r2,26298 <__svfscanf_r+0xae0>
   25a6c:	e03fda1e 	bne	fp,zero,259d8 <__svfscanf_r+0x220>
   25a70:	b8012226 	beq	r23,zero,25efc <__svfscanf_r+0x744>
   25a74:	dc009d17 	ldw	r16,628(sp)
   25a78:	800d883a 	mov	r6,r16
   25a7c:	003f8706 	br	2589c <__svfscanf_r+0xe4>
   25a80:	1085883a 	add	r2,r2,r2
   25a84:	1085883a 	add	r2,r2,r2
   25a88:	014000b4 	movhi	r5,2
   25a8c:	2956a704 	addi	r5,r5,23196
   25a90:	1145883a 	add	r2,r2,r5
   25a94:	10800017 	ldw	r2,0(r2)
   25a98:	1000683a 	jmp	r2
   25a9c:	00025cb0 	cmpltui	zero,zero,2418
   25aa0:	00025944 	movi	zero,2405
   25aa4:	00025944 	movi	zero,2405
   25aa8:	00025944 	movi	zero,2405
   25aac:	00025944 	movi	zero,2405
   25ab0:	00025944 	movi	zero,2405
   25ab4:	00025944 	movi	zero,2405
   25ab8:	00025944 	movi	zero,2405
   25abc:	00025944 	movi	zero,2405
   25ac0:	00025944 	movi	zero,2405
   25ac4:	00025944 	movi	zero,2405
   25ac8:	00025944 	movi	zero,2405
   25acc:	00025944 	movi	zero,2405
   25ad0:	00025944 	movi	zero,2405
   25ad4:	00025944 	movi	zero,2405
   25ad8:	00025944 	movi	zero,2405
   25adc:	00025944 	movi	zero,2405
   25ae0:	00025944 	movi	zero,2405
   25ae4:	00025944 	movi	zero,2405
   25ae8:	00025944 	movi	zero,2405
   25aec:	00025944 	movi	zero,2405
   25af0:	00025944 	movi	zero,2405
   25af4:	00025944 	movi	zero,2405
   25af8:	00025944 	movi	zero,2405
   25afc:	00025944 	movi	zero,2405
   25b00:	00025944 	movi	zero,2405
   25b04:	00025944 	movi	zero,2405
   25b08:	00025944 	movi	zero,2405
   25b0c:	00025944 	movi	zero,2405
   25b10:	00025944 	movi	zero,2405
   25b14:	00025944 	movi	zero,2405
   25b18:	00025944 	movi	zero,2405
   25b1c:	00025944 	movi	zero,2405
   25b20:	00025944 	movi	zero,2405
   25b24:	00025944 	movi	zero,2405
   25b28:	00025944 	movi	zero,2405
   25b2c:	00025944 	movi	zero,2405
   25b30:	00026580 	call	2658 <__alt_mem_mem1-0x1d9a8>
   25b34:	00025944 	movi	zero,2405
   25b38:	00025944 	movi	zero,2405
   25b3c:	00025944 	movi	zero,2405
   25b40:	00025944 	movi	zero,2405
   25b44:	0002658c 	andi	zero,zero,2454
   25b48:	00025944 	movi	zero,2405
   25b4c:	00025944 	movi	zero,2405
   25b50:	00025944 	movi	zero,2405
   25b54:	00025944 	movi	zero,2405
   25b58:	00025944 	movi	zero,2405
   25b5c:	0002651c 	xori	zero,zero,2452
   25b60:	0002651c 	xori	zero,zero,2452
   25b64:	0002651c 	xori	zero,zero,2452
   25b68:	0002651c 	xori	zero,zero,2452
   25b6c:	0002651c 	xori	zero,zero,2452
   25b70:	0002651c 	xori	zero,zero,2452
   25b74:	0002651c 	xori	zero,zero,2452
   25b78:	0002651c 	xori	zero,zero,2452
   25b7c:	0002651c 	xori	zero,zero,2452
   25b80:	0002651c 	xori	zero,zero,2452
   25b84:	00025944 	movi	zero,2405
   25b88:	00025944 	movi	zero,2405
   25b8c:	00025944 	movi	zero,2405
   25b90:	00025944 	movi	zero,2405
   25b94:	00025944 	movi	zero,2405
   25b98:	00025944 	movi	zero,2405
   25b9c:	00025944 	movi	zero,2405
   25ba0:	00025944 	movi	zero,2405
   25ba4:	00025944 	movi	zero,2405
   25ba8:	00025944 	movi	zero,2405
   25bac:	00026554 	movui	zero,2453
   25bb0:	00026560 	cmpeqi	zero,zero,2453
   25bb4:	00025944 	movi	zero,2405
   25bb8:	00026560 	cmpeqi	zero,zero,2453
   25bbc:	00025944 	movi	zero,2405
   25bc0:	00025944 	movi	zero,2405
   25bc4:	00025944 	movi	zero,2405
   25bc8:	00025944 	movi	zero,2405
   25bcc:	00026570 	cmpltui	zero,zero,2453
   25bd0:	00025944 	movi	zero,2405
   25bd4:	00025944 	movi	zero,2405
   25bd8:	0002659c 	xori	zero,zero,2454
   25bdc:	00025944 	movi	zero,2405
   25be0:	00025944 	movi	zero,2405
   25be4:	00025944 	movi	zero,2405
   25be8:	00025944 	movi	zero,2405
   25bec:	00025944 	movi	zero,2405
   25bf0:	00025944 	movi	zero,2405
   25bf4:	00025944 	movi	zero,2405
   25bf8:	00025944 	movi	zero,2405
   25bfc:	000265c4 	movi	zero,2455
   25c00:	00025944 	movi	zero,2405
   25c04:	00025944 	movi	zero,2405
   25c08:	000265ec 	andhi	zero,zero,2455
   25c0c:	00025944 	movi	zero,2405
   25c10:	00025944 	movi	zero,2405
   25c14:	00025944 	movi	zero,2405
   25c18:	00025944 	movi	zero,2405
   25c1c:	00025944 	movi	zero,2405
   25c20:	00025944 	movi	zero,2405
   25c24:	00025944 	movi	zero,2405
   25c28:	00026610 	cmplti	zero,zero,2456
   25c2c:	00026624 	muli	zero,zero,2456
   25c30:	00026560 	cmpeqi	zero,zero,2453
   25c34:	00026560 	cmpeqi	zero,zero,2453
   25c38:	00026560 	cmpeqi	zero,zero,2453
   25c3c:	00026630 	cmpltui	zero,zero,2456
   25c40:	00026640 	call	2664 <__alt_mem_mem1-0x1d99c>
   25c44:	00025944 	movi	zero,2405
   25c48:	00025944 	movi	zero,2405
   25c4c:	00026660 	cmpeqi	zero,zero,2457
   25c50:	00025944 	movi	zero,2405
   25c54:	00026680 	call	2668 <__alt_mem_mem1-0x1d998>
   25c58:	000266b4 	movhi	zero,2458
   25c5c:	000266c0 	call	266c <__alt_mem_mem1-0x1d994>
   25c60:	00025944 	movi	zero,2405
   25c64:	00025944 	movi	zero,2405
   25c68:	000264e8 	cmpgeui	zero,zero,2451
   25c6c:	00025944 	movi	zero,2405
   25c70:	000264f8 	rdprs	zero,zero,2451
   25c74:	00025944 	movi	zero,2405
   25c78:	00025944 	movi	zero,2405
   25c7c:	000265c4 	movi	zero,2455
   25c80:	8809883a 	mov	r4,r17
   25c84:	980b883a 	mov	r5,r19
   25c88:	00234c80 	call	234c8 <__srefill_r>
   25c8c:	103f1826 	beq	r2,zero,258f0 <__svfscanf_r+0x138>
   25c90:	d8809e17 	ldw	r2,632(sp)
   25c94:	10000626 	beq	r2,zero,25cb0 <__svfscanf_r+0x4f8>
   25c98:	9880030b 	ldhu	r2,12(r19)
   25c9c:	1080100c 	andi	r2,r2,64
   25ca0:	10bfffcc 	andi	r2,r2,65535
   25ca4:	10a0001c 	xori	r2,r2,32768
   25ca8:	10a00004 	addi	r2,r2,-32768
   25cac:	103eff26 	beq	r2,zero,258ac <__svfscanf_r+0xf4>
   25cb0:	00bfffc4 	movi	r2,-1
   25cb4:	d8809e15 	stw	r2,632(sp)
   25cb8:	003efc06 	br	258ac <__svfscanf_r+0xf4>
   25cbc:	8809883a 	mov	r4,r17
   25cc0:	980b883a 	mov	r5,r19
   25cc4:	00234c80 	call	234c8 <__srefill_r>
   25cc8:	103ff11e 	bne	r2,zero,25c90 <__svfscanf_r+0x4d8>
   25ccc:	91400017 	ldw	r5,0(r18)
   25cd0:	98800017 	ldw	r2,0(r19)
   25cd4:	00000206 	br	25ce0 <__svfscanf_r+0x528>
   25cd8:	10800044 	addi	r2,r2,1
   25cdc:	98800015 	stw	r2,0(r19)
   25ce0:	10c00003 	ldbu	r3,0(r2)
   25ce4:	28c7883a 	add	r3,r5,r3
   25ce8:	18c00003 	ldbu	r3,0(r3)
   25cec:	18c0020c 	andi	r3,r3,8
   25cf0:	18c03fcc 	andi	r3,r3,255
   25cf4:	18c0201c 	xori	r3,r3,128
   25cf8:	18ffe004 	addi	r3,r3,-128
   25cfc:	183f2526 	beq	r3,zero,25994 <__svfscanf_r+0x1dc>
   25d00:	98c00117 	ldw	r3,4(r19)
   25d04:	a5000044 	addi	r20,r20,1
   25d08:	18ffffc4 	addi	r3,r3,-1
   25d0c:	98c00115 	stw	r3,4(r19)
   25d10:	00fff116 	blt	zero,r3,25cd8 <__svfscanf_r+0x520>
   25d14:	003fe906 	br	25cbc <__svfscanf_r+0x504>
   25d18:	e000011e 	bne	fp,zero,25d20 <__svfscanf_r+0x568>
   25d1c:	073fffc4 	movi	fp,-1
   25d20:	b580040c 	andi	r22,r22,16
   25d24:	b0016826 	beq	r22,zero,262c8 <__svfscanf_r+0xb10>
   25d28:	98800017 	ldw	r2,0(r19)
   25d2c:	0021883a 	mov	r16,zero
   25d30:	dd805884 	addi	r22,sp,354
   25d34:	10c00003 	ldbu	r3,0(r2)
   25d38:	b0c7883a 	add	r3,r22,r3
   25d3c:	18c00007 	ldb	r3,0(r3)
   25d40:	18039726 	beq	r3,zero,26ba0 <__svfscanf_r+0x13e8>
   25d44:	98c00117 	ldw	r3,4(r19)
   25d48:	10800044 	addi	r2,r2,1
   25d4c:	84000044 	addi	r16,r16,1
   25d50:	18ffffc4 	addi	r3,r3,-1
   25d54:	98c00115 	stw	r3,4(r19)
   25d58:	98800015 	stw	r2,0(r19)
   25d5c:	e4008f26 	beq	fp,r16,25f9c <__svfscanf_r+0x7e4>
   25d60:	00fff416 	blt	zero,r3,25d34 <__svfscanf_r+0x57c>
   25d64:	8809883a 	mov	r4,r17
   25d68:	980b883a 	mov	r5,r19
   25d6c:	00234c80 	call	234c8 <__srefill_r>
   25d70:	10008a1e 	bne	r2,zero,25f9c <__svfscanf_r+0x7e4>
   25d74:	98800017 	ldw	r2,0(r19)
   25d78:	003fee06 	br	25d34 <__svfscanf_r+0x57c>
   25d7c:	008000c4 	movi	r2,3
   25d80:	80806426 	beq	r16,r2,25f14 <__svfscanf_r+0x75c>
   25d84:	00800104 	movi	r2,4
   25d88:	80bf071e 	bne	r16,r2,259a8 <__svfscanf_r+0x1f0>
   25d8c:	e0bfffc4 	addi	r2,fp,-1
   25d90:	01005704 	movi	r4,348
   25d94:	20814736 	bltu	r4,r2,262b4 <__svfscanf_r+0xafc>
   25d98:	0017883a 	mov	r11,zero
   25d9c:	b581e014 	ori	r22,r22,1920
   25da0:	0021883a 	mov	r16,zero
   25da4:	d800a115 	stw	zero,644(sp)
   25da8:	d800a315 	stw	zero,652(sp)
   25dac:	002b883a 	mov	r21,zero
   25db0:	d800a215 	stw	zero,648(sp)
   25db4:	ddc00104 	addi	r23,sp,4
   25db8:	000d883a 	mov	r6,zero
   25dbc:	00c01384 	movi	r3,78
   25dc0:	03810004 	movi	r14,1024
   25dc4:	033e1fc4 	movi	r12,-1921
   25dc8:	03ff5fc4 	movi	r15,-641
   25dcc:	99c00017 	ldw	r7,0(r19)
   25dd0:	39400003 	ldbu	r5,0(r7)
   25dd4:	28bff544 	addi	r2,r5,-43
   25dd8:	10803fcc 	andi	r2,r2,255
   25ddc:	1880c82e 	bgeu	r3,r2,26100 <__svfscanf_r+0x948>
   25de0:	a8000226 	beq	r21,zero,25dec <__svfscanf_r+0x634>
   25de4:	00bfbfc4 	movi	r2,-257
   25de8:	b0ac703a 	and	r22,r22,r2
   25dec:	31bfffc4 	addi	r6,r6,-1
   25df0:	00800044 	movi	r2,1
   25df4:	1184092e 	bgeu	r2,r6,26e1c <__svfscanf_r+0x1664>
   25df8:	80803fcc 	andi	r2,r16,255
   25dfc:	1080201c 	xori	r2,r2,128
   25e00:	10bfe004 	addi	r2,r2,-128
   25e04:	10ffffc4 	addi	r3,r2,-1
   25e08:	01000184 	movi	r4,6
   25e0c:	20c01036 	bltu	r4,r3,25e50 <__svfscanf_r+0x698>
   25e10:	00c00084 	movi	r3,2
   25e14:	1883f50e 	bge	r3,r2,26dec <__svfscanf_r+0x1634>
   25e18:	00c000c4 	movi	r3,3
   25e1c:	10c00c26 	beq	r2,r3,25e50 <__svfscanf_r+0x698>
   25e20:	843fff04 	addi	r16,r16,-4
   25e24:	84003fcc 	andi	r16,r16,255
   25e28:	0438303a 	nor	fp,zero,r16
   25e2c:	bf39883a 	add	fp,r23,fp
   25e30:	bdffffc4 	addi	r23,r23,-1
   25e34:	b9400007 	ldb	r5,0(r23)
   25e38:	8809883a 	mov	r4,r17
   25e3c:	980d883a 	mov	r6,r19
   25e40:	002d1940 	call	2d194 <_ungetc_r>
   25e44:	bf3ffa1e 	bne	r23,fp,25e30 <__svfscanf_r+0x678>
   25e48:	a27fffc4 	addi	r9,r20,-1
   25e4c:	4c29c83a 	sub	r20,r9,r16
   25e50:	b080400c 	andi	r2,r22,256
   25e54:	10001326 	beq	r2,zero,25ea4 <__svfscanf_r+0x6ec>
   25e58:	b081000c 	andi	r2,r22,1024
   25e5c:	1003d21e 	bne	r2,zero,26da8 <__svfscanf_r+0x15f0>
   25e60:	b97fffc7 	ldb	r5,-1(r23)
   25e64:	00801944 	movi	r2,101
   25e68:	bc3fffc4 	addi	r16,r23,-1
   25e6c:	a53fffc4 	addi	r20,r20,-1
   25e70:	28800826 	beq	r5,r2,25e94 <__svfscanf_r+0x6dc>
   25e74:	00801144 	movi	r2,69
   25e78:	28800626 	beq	r5,r2,25e94 <__svfscanf_r+0x6dc>
   25e7c:	8809883a 	mov	r4,r17
   25e80:	980d883a 	mov	r6,r19
   25e84:	002d1940 	call	2d194 <_ungetc_r>
   25e88:	b97fff87 	ldb	r5,-2(r23)
   25e8c:	bc3fff84 	addi	r16,r23,-2
   25e90:	a53fffc4 	addi	r20,r20,-1
   25e94:	8809883a 	mov	r4,r17
   25e98:	980d883a 	mov	r6,r19
   25e9c:	002d1940 	call	2d194 <_ungetc_r>
   25ea0:	802f883a 	mov	r23,r16
   25ea4:	b080040c 	andi	r2,r22,16
   25ea8:	103ef21e 	bne	r2,zero,25a74 <__svfscanf_r+0x2bc>
   25eac:	b8000005 	stb	zero,0(r23)
   25eb0:	b0c1800c 	andi	r3,r22,1536
   25eb4:	00810004 	movi	r2,1024
   25eb8:	18837726 	beq	r3,r2,26c98 <__svfscanf_r+0x14e0>
   25ebc:	d8c0a317 	ldw	r3,652(sp)
   25ec0:	1803601e 	bne	r3,zero,26c44 <__svfscanf_r+0x148c>
   25ec4:	8809883a 	mov	r4,r17
   25ec8:	d9400104 	addi	r5,sp,4
   25ecc:	000d883a 	mov	r6,zero
   25ed0:	002adf80 	call	2adf8 <_strtod_r>
   25ed4:	102b883a 	mov	r21,r2
   25ed8:	b080004c 	andi	r2,r22,1
   25edc:	182f883a 	mov	r23,r3
   25ee0:	10031f26 	beq	r2,zero,26b60 <__svfscanf_r+0x13a8>
   25ee4:	d9409c17 	ldw	r5,624(sp)
   25ee8:	28800017 	ldw	r2,0(r5)
   25eec:	29400104 	addi	r5,r5,4
   25ef0:	d9409c15 	stw	r5,624(sp)
   25ef4:	15400015 	stw	r21,0(r2)
   25ef8:	10c00115 	stw	r3,4(r2)
   25efc:	d8809e17 	ldw	r2,632(sp)
   25f00:	dc009d17 	ldw	r16,628(sp)
   25f04:	10800044 	addi	r2,r2,1
   25f08:	d8809e15 	stw	r2,632(sp)
   25f0c:	800d883a 	mov	r6,r16
   25f10:	003e6206 	br	2589c <__svfscanf_r+0xe4>
   25f14:	e0bfffc4 	addi	r2,fp,-1
   25f18:	01005704 	movi	r4,348
   25f1c:	2080e82e 	bgeu	r4,r2,262c0 <__svfscanf_r+0xb08>
   25f20:	e0ffa8c4 	addi	r3,fp,-349
   25f24:	07005744 	movi	fp,349
   25f28:	da409f17 	ldw	r9,636(sp)
   25f2c:	b5836014 	ori	r22,r22,3456
   25f30:	0021883a 	mov	r16,zero
   25f34:	dd400104 	addi	r21,sp,4
   25f38:	05c01344 	movi	r23,77
   25f3c:	01c08004 	movi	r7,512
   25f40:	01bf7fc4 	movi	r6,-513
   25f44:	9a000017 	ldw	r8,0(r19)
   25f48:	41400003 	ldbu	r5,0(r8)
   25f4c:	28bff544 	addi	r2,r5,-43
   25f50:	10803fcc 	andi	r2,r2,255
   25f54:	b881eb2e 	bgeu	r23,r2,26704 <__svfscanf_r+0xf4c>
   25f58:	da409f15 	stw	r9,636(sp)
   25f5c:	b080400c 	andi	r2,r22,256
   25f60:	10000926 	beq	r2,zero,25f88 <__svfscanf_r+0x7d0>
   25f64:	d9400104 	addi	r5,sp,4
   25f68:	2d40052e 	bgeu	r5,r21,25f80 <__svfscanf_r+0x7c8>
   25f6c:	a97fffc7 	ldb	r5,-1(r21)
   25f70:	8809883a 	mov	r4,r17
   25f74:	980d883a 	mov	r6,r19
   25f78:	ad7fffc4 	addi	r21,r21,-1
   25f7c:	002d1940 	call	2d194 <_ungetc_r>
   25f80:	d8800104 	addi	r2,sp,4
   25f84:	157e4926 	beq	r2,r21,258ac <__svfscanf_r+0xf4>
   25f88:	b080040c 	andi	r2,r22,16
   25f8c:	1002ac26 	beq	r2,zero,26a40 <__svfscanf_r+0x1288>
   25f90:	d8c00104 	addi	r3,sp,4
   25f94:	a8ebc83a 	sub	r21,r21,r3
   25f98:	ac21883a 	add	r16,r21,r16
   25f9c:	a429883a 	add	r20,r20,r16
   25fa0:	dc009d17 	ldw	r16,628(sp)
   25fa4:	800d883a 	mov	r6,r16
   25fa8:	003e3c06 	br	2589c <__svfscanf_r+0xe4>
   25fac:	e000011e 	bne	fp,zero,25fb4 <__svfscanf_r+0x7fc>
   25fb0:	073fffc4 	movi	fp,-1
   25fb4:	b080004c 	andi	r2,r22,1
   25fb8:	b580040c 	andi	r22,r22,16
   25fbc:	10003526 	beq	r2,zero,26094 <__svfscanf_r+0x8dc>
   25fc0:	b002dd1e 	bne	r22,zero,26b38 <__svfscanf_r+0x1380>
   25fc4:	d8c09c17 	ldw	r3,624(sp)
   25fc8:	1d400017 	ldw	r21,0(r3)
   25fcc:	18c00104 	addi	r3,r3,4
   25fd0:	d8c09c15 	stw	r3,624(sp)
   25fd4:	0021883a 	mov	r16,zero
   25fd8:	ddc09904 	addi	r23,sp,612
   25fdc:	98c00017 	ldw	r3,0(r19)
   25fe0:	91400017 	ldw	r5,0(r18)
   25fe4:	18800003 	ldbu	r2,0(r3)
   25fe8:	11003fcc 	andi	r4,r2,255
   25fec:	2909883a 	add	r4,r5,r4
   25ff0:	21000003 	ldbu	r4,0(r4)
   25ff4:	2100020c 	andi	r4,r4,8
   25ff8:	21003fcc 	andi	r4,r4,255
   25ffc:	2100201c 	xori	r4,r4,128
   26000:	213fe004 	addi	r4,r4,-128
   26004:	2002731e 	bne	r4,zero,269d4 <__svfscanf_r+0x121c>
   26008:	e0027226 	beq	fp,zero,269d4 <__svfscanf_r+0x121c>
   2600c:	014000f4 	movhi	r5,3
   26010:	2956bb04 	addi	r5,r5,23276
   26014:	29000017 	ldw	r4,0(r5)
   26018:	813f1d26 	beq	r16,r4,25c90 <__svfscanf_r+0x4d8>
   2601c:	9a000117 	ldw	r8,4(r19)
   26020:	18c00044 	addi	r3,r3,1
   26024:	d9000104 	addi	r4,sp,4
   26028:	423fffc4 	addi	r8,r8,-1
   2602c:	240f883a 	add	r7,r4,r16
   26030:	000b883a 	mov	r5,zero
   26034:	b809883a 	mov	r4,r23
   26038:	01800204 	movi	r6,8
   2603c:	9a000115 	stw	r8,4(r19)
   26040:	98c00015 	stw	r3,0(r19)
   26044:	38800005 	stb	r2,0(r7)
   26048:	84000044 	addi	r16,r16,1
   2604c:	00232640 	call	23264 <memset>
   26050:	a80b883a 	mov	r5,r21
   26054:	8809883a 	mov	r4,r17
   26058:	ddc00015 	stw	r23,0(sp)
   2605c:	d9800104 	addi	r6,sp,4
   26060:	800f883a 	mov	r7,r16
   26064:	002913c0 	call	2913c <_mbrtowc_r>
   26068:	017fffc4 	movi	r5,-1
   2606c:	117f0826 	beq	r2,r5,25c90 <__svfscanf_r+0x4d8>
   26070:	1002de1e 	bne	r2,zero,26bec <__svfscanf_r+0x1434>
   26074:	a8000015 	stw	zero,0(r21)
   26078:	0009883a 	mov	r4,zero
   2607c:	0002de06 	br	26bf8 <__svfscanf_r+0x1440>
   26080:	8809883a 	mov	r4,r17
   26084:	980b883a 	mov	r5,r19
   26088:	00234c80 	call	234c8 <__srefill_r>
   2608c:	103e3f26 	beq	r2,zero,2598c <__svfscanf_r+0x1d4>
   26090:	003eff06 	br	25c90 <__svfscanf_r+0x4d8>
   26094:	b0027e26 	beq	r22,zero,26a90 <__svfscanf_r+0x12d8>
   26098:	91400017 	ldw	r5,0(r18)
   2609c:	98800017 	ldw	r2,0(r19)
   260a0:	0021883a 	mov	r16,zero
   260a4:	10c00003 	ldbu	r3,0(r2)
   260a8:	28c7883a 	add	r3,r5,r3
   260ac:	18c00003 	ldbu	r3,0(r3)
   260b0:	18c0020c 	andi	r3,r3,8
   260b4:	18c03fcc 	andi	r3,r3,255
   260b8:	18c0201c 	xori	r3,r3,128
   260bc:	18ffe004 	addi	r3,r3,-128
   260c0:	183fb61e 	bne	r3,zero,25f9c <__svfscanf_r+0x7e4>
   260c4:	98c00117 	ldw	r3,4(r19)
   260c8:	10800044 	addi	r2,r2,1
   260cc:	84000044 	addi	r16,r16,1
   260d0:	18ffffc4 	addi	r3,r3,-1
   260d4:	98c00115 	stw	r3,4(r19)
   260d8:	98800015 	stw	r2,0(r19)
   260dc:	e43faf26 	beq	fp,r16,25f9c <__svfscanf_r+0x7e4>
   260e0:	00fff016 	blt	zero,r3,260a4 <__svfscanf_r+0x8ec>
   260e4:	8809883a 	mov	r4,r17
   260e8:	980b883a 	mov	r5,r19
   260ec:	00234c80 	call	234c8 <__srefill_r>
   260f0:	103faa1e 	bne	r2,zero,25f9c <__svfscanf_r+0x7e4>
   260f4:	91400017 	ldw	r5,0(r18)
   260f8:	98800017 	ldw	r2,0(r19)
   260fc:	003fe906 	br	260a4 <__svfscanf_r+0x8ec>
   26100:	1085883a 	add	r2,r2,r2
   26104:	1085883a 	add	r2,r2,r2
   26108:	010000b4 	movhi	r4,2
   2610c:	21184704 	addi	r4,r4,24860
   26110:	1105883a 	add	r2,r2,r4
   26114:	10800017 	ldw	r2,0(r2)
   26118:	1000683a 	jmp	r2
   2611c:	000263bc 	xorhi	zero,zero,2446
   26120:	00025de0 	cmpeqi	zero,zero,2423
   26124:	000263bc 	xorhi	zero,zero,2446
   26128:	000263a8 	cmpgeui	zero,zero,2446
   2612c:	00025de0 	cmpeqi	zero,zero,2423
   26130:	00026384 	movi	zero,2446
   26134:	00026338 	rdprs	zero,zero,2444
   26138:	00026338 	rdprs	zero,zero,2444
   2613c:	00026338 	rdprs	zero,zero,2444
   26140:	00026338 	rdprs	zero,zero,2444
   26144:	00026338 	rdprs	zero,zero,2444
   26148:	00026338 	rdprs	zero,zero,2444
   2614c:	00026338 	rdprs	zero,zero,2444
   26150:	00026338 	rdprs	zero,zero,2444
   26154:	00026338 	rdprs	zero,zero,2444
   26158:	00025de0 	cmpeqi	zero,zero,2423
   2615c:	00025de0 	cmpeqi	zero,zero,2423
   26160:	00025de0 	cmpeqi	zero,zero,2423
   26164:	00025de0 	cmpeqi	zero,zero,2423
   26168:	00025de0 	cmpeqi	zero,zero,2423
   2616c:	00025de0 	cmpeqi	zero,zero,2423
   26170:	00025de0 	cmpeqi	zero,zero,2423
   26174:	000264a0 	cmpeqi	zero,zero,2450
   26178:	00025de0 	cmpeqi	zero,zero,2423
   2617c:	00025de0 	cmpeqi	zero,zero,2423
   26180:	00025de0 	cmpeqi	zero,zero,2423
   26184:	00026464 	muli	zero,zero,2449
   26188:	000264b0 	cmpltui	zero,zero,2450
   2618c:	00025de0 	cmpeqi	zero,zero,2423
   26190:	00025de0 	cmpeqi	zero,zero,2423
   26194:	0002643c 	xorhi	zero,zero,2448
   26198:	00025de0 	cmpeqi	zero,zero,2423
   2619c:	00025de0 	cmpeqi	zero,zero,2423
   261a0:	00025de0 	cmpeqi	zero,zero,2423
   261a4:	00025de0 	cmpeqi	zero,zero,2423
   261a8:	00026408 	cmpgei	zero,zero,2448
   261ac:	00025de0 	cmpeqi	zero,zero,2423
   261b0:	00025de0 	cmpeqi	zero,zero,2423
   261b4:	00025de0 	cmpeqi	zero,zero,2423
   261b8:	00025de0 	cmpeqi	zero,zero,2423
   261bc:	00025de0 	cmpeqi	zero,zero,2423
   261c0:	000263ec 	andhi	zero,zero,2447
   261c4:	00025de0 	cmpeqi	zero,zero,2423
   261c8:	00025de0 	cmpeqi	zero,zero,2423
   261cc:	00025de0 	cmpeqi	zero,zero,2423
   261d0:	00025de0 	cmpeqi	zero,zero,2423
   261d4:	000263d0 	cmplti	zero,zero,2447
   261d8:	00025de0 	cmpeqi	zero,zero,2423
   261dc:	00025de0 	cmpeqi	zero,zero,2423
   261e0:	00025de0 	cmpeqi	zero,zero,2423
   261e4:	00025de0 	cmpeqi	zero,zero,2423
   261e8:	00025de0 	cmpeqi	zero,zero,2423
   261ec:	00025de0 	cmpeqi	zero,zero,2423
   261f0:	00025de0 	cmpeqi	zero,zero,2423
   261f4:	000264a0 	cmpeqi	zero,zero,2450
   261f8:	00025de0 	cmpeqi	zero,zero,2423
   261fc:	00025de0 	cmpeqi	zero,zero,2423
   26200:	00025de0 	cmpeqi	zero,zero,2423
   26204:	00026464 	muli	zero,zero,2449
   26208:	000264b0 	cmpltui	zero,zero,2450
   2620c:	00025de0 	cmpeqi	zero,zero,2423
   26210:	00025de0 	cmpeqi	zero,zero,2423
   26214:	0002643c 	xorhi	zero,zero,2448
   26218:	00025de0 	cmpeqi	zero,zero,2423
   2621c:	00025de0 	cmpeqi	zero,zero,2423
   26220:	00025de0 	cmpeqi	zero,zero,2423
   26224:	00025de0 	cmpeqi	zero,zero,2423
   26228:	00026408 	cmpgei	zero,zero,2448
   2622c:	00025de0 	cmpeqi	zero,zero,2423
   26230:	00025de0 	cmpeqi	zero,zero,2423
   26234:	00025de0 	cmpeqi	zero,zero,2423
   26238:	00025de0 	cmpeqi	zero,zero,2423
   2623c:	00025de0 	cmpeqi	zero,zero,2423
   26240:	000263ec 	andhi	zero,zero,2447
   26244:	00025de0 	cmpeqi	zero,zero,2423
   26248:	00025de0 	cmpeqi	zero,zero,2423
   2624c:	00025de0 	cmpeqi	zero,zero,2423
   26250:	00025de0 	cmpeqi	zero,zero,2423
   26254:	000263d0 	cmplti	zero,zero,2447
   26258:	b580040c 	andi	r22,r22,16
   2625c:	b0025226 	beq	r22,zero,26ba8 <__svfscanf_r+0x13f0>
   26260:	0021883a 	mov	r16,zero
   26264:	98800117 	ldw	r2,4(r19)
   26268:	17026f0e 	bge	r2,fp,26c28 <__svfscanf_r+0x1470>
   2626c:	98c00017 	ldw	r3,0(r19)
   26270:	8809883a 	mov	r4,r17
   26274:	980b883a 	mov	r5,r19
   26278:	1887883a 	add	r3,r3,r2
   2627c:	98c00015 	stw	r3,0(r19)
   26280:	80a1883a 	add	r16,r16,r2
   26284:	e0b9c83a 	sub	fp,fp,r2
   26288:	00234c80 	call	234c8 <__srefill_r>
   2628c:	103ff526 	beq	r2,zero,26264 <__svfscanf_r+0xaac>
   26290:	803f421e 	bne	r16,zero,25f9c <__svfscanf_r+0x7e4>
   26294:	003e7e06 	br	25c90 <__svfscanf_r+0x4d8>
   26298:	8809883a 	mov	r4,r17
   2629c:	980b883a 	mov	r5,r19
   262a0:	00234c80 	call	234c8 <__srefill_r>
   262a4:	103df126 	beq	r2,zero,25a6c <__svfscanf_r+0x2b4>
   262a8:	803e791e 	bne	r16,zero,25c90 <__svfscanf_r+0x4d8>
   262ac:	b83f1326 	beq	r23,zero,25efc <__svfscanf_r+0x744>
   262b0:	003df006 	br	25a74 <__svfscanf_r+0x2bc>
   262b4:	e2ffa8c4 	addi	r11,fp,-349
   262b8:	07005744 	movi	fp,349
   262bc:	003eb706 	br	25d9c <__svfscanf_r+0x5e4>
   262c0:	0007883a 	mov	r3,zero
   262c4:	003f1806 	br	25f28 <__svfscanf_r+0x770>
   262c8:	d8c09c17 	ldw	r3,624(sp)
   262cc:	98800017 	ldw	r2,0(r19)
   262d0:	dd805884 	addi	r22,sp,354
   262d4:	1c000017 	ldw	r16,0(r3)
   262d8:	1dc00104 	addi	r23,r3,4
   262dc:	802b883a 	mov	r21,r16
   262e0:	10c00003 	ldbu	r3,0(r2)
   262e4:	b0c7883a 	add	r3,r22,r3
   262e8:	18c00007 	ldb	r3,0(r3)
   262ec:	1801c226 	beq	r3,zero,269f8 <__svfscanf_r+0x1240>
   262f0:	98c00117 	ldw	r3,4(r19)
   262f4:	10800044 	addi	r2,r2,1
   262f8:	ad400044 	addi	r21,r21,1
   262fc:	18ffffc4 	addi	r3,r3,-1
   26300:	98c00115 	stw	r3,4(r19)
   26304:	10ffffc3 	ldbu	r3,-1(r2)
   26308:	e73fffc4 	addi	fp,fp,-1
   2630c:	a8ffffc5 	stb	r3,-1(r21)
   26310:	98800015 	stw	r2,0(r19)
   26314:	e001b826 	beq	fp,zero,269f8 <__svfscanf_r+0x1240>
   26318:	98c00117 	ldw	r3,4(r19)
   2631c:	00fff016 	blt	zero,r3,262e0 <__svfscanf_r+0xb28>
   26320:	8809883a 	mov	r4,r17
   26324:	980b883a 	mov	r5,r19
   26328:	00234c80 	call	234c8 <__srefill_r>
   2632c:	1001b11e 	bne	r2,zero,269f4 <__svfscanf_r+0x123c>
   26330:	98800017 	ldw	r2,0(r19)
   26334:	003fea06 	br	262e0 <__svfscanf_r+0xb28>
   26338:	80803fcc 	andi	r2,r16,255
   2633c:	1080201c 	xori	r2,r2,128
   26340:	10bfe004 	addi	r2,r2,-128
   26344:	3085883a 	add	r2,r6,r2
   26348:	103ea51e 	bne	r2,zero,25de0 <__svfscanf_r+0x628>
   2634c:	00bf9fc4 	movi	r2,-385
   26350:	b0ac703a 	and	r22,r22,r2
   26354:	b9400005 	stb	r5,0(r23)
   26358:	bdc00044 	addi	r23,r23,1
   2635c:	98800117 	ldw	r2,4(r19)
   26360:	e73fffc4 	addi	fp,fp,-1
   26364:	a5000044 	addi	r20,r20,1
   26368:	10bfffc4 	addi	r2,r2,-1
   2636c:	98800115 	stw	r2,4(r19)
   26370:	00816d0e 	bge	zero,r2,26928 <__svfscanf_r+0x1170>
   26374:	39c00044 	addi	r7,r7,1
   26378:	99c00015 	stw	r7,0(r19)
   2637c:	e03e931e 	bne	fp,zero,25dcc <__svfscanf_r+0x614>
   26380:	003e9706 	br	25de0 <__svfscanf_r+0x628>
   26384:	b080400c 	andi	r2,r22,256
   26388:	103feb26 	beq	r2,zero,26338 <__svfscanf_r+0xb80>
   2638c:	00bfdfc4 	movi	r2,-129
   26390:	b0ac703a 	and	r22,r22,r2
   26394:	ad400044 	addi	r21,r21,1
   26398:	583ff026 	beq	r11,zero,2635c <__svfscanf_r+0xba4>
   2639c:	5affffc4 	addi	r11,r11,-1
   263a0:	e7000044 	addi	fp,fp,1
   263a4:	003fed06 	br	2635c <__svfscanf_r+0xba4>
   263a8:	b080800c 	andi	r2,r22,512
   263ac:	103e8c26 	beq	r2,zero,25de0 <__svfscanf_r+0x628>
   263b0:	b3ec703a 	and	r22,r22,r15
   263b4:	dd40a215 	stw	r21,648(sp)
   263b8:	003fe606 	br	26354 <__svfscanf_r+0xb9c>
   263bc:	b080200c 	andi	r2,r22,128
   263c0:	103e8726 	beq	r2,zero,25de0 <__svfscanf_r+0x628>
   263c4:	00bfdfc4 	movi	r2,-129
   263c8:	b0ac703a 	and	r22,r22,r2
   263cc:	003fe106 	br	26354 <__svfscanf_r+0xb9c>
   263d0:	81003fcc 	andi	r4,r16,255
   263d4:	2100201c 	xori	r4,r4,128
   263d8:	213fe004 	addi	r4,r4,-128
   263dc:	008001c4 	movi	r2,7
   263e0:	20be7f1e 	bne	r4,r2,25de0 <__svfscanf_r+0x628>
   263e4:	04000204 	movi	r16,8
   263e8:	003fda06 	br	26354 <__svfscanf_r+0xb9c>
   263ec:	81003fcc 	andi	r4,r16,255
   263f0:	2100201c 	xori	r4,r4,128
   263f4:	213fe004 	addi	r4,r4,-128
   263f8:	00800184 	movi	r2,6
   263fc:	20be781e 	bne	r4,r2,25de0 <__svfscanf_r+0x628>
   26400:	040001c4 	movi	r16,7
   26404:	003fd306 	br	26354 <__svfscanf_r+0xb9c>
   26408:	3001891e 	bne	r6,zero,26a30 <__svfscanf_r+0x1278>
   2640c:	b101c00c 	andi	r4,r22,1792
   26410:	0081c004 	movi	r2,1792
   26414:	20821d26 	beq	r4,r2,26c8c <__svfscanf_r+0x14d4>
   26418:	80803fcc 	andi	r2,r16,255
   2641c:	1080201c 	xori	r2,r2,128
   26420:	10bfe004 	addi	r2,r2,-128
   26424:	01000044 	movi	r4,1
   26428:	11000226 	beq	r2,r4,26434 <__svfscanf_r+0xc7c>
   2642c:	01000104 	movi	r4,4
   26430:	113e6b1e 	bne	r2,r4,25de0 <__svfscanf_r+0x628>
   26434:	84000044 	addi	r16,r16,1
   26438:	003fc606 	br	26354 <__svfscanf_r+0xb9c>
   2643c:	80803fcc 	andi	r2,r16,255
   26440:	1080201c 	xori	r2,r2,128
   26444:	10bfe004 	addi	r2,r2,-128
   26448:	1001731e 	bne	r2,zero,26a18 <__svfscanf_r+0x1260>
   2644c:	b101c00c 	andi	r4,r22,1792
   26450:	0081c004 	movi	r2,1792
   26454:	20be621e 	bne	r4,r2,25de0 <__svfscanf_r+0x628>
   26458:	b32c703a 	and	r22,r22,r12
   2645c:	04000044 	movi	r16,1
   26460:	003fbc06 	br	26354 <__svfscanf_r+0xb9c>
   26464:	b081400c 	andi	r2,r22,1280
   26468:	13800326 	beq	r2,r14,26478 <__svfscanf_r+0xcc0>
   2646c:	b081000c 	andi	r2,r22,1024
   26470:	103e5b26 	beq	r2,zero,25de0 <__svfscanf_r+0x628>
   26474:	a83e5d26 	beq	r21,zero,25dec <__svfscanf_r+0x634>
   26478:	b080800c 	andi	r2,r22,512
   2647c:	1000041e 	bne	r2,zero,26490 <__svfscanf_r+0xcd8>
   26480:	d880a217 	ldw	r2,648(sp)
   26484:	ddc0a115 	stw	r23,644(sp)
   26488:	a8abc83a 	sub	r21,r21,r2
   2648c:	dd40a315 	stw	r21,652(sp)
   26490:	b32c703a 	and	r22,r22,r12
   26494:	b5806014 	ori	r22,r22,384
   26498:	002b883a 	mov	r21,zero
   2649c:	003fad06 	br	26354 <__svfscanf_r+0xb9c>
   264a0:	00800044 	movi	r2,1
   264a4:	30be4e1e 	bne	r6,r2,25de0 <__svfscanf_r+0x628>
   264a8:	01800084 	movi	r6,2
   264ac:	003fa906 	br	26354 <__svfscanf_r+0xb9c>
   264b0:	81003fcc 	andi	r4,r16,255
   264b4:	2100201c 	xori	r4,r4,128
   264b8:	213fe004 	addi	r4,r4,-128
   264bc:	00800084 	movi	r2,2
   264c0:	20be471e 	bne	r4,r2,25de0 <__svfscanf_r+0x628>
   264c4:	040000c4 	movi	r16,3
   264c8:	003fa206 	br	26354 <__svfscanf_r+0xb9c>
   264cc:	014000f4 	movhi	r5,3
   264d0:	29711f04 	addi	r5,r5,-15236
   264d4:	00800284 	movi	r2,10
   264d8:	d940a015 	stw	r5,640(sp)
   264dc:	d8809f15 	stw	r2,636(sp)
   264e0:	040000c4 	movi	r16,3
   264e4:	003d2706 	br	25984 <__svfscanf_r+0x1cc>
   264e8:	df009d15 	stw	fp,628(sp)
   264ec:	04000084 	movi	r16,2
   264f0:	2039883a 	mov	fp,r4
   264f4:	003d2306 	br	25984 <__svfscanf_r+0x1cc>
   264f8:	008000f4 	movhi	r2,3
   264fc:	10b29204 	addi	r2,r2,-13752
   26500:	00c00284 	movi	r3,10
   26504:	df009d15 	stw	fp,628(sp)
   26508:	d880a015 	stw	r2,640(sp)
   2650c:	2039883a 	mov	fp,r4
   26510:	d8c09f15 	stw	r3,636(sp)
   26514:	040000c4 	movi	r16,3
   26518:	003d1a06 	br	25984 <__svfscanf_r+0x1cc>
   2651c:	bdc03fcc 	andi	r23,r23,255
   26520:	01400284 	movi	r5,10
   26524:	bdc0201c 	xori	r23,r23,128
   26528:	d8c0a815 	stw	r3,672(sp)
   2652c:	d980a915 	stw	r6,676(sp)
   26530:	bdffe004 	addi	r23,r23,-128
   26534:	00211880 	call	21188 <__mulsi3>
   26538:	15c5883a 	add	r2,r2,r23
   2653c:	113ff404 	addi	r4,r2,-48
   26540:	85c00043 	ldbu	r23,1(r16)
   26544:	d8c0a817 	ldw	r3,672(sp)
   26548:	e021883a 	mov	r16,fp
   2654c:	d980a917 	ldw	r6,676(sp)
   26550:	003cf906 	br	25938 <__svfscanf_r+0x180>
   26554:	df009d15 	stw	fp,628(sp)
   26558:	2039883a 	mov	fp,r4
   2655c:	003d0206 	br	25968 <__svfscanf_r+0x1b0>
   26560:	df009d15 	stw	fp,628(sp)
   26564:	04000104 	movi	r16,4
   26568:	2039883a 	mov	fp,r4
   2656c:	003d0506 	br	25984 <__svfscanf_r+0x1cc>
   26570:	85c00043 	ldbu	r23,1(r16)
   26574:	b5800094 	ori	r22,r22,2
   26578:	e021883a 	mov	r16,fp
   2657c:	003cee06 	br	25938 <__svfscanf_r+0x180>
   26580:	df009d15 	stw	fp,628(sp)
   26584:	e021883a 	mov	r16,fp
   26588:	003cd706 	br	258e8 <__svfscanf_r+0x130>
   2658c:	85c00043 	ldbu	r23,1(r16)
   26590:	b5800414 	ori	r22,r22,16
   26594:	e021883a 	mov	r16,fp
   26598:	003ce706 	br	25938 <__svfscanf_r+0x180>
   2659c:	df009d15 	stw	fp,628(sp)
   265a0:	b5800054 	ori	r22,r22,1
   265a4:	2039883a 	mov	fp,r4
   265a8:	010000f4 	movhi	r4,3
   265ac:	21329204 	addi	r4,r4,-13752
   265b0:	01400204 	movi	r5,8
   265b4:	d900a015 	stw	r4,640(sp)
   265b8:	d9409f15 	stw	r5,636(sp)
   265bc:	040000c4 	movi	r16,3
   265c0:	003cf006 	br	25984 <__svfscanf_r+0x1cc>
   265c4:	df009d15 	stw	fp,628(sp)
   265c8:	01400404 	movi	r5,16
   265cc:	2039883a 	mov	fp,r4
   265d0:	010000f4 	movhi	r4,3
   265d4:	21329204 	addi	r4,r4,-13752
   265d8:	b5808014 	ori	r22,r22,512
   265dc:	d900a015 	stw	r4,640(sp)
   265e0:	d9409f15 	stw	r5,636(sp)
   265e4:	040000c4 	movi	r16,3
   265e8:	003ce606 	br	25984 <__svfscanf_r+0x1cc>
   265ec:	df009d15 	stw	fp,628(sp)
   265f0:	d9409d17 	ldw	r5,628(sp)
   265f4:	2039883a 	mov	fp,r4
   265f8:	d9005884 	addi	r4,sp,354
   265fc:	002abc40 	call	2abc4 <__sccl>
   26600:	d8809d15 	stw	r2,628(sp)
   26604:	b5801014 	ori	r22,r22,64
   26608:	04000044 	movi	r16,1
   2660c:	003cdd06 	br	25984 <__svfscanf_r+0x1cc>
   26610:	df009d15 	stw	fp,628(sp)
   26614:	b5801014 	ori	r22,r22,64
   26618:	2039883a 	mov	fp,r4
   2661c:	0021883a 	mov	r16,zero
   26620:	003cd806 	br	25984 <__svfscanf_r+0x1cc>
   26624:	df009d15 	stw	fp,628(sp)
   26628:	2039883a 	mov	fp,r4
   2662c:	003ccf06 	br	2596c <__svfscanf_r+0x1b4>
   26630:	85c00043 	ldbu	r23,1(r16)
   26634:	b5800114 	ori	r22,r22,4
   26638:	e021883a 	mov	r16,fp
   2663c:	003cbe06 	br	25938 <__svfscanf_r+0x180>
   26640:	df009d15 	stw	fp,628(sp)
   26644:	2039883a 	mov	fp,r4
   26648:	010000f4 	movhi	r4,3
   2664c:	21311f04 	addi	r4,r4,-15236
   26650:	d900a015 	stw	r4,640(sp)
   26654:	d8009f15 	stw	zero,636(sp)
   26658:	040000c4 	movi	r16,3
   2665c:	003cc906 	br	25984 <__svfscanf_r+0x1cc>
   26660:	85c00043 	ldbu	r23,1(r16)
   26664:	b8803fcc 	andi	r2,r23,255
   26668:	1080201c 	xori	r2,r2,128
   2666c:	10bfe004 	addi	r2,r2,-128
   26670:	11818f26 	beq	r2,r6,26cb0 <__svfscanf_r+0x14f8>
   26674:	b5800054 	ori	r22,r22,1
   26678:	e021883a 	mov	r16,fp
   2667c:	003cae06 	br	25938 <__svfscanf_r+0x180>
   26680:	df009d15 	stw	fp,628(sp)
   26684:	b080040c 	andi	r2,r22,16
   26688:	103cfa1e 	bne	r2,zero,25a74 <__svfscanf_r+0x2bc>
   2668c:	b080010c 	andi	r2,r22,4
   26690:	10018b26 	beq	r2,zero,26cc0 <__svfscanf_r+0x1508>
   26694:	d9009c17 	ldw	r4,624(sp)
   26698:	e021883a 	mov	r16,fp
   2669c:	800d883a 	mov	r6,r16
   266a0:	20800017 	ldw	r2,0(r4)
   266a4:	21000104 	addi	r4,r4,4
   266a8:	d9009c15 	stw	r4,624(sp)
   266ac:	1500000d 	sth	r20,0(r2)
   266b0:	003c7a06 	br	2589c <__svfscanf_r+0xe4>
   266b4:	df009d15 	stw	fp,628(sp)
   266b8:	2039883a 	mov	fp,r4
   266bc:	003fba06 	br	265a8 <__svfscanf_r+0xdf0>
   266c0:	008000f4 	movhi	r2,3
   266c4:	10b29204 	addi	r2,r2,-13752
   266c8:	00c00404 	movi	r3,16
   266cc:	df009d15 	stw	fp,628(sp)
   266d0:	b5808814 	ori	r22,r22,544
   266d4:	2039883a 	mov	fp,r4
   266d8:	d880a015 	stw	r2,640(sp)
   266dc:	d8c09f15 	stw	r3,636(sp)
   266e0:	040000c4 	movi	r16,3
   266e4:	003ca706 	br	25984 <__svfscanf_r+0x1cc>
   266e8:	013fff84 	movi	r4,-2
   266ec:	113cdd26 	beq	r2,r4,25a64 <__svfscanf_r+0x2ac>
   266f0:	a429883a 	add	r20,r20,r16
   266f4:	e73fffc4 	addi	fp,fp,-1
   266f8:	b83cd826 	beq	r23,zero,25a5c <__svfscanf_r+0x2a4>
   266fc:	0021883a 	mov	r16,zero
   26700:	003cd806 	br	25a64 <__svfscanf_r+0x2ac>
   26704:	1085883a 	add	r2,r2,r2
   26708:	1085883a 	add	r2,r2,r2
   2670c:	010000b4 	movhi	r4,2
   26710:	2119c804 	addi	r4,r4,26400
   26714:	1105883a 	add	r2,r2,r4
   26718:	10800017 	ldw	r2,0(r2)
   2671c:	1000683a 	jmp	r2
   26720:	00026914 	movui	zero,2468
   26724:	00025f58 	cmpnei	zero,zero,2429
   26728:	00026914 	movui	zero,2468
   2672c:	00025f58 	cmpnei	zero,zero,2429
   26730:	00025f58 	cmpnei	zero,zero,2429
   26734:	000268ec 	andhi	zero,zero,2467
   26738:	000268cc 	andi	zero,zero,2467
   2673c:	000268cc 	andi	zero,zero,2467
   26740:	000268cc 	andi	zero,zero,2467
   26744:	000268cc 	andi	zero,zero,2467
   26748:	000268cc 	andi	zero,zero,2467
   2674c:	000268cc 	andi	zero,zero,2467
   26750:	000268cc 	andi	zero,zero,2467
   26754:	000268ac 	andhi	zero,zero,2466
   26758:	000268ac 	andhi	zero,zero,2466
   2675c:	00025f58 	cmpnei	zero,zero,2429
   26760:	00025f58 	cmpnei	zero,zero,2429
   26764:	00025f58 	cmpnei	zero,zero,2429
   26768:	00025f58 	cmpnei	zero,zero,2429
   2676c:	00025f58 	cmpnei	zero,zero,2429
   26770:	00025f58 	cmpnei	zero,zero,2429
   26774:	00025f58 	cmpnei	zero,zero,2429
   26778:	00026898 	cmpnei	zero,zero,2466
   2677c:	00026898 	cmpnei	zero,zero,2466
   26780:	00026898 	cmpnei	zero,zero,2466
   26784:	00026898 	cmpnei	zero,zero,2466
   26788:	00026898 	cmpnei	zero,zero,2466
   2678c:	00026898 	cmpnei	zero,zero,2466
   26790:	00025f58 	cmpnei	zero,zero,2429
   26794:	00025f58 	cmpnei	zero,zero,2429
   26798:	00025f58 	cmpnei	zero,zero,2429
   2679c:	00025f58 	cmpnei	zero,zero,2429
   267a0:	00025f58 	cmpnei	zero,zero,2429
   267a4:	00025f58 	cmpnei	zero,zero,2429
   267a8:	00025f58 	cmpnei	zero,zero,2429
   267ac:	00025f58 	cmpnei	zero,zero,2429
   267b0:	00025f58 	cmpnei	zero,zero,2429
   267b4:	00025f58 	cmpnei	zero,zero,2429
   267b8:	00025f58 	cmpnei	zero,zero,2429
   267bc:	00025f58 	cmpnei	zero,zero,2429
   267c0:	00025f58 	cmpnei	zero,zero,2429
   267c4:	00025f58 	cmpnei	zero,zero,2429
   267c8:	00025f58 	cmpnei	zero,zero,2429
   267cc:	00025f58 	cmpnei	zero,zero,2429
   267d0:	00025f58 	cmpnei	zero,zero,2429
   267d4:	00026858 	cmpnei	zero,zero,2465
   267d8:	00025f58 	cmpnei	zero,zero,2429
   267dc:	00025f58 	cmpnei	zero,zero,2429
   267e0:	00025f58 	cmpnei	zero,zero,2429
   267e4:	00025f58 	cmpnei	zero,zero,2429
   267e8:	00025f58 	cmpnei	zero,zero,2429
   267ec:	00025f58 	cmpnei	zero,zero,2429
   267f0:	00025f58 	cmpnei	zero,zero,2429
   267f4:	00025f58 	cmpnei	zero,zero,2429
   267f8:	00026898 	cmpnei	zero,zero,2466
   267fc:	00026898 	cmpnei	zero,zero,2466
   26800:	00026898 	cmpnei	zero,zero,2466
   26804:	00026898 	cmpnei	zero,zero,2466
   26808:	00026898 	cmpnei	zero,zero,2466
   2680c:	00026898 	cmpnei	zero,zero,2466
   26810:	00025f58 	cmpnei	zero,zero,2429
   26814:	00025f58 	cmpnei	zero,zero,2429
   26818:	00025f58 	cmpnei	zero,zero,2429
   2681c:	00025f58 	cmpnei	zero,zero,2429
   26820:	00025f58 	cmpnei	zero,zero,2429
   26824:	00025f58 	cmpnei	zero,zero,2429
   26828:	00025f58 	cmpnei	zero,zero,2429
   2682c:	00025f58 	cmpnei	zero,zero,2429
   26830:	00025f58 	cmpnei	zero,zero,2429
   26834:	00025f58 	cmpnei	zero,zero,2429
   26838:	00025f58 	cmpnei	zero,zero,2429
   2683c:	00025f58 	cmpnei	zero,zero,2429
   26840:	00025f58 	cmpnei	zero,zero,2429
   26844:	00025f58 	cmpnei	zero,zero,2429
   26848:	00025f58 	cmpnei	zero,zero,2429
   2684c:	00025f58 	cmpnei	zero,zero,2429
   26850:	00025f58 	cmpnei	zero,zero,2429
   26854:	00026858 	cmpnei	zero,zero,2465
   26858:	b081800c 	andi	r2,r22,1536
   2685c:	11fdbe1e 	bne	r2,r7,25f58 <__svfscanf_r+0x7a0>
   26860:	b1ac703a 	and	r22,r22,r6
   26864:	b5814014 	ori	r22,r22,1280
   26868:	02400404 	movi	r9,16
   2686c:	a9400005 	stb	r5,0(r21)
   26870:	ad400044 	addi	r21,r21,1
   26874:	98800117 	ldw	r2,4(r19)
   26878:	10bfffc4 	addi	r2,r2,-1
   2687c:	98800115 	stw	r2,4(r19)
   26880:	00803b0e 	bge	zero,r2,26970 <__svfscanf_r+0x11b8>
   26884:	42000044 	addi	r8,r8,1
   26888:	9a000015 	stw	r8,0(r19)
   2688c:	e73fffc4 	addi	fp,fp,-1
   26890:	e03dac1e 	bne	fp,zero,25f44 <__svfscanf_r+0x78c>
   26894:	003db006 	br	25f58 <__svfscanf_r+0x7a0>
   26898:	00800284 	movi	r2,10
   2689c:	127dae0e 	bge	r2,r9,25f58 <__svfscanf_r+0x7a0>
   268a0:	00bd1fc4 	movi	r2,-2945
   268a4:	b0ac703a 	and	r22,r22,r2
   268a8:	003ff006 	br	2686c <__svfscanf_r+0x10b4>
   268ac:	4a53883a 	add	r9,r9,r9
   268b0:	010000f4 	movhi	r4,3
   268b4:	210eac84 	addi	r4,r4,15026
   268b8:	2245883a 	add	r2,r4,r9
   268bc:	1240000f 	ldh	r9,0(r2)
   268c0:	00800204 	movi	r2,8
   268c4:	127ff616 	blt	r2,r9,268a0 <__svfscanf_r+0x10e8>
   268c8:	003da306 	br	25f58 <__svfscanf_r+0x7a0>
   268cc:	4a53883a 	add	r9,r9,r9
   268d0:	010000f4 	movhi	r4,3
   268d4:	210eac84 	addi	r4,r4,15026
   268d8:	2245883a 	add	r2,r4,r9
   268dc:	1240000f 	ldh	r9,0(r2)
   268e0:	00bd1fc4 	movi	r2,-2945
   268e4:	b0ac703a 	and	r22,r22,r2
   268e8:	003fe006 	br	2686c <__svfscanf_r+0x10b4>
   268ec:	b082000c 	andi	r2,r22,2048
   268f0:	103fde26 	beq	r2,zero,2686c <__svfscanf_r+0x10b4>
   268f4:	4800021e 	bne	r9,zero,26900 <__svfscanf_r+0x1148>
   268f8:	b5808014 	ori	r22,r22,512
   268fc:	02400204 	movi	r9,8
   26900:	b081000c 	andi	r2,r22,1024
   26904:	10009f26 	beq	r2,zero,26b84 <__svfscanf_r+0x13cc>
   26908:	00be9fc4 	movi	r2,-1409
   2690c:	b0ac703a 	and	r22,r22,r2
   26910:	003fd606 	br	2686c <__svfscanf_r+0x10b4>
   26914:	b080200c 	andi	r2,r22,128
   26918:	103d8f26 	beq	r2,zero,25f58 <__svfscanf_r+0x7a0>
   2691c:	00bfdfc4 	movi	r2,-129
   26920:	b0ac703a 	and	r22,r22,r2
   26924:	003fd106 	br	2686c <__svfscanf_r+0x10b4>
   26928:	8809883a 	mov	r4,r17
   2692c:	980b883a 	mov	r5,r19
   26930:	d8c0a815 	stw	r3,672(sp)
   26934:	d980a915 	stw	r6,676(sp)
   26938:	dac0a715 	stw	r11,668(sp)
   2693c:	db00a515 	stw	r12,660(sp)
   26940:	db80a415 	stw	r14,656(sp)
   26944:	dbc0a615 	stw	r15,664(sp)
   26948:	00234c80 	call	234c8 <__srefill_r>
   2694c:	d8c0a817 	ldw	r3,672(sp)
   26950:	d980a917 	ldw	r6,676(sp)
   26954:	dac0a717 	ldw	r11,668(sp)
   26958:	db00a517 	ldw	r12,660(sp)
   2695c:	db80a417 	ldw	r14,656(sp)
   26960:	dbc0a617 	ldw	r15,664(sp)
   26964:	103d1e1e 	bne	r2,zero,25de0 <__svfscanf_r+0x628>
   26968:	e03d181e 	bne	fp,zero,25dcc <__svfscanf_r+0x614>
   2696c:	003d1c06 	br	25de0 <__svfscanf_r+0x628>
   26970:	8809883a 	mov	r4,r17
   26974:	980b883a 	mov	r5,r19
   26978:	d8c0a815 	stw	r3,672(sp)
   2697c:	d980a915 	stw	r6,676(sp)
   26980:	d9c0a415 	stw	r7,656(sp)
   26984:	da40a515 	stw	r9,660(sp)
   26988:	00234c80 	call	234c8 <__srefill_r>
   2698c:	d8c0a817 	ldw	r3,672(sp)
   26990:	d980a917 	ldw	r6,676(sp)
   26994:	d9c0a417 	ldw	r7,656(sp)
   26998:	da40a517 	ldw	r9,660(sp)
   2699c:	103fbb26 	beq	r2,zero,2688c <__svfscanf_r+0x10d4>
   269a0:	003d6d06 	br	25f58 <__svfscanf_r+0x7a0>
   269a4:	a429883a 	add	r20,r20,r16
   269a8:	e73fffc4 	addi	fp,fp,-1
   269ac:	b000fc1e 	bne	r22,zero,26da0 <__svfscanf_r+0x15e8>
   269b0:	ad400104 	addi	r21,r21,4
   269b4:	0021883a 	mov	r16,zero
   269b8:	98800117 	ldw	r2,4(r19)
   269bc:	00bd8716 	blt	zero,r2,25fdc <__svfscanf_r+0x824>
   269c0:	8809883a 	mov	r4,r17
   269c4:	980b883a 	mov	r5,r19
   269c8:	00234c80 	call	234c8 <__srefill_r>
   269cc:	103d8326 	beq	r2,zero,25fdc <__svfscanf_r+0x824>
   269d0:	803caf1e 	bne	r16,zero,25c90 <__svfscanf_r+0x4d8>
   269d4:	b03c271e 	bne	r22,zero,25a74 <__svfscanf_r+0x2bc>
   269d8:	d8809e17 	ldw	r2,632(sp)
   269dc:	dc009d17 	ldw	r16,628(sp)
   269e0:	a8000015 	stw	zero,0(r21)
   269e4:	10800044 	addi	r2,r2,1
   269e8:	d8809e15 	stw	r2,632(sp)
   269ec:	800d883a 	mov	r6,r16
   269f0:	003baa06 	br	2589c <__svfscanf_r+0xe4>
   269f4:	857ca626 	beq	r16,r21,25c90 <__svfscanf_r+0x4d8>
   269f8:	ac21c83a 	sub	r16,r21,r16
   269fc:	803bab26 	beq	r16,zero,258ac <__svfscanf_r+0xf4>
   26a00:	d8809e17 	ldw	r2,632(sp)
   26a04:	a8000005 	stb	zero,0(r21)
   26a08:	ddc09c15 	stw	r23,624(sp)
   26a0c:	10800044 	addi	r2,r2,1
   26a10:	d8809e15 	stw	r2,632(sp)
   26a14:	003d6106 	br	25f9c <__svfscanf_r+0x7e4>
   26a18:	010000c4 	movi	r4,3
   26a1c:	113e8526 	beq	r2,r4,26434 <__svfscanf_r+0xc7c>
   26a20:	01000144 	movi	r4,5
   26a24:	113cee1e 	bne	r2,r4,25de0 <__svfscanf_r+0x628>
   26a28:	84000044 	addi	r16,r16,1
   26a2c:	003e4906 	br	26354 <__svfscanf_r+0xb9c>
   26a30:	00800084 	movi	r2,2
   26a34:	30be781e 	bne	r6,r2,26418 <__svfscanf_r+0xc60>
   26a38:	018000c4 	movi	r6,3
   26a3c:	003e4506 	br	26354 <__svfscanf_r+0xb9c>
   26a40:	d8c0a017 	ldw	r3,640(sp)
   26a44:	d9c09f17 	ldw	r7,636(sp)
   26a48:	8809883a 	mov	r4,r17
   26a4c:	d9400104 	addi	r5,sp,4
   26a50:	000d883a 	mov	r6,zero
   26a54:	a8000005 	stb	zero,0(r21)
   26a58:	183ee83a 	callr	r3
   26a5c:	b0c0080c 	andi	r3,r22,32
   26a60:	1800391e 	bne	r3,zero,26b48 <__svfscanf_r+0x1390>
   26a64:	b0c0010c 	andi	r3,r22,4
   26a68:	1800ac26 	beq	r3,zero,26d1c <__svfscanf_r+0x1564>
   26a6c:	d9409c17 	ldw	r5,624(sp)
   26a70:	28c00017 	ldw	r3,0(r5)
   26a74:	29400104 	addi	r5,r5,4
   26a78:	d9409c15 	stw	r5,624(sp)
   26a7c:	1880000d 	sth	r2,0(r3)
   26a80:	d8809e17 	ldw	r2,632(sp)
   26a84:	10800044 	addi	r2,r2,1
   26a88:	d8809e15 	stw	r2,632(sp)
   26a8c:	003d4006 	br	25f90 <__svfscanf_r+0x7d8>
   26a90:	d8c09c17 	ldw	r3,624(sp)
   26a94:	98800017 	ldw	r2,0(r19)
   26a98:	1d400017 	ldw	r21,0(r3)
   26a9c:	1d800104 	addi	r22,r3,4
   26aa0:	a821883a 	mov	r16,r21
   26aa4:	10c00003 	ldbu	r3,0(r2)
   26aa8:	91400017 	ldw	r5,0(r18)
   26aac:	28c7883a 	add	r3,r5,r3
   26ab0:	18c00003 	ldbu	r3,0(r3)
   26ab4:	18c0020c 	andi	r3,r3,8
   26ab8:	18c03fcc 	andi	r3,r3,255
   26abc:	18c0201c 	xori	r3,r3,128
   26ac0:	18ffe004 	addi	r3,r3,-128
   26ac4:	1800121e 	bne	r3,zero,26b10 <__svfscanf_r+0x1358>
   26ac8:	98c00117 	ldw	r3,4(r19)
   26acc:	10800044 	addi	r2,r2,1
   26ad0:	84000044 	addi	r16,r16,1
   26ad4:	18ffffc4 	addi	r3,r3,-1
   26ad8:	98c00115 	stw	r3,4(r19)
   26adc:	10ffffc3 	ldbu	r3,-1(r2)
   26ae0:	e73fffc4 	addi	fp,fp,-1
   26ae4:	80ffffc5 	stb	r3,-1(r16)
   26ae8:	98800015 	stw	r2,0(r19)
   26aec:	e0000826 	beq	fp,zero,26b10 <__svfscanf_r+0x1358>
   26af0:	98c00117 	ldw	r3,4(r19)
   26af4:	00ffeb16 	blt	zero,r3,26aa4 <__svfscanf_r+0x12ec>
   26af8:	8809883a 	mov	r4,r17
   26afc:	980b883a 	mov	r5,r19
   26b00:	00234c80 	call	234c8 <__srefill_r>
   26b04:	1000021e 	bne	r2,zero,26b10 <__svfscanf_r+0x1358>
   26b08:	98800017 	ldw	r2,0(r19)
   26b0c:	003fe506 	br	26aa4 <__svfscanf_r+0x12ec>
   26b10:	d8809e17 	ldw	r2,632(sp)
   26b14:	856bc83a 	sub	r21,r16,r21
   26b18:	80000005 	stb	zero,0(r16)
   26b1c:	dc009d17 	ldw	r16,628(sp)
   26b20:	10800044 	addi	r2,r2,1
   26b24:	a569883a 	add	r20,r20,r21
   26b28:	d8809e15 	stw	r2,632(sp)
   26b2c:	dd809c15 	stw	r22,624(sp)
   26b30:	800d883a 	mov	r6,r16
   26b34:	003b5906 	br	2589c <__svfscanf_r+0xe4>
   26b38:	dd409b04 	addi	r21,sp,620
   26b3c:	003d2506 	br	25fd4 <__svfscanf_r+0x81c>
   26b40:	002d883a 	mov	r22,zero
   26b44:	003ba206 	br	259d0 <__svfscanf_r+0x218>
   26b48:	d9009c17 	ldw	r4,624(sp)
   26b4c:	20c00017 	ldw	r3,0(r4)
   26b50:	21000104 	addi	r4,r4,4
   26b54:	d9009c15 	stw	r4,624(sp)
   26b58:	18800015 	stw	r2,0(r3)
   26b5c:	003fc806 	br	26a80 <__svfscanf_r+0x12c8>
   26b60:	b280008c 	andi	r10,r22,2
   26b64:	50008126 	beq	r10,zero,26d6c <__svfscanf_r+0x15b4>
   26b68:	d8c09c17 	ldw	r3,624(sp)
   26b6c:	18800017 	ldw	r2,0(r3)
   26b70:	18c00104 	addi	r3,r3,4
   26b74:	d8c09c15 	stw	r3,624(sp)
   26b78:	15400015 	stw	r21,0(r2)
   26b7c:	15c00115 	stw	r23,4(r2)
   26b80:	003cde06 	br	25efc <__svfscanf_r+0x744>
   26b84:	00bf1fc4 	movi	r2,-897
   26b88:	b0ac703a 	and	r22,r22,r2
   26b8c:	18000226 	beq	r3,zero,26b98 <__svfscanf_r+0x13e0>
   26b90:	18ffffc4 	addi	r3,r3,-1
   26b94:	e7000044 	addi	fp,fp,1
   26b98:	84000044 	addi	r16,r16,1
   26b9c:	003f3506 	br	26874 <__svfscanf_r+0x10bc>
   26ba0:	803cfe1e 	bne	r16,zero,25f9c <__svfscanf_r+0x7e4>
   26ba4:	003b4106 	br	258ac <__svfscanf_r+0xf4>
   26ba8:	d8c09c17 	ldw	r3,624(sp)
   26bac:	01400044 	movi	r5,1
   26bb0:	e00d883a 	mov	r6,fp
   26bb4:	19000017 	ldw	r4,0(r3)
   26bb8:	980f883a 	mov	r7,r19
   26bbc:	0021bd80 	call	21bd8 <fread>
   26bc0:	d9009c17 	ldw	r4,624(sp)
   26bc4:	20c00104 	addi	r3,r4,4
   26bc8:	103c3126 	beq	r2,zero,25c90 <__svfscanf_r+0x4d8>
   26bcc:	1529883a 	add	r20,r2,r20
   26bd0:	d8809e17 	ldw	r2,632(sp)
   26bd4:	dc009d17 	ldw	r16,628(sp)
   26bd8:	d8c09c15 	stw	r3,624(sp)
   26bdc:	10800044 	addi	r2,r2,1
   26be0:	d8809e15 	stw	r2,632(sp)
   26be4:	800d883a 	mov	r6,r16
   26be8:	003b2c06 	br	2589c <__svfscanf_r+0xe4>
   26bec:	00ffff84 	movi	r3,-2
   26bf0:	10ff7126 	beq	r2,r3,269b8 <__svfscanf_r+0x1200>
   26bf4:	a9000017 	ldw	r4,0(r21)
   26bf8:	0028fbc0 	call	28fbc <iswspace>
   26bfc:	103f6926 	beq	r2,zero,269a4 <__svfscanf_r+0x11ec>
   26c00:	803f7426 	beq	r16,zero,269d4 <__svfscanf_r+0x121c>
   26c04:	843fffc4 	addi	r16,r16,-1
   26c08:	d9000104 	addi	r4,sp,4
   26c0c:	2405883a 	add	r2,r4,r16
   26c10:	11400003 	ldbu	r5,0(r2)
   26c14:	8809883a 	mov	r4,r17
   26c18:	980d883a 	mov	r6,r19
   26c1c:	002d1940 	call	2d194 <_ungetc_r>
   26c20:	803ff81e 	bne	r16,zero,26c04 <__svfscanf_r+0x144c>
   26c24:	003f6b06 	br	269d4 <__svfscanf_r+0x121c>
   26c28:	99000017 	ldw	r4,0(r19)
   26c2c:	1705c83a 	sub	r2,r2,fp
   26c30:	8721883a 	add	r16,r16,fp
   26c34:	2707883a 	add	r3,r4,fp
   26c38:	98800115 	stw	r2,4(r19)
   26c3c:	98c00015 	stw	r3,0(r19)
   26c40:	003cd606 	br	25f9c <__svfscanf_r+0x7e4>
   26c44:	d880a117 	ldw	r2,644(sp)
   26c48:	000d883a 	mov	r6,zero
   26c4c:	8809883a 	mov	r4,r17
   26c50:	11400044 	addi	r5,r2,1
   26c54:	01c00284 	movi	r7,10
   26c58:	002c47c0 	call	2c47c <_strtol_r>
   26c5c:	d8c0a317 	ldw	r3,652(sp)
   26c60:	10cdc83a 	sub	r6,r2,r3
   26c64:	d900a117 	ldw	r4,644(sp)
   26c68:	d88055c4 	addi	r2,sp,343
   26c6c:	20800236 	bltu	r4,r2,26c78 <__svfscanf_r+0x14c0>
   26c70:	d9005584 	addi	r4,sp,342
   26c74:	d900a115 	stw	r4,644(sp)
   26c78:	d900a117 	ldw	r4,644(sp)
   26c7c:	014000f4 	movhi	r5,3
   26c80:	294eab04 	addi	r5,r5,15020
   26c84:	002ace80 	call	2ace8 <sprintf>
   26c88:	003c8e06 	br	25ec4 <__svfscanf_r+0x70c>
   26c8c:	b32c703a 	and	r22,r22,r12
   26c90:	01800044 	movi	r6,1
   26c94:	003daf06 	br	26354 <__svfscanf_r+0xb9c>
   26c98:	d8c0a217 	ldw	r3,648(sp)
   26c9c:	a8ebc83a 	sub	r21,r21,r3
   26ca0:	054dc83a 	sub	r6,zero,r21
   26ca4:	a83c8726 	beq	r21,zero,25ec4 <__svfscanf_r+0x70c>
   26ca8:	ddc0a115 	stw	r23,644(sp)
   26cac:	003fed06 	br	26c64 <__svfscanf_r+0x14ac>
   26cb0:	85c00083 	ldbu	r23,2(r16)
   26cb4:	b5800094 	ori	r22,r22,2
   26cb8:	84000084 	addi	r16,r16,2
   26cbc:	003b1e06 	br	25938 <__svfscanf_r+0x180>
   26cc0:	b080004c 	andi	r2,r22,1
   26cc4:	10000d1e 	bne	r2,zero,26cfc <__svfscanf_r+0x1544>
   26cc8:	b580008c 	andi	r22,r22,2
   26ccc:	b0000b26 	beq	r22,zero,26cfc <__svfscanf_r+0x1544>
   26cd0:	d8c09c17 	ldw	r3,624(sp)
   26cd4:	d9009c17 	ldw	r4,624(sp)
   26cd8:	dc009d17 	ldw	r16,628(sp)
   26cdc:	18800017 	ldw	r2,0(r3)
   26ce0:	a007d7fa 	srai	r3,r20,31
   26ce4:	21000104 	addi	r4,r4,4
   26ce8:	15000015 	stw	r20,0(r2)
   26cec:	10c00115 	stw	r3,4(r2)
   26cf0:	d9009c15 	stw	r4,624(sp)
   26cf4:	800d883a 	mov	r6,r16
   26cf8:	003ae806 	br	2589c <__svfscanf_r+0xe4>
   26cfc:	d9409c17 	ldw	r5,624(sp)
   26d00:	dc009d17 	ldw	r16,628(sp)
   26d04:	28800017 	ldw	r2,0(r5)
   26d08:	29400104 	addi	r5,r5,4
   26d0c:	d9409c15 	stw	r5,624(sp)
   26d10:	15000015 	stw	r20,0(r2)
   26d14:	800d883a 	mov	r6,r16
   26d18:	003ae006 	br	2589c <__svfscanf_r+0xe4>
   26d1c:	b0c0004c 	andi	r3,r22,1
   26d20:	183f891e 	bne	r3,zero,26b48 <__svfscanf_r+0x1390>
   26d24:	b580008c 	andi	r22,r22,2
   26d28:	b03f8726 	beq	r22,zero,26b48 <__svfscanf_r+0x1390>
   26d2c:	d940a017 	ldw	r5,640(sp)
   26d30:	008000f4 	movhi	r2,3
   26d34:	10b29204 	addi	r2,r2,-13752
   26d38:	8809883a 	mov	r4,r17
   26d3c:	28802626 	beq	r5,r2,26dd8 <__svfscanf_r+0x1620>
   26d40:	d9c09f17 	ldw	r7,636(sp)
   26d44:	d9400104 	addi	r5,sp,4
   26d48:	000d883a 	mov	r6,zero
   26d4c:	002c7180 	call	2c718 <_strtoll_r>
   26d50:	d9409c17 	ldw	r5,624(sp)
   26d54:	29000017 	ldw	r4,0(r5)
   26d58:	29400104 	addi	r5,r5,4
   26d5c:	d9409c15 	stw	r5,624(sp)
   26d60:	20800015 	stw	r2,0(r4)
   26d64:	20c00115 	stw	r3,4(r4)
   26d68:	003f4506 	br	26a80 <__svfscanf_r+0x12c8>
   26d6c:	d8809c17 	ldw	r2,624(sp)
   26d70:	a809883a 	mov	r4,r21
   26d74:	180b883a 	mov	r5,r3
   26d78:	14000104 	addi	r16,r2,4
   26d7c:	15800017 	ldw	r22,0(r2)
   26d80:	002ab980 	call	2ab98 <__isnand>
   26d84:	1000311e 	bne	r2,zero,26e4c <__svfscanf_r+0x1694>
   26d88:	a809883a 	mov	r4,r21
   26d8c:	b80b883a 	mov	r5,r23
   26d90:	002fb4c0 	call	2fb4c <__truncdfsf2>
   26d94:	b0800015 	stw	r2,0(r22)
   26d98:	dc009c15 	stw	r16,624(sp)
   26d9c:	003c5706 	br	25efc <__svfscanf_r+0x744>
   26da0:	0021883a 	mov	r16,zero
   26da4:	003f0406 	br	269b8 <__svfscanf_r+0x1200>
   26da8:	d9400104 	addi	r5,sp,4
   26dac:	9821883a 	mov	r16,r19
   26db0:	2dfabe2e 	bgeu	r5,r23,258ac <__svfscanf_r+0xf4>
   26db4:	bcbfffc4 	addi	r18,r23,-1
   26db8:	dcc000c4 	addi	r19,sp,3
   26dbc:	91400007 	ldb	r5,0(r18)
   26dc0:	8809883a 	mov	r4,r17
   26dc4:	94bfffc4 	addi	r18,r18,-1
   26dc8:	800d883a 	mov	r6,r16
   26dcc:	002d1940 	call	2d194 <_ungetc_r>
   26dd0:	94fffa1e 	bne	r18,r19,26dbc <__svfscanf_r+0x1604>
   26dd4:	003ab506 	br	258ac <__svfscanf_r+0xf4>
   26dd8:	d9c09f17 	ldw	r7,636(sp)
   26ddc:	d9400104 	addi	r5,sp,4
   26de0:	000d883a 	mov	r6,zero
   26de4:	002cd100 	call	2cd10 <_strtoull_r>
   26de8:	003fd906 	br	26d50 <__svfscanf_r+0x1598>
   26dec:	d9000104 	addi	r4,sp,4
   26df0:	9821883a 	mov	r16,r19
   26df4:	25faad2e 	bgeu	r4,r23,258ac <__svfscanf_r+0xf4>
   26df8:	bcbfffc4 	addi	r18,r23,-1
   26dfc:	dcc000c4 	addi	r19,sp,3
   26e00:	91400007 	ldb	r5,0(r18)
   26e04:	8809883a 	mov	r4,r17
   26e08:	94bfffc4 	addi	r18,r18,-1
   26e0c:	800d883a 	mov	r6,r16
   26e10:	002d1940 	call	2d194 <_ungetc_r>
   26e14:	94fffa1e 	bne	r18,r19,26e00 <__svfscanf_r+0x1648>
   26e18:	003aa406 	br	258ac <__svfscanf_r+0xf4>
   26e1c:	d8c00104 	addi	r3,sp,4
   26e20:	9821883a 	mov	r16,r19
   26e24:	1dfaa12e 	bgeu	r3,r23,258ac <__svfscanf_r+0xf4>
   26e28:	bcbfffc4 	addi	r18,r23,-1
   26e2c:	dcc000c4 	addi	r19,sp,3
   26e30:	91400007 	ldb	r5,0(r18)
   26e34:	8809883a 	mov	r4,r17
   26e38:	94bfffc4 	addi	r18,r18,-1
   26e3c:	800d883a 	mov	r6,r16
   26e40:	002d1940 	call	2d194 <_ungetc_r>
   26e44:	94fffa1e 	bne	r18,r19,26e30 <__svfscanf_r+0x1678>
   26e48:	003a9806 	br	258ac <__svfscanf_r+0xf4>
   26e4c:	0009883a 	mov	r4,zero
   26e50:	002ac880 	call	2ac88 <nanf>
   26e54:	b0800015 	stw	r2,0(r22)
   26e58:	dc009c15 	stw	r16,624(sp)
   26e5c:	003c2706 	br	25efc <__svfscanf_r+0x744>

00026e60 <_vfscanf_r>:
   26e60:	defffb04 	addi	sp,sp,-20
   26e64:	dc000315 	stw	r16,12(sp)
   26e68:	dfc00415 	stw	ra,16(sp)
   26e6c:	2021883a 	mov	r16,r4
   26e70:	20000926 	beq	r4,zero,26e98 <_vfscanf_r+0x38>
   26e74:	20800e17 	ldw	r2,56(r4)
   26e78:	1000071e 	bne	r2,zero,26e98 <_vfscanf_r+0x38>
   26e7c:	d9400015 	stw	r5,0(sp)
   26e80:	d9800115 	stw	r6,4(sp)
   26e84:	d9c00215 	stw	r7,8(sp)
   26e88:	00215bc0 	call	215bc <__sinit>
   26e8c:	d9c00217 	ldw	r7,8(sp)
   26e90:	d9800117 	ldw	r6,4(sp)
   26e94:	d9400017 	ldw	r5,0(sp)
   26e98:	8009883a 	mov	r4,r16
   26e9c:	dfc00417 	ldw	ra,16(sp)
   26ea0:	dc000317 	ldw	r16,12(sp)
   26ea4:	dec00504 	addi	sp,sp,20
   26ea8:	00257b81 	jmpi	257b8 <__svfscanf_r>

00026eac <__svfscanf>:
   26eac:	008000f4 	movhi	r2,3
   26eb0:	1096b704 	addi	r2,r2,23260
   26eb4:	2007883a 	mov	r3,r4
   26eb8:	11000017 	ldw	r4,0(r2)
   26ebc:	2805883a 	mov	r2,r5
   26ec0:	300f883a 	mov	r7,r6
   26ec4:	180b883a 	mov	r5,r3
   26ec8:	100d883a 	mov	r6,r2
   26ecc:	00257b81 	jmpi	257b8 <__svfscanf_r>

00026ed0 <vfscanf>:
   26ed0:	defffb04 	addi	sp,sp,-20
   26ed4:	dc000115 	stw	r16,4(sp)
   26ed8:	040000f4 	movhi	r16,3
   26edc:	8416b704 	addi	r16,r16,23260
   26ee0:	80800017 	ldw	r2,0(r16)
   26ee4:	dc800315 	stw	r18,12(sp)
   26ee8:	dc400215 	stw	r17,8(sp)
   26eec:	dfc00415 	stw	ra,16(sp)
   26ef0:	2025883a 	mov	r18,r4
   26ef4:	2823883a 	mov	r17,r5
   26ef8:	300f883a 	mov	r7,r6
   26efc:	10000726 	beq	r2,zero,26f1c <vfscanf+0x4c>
   26f00:	10c00e17 	ldw	r3,56(r2)
   26f04:	1800051e 	bne	r3,zero,26f1c <vfscanf+0x4c>
   26f08:	1009883a 	mov	r4,r2
   26f0c:	d9800015 	stw	r6,0(sp)
   26f10:	00215bc0 	call	215bc <__sinit>
   26f14:	80800017 	ldw	r2,0(r16)
   26f18:	d9c00017 	ldw	r7,0(sp)
   26f1c:	1009883a 	mov	r4,r2
   26f20:	900b883a 	mov	r5,r18
   26f24:	880d883a 	mov	r6,r17
   26f28:	dfc00417 	ldw	ra,16(sp)
   26f2c:	dc800317 	ldw	r18,12(sp)
   26f30:	dc400217 	ldw	r17,8(sp)
   26f34:	dc000117 	ldw	r16,4(sp)
   26f38:	dec00504 	addi	sp,sp,20
   26f3c:	00257b81 	jmpi	257b8 <__svfscanf_r>

00026f40 <_write_r>:
   26f40:	defffd04 	addi	sp,sp,-12
   26f44:	dc400115 	stw	r17,4(sp)
   26f48:	dc000015 	stw	r16,0(sp)
   26f4c:	2023883a 	mov	r17,r4
   26f50:	040000f4 	movhi	r16,3
   26f54:	841d9504 	addi	r16,r16,30292
   26f58:	2809883a 	mov	r4,r5
   26f5c:	300b883a 	mov	r5,r6
   26f60:	380d883a 	mov	r6,r7
   26f64:	dfc00215 	stw	ra,8(sp)
   26f68:	80000015 	stw	zero,0(r16)
   26f6c:	00311600 	call	31160 <write>
   26f70:	00ffffc4 	movi	r3,-1
   26f74:	10c00526 	beq	r2,r3,26f8c <_write_r+0x4c>
   26f78:	dfc00217 	ldw	ra,8(sp)
   26f7c:	dc400117 	ldw	r17,4(sp)
   26f80:	dc000017 	ldw	r16,0(sp)
   26f84:	dec00304 	addi	sp,sp,12
   26f88:	f800283a 	ret
   26f8c:	80c00017 	ldw	r3,0(r16)
   26f90:	183ff926 	beq	r3,zero,26f78 <_write_r+0x38>
   26f94:	88c00015 	stw	r3,0(r17)
   26f98:	dfc00217 	ldw	ra,8(sp)
   26f9c:	dc400117 	ldw	r17,4(sp)
   26fa0:	dc000017 	ldw	r16,0(sp)
   26fa4:	dec00304 	addi	sp,sp,12
   26fa8:	f800283a 	ret

00026fac <__swsetup_r>:
   26fac:	008000f4 	movhi	r2,3
   26fb0:	1096b704 	addi	r2,r2,23260
   26fb4:	10800017 	ldw	r2,0(r2)
   26fb8:	defffd04 	addi	sp,sp,-12
   26fbc:	dc400115 	stw	r17,4(sp)
   26fc0:	dc000015 	stw	r16,0(sp)
   26fc4:	dfc00215 	stw	ra,8(sp)
   26fc8:	2023883a 	mov	r17,r4
   26fcc:	2821883a 	mov	r16,r5
   26fd0:	10000226 	beq	r2,zero,26fdc <__swsetup_r+0x30>
   26fd4:	10c00e17 	ldw	r3,56(r2)
   26fd8:	18003d26 	beq	r3,zero,270d0 <__swsetup_r+0x124>
   26fdc:	8080030b 	ldhu	r2,12(r16)
   26fe0:	10c0020c 	andi	r3,r2,8
   26fe4:	18ffffcc 	andi	r3,r3,65535
   26fe8:	18e0001c 	xori	r3,r3,32768
   26fec:	18e00004 	addi	r3,r3,-32768
   26ff0:	18001226 	beq	r3,zero,2703c <__swsetup_r+0x90>
   26ff4:	80c00417 	ldw	r3,16(r16)
   26ff8:	18001f26 	beq	r3,zero,27078 <__swsetup_r+0xcc>
   26ffc:	1100004c 	andi	r4,r2,1
   27000:	2000261e 	bne	r4,zero,2709c <__swsetup_r+0xf0>
   27004:	1080008c 	andi	r2,r2,2
   27008:	10bfffcc 	andi	r2,r2,65535
   2700c:	10a0001c 	xori	r2,r2,32768
   27010:	10a00004 	addi	r2,r2,-32768
   27014:	1000311e 	bne	r2,zero,270dc <__swsetup_r+0x130>
   27018:	80800517 	ldw	r2,20(r16)
   2701c:	80800215 	stw	r2,8(r16)
   27020:	18002326 	beq	r3,zero,270b0 <__swsetup_r+0x104>
   27024:	0005883a 	mov	r2,zero
   27028:	dfc00217 	ldw	ra,8(sp)
   2702c:	dc400117 	ldw	r17,4(sp)
   27030:	dc000017 	ldw	r16,0(sp)
   27034:	dec00304 	addi	sp,sp,12
   27038:	f800283a 	ret
   2703c:	10c0040c 	andi	r3,r2,16
   27040:	18ffffcc 	andi	r3,r3,65535
   27044:	18e0001c 	xori	r3,r3,32768
   27048:	18e00004 	addi	r3,r3,-32768
   2704c:	18001e26 	beq	r3,zero,270c8 <__swsetup_r+0x11c>
   27050:	10c0010c 	andi	r3,r2,4
   27054:	18ffffcc 	andi	r3,r3,65535
   27058:	18e0001c 	xori	r3,r3,32768
   2705c:	18e00004 	addi	r3,r3,-32768
   27060:	1800211e 	bne	r3,zero,270e8 <__swsetup_r+0x13c>
   27064:	80c00417 	ldw	r3,16(r16)
   27068:	11400214 	ori	r5,r2,8
   2706c:	8140030d 	sth	r5,12(r16)
   27070:	2805883a 	mov	r2,r5
   27074:	183fe11e 	bne	r3,zero,26ffc <__swsetup_r+0x50>
   27078:	1140a00c 	andi	r5,r2,640
   2707c:	01008004 	movi	r4,512
   27080:	293fde26 	beq	r5,r4,26ffc <__swsetup_r+0x50>
   27084:	8809883a 	mov	r4,r17
   27088:	800b883a 	mov	r5,r16
   2708c:	00227d00 	call	227d0 <__smakebuf_r>
   27090:	8080030b 	ldhu	r2,12(r16)
   27094:	80c00417 	ldw	r3,16(r16)
   27098:	003fd806 	br	26ffc <__swsetup_r+0x50>
   2709c:	80800517 	ldw	r2,20(r16)
   270a0:	80000215 	stw	zero,8(r16)
   270a4:	0085c83a 	sub	r2,zero,r2
   270a8:	80800615 	stw	r2,24(r16)
   270ac:	183fdd1e 	bne	r3,zero,27024 <__swsetup_r+0x78>
   270b0:	8080030b 	ldhu	r2,12(r16)
   270b4:	1080200c 	andi	r2,r2,128
   270b8:	10bfffcc 	andi	r2,r2,65535
   270bc:	10a0001c 	xori	r2,r2,32768
   270c0:	10a00004 	addi	r2,r2,-32768
   270c4:	103fd826 	beq	r2,zero,27028 <__swsetup_r+0x7c>
   270c8:	00bfffc4 	movi	r2,-1
   270cc:	003fd606 	br	27028 <__swsetup_r+0x7c>
   270d0:	1009883a 	mov	r4,r2
   270d4:	00215bc0 	call	215bc <__sinit>
   270d8:	003fc006 	br	26fdc <__swsetup_r+0x30>
   270dc:	0005883a 	mov	r2,zero
   270e0:	80800215 	stw	r2,8(r16)
   270e4:	003fce06 	br	27020 <__swsetup_r+0x74>
   270e8:	81400c17 	ldw	r5,48(r16)
   270ec:	28000626 	beq	r5,zero,27108 <__swsetup_r+0x15c>
   270f0:	80c01004 	addi	r3,r16,64
   270f4:	28c00326 	beq	r5,r3,27104 <__swsetup_r+0x158>
   270f8:	8809883a 	mov	r4,r17
   270fc:	0021d540 	call	21d54 <_free_r>
   27100:	8080030b 	ldhu	r2,12(r16)
   27104:	80000c15 	stw	zero,48(r16)
   27108:	80c00417 	ldw	r3,16(r16)
   2710c:	013ff6c4 	movi	r4,-37
   27110:	2084703a 	and	r2,r4,r2
   27114:	80000115 	stw	zero,4(r16)
   27118:	80c00015 	stw	r3,0(r16)
   2711c:	003fd206 	br	27068 <__swsetup_r+0xbc>

00027120 <_close_r>:
   27120:	defffd04 	addi	sp,sp,-12
   27124:	dc400115 	stw	r17,4(sp)
   27128:	dc000015 	stw	r16,0(sp)
   2712c:	2023883a 	mov	r17,r4
   27130:	040000f4 	movhi	r16,3
   27134:	841d9504 	addi	r16,r16,30292
   27138:	2809883a 	mov	r4,r5
   2713c:	dfc00215 	stw	ra,8(sp)
   27140:	80000015 	stw	zero,0(r16)
   27144:	00306500 	call	30650 <close>
   27148:	00ffffc4 	movi	r3,-1
   2714c:	10c00526 	beq	r2,r3,27164 <_close_r+0x44>
   27150:	dfc00217 	ldw	ra,8(sp)
   27154:	dc400117 	ldw	r17,4(sp)
   27158:	dc000017 	ldw	r16,0(sp)
   2715c:	dec00304 	addi	sp,sp,12
   27160:	f800283a 	ret
   27164:	80c00017 	ldw	r3,0(r16)
   27168:	183ff926 	beq	r3,zero,27150 <_close_r+0x30>
   2716c:	88c00015 	stw	r3,0(r17)
   27170:	dfc00217 	ldw	ra,8(sp)
   27174:	dc400117 	ldw	r17,4(sp)
   27178:	dc000017 	ldw	r16,0(sp)
   2717c:	dec00304 	addi	sp,sp,12
   27180:	f800283a 	ret

00027184 <quorem>:
   27184:	defff204 	addi	sp,sp,-56
   27188:	dd000815 	stw	r20,32(sp)
   2718c:	20800417 	ldw	r2,16(r4)
   27190:	2d000417 	ldw	r20,16(r5)
   27194:	dcc00715 	stw	r19,28(sp)
   27198:	dfc00d15 	stw	ra,52(sp)
   2719c:	df000c15 	stw	fp,48(sp)
   271a0:	ddc00b15 	stw	r23,44(sp)
   271a4:	dd800a15 	stw	r22,40(sp)
   271a8:	dd400915 	stw	r21,36(sp)
   271ac:	dc800615 	stw	r18,24(sp)
   271b0:	dc400515 	stw	r17,20(sp)
   271b4:	dc000415 	stw	r16,16(sp)
   271b8:	d9400015 	stw	r5,0(sp)
   271bc:	2027883a 	mov	r19,r4
   271c0:	15007d16 	blt	r2,r20,273b8 <quorem+0x234>
   271c4:	a0800104 	addi	r2,r20,4
   271c8:	1085883a 	add	r2,r2,r2
   271cc:	1085883a 	add	r2,r2,r2
   271d0:	28ad883a 	add	r22,r5,r2
   271d4:	2085883a 	add	r2,r4,r2
   271d8:	10800017 	ldw	r2,0(r2)
   271dc:	b1400017 	ldw	r5,0(r22)
   271e0:	a53fffc4 	addi	r20,r20,-1
   271e4:	1009883a 	mov	r4,r2
   271e8:	29400044 	addi	r5,r5,1
   271ec:	d8800115 	stw	r2,4(sp)
   271f0:	002fde80 	call	2fde8 <__udivsi3>
   271f4:	1025883a 	mov	r18,r2
   271f8:	d8800017 	ldw	r2,0(sp)
   271fc:	9f000504 	addi	fp,r19,20
   27200:	14000504 	addi	r16,r2,20
   27204:	90003626 	beq	r18,zero,272e0 <quorem+0x15c>
   27208:	802b883a 	mov	r21,r16
   2720c:	e023883a 	mov	r17,fp
   27210:	0007883a 	mov	r3,zero
   27214:	002f883a 	mov	r23,zero
   27218:	a9800017 	ldw	r6,0(r21)
   2721c:	900b883a 	mov	r5,r18
   27220:	d8c00315 	stw	r3,12(sp)
   27224:	313fffcc 	andi	r4,r6,65535
   27228:	d9800215 	stw	r6,8(sp)
   2722c:	00211880 	call	21188 <__mulsi3>
   27230:	d9800217 	ldw	r6,8(sp)
   27234:	d8c00317 	ldw	r3,12(sp)
   27238:	900b883a 	mov	r5,r18
   2723c:	3008d43a 	srli	r4,r6,16
   27240:	1887883a 	add	r3,r3,r2
   27244:	d8c00315 	stw	r3,12(sp)
   27248:	00211880 	call	21188 <__mulsi3>
   2724c:	89400017 	ldw	r5,0(r17)
   27250:	d8c00317 	ldw	r3,12(sp)
   27254:	ad400104 	addi	r21,r21,4
   27258:	293fffcc 	andi	r4,r5,65535
   2725c:	1810d43a 	srli	r8,r3,16
   27260:	25c9883a 	add	r4,r4,r23
   27264:	18ffffcc 	andi	r3,r3,65535
   27268:	20c9c83a 	sub	r4,r4,r3
   2726c:	280cd43a 	srli	r6,r5,16
   27270:	4085883a 	add	r2,r8,r2
   27274:	2007d43a 	srai	r3,r4,16
   27278:	117fffcc 	andi	r5,r2,65535
   2727c:	314bc83a 	sub	r5,r6,r5
   27280:	28cb883a 	add	r5,r5,r3
   27284:	8940008d 	sth	r5,2(r17)
   27288:	8900000d 	sth	r4,0(r17)
   2728c:	1006d43a 	srli	r3,r2,16
   27290:	282fd43a 	srai	r23,r5,16
   27294:	8c400104 	addi	r17,r17,4
   27298:	b57fdf2e 	bgeu	r22,r21,27218 <quorem+0x94>
   2729c:	d8c00117 	ldw	r3,4(sp)
   272a0:	18000f1e 	bne	r3,zero,272e0 <quorem+0x15c>
   272a4:	a0800144 	addi	r2,r20,5
   272a8:	1085883a 	add	r2,r2,r2
   272ac:	1085883a 	add	r2,r2,r2
   272b0:	9887883a 	add	r3,r19,r2
   272b4:	18bfff04 	addi	r2,r3,-4
   272b8:	e080082e 	bgeu	fp,r2,272dc <quorem+0x158>
   272bc:	18ffff17 	ldw	r3,-4(r3)
   272c0:	18000326 	beq	r3,zero,272d0 <quorem+0x14c>
   272c4:	00000506 	br	272dc <quorem+0x158>
   272c8:	10c00017 	ldw	r3,0(r2)
   272cc:	1800031e 	bne	r3,zero,272dc <quorem+0x158>
   272d0:	10bfff04 	addi	r2,r2,-4
   272d4:	a53fffc4 	addi	r20,r20,-1
   272d8:	e0bffb36 	bltu	fp,r2,272c8 <quorem+0x144>
   272dc:	9d000415 	stw	r20,16(r19)
   272e0:	d9400017 	ldw	r5,0(sp)
   272e4:	9809883a 	mov	r4,r19
   272e8:	0029df40 	call	29df4 <__mcmp>
   272ec:	10002516 	blt	r2,zero,27384 <quorem+0x200>
   272f0:	94800044 	addi	r18,r18,1
   272f4:	e007883a 	mov	r3,fp
   272f8:	000d883a 	mov	r6,zero
   272fc:	18800017 	ldw	r2,0(r3)
   27300:	82000017 	ldw	r8,0(r16)
   27304:	84000104 	addi	r16,r16,4
   27308:	11ffffcc 	andi	r7,r2,65535
   2730c:	413fffcc 	andi	r4,r8,65535
   27310:	398d883a 	add	r6,r7,r6
   27314:	310fc83a 	sub	r7,r6,r4
   27318:	4010d43a 	srli	r8,r8,16
   2731c:	100cd43a 	srli	r6,r2,16
   27320:	3809d43a 	srai	r4,r7,16
   27324:	19c0000d 	sth	r7,0(r3)
   27328:	320dc83a 	sub	r6,r6,r8
   2732c:	310d883a 	add	r6,r6,r4
   27330:	1980008d 	sth	r6,2(r3)
   27334:	300dd43a 	srai	r6,r6,16
   27338:	18c00104 	addi	r3,r3,4
   2733c:	b43fef2e 	bgeu	r22,r16,272fc <quorem+0x178>
   27340:	a0800144 	addi	r2,r20,5
   27344:	1085883a 	add	r2,r2,r2
   27348:	1085883a 	add	r2,r2,r2
   2734c:	9885883a 	add	r2,r19,r2
   27350:	10c00017 	ldw	r3,0(r2)
   27354:	18000b1e 	bne	r3,zero,27384 <quorem+0x200>
   27358:	10ffff04 	addi	r3,r2,-4
   2735c:	e0c0082e 	bgeu	fp,r3,27380 <quorem+0x1fc>
   27360:	10bfff17 	ldw	r2,-4(r2)
   27364:	10000326 	beq	r2,zero,27374 <quorem+0x1f0>
   27368:	00000506 	br	27380 <quorem+0x1fc>
   2736c:	18800017 	ldw	r2,0(r3)
   27370:	1000031e 	bne	r2,zero,27380 <quorem+0x1fc>
   27374:	18ffff04 	addi	r3,r3,-4
   27378:	a53fffc4 	addi	r20,r20,-1
   2737c:	e0fffb36 	bltu	fp,r3,2736c <quorem+0x1e8>
   27380:	9d000415 	stw	r20,16(r19)
   27384:	9005883a 	mov	r2,r18
   27388:	dfc00d17 	ldw	ra,52(sp)
   2738c:	df000c17 	ldw	fp,48(sp)
   27390:	ddc00b17 	ldw	r23,44(sp)
   27394:	dd800a17 	ldw	r22,40(sp)
   27398:	dd400917 	ldw	r21,36(sp)
   2739c:	dd000817 	ldw	r20,32(sp)
   273a0:	dcc00717 	ldw	r19,28(sp)
   273a4:	dc800617 	ldw	r18,24(sp)
   273a8:	dc400517 	ldw	r17,20(sp)
   273ac:	dc000417 	ldw	r16,16(sp)
   273b0:	dec00e04 	addi	sp,sp,56
   273b4:	f800283a 	ret
   273b8:	0005883a 	mov	r2,zero
   273bc:	003ff206 	br	27388 <quorem+0x204>

000273c0 <_dtoa_r>:
   273c0:	20801017 	ldw	r2,64(r4)
   273c4:	deffdf04 	addi	sp,sp,-132
   273c8:	dcc01a15 	stw	r19,104(sp)
   273cc:	dc801915 	stw	r18,100(sp)
   273d0:	dc401815 	stw	r17,96(sp)
   273d4:	dc001715 	stw	r16,92(sp)
   273d8:	dfc02015 	stw	ra,128(sp)
   273dc:	df001f15 	stw	fp,124(sp)
   273e0:	ddc01e15 	stw	r23,120(sp)
   273e4:	dd801d15 	stw	r22,116(sp)
   273e8:	dd401c15 	stw	r21,112(sp)
   273ec:	dd001b15 	stw	r20,108(sp)
   273f0:	d9400315 	stw	r5,12(sp)
   273f4:	d9c00415 	stw	r7,16(sp)
   273f8:	2021883a 	mov	r16,r4
   273fc:	3025883a 	mov	r18,r6
   27400:	dcc02317 	ldw	r19,140(sp)
   27404:	3023883a 	mov	r17,r6
   27408:	10000826 	beq	r2,zero,2742c <_dtoa_r+0x6c>
   2740c:	20c01117 	ldw	r3,68(r4)
   27410:	01800044 	movi	r6,1
   27414:	100b883a 	mov	r5,r2
   27418:	30cc983a 	sll	r6,r6,r3
   2741c:	10c00115 	stw	r3,4(r2)
   27420:	11800215 	stw	r6,8(r2)
   27424:	00295500 	call	29550 <_Bfree>
   27428:	80001015 	stw	zero,64(r16)
   2742c:	90002f16 	blt	r18,zero,274ec <_dtoa_r+0x12c>
   27430:	98000015 	stw	zero,0(r19)
   27434:	90dffc2c 	andhi	r3,r18,32752
   27438:	009ffc34 	movhi	r2,32752
   2743c:	18801c26 	beq	r3,r2,274b0 <_dtoa_r+0xf0>
   27440:	d9000317 	ldw	r4,12(sp)
   27444:	880b883a 	mov	r5,r17
   27448:	000d883a 	mov	r6,zero
   2744c:	000f883a 	mov	r7,zero
   27450:	002f76c0 	call	2f76c <__eqdf2>
   27454:	10002c1e 	bne	r2,zero,27508 <_dtoa_r+0x148>
   27458:	d9002217 	ldw	r4,136(sp)
   2745c:	d9c02417 	ldw	r7,144(sp)
   27460:	00800044 	movi	r2,1
   27464:	20800015 	stw	r2,0(r4)
   27468:	38019426 	beq	r7,zero,27abc <_dtoa_r+0x6fc>
   2746c:	008000f4 	movhi	r2,3
   27470:	108ea244 	addi	r2,r2,14985
   27474:	38800015 	stw	r2,0(r7)
   27478:	15ffffc4 	addi	r23,r2,-1
   2747c:	b805883a 	mov	r2,r23
   27480:	dfc02017 	ldw	ra,128(sp)
   27484:	df001f17 	ldw	fp,124(sp)
   27488:	ddc01e17 	ldw	r23,120(sp)
   2748c:	dd801d17 	ldw	r22,116(sp)
   27490:	dd401c17 	ldw	r21,112(sp)
   27494:	dd001b17 	ldw	r20,108(sp)
   27498:	dcc01a17 	ldw	r19,104(sp)
   2749c:	dc801917 	ldw	r18,100(sp)
   274a0:	dc401817 	ldw	r17,96(sp)
   274a4:	dc001717 	ldw	r16,92(sp)
   274a8:	dec02104 	addi	sp,sp,132
   274ac:	f800283a 	ret
   274b0:	d8c02217 	ldw	r3,136(sp)
   274b4:	d9000317 	ldw	r4,12(sp)
   274b8:	0089c3c4 	movi	r2,9999
   274bc:	18800015 	stw	r2,0(r3)
   274c0:	20016c26 	beq	r4,zero,27a74 <_dtoa_r+0x6b4>
   274c4:	05c000f4 	movhi	r23,3
   274c8:	bdcf5904 	addi	r23,r23,15716
   274cc:	d9c02417 	ldw	r7,144(sp)
   274d0:	383fea26 	beq	r7,zero,2747c <_dtoa_r+0xbc>
   274d4:	b88000c7 	ldb	r2,3(r23)
   274d8:	10016d1e 	bne	r2,zero,27a90 <_dtoa_r+0x6d0>
   274dc:	b88000c4 	addi	r2,r23,3
   274e0:	d8c02417 	ldw	r3,144(sp)
   274e4:	18800015 	stw	r2,0(r3)
   274e8:	003fe406 	br	2747c <_dtoa_r+0xbc>
   274ec:	04600034 	movhi	r17,32768
   274f0:	8c7fffc4 	addi	r17,r17,-1
   274f4:	9462703a 	and	r17,r18,r17
   274f8:	00800044 	movi	r2,1
   274fc:	98800015 	stw	r2,0(r19)
   27500:	8825883a 	mov	r18,r17
   27504:	003fcb06 	br	27434 <_dtoa_r+0x74>
   27508:	d9400317 	ldw	r5,12(sp)
   2750c:	9028d53a 	srli	r20,r18,20
   27510:	d8800204 	addi	r2,sp,8
   27514:	d8800015 	stw	r2,0(sp)
   27518:	8009883a 	mov	r4,r16
   2751c:	880d883a 	mov	r6,r17
   27520:	d9c00104 	addi	r7,sp,4
   27524:	002a19c0 	call	2a19c <__d2b>
   27528:	a501ffcc 	andi	r20,r20,2047
   2752c:	1039883a 	mov	fp,r2
   27530:	a001591e 	bne	r20,zero,27a98 <_dtoa_r+0x6d8>
   27534:	dd400217 	ldw	r21,8(sp)
   27538:	dd000117 	ldw	r20,4(sp)
   2753c:	00befbc4 	movi	r2,-1041
   27540:	ad29883a 	add	r20,r21,r20
   27544:	a082d216 	blt	r20,r2,28090 <_dtoa_r+0xcd0>
   27548:	d8c00317 	ldw	r3,12(sp)
   2754c:	013f0384 	movi	r4,-1010
   27550:	2509c83a 	sub	r4,r4,r20
   27554:	a0810484 	addi	r2,r20,1042
   27558:	9124983a 	sll	r18,r18,r4
   2755c:	1884d83a 	srl	r2,r3,r2
   27560:	9088b03a 	or	r4,r18,r2
   27564:	002fbac0 	call	2fbac <__floatunsidf>
   27568:	1009883a 	mov	r4,r2
   2756c:	017f8434 	movhi	r5,65040
   27570:	00800044 	movi	r2,1
   27574:	194b883a 	add	r5,r3,r5
   27578:	a53fffc4 	addi	r20,r20,-1
   2757c:	d8800f15 	stw	r2,60(sp)
   27580:	000d883a 	mov	r6,zero
   27584:	01cffe34 	movhi	r7,16376
   27588:	002f2740 	call	2f274 <__subdf3>
   2758c:	1009883a 	mov	r4,r2
   27590:	180b883a 	mov	r5,r3
   27594:	0198dbf4 	movhi	r6,25455
   27598:	3190d844 	addi	r6,r6,17249
   2759c:	01cff4f4 	movhi	r7,16339
   275a0:	39e1e9c4 	addi	r7,r7,-30809
   275a4:	002f2d40 	call	2f2d4 <__muldf3>
   275a8:	180b883a 	mov	r5,r3
   275ac:	01a2d874 	movhi	r6,35681
   275b0:	31b22cc4 	addi	r6,r6,-14157
   275b4:	01cff1f4 	movhi	r7,16327
   275b8:	39e28a04 	addi	r7,r7,-30168
   275bc:	1009883a 	mov	r4,r2
   275c0:	002f2200 	call	2f220 <__adddf3>
   275c4:	a009883a 	mov	r4,r20
   275c8:	1027883a 	mov	r19,r2
   275cc:	1825883a 	mov	r18,r3
   275d0:	002f9a40 	call	2f9a4 <__floatsidf>
   275d4:	1009883a 	mov	r4,r2
   275d8:	180b883a 	mov	r5,r3
   275dc:	019427f4 	movhi	r6,20639
   275e0:	319e7ec4 	addi	r6,r6,31227
   275e4:	01cff4f4 	movhi	r7,16339
   275e8:	39d104c4 	addi	r7,r7,17427
   275ec:	002f2d40 	call	2f2d4 <__muldf3>
   275f0:	9809883a 	mov	r4,r19
   275f4:	900b883a 	mov	r5,r18
   275f8:	100d883a 	mov	r6,r2
   275fc:	180f883a 	mov	r7,r3
   27600:	002f2200 	call	2f220 <__adddf3>
   27604:	1009883a 	mov	r4,r2
   27608:	180b883a 	mov	r5,r3
   2760c:	1027883a 	mov	r19,r2
   27610:	1825883a 	mov	r18,r3
   27614:	002fa780 	call	2fa78 <__fixdfsi>
   27618:	9809883a 	mov	r4,r19
   2761c:	900b883a 	mov	r5,r18
   27620:	000d883a 	mov	r6,zero
   27624:	000f883a 	mov	r7,zero
   27628:	d8800615 	stw	r2,24(sp)
   2762c:	002f8ec0 	call	2f8ec <__ltdf2>
   27630:	10027e16 	blt	r2,zero,2802c <_dtoa_r+0xc6c>
   27634:	d8c00617 	ldw	r3,24(sp)
   27638:	00800584 	movi	r2,22
   2763c:	10c26c36 	bltu	r2,r3,27ff0 <_dtoa_r+0xc30>
   27640:	180490fa 	slli	r2,r3,3
   27644:	00c000f4 	movhi	r3,3
   27648:	18cf7e04 	addi	r3,r3,15864
   2764c:	d9800317 	ldw	r6,12(sp)
   27650:	1885883a 	add	r2,r3,r2
   27654:	11000017 	ldw	r4,0(r2)
   27658:	11400117 	ldw	r5,4(r2)
   2765c:	880f883a 	mov	r7,r17
   27660:	002f8240 	call	2f824 <__gtdf2>
   27664:	00828f0e 	bge	zero,r2,280a4 <_dtoa_r+0xce4>
   27668:	d8800617 	ldw	r2,24(sp)
   2766c:	d8000d15 	stw	zero,52(sp)
   27670:	10bfffc4 	addi	r2,r2,-1
   27674:	d8800615 	stw	r2,24(sp)
   27678:	ad29c83a 	sub	r20,r21,r20
   2767c:	a53fffc4 	addi	r20,r20,-1
   27680:	a0026616 	blt	r20,zero,2801c <_dtoa_r+0xc5c>
   27684:	dd000715 	stw	r20,28(sp)
   27688:	d8000815 	stw	zero,32(sp)
   2768c:	d8800617 	ldw	r2,24(sp)
   27690:	10025a16 	blt	r2,zero,27ffc <_dtoa_r+0xc3c>
   27694:	d8c00717 	ldw	r3,28(sp)
   27698:	d8800b15 	stw	r2,44(sp)
   2769c:	d8000a15 	stw	zero,40(sp)
   276a0:	1887883a 	add	r3,r3,r2
   276a4:	d8c00715 	stw	r3,28(sp)
   276a8:	d9c00417 	ldw	r7,16(sp)
   276ac:	00800244 	movi	r2,9
   276b0:	11c10536 	bltu	r2,r7,27ac8 <_dtoa_r+0x708>
   276b4:	00800144 	movi	r2,5
   276b8:	11c4c60e 	bge	r2,r7,289d4 <_dtoa_r+0x1614>
   276bc:	39ffff04 	addi	r7,r7,-4
   276c0:	d9c00415 	stw	r7,16(sp)
   276c4:	0027883a 	mov	r19,zero
   276c8:	d9c00417 	ldw	r7,16(sp)
   276cc:	008000c4 	movi	r2,3
   276d0:	3883a226 	beq	r7,r2,2855c <_dtoa_r+0x119c>
   276d4:	11c2bc16 	blt	r2,r7,281c8 <_dtoa_r+0xe08>
   276d8:	00800084 	movi	r2,2
   276dc:	3880fb1e 	bne	r7,r2,27acc <_dtoa_r+0x70c>
   276e0:	d8000c15 	stw	zero,48(sp)
   276e4:	d9002117 	ldw	r4,132(sp)
   276e8:	0103ae0e 	bge	zero,r4,285a4 <_dtoa_r+0x11e4>
   276ec:	2025883a 	mov	r18,r4
   276f0:	d9000e15 	stw	r4,56(sp)
   276f4:	d9000915 	stw	r4,36(sp)
   276f8:	80001115 	stw	zero,68(r16)
   276fc:	008005c4 	movi	r2,23
   27700:	1484b22e 	bgeu	r2,r18,289cc <_dtoa_r+0x160c>
   27704:	00c00044 	movi	r3,1
   27708:	00800104 	movi	r2,4
   2770c:	1085883a 	add	r2,r2,r2
   27710:	11000504 	addi	r4,r2,20
   27714:	180b883a 	mov	r5,r3
   27718:	18c00044 	addi	r3,r3,1
   2771c:	913ffb2e 	bgeu	r18,r4,2770c <_dtoa_r+0x34c>
   27720:	81401115 	stw	r5,68(r16)
   27724:	8009883a 	mov	r4,r16
   27728:	00294a80 	call	294a8 <_Balloc>
   2772c:	102f883a 	mov	r23,r2
   27730:	80801015 	stw	r2,64(r16)
   27734:	00800384 	movi	r2,14
   27738:	1480f036 	bltu	r2,r18,27afc <_dtoa_r+0x73c>
   2773c:	9800ef26 	beq	r19,zero,27afc <_dtoa_r+0x73c>
   27740:	d8800617 	ldw	r2,24(sp)
   27744:	00839c0e 	bge	zero,r2,285b8 <_dtoa_r+0x11f8>
   27748:	d8c00617 	ldw	r3,24(sp)
   2774c:	108003cc 	andi	r2,r2,15
   27750:	100490fa 	slli	r2,r2,3
   27754:	182bd13a 	srai	r21,r3,4
   27758:	00c000f4 	movhi	r3,3
   2775c:	18cf7e04 	addi	r3,r3,15864
   27760:	1885883a 	add	r2,r3,r2
   27764:	a8c0040c 	andi	r3,r21,16
   27768:	12800017 	ldw	r10,0(r2)
   2776c:	15800117 	ldw	r22,4(r2)
   27770:	18038726 	beq	r3,zero,28590 <_dtoa_r+0x11d0>
   27774:	008000f4 	movhi	r2,3
   27778:	108f7404 	addi	r2,r2,15824
   2777c:	11800817 	ldw	r6,32(r2)
   27780:	11c00917 	ldw	r7,36(r2)
   27784:	d9000317 	ldw	r4,12(sp)
   27788:	880b883a 	mov	r5,r17
   2778c:	da801515 	stw	r10,84(sp)
   27790:	002f5b80 	call	2f5b8 <__divdf3>
   27794:	da801517 	ldw	r10,84(sp)
   27798:	d8801015 	stw	r2,64(sp)
   2779c:	1829883a 	mov	r20,r3
   277a0:	ad4003cc 	andi	r21,r21,15
   277a4:	048000c4 	movi	r18,3
   277a8:	a8001126 	beq	r21,zero,277f0 <_dtoa_r+0x430>
   277ac:	04c000f4 	movhi	r19,3
   277b0:	9ccf7404 	addi	r19,r19,15824
   277b4:	5005883a 	mov	r2,r10
   277b8:	b007883a 	mov	r3,r22
   277bc:	a980004c 	andi	r6,r21,1
   277c0:	1009883a 	mov	r4,r2
   277c4:	a82bd07a 	srai	r21,r21,1
   277c8:	180b883a 	mov	r5,r3
   277cc:	30000426 	beq	r6,zero,277e0 <_dtoa_r+0x420>
   277d0:	99800017 	ldw	r6,0(r19)
   277d4:	99c00117 	ldw	r7,4(r19)
   277d8:	94800044 	addi	r18,r18,1
   277dc:	002f2d40 	call	2f2d4 <__muldf3>
   277e0:	9cc00204 	addi	r19,r19,8
   277e4:	a83ff51e 	bne	r21,zero,277bc <_dtoa_r+0x3fc>
   277e8:	1015883a 	mov	r10,r2
   277ec:	182d883a 	mov	r22,r3
   277f0:	d9001017 	ldw	r4,64(sp)
   277f4:	a00b883a 	mov	r5,r20
   277f8:	500d883a 	mov	r6,r10
   277fc:	b00f883a 	mov	r7,r22
   27800:	002f5b80 	call	2f5b8 <__divdf3>
   27804:	1027883a 	mov	r19,r2
   27808:	1829883a 	mov	r20,r3
   2780c:	d8c00d17 	ldw	r3,52(sp)
   27810:	18000626 	beq	r3,zero,2782c <_dtoa_r+0x46c>
   27814:	9809883a 	mov	r4,r19
   27818:	a00b883a 	mov	r5,r20
   2781c:	000d883a 	mov	r6,zero
   27820:	01cffc34 	movhi	r7,16368
   27824:	002f8ec0 	call	2f8ec <__ltdf2>
   27828:	10040e16 	blt	r2,zero,28864 <_dtoa_r+0x14a4>
   2782c:	9009883a 	mov	r4,r18
   27830:	002f9a40 	call	2f9a4 <__floatsidf>
   27834:	1009883a 	mov	r4,r2
   27838:	180b883a 	mov	r5,r3
   2783c:	980d883a 	mov	r6,r19
   27840:	a00f883a 	mov	r7,r20
   27844:	002f2d40 	call	2f2d4 <__muldf3>
   27848:	1009883a 	mov	r4,r2
   2784c:	180b883a 	mov	r5,r3
   27850:	000d883a 	mov	r6,zero
   27854:	01d00734 	movhi	r7,16412
   27858:	002f2200 	call	2f220 <__adddf3>
   2785c:	057f3034 	movhi	r21,64704
   27860:	1d6b883a 	add	r21,r3,r21
   27864:	d8c00917 	ldw	r3,36(sp)
   27868:	1025883a 	mov	r18,r2
   2786c:	18031f26 	beq	r3,zero,284ec <_dtoa_r+0x112c>
   27870:	d8800617 	ldw	r2,24(sp)
   27874:	dac00917 	ldw	r11,36(sp)
   27878:	d8801315 	stw	r2,76(sp)
   2787c:	d8c00c17 	ldw	r3,48(sp)
   27880:	18039026 	beq	r3,zero,286c4 <_dtoa_r+0x1304>
   27884:	58bfffc4 	addi	r2,r11,-1
   27888:	100490fa 	slli	r2,r2,3
   2788c:	00c000f4 	movhi	r3,3
   27890:	18cf7e04 	addi	r3,r3,15864
   27894:	0009883a 	mov	r4,zero
   27898:	1885883a 	add	r2,r3,r2
   2789c:	11800017 	ldw	r6,0(r2)
   278a0:	11c00117 	ldw	r7,4(r2)
   278a4:	014ff834 	movhi	r5,16352
   278a8:	dac01615 	stw	r11,88(sp)
   278ac:	002f5b80 	call	2f5b8 <__divdf3>
   278b0:	900d883a 	mov	r6,r18
   278b4:	a80f883a 	mov	r7,r21
   278b8:	1009883a 	mov	r4,r2
   278bc:	180b883a 	mov	r5,r3
   278c0:	002f2740 	call	2f274 <__subdf3>
   278c4:	a00b883a 	mov	r5,r20
   278c8:	9809883a 	mov	r4,r19
   278cc:	182b883a 	mov	r21,r3
   278d0:	d8801015 	stw	r2,64(sp)
   278d4:	002fa780 	call	2fa78 <__fixdfsi>
   278d8:	1009883a 	mov	r4,r2
   278dc:	d8801515 	stw	r2,84(sp)
   278e0:	002f9a40 	call	2f9a4 <__floatsidf>
   278e4:	9809883a 	mov	r4,r19
   278e8:	a00b883a 	mov	r5,r20
   278ec:	100d883a 	mov	r6,r2
   278f0:	180f883a 	mov	r7,r3
   278f4:	002f2740 	call	2f274 <__subdf3>
   278f8:	da401517 	ldw	r9,84(sp)
   278fc:	d9001017 	ldw	r4,64(sp)
   27900:	a80b883a 	mov	r5,r21
   27904:	4d000c04 	addi	r20,r9,48
   27908:	bd000005 	stb	r20,0(r23)
   2790c:	100d883a 	mov	r6,r2
   27910:	180f883a 	mov	r7,r3
   27914:	bd800044 	addi	r22,r23,1
   27918:	1025883a 	mov	r18,r2
   2791c:	1827883a 	mov	r19,r3
   27920:	002f8240 	call	2f824 <__gtdf2>
   27924:	00842216 	blt	zero,r2,289b0 <_dtoa_r+0x15f0>
   27928:	0009883a 	mov	r4,zero
   2792c:	014ffc34 	movhi	r5,16368
   27930:	900d883a 	mov	r6,r18
   27934:	980f883a 	mov	r7,r19
   27938:	002f2740 	call	2f274 <__subdf3>
   2793c:	d9001017 	ldw	r4,64(sp)
   27940:	a80b883a 	mov	r5,r21
   27944:	100d883a 	mov	r6,r2
   27948:	180f883a 	mov	r7,r3
   2794c:	002f8240 	call	2f824 <__gtdf2>
   27950:	dac01617 	ldw	r11,88(sp)
   27954:	00841316 	blt	zero,r2,289a4 <_dtoa_r+0x15e4>
   27958:	00800044 	movi	r2,1
   2795c:	12c0670e 	bge	r2,r11,27afc <_dtoa_r+0x73c>
   27960:	bad7883a 	add	r11,r23,r11
   27964:	df001115 	stw	fp,68(sp)
   27968:	dc401215 	stw	r17,72(sp)
   2796c:	5839883a 	mov	fp,r11
   27970:	dc401017 	ldw	r17,64(sp)
   27974:	00000806 	br	27998 <_dtoa_r+0x5d8>
   27978:	002f2740 	call	2f274 <__subdf3>
   2797c:	1009883a 	mov	r4,r2
   27980:	180b883a 	mov	r5,r3
   27984:	880d883a 	mov	r6,r17
   27988:	a80f883a 	mov	r7,r21
   2798c:	002f8ec0 	call	2f8ec <__ltdf2>
   27990:	1003ee16 	blt	r2,zero,2894c <_dtoa_r+0x158c>
   27994:	b703f126 	beq	r22,fp,2895c <_dtoa_r+0x159c>
   27998:	8809883a 	mov	r4,r17
   2799c:	a80b883a 	mov	r5,r21
   279a0:	000d883a 	mov	r6,zero
   279a4:	01d00934 	movhi	r7,16420
   279a8:	002f2d40 	call	2f2d4 <__muldf3>
   279ac:	000d883a 	mov	r6,zero
   279b0:	01d00934 	movhi	r7,16420
   279b4:	9009883a 	mov	r4,r18
   279b8:	980b883a 	mov	r5,r19
   279bc:	1023883a 	mov	r17,r2
   279c0:	182b883a 	mov	r21,r3
   279c4:	002f2d40 	call	2f2d4 <__muldf3>
   279c8:	180b883a 	mov	r5,r3
   279cc:	1009883a 	mov	r4,r2
   279d0:	1825883a 	mov	r18,r3
   279d4:	1027883a 	mov	r19,r2
   279d8:	002fa780 	call	2fa78 <__fixdfsi>
   279dc:	1009883a 	mov	r4,r2
   279e0:	1029883a 	mov	r20,r2
   279e4:	002f9a40 	call	2f9a4 <__floatsidf>
   279e8:	9809883a 	mov	r4,r19
   279ec:	900b883a 	mov	r5,r18
   279f0:	100d883a 	mov	r6,r2
   279f4:	180f883a 	mov	r7,r3
   279f8:	002f2740 	call	2f274 <__subdf3>
   279fc:	a5000c04 	addi	r20,r20,48
   27a00:	b5000005 	stb	r20,0(r22)
   27a04:	1009883a 	mov	r4,r2
   27a08:	180b883a 	mov	r5,r3
   27a0c:	880d883a 	mov	r6,r17
   27a10:	a80f883a 	mov	r7,r21
   27a14:	1025883a 	mov	r18,r2
   27a18:	1827883a 	mov	r19,r3
   27a1c:	002f8ec0 	call	2f8ec <__ltdf2>
   27a20:	b5800044 	addi	r22,r22,1
   27a24:	0009883a 	mov	r4,zero
   27a28:	014ffc34 	movhi	r5,16368
   27a2c:	900d883a 	mov	r6,r18
   27a30:	980f883a 	mov	r7,r19
   27a34:	103fd00e 	bge	r2,zero,27978 <_dtoa_r+0x5b8>
   27a38:	d9001317 	ldw	r4,76(sp)
   27a3c:	df001117 	ldw	fp,68(sp)
   27a40:	d9000615 	stw	r4,24(sp)
   27a44:	8009883a 	mov	r4,r16
   27a48:	e00b883a 	mov	r5,fp
   27a4c:	00295500 	call	29550 <_Bfree>
   27a50:	d9c00617 	ldw	r7,24(sp)
   27a54:	d8c02217 	ldw	r3,136(sp)
   27a58:	d9002417 	ldw	r4,144(sp)
   27a5c:	b0000005 	stb	zero,0(r22)
   27a60:	38800044 	addi	r2,r7,1
   27a64:	18800015 	stw	r2,0(r3)
   27a68:	203e8426 	beq	r4,zero,2747c <_dtoa_r+0xbc>
   27a6c:	25800015 	stw	r22,0(r4)
   27a70:	003e8206 	br	2747c <_dtoa_r+0xbc>
   27a74:	00800434 	movhi	r2,16
   27a78:	10bfffc4 	addi	r2,r2,-1
   27a7c:	90a4703a 	and	r18,r18,r2
   27a80:	903e901e 	bne	r18,zero,274c4 <_dtoa_r+0x104>
   27a84:	05c000f4 	movhi	r23,3
   27a88:	bdcf5604 	addi	r23,r23,15704
   27a8c:	003e8f06 	br	274cc <_dtoa_r+0x10c>
   27a90:	b8800204 	addi	r2,r23,8
   27a94:	003e9206 	br	274e0 <_dtoa_r+0x120>
   27a98:	01400434 	movhi	r5,16
   27a9c:	297fffc4 	addi	r5,r5,-1
   27aa0:	894a703a 	and	r5,r17,r5
   27aa4:	d9000317 	ldw	r4,12(sp)
   27aa8:	294ffc34 	orhi	r5,r5,16368
   27aac:	a53f0044 	addi	r20,r20,-1023
   27ab0:	dd400217 	ldw	r21,8(sp)
   27ab4:	d8000f15 	stw	zero,60(sp)
   27ab8:	003eb106 	br	27580 <_dtoa_r+0x1c0>
   27abc:	05c000f4 	movhi	r23,3
   27ac0:	bdcea204 	addi	r23,r23,14984
   27ac4:	003e6d06 	br	2747c <_dtoa_r+0xbc>
   27ac8:	d8000415 	stw	zero,16(sp)
   27acc:	80001115 	stw	zero,68(r16)
   27ad0:	8009883a 	mov	r4,r16
   27ad4:	000b883a 	mov	r5,zero
   27ad8:	00294a80 	call	294a8 <_Balloc>
   27adc:	01ffffc4 	movi	r7,-1
   27ae0:	102f883a 	mov	r23,r2
   27ae4:	80801015 	stw	r2,64(r16)
   27ae8:	00800044 	movi	r2,1
   27aec:	d9c00915 	stw	r7,36(sp)
   27af0:	d8002115 	stw	zero,132(sp)
   27af4:	d9c00e15 	stw	r7,56(sp)
   27af8:	d8800c15 	stw	r2,48(sp)
   27afc:	d8800117 	ldw	r2,4(sp)
   27b00:	10008b16 	blt	r2,zero,27d30 <_dtoa_r+0x970>
   27b04:	d9000617 	ldw	r4,24(sp)
   27b08:	00c00384 	movi	r3,14
   27b0c:	19008816 	blt	r3,r4,27d30 <_dtoa_r+0x970>
   27b10:	200490fa 	slli	r2,r4,3
   27b14:	d9c02117 	ldw	r7,132(sp)
   27b18:	00c000f4 	movhi	r3,3
   27b1c:	18cf7e04 	addi	r3,r3,15864
   27b20:	1885883a 	add	r2,r3,r2
   27b24:	14800017 	ldw	r18,0(r2)
   27b28:	14c00117 	ldw	r19,4(r2)
   27b2c:	3801c916 	blt	r7,zero,28254 <_dtoa_r+0xe94>
   27b30:	d9000317 	ldw	r4,12(sp)
   27b34:	900d883a 	mov	r6,r18
   27b38:	980f883a 	mov	r7,r19
   27b3c:	880b883a 	mov	r5,r17
   27b40:	002f5b80 	call	2f5b8 <__divdf3>
   27b44:	180b883a 	mov	r5,r3
   27b48:	1009883a 	mov	r4,r2
   27b4c:	002fa780 	call	2fa78 <__fixdfsi>
   27b50:	1009883a 	mov	r4,r2
   27b54:	102b883a 	mov	r21,r2
   27b58:	002f9a40 	call	2f9a4 <__floatsidf>
   27b5c:	1009883a 	mov	r4,r2
   27b60:	180b883a 	mov	r5,r3
   27b64:	900d883a 	mov	r6,r18
   27b68:	980f883a 	mov	r7,r19
   27b6c:	002f2d40 	call	2f2d4 <__muldf3>
   27b70:	d9000317 	ldw	r4,12(sp)
   27b74:	880b883a 	mov	r5,r17
   27b78:	100d883a 	mov	r6,r2
   27b7c:	180f883a 	mov	r7,r3
   27b80:	002f2740 	call	2f274 <__subdf3>
   27b84:	d9c00917 	ldw	r7,36(sp)
   27b88:	1009883a 	mov	r4,r2
   27b8c:	a8800c04 	addi	r2,r21,48
   27b90:	b8800005 	stb	r2,0(r23)
   27b94:	01800044 	movi	r6,1
   27b98:	180b883a 	mov	r5,r3
   27b9c:	2005883a 	mov	r2,r4
   27ba0:	bd800044 	addi	r22,r23,1
   27ba4:	39803726 	beq	r7,r6,27c84 <_dtoa_r+0x8c4>
   27ba8:	000d883a 	mov	r6,zero
   27bac:	01d00934 	movhi	r7,16420
   27bb0:	002f2d40 	call	2f2d4 <__muldf3>
   27bb4:	1009883a 	mov	r4,r2
   27bb8:	180b883a 	mov	r5,r3
   27bbc:	000d883a 	mov	r6,zero
   27bc0:	000f883a 	mov	r7,zero
   27bc4:	1029883a 	mov	r20,r2
   27bc8:	1823883a 	mov	r17,r3
   27bcc:	002f76c0 	call	2f76c <__eqdf2>
   27bd0:	103f9c26 	beq	r2,zero,27a44 <_dtoa_r+0x684>
   27bd4:	dd400917 	ldw	r21,36(sp)
   27bd8:	dc000415 	stw	r16,16(sp)
   27bdc:	00000906 	br	27c04 <_dtoa_r+0x844>
   27be0:	002f2d40 	call	2f2d4 <__muldf3>
   27be4:	1009883a 	mov	r4,r2
   27be8:	180b883a 	mov	r5,r3
   27bec:	000d883a 	mov	r6,zero
   27bf0:	000f883a 	mov	r7,zero
   27bf4:	1029883a 	mov	r20,r2
   27bf8:	1823883a 	mov	r17,r3
   27bfc:	002f76c0 	call	2f76c <__eqdf2>
   27c00:	10022926 	beq	r2,zero,284a8 <_dtoa_r+0x10e8>
   27c04:	900d883a 	mov	r6,r18
   27c08:	980f883a 	mov	r7,r19
   27c0c:	a009883a 	mov	r4,r20
   27c10:	880b883a 	mov	r5,r17
   27c14:	002f5b80 	call	2f5b8 <__divdf3>
   27c18:	180b883a 	mov	r5,r3
   27c1c:	1009883a 	mov	r4,r2
   27c20:	002fa780 	call	2fa78 <__fixdfsi>
   27c24:	1009883a 	mov	r4,r2
   27c28:	1021883a 	mov	r16,r2
   27c2c:	002f9a40 	call	2f9a4 <__floatsidf>
   27c30:	1009883a 	mov	r4,r2
   27c34:	180b883a 	mov	r5,r3
   27c38:	900d883a 	mov	r6,r18
   27c3c:	980f883a 	mov	r7,r19
   27c40:	002f2d40 	call	2f2d4 <__muldf3>
   27c44:	a009883a 	mov	r4,r20
   27c48:	880b883a 	mov	r5,r17
   27c4c:	100d883a 	mov	r6,r2
   27c50:	180f883a 	mov	r7,r3
   27c54:	002f2740 	call	2f274 <__subdf3>
   27c58:	82400c04 	addi	r9,r16,48
   27c5c:	b2400005 	stb	r9,0(r22)
   27c60:	b5800044 	addi	r22,r22,1
   27c64:	b5d3c83a 	sub	r9,r22,r23
   27c68:	000d883a 	mov	r6,zero
   27c6c:	01d00934 	movhi	r7,16420
   27c70:	1009883a 	mov	r4,r2
   27c74:	180b883a 	mov	r5,r3
   27c78:	aa7fd91e 	bne	r21,r9,27be0 <_dtoa_r+0x820>
   27c7c:	802b883a 	mov	r21,r16
   27c80:	dc000417 	ldw	r16,16(sp)
   27c84:	1009883a 	mov	r4,r2
   27c88:	180b883a 	mov	r5,r3
   27c8c:	100d883a 	mov	r6,r2
   27c90:	180f883a 	mov	r7,r3
   27c94:	002f2200 	call	2f220 <__adddf3>
   27c98:	9009883a 	mov	r4,r18
   27c9c:	980b883a 	mov	r5,r19
   27ca0:	100d883a 	mov	r6,r2
   27ca4:	180f883a 	mov	r7,r3
   27ca8:	1023883a 	mov	r17,r2
   27cac:	1829883a 	mov	r20,r3
   27cb0:	002f8ec0 	call	2f8ec <__ltdf2>
   27cb4:	10000816 	blt	r2,zero,27cd8 <_dtoa_r+0x918>
   27cb8:	9009883a 	mov	r4,r18
   27cbc:	980b883a 	mov	r5,r19
   27cc0:	880d883a 	mov	r6,r17
   27cc4:	a00f883a 	mov	r7,r20
   27cc8:	002f76c0 	call	2f76c <__eqdf2>
   27ccc:	103f5d1e 	bne	r2,zero,27a44 <_dtoa_r+0x684>
   27cd0:	ad40004c 	andi	r21,r21,1
   27cd4:	a83f5b26 	beq	r21,zero,27a44 <_dtoa_r+0x684>
   27cd8:	b53fffc3 	ldbu	r20,-1(r22)
   27cdc:	b0ffff84 	addi	r3,r22,-2
   27ce0:	01400e44 	movi	r5,57
   27ce4:	00000306 	br	27cf4 <_dtoa_r+0x934>
   27ce8:	1d000003 	ldbu	r20,0(r3)
   27cec:	102d883a 	mov	r22,r2
   27cf0:	18ffffc4 	addi	r3,r3,-1
   27cf4:	a1003fcc 	andi	r4,r20,255
   27cf8:	2100201c 	xori	r4,r4,128
   27cfc:	213fe004 	addi	r4,r4,-128
   27d00:	b0bfffc4 	addi	r2,r22,-1
   27d04:	2142ca1e 	bne	r4,r5,28830 <_dtoa_r+0x1470>
   27d08:	b8bff71e 	bne	r23,r2,27ce8 <_dtoa_r+0x928>
   27d0c:	d8800617 	ldw	r2,24(sp)
   27d10:	05000c44 	movi	r20,49
   27d14:	10800044 	addi	r2,r2,1
   27d18:	d8800615 	stw	r2,24(sp)
   27d1c:	00800c04 	movi	r2,48
   27d20:	b8800005 	stb	r2,0(r23)
   27d24:	b805883a 	mov	r2,r23
   27d28:	15000005 	stb	r20,0(r2)
   27d2c:	003f4506 	br	27a44 <_dtoa_r+0x684>
   27d30:	d9c00c17 	ldw	r7,48(sp)
   27d34:	3800c926 	beq	r7,zero,2805c <_dtoa_r+0xc9c>
   27d38:	d9c00417 	ldw	r7,16(sp)
   27d3c:	00c00044 	movi	r3,1
   27d40:	19c16c0e 	bge	r3,r7,282f4 <_dtoa_r+0xf34>
   27d44:	d9000917 	ldw	r4,36(sp)
   27d48:	d9c00a17 	ldw	r7,40(sp)
   27d4c:	24ffffc4 	addi	r19,r4,-1
   27d50:	3cc20716 	blt	r7,r19,28570 <_dtoa_r+0x11b0>
   27d54:	3ce7c83a 	sub	r19,r7,r19
   27d58:	d9c00917 	ldw	r7,36(sp)
   27d5c:	3802ae16 	blt	r7,zero,28818 <_dtoa_r+0x1458>
   27d60:	dc800817 	ldw	r18,32(sp)
   27d64:	d8800917 	ldw	r2,36(sp)
   27d68:	d8c00817 	ldw	r3,32(sp)
   27d6c:	d9c00717 	ldw	r7,28(sp)
   27d70:	8009883a 	mov	r4,r16
   27d74:	1887883a 	add	r3,r3,r2
   27d78:	388f883a 	add	r7,r7,r2
   27d7c:	01400044 	movi	r5,1
   27d80:	d8c00815 	stw	r3,32(sp)
   27d84:	d9c00715 	stw	r7,28(sp)
   27d88:	00298d80 	call	298d8 <__i2b>
   27d8c:	102b883a 	mov	r21,r2
   27d90:	90000a26 	beq	r18,zero,27dbc <_dtoa_r+0x9fc>
   27d94:	d8800717 	ldw	r2,28(sp)
   27d98:	0080080e 	bge	zero,r2,27dbc <_dtoa_r+0x9fc>
   27d9c:	90812b16 	blt	r18,r2,2824c <_dtoa_r+0xe8c>
   27da0:	d8c00817 	ldw	r3,32(sp)
   27da4:	d9000717 	ldw	r4,28(sp)
   27da8:	90a5c83a 	sub	r18,r18,r2
   27dac:	1887c83a 	sub	r3,r3,r2
   27db0:	2089c83a 	sub	r4,r4,r2
   27db4:	d8c00815 	stw	r3,32(sp)
   27db8:	d9000715 	stw	r4,28(sp)
   27dbc:	d9c00a17 	ldw	r7,40(sp)
   27dc0:	01c0140e 	bge	zero,r7,27e14 <_dtoa_r+0xa54>
   27dc4:	d8800c17 	ldw	r2,48(sp)
   27dc8:	1001de26 	beq	r2,zero,28544 <_dtoa_r+0x1184>
   27dcc:	04c00e0e 	bge	zero,r19,27e08 <_dtoa_r+0xa48>
   27dd0:	a80b883a 	mov	r5,r21
   27dd4:	8009883a 	mov	r4,r16
   27dd8:	980d883a 	mov	r6,r19
   27ddc:	0029b6c0 	call	29b6c <__pow5mult>
   27de0:	e00d883a 	mov	r6,fp
   27de4:	8009883a 	mov	r4,r16
   27de8:	100b883a 	mov	r5,r2
   27dec:	102b883a 	mov	r21,r2
   27df0:	00299140 	call	29914 <__multiply>
   27df4:	1029883a 	mov	r20,r2
   27df8:	e00b883a 	mov	r5,fp
   27dfc:	8009883a 	mov	r4,r16
   27e00:	00295500 	call	29550 <_Bfree>
   27e04:	a039883a 	mov	fp,r20
   27e08:	d8c00a17 	ldw	r3,40(sp)
   27e0c:	1ccdc83a 	sub	r6,r3,r19
   27e10:	3001291e 	bne	r6,zero,282b8 <_dtoa_r+0xef8>
   27e14:	8009883a 	mov	r4,r16
   27e18:	01400044 	movi	r5,1
   27e1c:	00298d80 	call	298d8 <__i2b>
   27e20:	d9000b17 	ldw	r4,44(sp)
   27e24:	1029883a 	mov	r20,r2
   27e28:	0100050e 	bge	zero,r4,27e40 <_dtoa_r+0xa80>
   27e2c:	d9800b17 	ldw	r6,44(sp)
   27e30:	8009883a 	mov	r4,r16
   27e34:	100b883a 	mov	r5,r2
   27e38:	0029b6c0 	call	29b6c <__pow5mult>
   27e3c:	1029883a 	mov	r20,r2
   27e40:	d9c00417 	ldw	r7,16(sp)
   27e44:	00800044 	movi	r2,1
   27e48:	11c0f00e 	bge	r2,r7,2820c <_dtoa_r+0xe4c>
   27e4c:	0023883a 	mov	r17,zero
   27e50:	d8800b17 	ldw	r2,44(sp)
   27e54:	1001741e 	bne	r2,zero,28428 <_dtoa_r+0x1068>
   27e58:	00800044 	movi	r2,1
   27e5c:	d8c00717 	ldw	r3,28(sp)
   27e60:	10c5883a 	add	r2,r2,r3
   27e64:	108007cc 	andi	r2,r2,31
   27e68:	10008026 	beq	r2,zero,2806c <_dtoa_r+0xcac>
   27e6c:	01000804 	movi	r4,32
   27e70:	2089c83a 	sub	r4,r4,r2
   27e74:	00c00104 	movi	r3,4
   27e78:	1902d00e 	bge	r3,r4,289bc <_dtoa_r+0x15fc>
   27e7c:	d9000817 	ldw	r4,32(sp)
   27e80:	d9c00717 	ldw	r7,28(sp)
   27e84:	00c00704 	movi	r3,28
   27e88:	1885c83a 	sub	r2,r3,r2
   27e8c:	2089883a 	add	r4,r4,r2
   27e90:	388f883a 	add	r7,r7,r2
   27e94:	d9000815 	stw	r4,32(sp)
   27e98:	90a5883a 	add	r18,r18,r2
   27e9c:	d9c00715 	stw	r7,28(sp)
   27ea0:	d9c00817 	ldw	r7,32(sp)
   27ea4:	01c0050e 	bge	zero,r7,27ebc <_dtoa_r+0xafc>
   27ea8:	e00b883a 	mov	r5,fp
   27eac:	8009883a 	mov	r4,r16
   27eb0:	380d883a 	mov	r6,r7
   27eb4:	0029c980 	call	29c98 <__lshift>
   27eb8:	1039883a 	mov	fp,r2
   27ebc:	d8800717 	ldw	r2,28(sp)
   27ec0:	0080050e 	bge	zero,r2,27ed8 <_dtoa_r+0xb18>
   27ec4:	a00b883a 	mov	r5,r20
   27ec8:	8009883a 	mov	r4,r16
   27ecc:	100d883a 	mov	r6,r2
   27ed0:	0029c980 	call	29c98 <__lshift>
   27ed4:	1029883a 	mov	r20,r2
   27ed8:	d8c00d17 	ldw	r3,52(sp)
   27edc:	1801401e 	bne	r3,zero,283e0 <_dtoa_r+0x1020>
   27ee0:	d8800917 	ldw	r2,36(sp)
   27ee4:	00815a0e 	bge	zero,r2,28450 <_dtoa_r+0x1090>
   27ee8:	d8c00c17 	ldw	r3,48(sp)
   27eec:	18006f1e 	bne	r3,zero,280ac <_dtoa_r+0xcec>
   27ef0:	b823883a 	mov	r17,r23
   27ef4:	dc800917 	ldw	r18,36(sp)
   27ef8:	00000206 	br	27f04 <_dtoa_r+0xb44>
   27efc:	00295780 	call	29578 <__multadd>
   27f00:	1039883a 	mov	fp,r2
   27f04:	e009883a 	mov	r4,fp
   27f08:	a00b883a 	mov	r5,r20
   27f0c:	00271840 	call	27184 <quorem>
   27f10:	10800c04 	addi	r2,r2,48
   27f14:	88800005 	stb	r2,0(r17)
   27f18:	8c400044 	addi	r17,r17,1
   27f1c:	8dc7c83a 	sub	r3,r17,r23
   27f20:	8009883a 	mov	r4,r16
   27f24:	e00b883a 	mov	r5,fp
   27f28:	01800284 	movi	r6,10
   27f2c:	000f883a 	mov	r7,zero
   27f30:	1cbff216 	blt	r3,r18,27efc <_dtoa_r+0xb3c>
   27f34:	dd800917 	ldw	r22,36(sp)
   27f38:	1007883a 	mov	r3,r2
   27f3c:	05823a0e 	bge	zero,r22,28828 <_dtoa_r+0x1468>
   27f40:	bdad883a 	add	r22,r23,r22
   27f44:	0023883a 	mov	r17,zero
   27f48:	e00b883a 	mov	r5,fp
   27f4c:	01800044 	movi	r6,1
   27f50:	8009883a 	mov	r4,r16
   27f54:	d8c01515 	stw	r3,84(sp)
   27f58:	0029c980 	call	29c98 <__lshift>
   27f5c:	1009883a 	mov	r4,r2
   27f60:	a00b883a 	mov	r5,r20
   27f64:	1039883a 	mov	fp,r2
   27f68:	0029df40 	call	29df4 <__mcmp>
   27f6c:	d8c01517 	ldw	r3,84(sp)
   27f70:	0080d60e 	bge	zero,r2,282cc <_dtoa_r+0xf0c>
   27f74:	b13fffc3 	ldbu	r4,-1(r22)
   27f78:	b0ffff84 	addi	r3,r22,-2
   27f7c:	01800e44 	movi	r6,57
   27f80:	00000306 	br	27f90 <_dtoa_r+0xbd0>
   27f84:	19000003 	ldbu	r4,0(r3)
   27f88:	102d883a 	mov	r22,r2
   27f8c:	18ffffc4 	addi	r3,r3,-1
   27f90:	21403fcc 	andi	r5,r4,255
   27f94:	2940201c 	xori	r5,r5,128
   27f98:	297fe004 	addi	r5,r5,-128
   27f9c:	b0bfffc4 	addi	r2,r22,-1
   27fa0:	2981a71e 	bne	r5,r6,28640 <_dtoa_r+0x1280>
   27fa4:	b8bff71e 	bne	r23,r2,27f84 <_dtoa_r+0xbc4>
   27fa8:	d8800617 	ldw	r2,24(sp)
   27fac:	10800044 	addi	r2,r2,1
   27fb0:	d8800615 	stw	r2,24(sp)
   27fb4:	00800c44 	movi	r2,49
   27fb8:	b8800005 	stb	r2,0(r23)
   27fbc:	8009883a 	mov	r4,r16
   27fc0:	a00b883a 	mov	r5,r20
   27fc4:	00295500 	call	29550 <_Bfree>
   27fc8:	a83e9e26 	beq	r21,zero,27a44 <_dtoa_r+0x684>
   27fcc:	88000426 	beq	r17,zero,27fe0 <_dtoa_r+0xc20>
   27fd0:	8d400326 	beq	r17,r21,27fe0 <_dtoa_r+0xc20>
   27fd4:	8009883a 	mov	r4,r16
   27fd8:	880b883a 	mov	r5,r17
   27fdc:	00295500 	call	29550 <_Bfree>
   27fe0:	8009883a 	mov	r4,r16
   27fe4:	a80b883a 	mov	r5,r21
   27fe8:	00295500 	call	29550 <_Bfree>
   27fec:	003e9506 	br	27a44 <_dtoa_r+0x684>
   27ff0:	00c00044 	movi	r3,1
   27ff4:	d8c00d15 	stw	r3,52(sp)
   27ff8:	003d9f06 	br	27678 <_dtoa_r+0x2b8>
   27ffc:	d9000817 	ldw	r4,32(sp)
   28000:	d8800617 	ldw	r2,24(sp)
   28004:	d8000b15 	stw	zero,44(sp)
   28008:	2089c83a 	sub	r4,r4,r2
   2800c:	0087c83a 	sub	r3,zero,r2
   28010:	d9000815 	stw	r4,32(sp)
   28014:	d8c00a15 	stw	r3,40(sp)
   28018:	003da306 	br	276a8 <_dtoa_r+0x2e8>
   2801c:	0529c83a 	sub	r20,zero,r20
   28020:	dd000815 	stw	r20,32(sp)
   28024:	d8000715 	stw	zero,28(sp)
   28028:	003d9806 	br	2768c <_dtoa_r+0x2cc>
   2802c:	d9000617 	ldw	r4,24(sp)
   28030:	002f9a40 	call	2f9a4 <__floatsidf>
   28034:	1009883a 	mov	r4,r2
   28038:	180b883a 	mov	r5,r3
   2803c:	980d883a 	mov	r6,r19
   28040:	900f883a 	mov	r7,r18
   28044:	002f7c80 	call	2f7c8 <__nedf2>
   28048:	103d7a26 	beq	r2,zero,27634 <_dtoa_r+0x274>
   2804c:	d8800617 	ldw	r2,24(sp)
   28050:	10bfffc4 	addi	r2,r2,-1
   28054:	d8800615 	stw	r2,24(sp)
   28058:	003d7606 	br	27634 <_dtoa_r+0x274>
   2805c:	dcc00a17 	ldw	r19,40(sp)
   28060:	dc800817 	ldw	r18,32(sp)
   28064:	002b883a 	mov	r21,zero
   28068:	003f4906 	br	27d90 <_dtoa_r+0x9d0>
   2806c:	00800704 	movi	r2,28
   28070:	d8c00817 	ldw	r3,32(sp)
   28074:	d9000717 	ldw	r4,28(sp)
   28078:	90a5883a 	add	r18,r18,r2
   2807c:	1887883a 	add	r3,r3,r2
   28080:	2089883a 	add	r4,r4,r2
   28084:	d8c00815 	stw	r3,32(sp)
   28088:	d9000715 	stw	r4,28(sp)
   2808c:	003f8406 	br	27ea0 <_dtoa_r+0xae0>
   28090:	d9c00317 	ldw	r7,12(sp)
   28094:	013efb84 	movi	r4,-1042
   28098:	2509c83a 	sub	r4,r4,r20
   2809c:	3908983a 	sll	r4,r7,r4
   280a0:	003d3006 	br	27564 <_dtoa_r+0x1a4>
   280a4:	d8000d15 	stw	zero,52(sp)
   280a8:	003d7306 	br	27678 <_dtoa_r+0x2b8>
   280ac:	0480050e 	bge	zero,r18,280c4 <_dtoa_r+0xd04>
   280b0:	a80b883a 	mov	r5,r21
   280b4:	8009883a 	mov	r4,r16
   280b8:	900d883a 	mov	r6,r18
   280bc:	0029c980 	call	29c98 <__lshift>
   280c0:	102b883a 	mov	r21,r2
   280c4:	8801611e 	bne	r17,zero,2864c <_dtoa_r+0x128c>
   280c8:	a827883a 	mov	r19,r21
   280cc:	d8c00317 	ldw	r3,12(sp)
   280d0:	d9000917 	ldw	r4,36(sp)
   280d4:	b8bfffc4 	addi	r2,r23,-1
   280d8:	18c0004c 	andi	r3,r3,1
   280dc:	1105883a 	add	r2,r2,r4
   280e0:	b825883a 	mov	r18,r23
   280e4:	d8800515 	stw	r2,20(sp)
   280e8:	a823883a 	mov	r17,r21
   280ec:	d8c00315 	stw	r3,12(sp)
   280f0:	ddc00715 	stw	r23,28(sp)
   280f4:	e009883a 	mov	r4,fp
   280f8:	a00b883a 	mov	r5,r20
   280fc:	00271840 	call	27184 <quorem>
   28100:	e009883a 	mov	r4,fp
   28104:	880b883a 	mov	r5,r17
   28108:	102d883a 	mov	r22,r2
   2810c:	0029df40 	call	29df4 <__mcmp>
   28110:	980d883a 	mov	r6,r19
   28114:	8009883a 	mov	r4,r16
   28118:	a00b883a 	mov	r5,r20
   2811c:	102b883a 	mov	r21,r2
   28120:	0029e4c0 	call	29e4c <__mdiff>
   28124:	100d883a 	mov	r6,r2
   28128:	10800317 	ldw	r2,12(r2)
   2812c:	b5c00c04 	addi	r23,r22,48
   28130:	10008c26 	beq	r2,zero,28364 <_dtoa_r+0xfa4>
   28134:	8009883a 	mov	r4,r16
   28138:	300b883a 	mov	r5,r6
   2813c:	00295500 	call	29550 <_Bfree>
   28140:	00800044 	movi	r2,1
   28144:	a8007116 	blt	r21,zero,2830c <_dtoa_r+0xf4c>
   28148:	a800041e 	bne	r21,zero,2815c <_dtoa_r+0xd9c>
   2814c:	d9c00417 	ldw	r7,16(sp)
   28150:	3800021e 	bne	r7,zero,2815c <_dtoa_r+0xd9c>
   28154:	d8c00317 	ldw	r3,12(sp)
   28158:	18006c26 	beq	r3,zero,2830c <_dtoa_r+0xf4c>
   2815c:	00814c16 	blt	zero,r2,28690 <_dtoa_r+0x12d0>
   28160:	d8c00517 	ldw	r3,20(sp)
   28164:	95400044 	addi	r21,r18,1
   28168:	95c00005 	stb	r23,0(r18)
   2816c:	a82d883a 	mov	r22,r21
   28170:	90c14d26 	beq	r18,r3,286a8 <_dtoa_r+0x12e8>
   28174:	e00b883a 	mov	r5,fp
   28178:	8009883a 	mov	r4,r16
   2817c:	01800284 	movi	r6,10
   28180:	000f883a 	mov	r7,zero
   28184:	00295780 	call	29578 <__multadd>
   28188:	1039883a 	mov	fp,r2
   2818c:	8cc08b26 	beq	r17,r19,283bc <_dtoa_r+0xffc>
   28190:	880b883a 	mov	r5,r17
   28194:	01800284 	movi	r6,10
   28198:	000f883a 	mov	r7,zero
   2819c:	8009883a 	mov	r4,r16
   281a0:	00295780 	call	29578 <__multadd>
   281a4:	980b883a 	mov	r5,r19
   281a8:	8009883a 	mov	r4,r16
   281ac:	01800284 	movi	r6,10
   281b0:	000f883a 	mov	r7,zero
   281b4:	1023883a 	mov	r17,r2
   281b8:	00295780 	call	29578 <__multadd>
   281bc:	1027883a 	mov	r19,r2
   281c0:	a825883a 	mov	r18,r21
   281c4:	003fcb06 	br	280f4 <_dtoa_r+0xd34>
   281c8:	d9c00417 	ldw	r7,16(sp)
   281cc:	00800104 	movi	r2,4
   281d0:	3880e426 	beq	r7,r2,28564 <_dtoa_r+0x11a4>
   281d4:	00800144 	movi	r2,5
   281d8:	38be3c1e 	bne	r7,r2,27acc <_dtoa_r+0x70c>
   281dc:	00c00044 	movi	r3,1
   281e0:	d8c00c15 	stw	r3,48(sp)
   281e4:	d9c02117 	ldw	r7,132(sp)
   281e8:	d8800617 	ldw	r2,24(sp)
   281ec:	388f883a 	add	r7,r7,r2
   281f0:	3c800044 	addi	r18,r7,1
   281f4:	d9c00e15 	stw	r7,56(sp)
   281f8:	dc800915 	stw	r18,36(sp)
   281fc:	04bd3e16 	blt	zero,r18,276f8 <_dtoa_r+0x338>
   28200:	80001115 	stw	zero,68(r16)
   28204:	000b883a 	mov	r5,zero
   28208:	003d4606 	br	27724 <_dtoa_r+0x364>
   2820c:	d8c00317 	ldw	r3,12(sp)
   28210:	183f0e1e 	bne	r3,zero,27e4c <_dtoa_r+0xa8c>
   28214:	00c00434 	movhi	r3,16
   28218:	18ffffc4 	addi	r3,r3,-1
   2821c:	88c6703a 	and	r3,r17,r3
   28220:	183f0a1e 	bne	r3,zero,27e4c <_dtoa_r+0xa8c>
   28224:	8c5ffc2c 	andhi	r17,r17,32752
   28228:	883f0826 	beq	r17,zero,27e4c <_dtoa_r+0xa8c>
   2822c:	d9000817 	ldw	r4,32(sp)
   28230:	d9c00717 	ldw	r7,28(sp)
   28234:	1023883a 	mov	r17,r2
   28238:	2089883a 	add	r4,r4,r2
   2823c:	388f883a 	add	r7,r7,r2
   28240:	d9000815 	stw	r4,32(sp)
   28244:	d9c00715 	stw	r7,28(sp)
   28248:	003f0106 	br	27e50 <_dtoa_r+0xa90>
   2824c:	9005883a 	mov	r2,r18
   28250:	003ed306 	br	27da0 <_dtoa_r+0x9e0>
   28254:	d8800917 	ldw	r2,36(sp)
   28258:	00be3516 	blt	zero,r2,27b30 <_dtoa_r+0x770>
   2825c:	1000b61e 	bne	r2,zero,28538 <_dtoa_r+0x1178>
   28260:	9009883a 	mov	r4,r18
   28264:	980b883a 	mov	r5,r19
   28268:	000d883a 	mov	r6,zero
   2826c:	01d00534 	movhi	r7,16404
   28270:	002f2d40 	call	2f2d4 <__muldf3>
   28274:	d9800317 	ldw	r6,12(sp)
   28278:	1009883a 	mov	r4,r2
   2827c:	180b883a 	mov	r5,r3
   28280:	880f883a 	mov	r7,r17
   28284:	002f8880 	call	2f888 <__gedf2>
   28288:	0029883a 	mov	r20,zero
   2828c:	002b883a 	mov	r21,zero
   28290:	10007e16 	blt	r2,zero,2848c <_dtoa_r+0x10cc>
   28294:	d8802117 	ldw	r2,132(sp)
   28298:	b82d883a 	mov	r22,r23
   2829c:	0084303a 	nor	r2,zero,r2
   282a0:	d8800615 	stw	r2,24(sp)
   282a4:	8009883a 	mov	r4,r16
   282a8:	a00b883a 	mov	r5,r20
   282ac:	00295500 	call	29550 <_Bfree>
   282b0:	a83f4b1e 	bne	r21,zero,27fe0 <_dtoa_r+0xc20>
   282b4:	003de306 	br	27a44 <_dtoa_r+0x684>
   282b8:	e00b883a 	mov	r5,fp
   282bc:	8009883a 	mov	r4,r16
   282c0:	0029b6c0 	call	29b6c <__pow5mult>
   282c4:	1039883a 	mov	fp,r2
   282c8:	003ed206 	br	27e14 <_dtoa_r+0xa54>
   282cc:	1000021e 	bne	r2,zero,282d8 <_dtoa_r+0xf18>
   282d0:	18c0004c 	andi	r3,r3,1
   282d4:	183f271e 	bne	r3,zero,27f74 <_dtoa_r+0xbb4>
   282d8:	01000c04 	movi	r4,48
   282dc:	00000106 	br	282e4 <_dtoa_r+0xf24>
   282e0:	102d883a 	mov	r22,r2
   282e4:	b0bfffc4 	addi	r2,r22,-1
   282e8:	10c00007 	ldb	r3,0(r2)
   282ec:	193ffc26 	beq	r3,r4,282e0 <_dtoa_r+0xf20>
   282f0:	003f3206 	br	27fbc <_dtoa_r+0xbfc>
   282f4:	d8c00f17 	ldw	r3,60(sp)
   282f8:	18015026 	beq	r3,zero,2883c <_dtoa_r+0x147c>
   282fc:	10810cc4 	addi	r2,r2,1075
   28300:	dcc00a17 	ldw	r19,40(sp)
   28304:	dc800817 	ldw	r18,32(sp)
   28308:	003e9706 	br	27d68 <_dtoa_r+0x9a8>
   2830c:	b807883a 	mov	r3,r23
   28310:	182b883a 	mov	r21,r3
   28314:	ddc00717 	ldw	r23,28(sp)
   28318:	00800e0e 	bge	zero,r2,28354 <_dtoa_r+0xf94>
   2831c:	e00b883a 	mov	r5,fp
   28320:	01800044 	movi	r6,1
   28324:	8009883a 	mov	r4,r16
   28328:	d8c01515 	stw	r3,84(sp)
   2832c:	0029c980 	call	29c98 <__lshift>
   28330:	1009883a 	mov	r4,r2
   28334:	a00b883a 	mov	r5,r20
   28338:	1039883a 	mov	fp,r2
   2833c:	0029df40 	call	29df4 <__mcmp>
   28340:	d8c01517 	ldw	r3,84(sp)
   28344:	0081880e 	bge	zero,r2,28968 <_dtoa_r+0x15a8>
   28348:	00800e44 	movi	r2,57
   2834c:	b0c00c44 	addi	r3,r22,49
   28350:	a8816326 	beq	r21,r2,288e0 <_dtoa_r+0x1520>
   28354:	90c00005 	stb	r3,0(r18)
   28358:	95800044 	addi	r22,r18,1
   2835c:	982b883a 	mov	r21,r19
   28360:	003f1606 	br	27fbc <_dtoa_r+0xbfc>
   28364:	300b883a 	mov	r5,r6
   28368:	e009883a 	mov	r4,fp
   2836c:	d9801515 	stw	r6,84(sp)
   28370:	0029df40 	call	29df4 <__mcmp>
   28374:	d9801517 	ldw	r6,84(sp)
   28378:	8009883a 	mov	r4,r16
   2837c:	d8801515 	stw	r2,84(sp)
   28380:	300b883a 	mov	r5,r6
   28384:	00295500 	call	29550 <_Bfree>
   28388:	d8801517 	ldw	r2,84(sp)
   2838c:	103f6d1e 	bne	r2,zero,28144 <_dtoa_r+0xd84>
   28390:	d9c00417 	ldw	r7,16(sp)
   28394:	383f6b1e 	bne	r7,zero,28144 <_dtoa_r+0xd84>
   28398:	d8c00317 	ldw	r3,12(sp)
   2839c:	183f691e 	bne	r3,zero,28144 <_dtoa_r+0xd84>
   283a0:	b807883a 	mov	r3,r23
   283a4:	00800e44 	movi	r2,57
   283a8:	ddc00717 	ldw	r23,28(sp)
   283ac:	18814c26 	beq	r3,r2,288e0 <_dtoa_r+0x1520>
   283b0:	057fe80e 	bge	zero,r21,28354 <_dtoa_r+0xf94>
   283b4:	b0c00c44 	addi	r3,r22,49
   283b8:	003fe606 	br	28354 <_dtoa_r+0xf94>
   283bc:	880b883a 	mov	r5,r17
   283c0:	8009883a 	mov	r4,r16
   283c4:	01800284 	movi	r6,10
   283c8:	000f883a 	mov	r7,zero
   283cc:	00295780 	call	29578 <__multadd>
   283d0:	1023883a 	mov	r17,r2
   283d4:	1027883a 	mov	r19,r2
   283d8:	a825883a 	mov	r18,r21
   283dc:	003f4506 	br	280f4 <_dtoa_r+0xd34>
   283e0:	e009883a 	mov	r4,fp
   283e4:	a00b883a 	mov	r5,r20
   283e8:	0029df40 	call	29df4 <__mcmp>
   283ec:	103ebc0e 	bge	r2,zero,27ee0 <_dtoa_r+0xb20>
   283f0:	e00b883a 	mov	r5,fp
   283f4:	8009883a 	mov	r4,r16
   283f8:	01800284 	movi	r6,10
   283fc:	000f883a 	mov	r7,zero
   28400:	00295780 	call	29578 <__multadd>
   28404:	1039883a 	mov	fp,r2
   28408:	d8800617 	ldw	r2,24(sp)
   2840c:	d8c00c17 	ldw	r3,48(sp)
   28410:	10bfffc4 	addi	r2,r2,-1
   28414:	d8800615 	stw	r2,24(sp)
   28418:	1801571e 	bne	r3,zero,28978 <_dtoa_r+0x15b8>
   2841c:	d9c00e17 	ldw	r7,56(sp)
   28420:	d9c00915 	stw	r7,36(sp)
   28424:	003eae06 	br	27ee0 <_dtoa_r+0xb20>
   28428:	a0800417 	ldw	r2,16(r20)
   2842c:	10800104 	addi	r2,r2,4
   28430:	1085883a 	add	r2,r2,r2
   28434:	1085883a 	add	r2,r2,r2
   28438:	a085883a 	add	r2,r20,r2
   2843c:	11000017 	ldw	r4,0(r2)
   28440:	00297c00 	call	297c0 <__hi0bits>
   28444:	00c00804 	movi	r3,32
   28448:	1885c83a 	sub	r2,r3,r2
   2844c:	003e8306 	br	27e5c <_dtoa_r+0xa9c>
   28450:	d9c00417 	ldw	r7,16(sp)
   28454:	00800084 	movi	r2,2
   28458:	11fea30e 	bge	r2,r7,27ee8 <_dtoa_r+0xb28>
   2845c:	d8800917 	ldw	r2,36(sp)
   28460:	103f8c1e 	bne	r2,zero,28294 <_dtoa_r+0xed4>
   28464:	a00b883a 	mov	r5,r20
   28468:	8009883a 	mov	r4,r16
   2846c:	01800144 	movi	r6,5
   28470:	000f883a 	mov	r7,zero
   28474:	00295780 	call	29578 <__multadd>
   28478:	e009883a 	mov	r4,fp
   2847c:	100b883a 	mov	r5,r2
   28480:	1029883a 	mov	r20,r2
   28484:	0029df40 	call	29df4 <__mcmp>
   28488:	00bf820e 	bge	zero,r2,28294 <_dtoa_r+0xed4>
   2848c:	00800c44 	movi	r2,49
   28490:	b8800005 	stb	r2,0(r23)
   28494:	d8800617 	ldw	r2,24(sp)
   28498:	bd800044 	addi	r22,r23,1
   2849c:	10800044 	addi	r2,r2,1
   284a0:	d8800615 	stw	r2,24(sp)
   284a4:	003f7f06 	br	282a4 <_dtoa_r+0xee4>
   284a8:	dc000417 	ldw	r16,16(sp)
   284ac:	003d6506 	br	27a44 <_dtoa_r+0x684>
   284b0:	9009883a 	mov	r4,r18
   284b4:	002f9a40 	call	2f9a4 <__floatsidf>
   284b8:	1009883a 	mov	r4,r2
   284bc:	180b883a 	mov	r5,r3
   284c0:	980d883a 	mov	r6,r19
   284c4:	a00f883a 	mov	r7,r20
   284c8:	002f2d40 	call	2f2d4 <__muldf3>
   284cc:	1009883a 	mov	r4,r2
   284d0:	180b883a 	mov	r5,r3
   284d4:	000d883a 	mov	r6,zero
   284d8:	01d00734 	movhi	r7,16412
   284dc:	002f2200 	call	2f220 <__adddf3>
   284e0:	057f3034 	movhi	r21,64704
   284e4:	1025883a 	mov	r18,r2
   284e8:	1d6b883a 	add	r21,r3,r21
   284ec:	9809883a 	mov	r4,r19
   284f0:	a00b883a 	mov	r5,r20
   284f4:	000d883a 	mov	r6,zero
   284f8:	01d00534 	movhi	r7,16404
   284fc:	002f2740 	call	2f274 <__subdf3>
   28500:	1009883a 	mov	r4,r2
   28504:	180b883a 	mov	r5,r3
   28508:	900d883a 	mov	r6,r18
   2850c:	a80f883a 	mov	r7,r21
   28510:	1027883a 	mov	r19,r2
   28514:	1829883a 	mov	r20,r3
   28518:	002f8240 	call	2f824 <__gtdf2>
   2851c:	00806616 	blt	zero,r2,286b8 <_dtoa_r+0x12f8>
   28520:	a9e0003c 	xorhi	r7,r21,32768
   28524:	9809883a 	mov	r4,r19
   28528:	a00b883a 	mov	r5,r20
   2852c:	900d883a 	mov	r6,r18
   28530:	002f8ec0 	call	2f8ec <__ltdf2>
   28534:	103d710e 	bge	r2,zero,27afc <_dtoa_r+0x73c>
   28538:	0029883a 	mov	r20,zero
   2853c:	002b883a 	mov	r21,zero
   28540:	003f5406 	br	28294 <_dtoa_r+0xed4>
   28544:	d9800a17 	ldw	r6,40(sp)
   28548:	e00b883a 	mov	r5,fp
   2854c:	8009883a 	mov	r4,r16
   28550:	0029b6c0 	call	29b6c <__pow5mult>
   28554:	1039883a 	mov	fp,r2
   28558:	003e2e06 	br	27e14 <_dtoa_r+0xa54>
   2855c:	d8000c15 	stw	zero,48(sp)
   28560:	003f2006 	br	281e4 <_dtoa_r+0xe24>
   28564:	00800044 	movi	r2,1
   28568:	d8800c15 	stw	r2,48(sp)
   2856c:	003c5d06 	br	276e4 <_dtoa_r+0x324>
   28570:	d8c00a17 	ldw	r3,40(sp)
   28574:	d9000b17 	ldw	r4,44(sp)
   28578:	dcc00a15 	stw	r19,40(sp)
   2857c:	98c5c83a 	sub	r2,r19,r3
   28580:	2089883a 	add	r4,r4,r2
   28584:	d9000b15 	stw	r4,44(sp)
   28588:	0027883a 	mov	r19,zero
   2858c:	003df206 	br	27d58 <_dtoa_r+0x998>
   28590:	d9000317 	ldw	r4,12(sp)
   28594:	8829883a 	mov	r20,r17
   28598:	04800084 	movi	r18,2
   2859c:	d9001015 	stw	r4,64(sp)
   285a0:	003c8106 	br	277a8 <_dtoa_r+0x3e8>
   285a4:	04800044 	movi	r18,1
   285a8:	dc800e15 	stw	r18,56(sp)
   285ac:	dc800915 	stw	r18,36(sp)
   285b0:	dc802115 	stw	r18,132(sp)
   285b4:	003f1206 	br	28200 <_dtoa_r+0xe40>
   285b8:	d8800617 	ldw	r2,24(sp)
   285bc:	00abc83a 	sub	r21,zero,r2
   285c0:	a800a426 	beq	r21,zero,28854 <_dtoa_r+0x1494>
   285c4:	a88003cc 	andi	r2,r21,15
   285c8:	100490fa 	slli	r2,r2,3
   285cc:	00c000f4 	movhi	r3,3
   285d0:	18cf7e04 	addi	r3,r3,15864
   285d4:	d9000317 	ldw	r4,12(sp)
   285d8:	1885883a 	add	r2,r3,r2
   285dc:	11800017 	ldw	r6,0(r2)
   285e0:	11c00117 	ldw	r7,4(r2)
   285e4:	a82bd13a 	srai	r21,r21,4
   285e8:	880b883a 	mov	r5,r17
   285ec:	002f2d40 	call	2f2d4 <__muldf3>
   285f0:	1027883a 	mov	r19,r2
   285f4:	1829883a 	mov	r20,r3
   285f8:	a800e826 	beq	r21,zero,2899c <_dtoa_r+0x15dc>
   285fc:	058000f4 	movhi	r22,3
   28600:	b58f7404 	addi	r22,r22,15824
   28604:	04800084 	movi	r18,2
   28608:	a980004c 	andi	r6,r21,1
   2860c:	1009883a 	mov	r4,r2
   28610:	a82bd07a 	srai	r21,r21,1
   28614:	180b883a 	mov	r5,r3
   28618:	30000426 	beq	r6,zero,2862c <_dtoa_r+0x126c>
   2861c:	b1800017 	ldw	r6,0(r22)
   28620:	b1c00117 	ldw	r7,4(r22)
   28624:	94800044 	addi	r18,r18,1
   28628:	002f2d40 	call	2f2d4 <__muldf3>
   2862c:	b5800204 	addi	r22,r22,8
   28630:	a83ff51e 	bne	r21,zero,28608 <_dtoa_r+0x1248>
   28634:	1027883a 	mov	r19,r2
   28638:	1829883a 	mov	r20,r3
   2863c:	003c7306 	br	2780c <_dtoa_r+0x44c>
   28640:	21000044 	addi	r4,r4,1
   28644:	11000005 	stb	r4,0(r2)
   28648:	003e5c06 	br	27fbc <_dtoa_r+0xbfc>
   2864c:	a9400117 	ldw	r5,4(r21)
   28650:	8009883a 	mov	r4,r16
   28654:	00294a80 	call	294a8 <_Balloc>
   28658:	a9800417 	ldw	r6,16(r21)
   2865c:	11000304 	addi	r4,r2,12
   28660:	a9400304 	addi	r5,r21,12
   28664:	31800084 	addi	r6,r6,2
   28668:	318d883a 	add	r6,r6,r6
   2866c:	318d883a 	add	r6,r6,r6
   28670:	1023883a 	mov	r17,r2
   28674:	00231240 	call	23124 <memcpy>
   28678:	8009883a 	mov	r4,r16
   2867c:	880b883a 	mov	r5,r17
   28680:	01800044 	movi	r6,1
   28684:	0029c980 	call	29c98 <__lshift>
   28688:	1027883a 	mov	r19,r2
   2868c:	003e8f06 	br	280cc <_dtoa_r+0xd0c>
   28690:	b807883a 	mov	r3,r23
   28694:	00800e44 	movi	r2,57
   28698:	ddc00717 	ldw	r23,28(sp)
   2869c:	18809026 	beq	r3,r2,288e0 <_dtoa_r+0x1520>
   286a0:	18c00044 	addi	r3,r3,1
   286a4:	003f2b06 	br	28354 <_dtoa_r+0xf94>
   286a8:	b807883a 	mov	r3,r23
   286ac:	982b883a 	mov	r21,r19
   286b0:	ddc00717 	ldw	r23,28(sp)
   286b4:	003e2406 	br	27f48 <_dtoa_r+0xb88>
   286b8:	0029883a 	mov	r20,zero
   286bc:	002b883a 	mov	r21,zero
   286c0:	003f7206 	br	2848c <_dtoa_r+0x10cc>
   286c4:	593fffc4 	addi	r4,r11,-1
   286c8:	200490fa 	slli	r2,r4,3
   286cc:	00c000f4 	movhi	r3,3
   286d0:	18cf7e04 	addi	r3,r3,15864
   286d4:	d9001015 	stw	r4,64(sp)
   286d8:	1885883a 	add	r2,r3,r2
   286dc:	11000017 	ldw	r4,0(r2)
   286e0:	11400117 	ldw	r5,4(r2)
   286e4:	900d883a 	mov	r6,r18
   286e8:	a80f883a 	mov	r7,r21
   286ec:	dac01615 	stw	r11,88(sp)
   286f0:	002f2d40 	call	2f2d4 <__muldf3>
   286f4:	a00b883a 	mov	r5,r20
   286f8:	9809883a 	mov	r4,r19
   286fc:	d8c01215 	stw	r3,72(sp)
   28700:	d8801115 	stw	r2,68(sp)
   28704:	002fa780 	call	2fa78 <__fixdfsi>
   28708:	1009883a 	mov	r4,r2
   2870c:	1025883a 	mov	r18,r2
   28710:	002f9a40 	call	2f9a4 <__floatsidf>
   28714:	9809883a 	mov	r4,r19
   28718:	a00b883a 	mov	r5,r20
   2871c:	100d883a 	mov	r6,r2
   28720:	180f883a 	mov	r7,r3
   28724:	94800c04 	addi	r18,r18,48
   28728:	002f2740 	call	2f274 <__subdf3>
   2872c:	bc800005 	stb	r18,0(r23)
   28730:	dac01617 	ldw	r11,88(sp)
   28734:	102b883a 	mov	r21,r2
   28738:	00800044 	movi	r2,1
   2873c:	bd800044 	addi	r22,r23,1
   28740:	1815883a 	mov	r10,r3
   28744:	58802226 	beq	r11,r2,287d0 <_dtoa_r+0x1410>
   28748:	bad7883a 	add	r11,r23,r11
   2874c:	dc001415 	stw	r16,80(sp)
   28750:	a805883a 	mov	r2,r21
   28754:	b027883a 	mov	r19,r22
   28758:	5821883a 	mov	r16,r11
   2875c:	882b883a 	mov	r21,r17
   28760:	000d883a 	mov	r6,zero
   28764:	01d00934 	movhi	r7,16420
   28768:	1009883a 	mov	r4,r2
   2876c:	180b883a 	mov	r5,r3
   28770:	002f2d40 	call	2f2d4 <__muldf3>
   28774:	180b883a 	mov	r5,r3
   28778:	1009883a 	mov	r4,r2
   2877c:	1829883a 	mov	r20,r3
   28780:	1023883a 	mov	r17,r2
   28784:	002fa780 	call	2fa78 <__fixdfsi>
   28788:	1009883a 	mov	r4,r2
   2878c:	1025883a 	mov	r18,r2
   28790:	002f9a40 	call	2f9a4 <__floatsidf>
   28794:	8809883a 	mov	r4,r17
   28798:	a00b883a 	mov	r5,r20
   2879c:	100d883a 	mov	r6,r2
   287a0:	180f883a 	mov	r7,r3
   287a4:	94800c04 	addi	r18,r18,48
   287a8:	002f2740 	call	2f274 <__subdf3>
   287ac:	9cc00044 	addi	r19,r19,1
   287b0:	9cbfffc5 	stb	r18,-1(r19)
   287b4:	9c3fea1e 	bne	r19,r16,28760 <_dtoa_r+0x13a0>
   287b8:	1815883a 	mov	r10,r3
   287bc:	d8c01017 	ldw	r3,64(sp)
   287c0:	dc001417 	ldw	r16,80(sp)
   287c4:	a823883a 	mov	r17,r21
   287c8:	b0ed883a 	add	r22,r22,r3
   287cc:	102b883a 	mov	r21,r2
   287d0:	d9001117 	ldw	r4,68(sp)
   287d4:	d9401217 	ldw	r5,72(sp)
   287d8:	000d883a 	mov	r6,zero
   287dc:	01cff834 	movhi	r7,16352
   287e0:	da801515 	stw	r10,84(sp)
   287e4:	002f2200 	call	2f220 <__adddf3>
   287e8:	da801517 	ldw	r10,84(sp)
   287ec:	1009883a 	mov	r4,r2
   287f0:	180b883a 	mov	r5,r3
   287f4:	500f883a 	mov	r7,r10
   287f8:	a80d883a 	mov	r6,r21
   287fc:	002f8ec0 	call	2f8ec <__ltdf2>
   28800:	da801517 	ldw	r10,84(sp)
   28804:	10003b0e 	bge	r2,zero,288f4 <_dtoa_r+0x1534>
   28808:	d9c01317 	ldw	r7,76(sp)
   2880c:	b53fffc3 	ldbu	r20,-1(r22)
   28810:	d9c00615 	stw	r7,24(sp)
   28814:	003d3106 	br	27cdc <_dtoa_r+0x91c>
   28818:	d8800817 	ldw	r2,32(sp)
   2881c:	11e5c83a 	sub	r18,r2,r7
   28820:	0005883a 	mov	r2,zero
   28824:	003d5006 	br	27d68 <_dtoa_r+0x9a8>
   28828:	05800044 	movi	r22,1
   2882c:	003dc406 	br	27f40 <_dtoa_r+0xb80>
   28830:	a5000044 	addi	r20,r20,1
   28834:	15000005 	stb	r20,0(r2)
   28838:	003c8206 	br	27a44 <_dtoa_r+0x684>
   2883c:	d8800217 	ldw	r2,8(sp)
   28840:	00c00d84 	movi	r3,54
   28844:	dcc00a17 	ldw	r19,40(sp)
   28848:	1885c83a 	sub	r2,r3,r2
   2884c:	dc800817 	ldw	r18,32(sp)
   28850:	003d4506 	br	27d68 <_dtoa_r+0x9a8>
   28854:	dcc00317 	ldw	r19,12(sp)
   28858:	8829883a 	mov	r20,r17
   2885c:	04800084 	movi	r18,2
   28860:	003bea06 	br	2780c <_dtoa_r+0x44c>
   28864:	d9000917 	ldw	r4,36(sp)
   28868:	203f1126 	beq	r4,zero,284b0 <_dtoa_r+0x10f0>
   2886c:	d9c00e17 	ldw	r7,56(sp)
   28870:	01fca20e 	bge	zero,r7,27afc <_dtoa_r+0x73c>
   28874:	a00b883a 	mov	r5,r20
   28878:	9809883a 	mov	r4,r19
   2887c:	000d883a 	mov	r6,zero
   28880:	01d00934 	movhi	r7,16420
   28884:	002f2d40 	call	2f2d4 <__muldf3>
   28888:	91000044 	addi	r4,r18,1
   2888c:	1027883a 	mov	r19,r2
   28890:	1829883a 	mov	r20,r3
   28894:	002f9a40 	call	2f9a4 <__floatsidf>
   28898:	9809883a 	mov	r4,r19
   2889c:	a00b883a 	mov	r5,r20
   288a0:	100d883a 	mov	r6,r2
   288a4:	180f883a 	mov	r7,r3
   288a8:	002f2d40 	call	2f2d4 <__muldf3>
   288ac:	1009883a 	mov	r4,r2
   288b0:	180b883a 	mov	r5,r3
   288b4:	000d883a 	mov	r6,zero
   288b8:	01d00734 	movhi	r7,16412
   288bc:	002f2200 	call	2f220 <__adddf3>
   288c0:	1025883a 	mov	r18,r2
   288c4:	d8800617 	ldw	r2,24(sp)
   288c8:	057f3034 	movhi	r21,64704
   288cc:	1d6b883a 	add	r21,r3,r21
   288d0:	10bfffc4 	addi	r2,r2,-1
   288d4:	d8801315 	stw	r2,76(sp)
   288d8:	dac00e17 	ldw	r11,56(sp)
   288dc:	003be706 	br	2787c <_dtoa_r+0x4bc>
   288e0:	01000e44 	movi	r4,57
   288e4:	91000005 	stb	r4,0(r18)
   288e8:	95800044 	addi	r22,r18,1
   288ec:	982b883a 	mov	r21,r19
   288f0:	003da106 	br	27f78 <_dtoa_r+0xbb8>
   288f4:	d9801117 	ldw	r6,68(sp)
   288f8:	d9c01217 	ldw	r7,72(sp)
   288fc:	0009883a 	mov	r4,zero
   28900:	014ff834 	movhi	r5,16352
   28904:	da801515 	stw	r10,84(sp)
   28908:	002f2740 	call	2f274 <__subdf3>
   2890c:	da801517 	ldw	r10,84(sp)
   28910:	1009883a 	mov	r4,r2
   28914:	180b883a 	mov	r5,r3
   28918:	a80d883a 	mov	r6,r21
   2891c:	500f883a 	mov	r7,r10
   28920:	002f8240 	call	2f824 <__gtdf2>
   28924:	00bc750e 	bge	zero,r2,27afc <_dtoa_r+0x73c>
   28928:	01000c04 	movi	r4,48
   2892c:	00000106 	br	28934 <_dtoa_r+0x1574>
   28930:	102d883a 	mov	r22,r2
   28934:	b0bfffc4 	addi	r2,r22,-1
   28938:	10c00007 	ldb	r3,0(r2)
   2893c:	193ffc26 	beq	r3,r4,28930 <_dtoa_r+0x1570>
   28940:	d8801317 	ldw	r2,76(sp)
   28944:	d8800615 	stw	r2,24(sp)
   28948:	003c3e06 	br	27a44 <_dtoa_r+0x684>
   2894c:	d9001317 	ldw	r4,76(sp)
   28950:	df001117 	ldw	fp,68(sp)
   28954:	d9000615 	stw	r4,24(sp)
   28958:	003ce006 	br	27cdc <_dtoa_r+0x91c>
   2895c:	df001117 	ldw	fp,68(sp)
   28960:	dc401217 	ldw	r17,72(sp)
   28964:	003c6506 	br	27afc <_dtoa_r+0x73c>
   28968:	103e7a1e 	bne	r2,zero,28354 <_dtoa_r+0xf94>
   2896c:	1880004c 	andi	r2,r3,1
   28970:	103e7826 	beq	r2,zero,28354 <_dtoa_r+0xf94>
   28974:	003e7406 	br	28348 <_dtoa_r+0xf88>
   28978:	8009883a 	mov	r4,r16
   2897c:	a80b883a 	mov	r5,r21
   28980:	01800284 	movi	r6,10
   28984:	000f883a 	mov	r7,zero
   28988:	00295780 	call	29578 <__multadd>
   2898c:	d9000e17 	ldw	r4,56(sp)
   28990:	102b883a 	mov	r21,r2
   28994:	d9000915 	stw	r4,36(sp)
   28998:	003d5106 	br	27ee0 <_dtoa_r+0xb20>
   2899c:	04800084 	movi	r18,2
   289a0:	003b9a06 	br	2780c <_dtoa_r+0x44c>
   289a4:	d8c01317 	ldw	r3,76(sp)
   289a8:	d8c00615 	stw	r3,24(sp)
   289ac:	003ccb06 	br	27cdc <_dtoa_r+0x91c>
   289b0:	d8c01317 	ldw	r3,76(sp)
   289b4:	d8c00615 	stw	r3,24(sp)
   289b8:	003c2206 	br	27a44 <_dtoa_r+0x684>
   289bc:	20fd3826 	beq	r4,r3,27ea0 <_dtoa_r+0xae0>
   289c0:	00c00f04 	movi	r3,60
   289c4:	1885c83a 	sub	r2,r3,r2
   289c8:	003da906 	br	28070 <_dtoa_r+0xcb0>
   289cc:	000b883a 	mov	r5,zero
   289d0:	003b5406 	br	27724 <_dtoa_r+0x364>
   289d4:	04c00044 	movi	r19,1
   289d8:	003b3b06 	br	276c8 <_dtoa_r+0x308>

000289dc <__sflags>:
   289dc:	28800007 	ldb	r2,0(r5)
   289e0:	00c01c84 	movi	r3,114
   289e4:	10c01826 	beq	r2,r3,28a48 <__sflags+0x6c>
   289e8:	00c01dc4 	movi	r3,119
   289ec:	10c01226 	beq	r2,r3,28a38 <__sflags+0x5c>
   289f0:	00c01844 	movi	r3,97
   289f4:	10c00426 	beq	r2,r3,28a08 <__sflags+0x2c>
   289f8:	00800584 	movi	r2,22
   289fc:	20800015 	stw	r2,0(r4)
   28a00:	0005883a 	mov	r2,zero
   28a04:	f800283a 	ret
   28a08:	01c08204 	movi	r7,520
   28a0c:	01000044 	movi	r4,1
   28a10:	00804204 	movi	r2,264
   28a14:	28c00047 	ldb	r3,1(r5)
   28a18:	18000426 	beq	r3,zero,28a2c <__sflags+0x50>
   28a1c:	02000ac4 	movi	r8,43
   28a20:	1a000d26 	beq	r3,r8,28a58 <__sflags+0x7c>
   28a24:	28c00087 	ldb	r3,2(r5)
   28a28:	1a000b26 	beq	r3,r8,28a58 <__sflags+0x7c>
   28a2c:	21c8b03a 	or	r4,r4,r7
   28a30:	31000015 	stw	r4,0(r6)
   28a34:	f800283a 	ret
   28a38:	01c18004 	movi	r7,1536
   28a3c:	01000044 	movi	r4,1
   28a40:	00800204 	movi	r2,8
   28a44:	003ff306 	br	28a14 <__sflags+0x38>
   28a48:	000f883a 	mov	r7,zero
   28a4c:	0009883a 	mov	r4,zero
   28a50:	00800104 	movi	r2,4
   28a54:	003fef06 	br	28a14 <__sflags+0x38>
   28a58:	00fff8c4 	movi	r3,-29
   28a5c:	01000084 	movi	r4,2
   28a60:	10c4703a 	and	r2,r2,r3
   28a64:	21c8b03a 	or	r4,r4,r7
   28a68:	10800414 	ori	r2,r2,16
   28a6c:	31000015 	stw	r4,0(r6)
   28a70:	f800283a 	ret

00028a74 <__sfvwrite_r>:
   28a74:	30800217 	ldw	r2,8(r6)
   28a78:	defff504 	addi	sp,sp,-44
   28a7c:	dd400615 	stw	r21,24(sp)
   28a80:	dd000515 	stw	r20,20(sp)
   28a84:	dc000115 	stw	r16,4(sp)
   28a88:	dfc00a15 	stw	ra,40(sp)
   28a8c:	df000915 	stw	fp,36(sp)
   28a90:	ddc00815 	stw	r23,32(sp)
   28a94:	dd800715 	stw	r22,28(sp)
   28a98:	dcc00415 	stw	r19,16(sp)
   28a9c:	dc800315 	stw	r18,12(sp)
   28aa0:	dc400215 	stw	r17,8(sp)
   28aa4:	3029883a 	mov	r20,r6
   28aa8:	202b883a 	mov	r21,r4
   28aac:	2821883a 	mov	r16,r5
   28ab0:	10002126 	beq	r2,zero,28b38 <__sfvwrite_r+0xc4>
   28ab4:	2880030b 	ldhu	r2,12(r5)
   28ab8:	10c0020c 	andi	r3,r2,8
   28abc:	18ffffcc 	andi	r3,r3,65535
   28ac0:	18e0001c 	xori	r3,r3,32768
   28ac4:	18e00004 	addi	r3,r3,-32768
   28ac8:	18002826 	beq	r3,zero,28b6c <__sfvwrite_r+0xf8>
   28acc:	28c00417 	ldw	r3,16(r5)
   28ad0:	18002626 	beq	r3,zero,28b6c <__sfvwrite_r+0xf8>
   28ad4:	10c0008c 	andi	r3,r2,2
   28ad8:	18ffffcc 	andi	r3,r3,65535
   28adc:	18e0001c 	xori	r3,r3,32768
   28ae0:	18e00004 	addi	r3,r3,-32768
   28ae4:	a4400017 	ldw	r17,0(r20)
   28ae8:	18002b26 	beq	r3,zero,28b98 <__sfvwrite_r+0x124>
   28aec:	0027883a 	mov	r19,zero
   28af0:	0025883a 	mov	r18,zero
   28af4:	05810004 	movi	r22,1024
   28af8:	980d883a 	mov	r6,r19
   28afc:	a809883a 	mov	r4,r21
   28b00:	90004f26 	beq	r18,zero,28c40 <__sfvwrite_r+0x1cc>
   28b04:	900f883a 	mov	r7,r18
   28b08:	81400717 	ldw	r5,28(r16)
   28b0c:	b480012e 	bgeu	r22,r18,28b14 <__sfvwrite_r+0xa0>
   28b10:	01c10004 	movi	r7,1024
   28b14:	80800917 	ldw	r2,36(r16)
   28b18:	103ee83a 	callr	r2
   28b1c:	0080540e 	bge	zero,r2,28c70 <__sfvwrite_r+0x1fc>
   28b20:	a0c00217 	ldw	r3,8(r20)
   28b24:	98a7883a 	add	r19,r19,r2
   28b28:	90a5c83a 	sub	r18,r18,r2
   28b2c:	1885c83a 	sub	r2,r3,r2
   28b30:	a0800215 	stw	r2,8(r20)
   28b34:	103ff01e 	bne	r2,zero,28af8 <__sfvwrite_r+0x84>
   28b38:	0005883a 	mov	r2,zero
   28b3c:	dfc00a17 	ldw	ra,40(sp)
   28b40:	df000917 	ldw	fp,36(sp)
   28b44:	ddc00817 	ldw	r23,32(sp)
   28b48:	dd800717 	ldw	r22,28(sp)
   28b4c:	dd400617 	ldw	r21,24(sp)
   28b50:	dd000517 	ldw	r20,20(sp)
   28b54:	dcc00417 	ldw	r19,16(sp)
   28b58:	dc800317 	ldw	r18,12(sp)
   28b5c:	dc400217 	ldw	r17,8(sp)
   28b60:	dc000117 	ldw	r16,4(sp)
   28b64:	dec00b04 	addi	sp,sp,44
   28b68:	f800283a 	ret
   28b6c:	a809883a 	mov	r4,r21
   28b70:	800b883a 	mov	r5,r16
   28b74:	0026fac0 	call	26fac <__swsetup_r>
   28b78:	1000f01e 	bne	r2,zero,28f3c <__sfvwrite_r+0x4c8>
   28b7c:	8080030b 	ldhu	r2,12(r16)
   28b80:	a4400017 	ldw	r17,0(r20)
   28b84:	10c0008c 	andi	r3,r2,2
   28b88:	18ffffcc 	andi	r3,r3,65535
   28b8c:	18e0001c 	xori	r3,r3,32768
   28b90:	18e00004 	addi	r3,r3,-32768
   28b94:	183fd51e 	bne	r3,zero,28aec <__sfvwrite_r+0x78>
   28b98:	10c0004c 	andi	r3,r2,1
   28b9c:	002d883a 	mov	r22,zero
   28ba0:	1800381e 	bne	r3,zero,28c84 <__sfvwrite_r+0x210>
   28ba4:	0025883a 	mov	r18,zero
   28ba8:	90002126 	beq	r18,zero,28c30 <__sfvwrite_r+0x1bc>
   28bac:	10c0800c 	andi	r3,r2,512
   28bb0:	18ffffcc 	andi	r3,r3,65535
   28bb4:	18e0001c 	xori	r3,r3,32768
   28bb8:	18e00004 	addi	r3,r3,-32768
   28bbc:	84c00217 	ldw	r19,8(r16)
   28bc0:	18006b26 	beq	r3,zero,28d70 <__sfvwrite_r+0x2fc>
   28bc4:	980f883a 	mov	r7,r19
   28bc8:	94c08636 	bltu	r18,r19,28de4 <__sfvwrite_r+0x370>
   28bcc:	10c1200c 	andi	r3,r2,1152
   28bd0:	18009f1e 	bne	r3,zero,28e50 <__sfvwrite_r+0x3dc>
   28bd4:	81000017 	ldw	r4,0(r16)
   28bd8:	982f883a 	mov	r23,r19
   28bdc:	9039883a 	mov	fp,r18
   28be0:	9027883a 	mov	r19,r18
   28be4:	380d883a 	mov	r6,r7
   28be8:	b00b883a 	mov	r5,r22
   28bec:	d9c00015 	stw	r7,0(sp)
   28bf0:	002931c0 	call	2931c <memmove>
   28bf4:	d9c00017 	ldw	r7,0(sp)
   28bf8:	81000217 	ldw	r4,8(r16)
   28bfc:	80800017 	ldw	r2,0(r16)
   28c00:	25efc83a 	sub	r23,r4,r23
   28c04:	11cf883a 	add	r7,r2,r7
   28c08:	85c00215 	stw	r23,8(r16)
   28c0c:	81c00015 	stw	r7,0(r16)
   28c10:	a0800217 	ldw	r2,8(r20)
   28c14:	b72d883a 	add	r22,r22,fp
   28c18:	9725c83a 	sub	r18,r18,fp
   28c1c:	14e7c83a 	sub	r19,r2,r19
   28c20:	a4c00215 	stw	r19,8(r20)
   28c24:	983fc426 	beq	r19,zero,28b38 <__sfvwrite_r+0xc4>
   28c28:	8080030b 	ldhu	r2,12(r16)
   28c2c:	903fdf1e 	bne	r18,zero,28bac <__sfvwrite_r+0x138>
   28c30:	8d800017 	ldw	r22,0(r17)
   28c34:	8c800117 	ldw	r18,4(r17)
   28c38:	8c400204 	addi	r17,r17,8
   28c3c:	003fda06 	br	28ba8 <__sfvwrite_r+0x134>
   28c40:	8cc00017 	ldw	r19,0(r17)
   28c44:	8c800117 	ldw	r18,4(r17)
   28c48:	8c400204 	addi	r17,r17,8
   28c4c:	003faa06 	br	28af8 <__sfvwrite_r+0x84>
   28c50:	002a5640 	call	2a564 <_realloc_r>
   28c54:	102f883a 	mov	r23,r2
   28c58:	10009f1e 	bne	r2,zero,28ed8 <__sfvwrite_r+0x464>
   28c5c:	81400417 	ldw	r5,16(r16)
   28c60:	a809883a 	mov	r4,r21
   28c64:	0021d540 	call	21d54 <_free_r>
   28c68:	00800304 	movi	r2,12
   28c6c:	a8800015 	stw	r2,0(r21)
   28c70:	80c0030b 	ldhu	r3,12(r16)
   28c74:	00bfffc4 	movi	r2,-1
   28c78:	18c01014 	ori	r3,r3,64
   28c7c:	80c0030d 	sth	r3,12(r16)
   28c80:	003fae06 	br	28b3c <__sfvwrite_r+0xc8>
   28c84:	0007883a 	mov	r3,zero
   28c88:	0039883a 	mov	fp,zero
   28c8c:	0025883a 	mov	r18,zero
   28c90:	90001e26 	beq	r18,zero,28d0c <__sfvwrite_r+0x298>
   28c94:	18006526 	beq	r3,zero,28e2c <__sfvwrite_r+0x3b8>
   28c98:	b02f883a 	mov	r23,r22
   28c9c:	9580012e 	bgeu	r18,r22,28ca4 <__sfvwrite_r+0x230>
   28ca0:	902f883a 	mov	r23,r18
   28ca4:	81000017 	ldw	r4,0(r16)
   28ca8:	80800417 	ldw	r2,16(r16)
   28cac:	84c00217 	ldw	r19,8(r16)
   28cb0:	81c00517 	ldw	r7,20(r16)
   28cb4:	1100022e 	bgeu	r2,r4,28cc0 <__sfvwrite_r+0x24c>
   28cb8:	99e7883a 	add	r19,r19,r7
   28cbc:	9dc01816 	blt	r19,r23,28d20 <__sfvwrite_r+0x2ac>
   28cc0:	b9c03b16 	blt	r23,r7,28db0 <__sfvwrite_r+0x33c>
   28cc4:	80800917 	ldw	r2,36(r16)
   28cc8:	81400717 	ldw	r5,28(r16)
   28ccc:	a809883a 	mov	r4,r21
   28cd0:	d8c00015 	stw	r3,0(sp)
   28cd4:	e00d883a 	mov	r6,fp
   28cd8:	103ee83a 	callr	r2
   28cdc:	1027883a 	mov	r19,r2
   28ce0:	d8c00017 	ldw	r3,0(sp)
   28ce4:	00bfe20e 	bge	zero,r2,28c70 <__sfvwrite_r+0x1fc>
   28ce8:	b4edc83a 	sub	r22,r22,r19
   28cec:	b0001a26 	beq	r22,zero,28d58 <__sfvwrite_r+0x2e4>
   28cf0:	a0800217 	ldw	r2,8(r20)
   28cf4:	e4f9883a 	add	fp,fp,r19
   28cf8:	94e5c83a 	sub	r18,r18,r19
   28cfc:	14e7c83a 	sub	r19,r2,r19
   28d00:	a4c00215 	stw	r19,8(r20)
   28d04:	983f8c26 	beq	r19,zero,28b38 <__sfvwrite_r+0xc4>
   28d08:	903fe21e 	bne	r18,zero,28c94 <__sfvwrite_r+0x220>
   28d0c:	8f000017 	ldw	fp,0(r17)
   28d10:	8c800117 	ldw	r18,4(r17)
   28d14:	0007883a 	mov	r3,zero
   28d18:	8c400204 	addi	r17,r17,8
   28d1c:	003fdc06 	br	28c90 <__sfvwrite_r+0x21c>
   28d20:	e00b883a 	mov	r5,fp
   28d24:	980d883a 	mov	r6,r19
   28d28:	d8c00015 	stw	r3,0(sp)
   28d2c:	002931c0 	call	2931c <memmove>
   28d30:	80800017 	ldw	r2,0(r16)
   28d34:	a809883a 	mov	r4,r21
   28d38:	800b883a 	mov	r5,r16
   28d3c:	14c5883a 	add	r2,r2,r19
   28d40:	80800015 	stw	r2,0(r16)
   28d44:	00213000 	call	21300 <_fflush_r>
   28d48:	d8c00017 	ldw	r3,0(sp)
   28d4c:	103fc81e 	bne	r2,zero,28c70 <__sfvwrite_r+0x1fc>
   28d50:	b4edc83a 	sub	r22,r22,r19
   28d54:	b03fe61e 	bne	r22,zero,28cf0 <__sfvwrite_r+0x27c>
   28d58:	a809883a 	mov	r4,r21
   28d5c:	800b883a 	mov	r5,r16
   28d60:	00213000 	call	21300 <_fflush_r>
   28d64:	103fc21e 	bne	r2,zero,28c70 <__sfvwrite_r+0x1fc>
   28d68:	0007883a 	mov	r3,zero
   28d6c:	003fe006 	br	28cf0 <__sfvwrite_r+0x27c>
   28d70:	81000017 	ldw	r4,0(r16)
   28d74:	80800417 	ldw	r2,16(r16)
   28d78:	1100022e 	bgeu	r2,r4,28d84 <__sfvwrite_r+0x310>
   28d7c:	9839883a 	mov	fp,r19
   28d80:	9c806036 	bltu	r19,r18,28f04 <__sfvwrite_r+0x490>
   28d84:	81c00517 	ldw	r7,20(r16)
   28d88:	91c01c36 	bltu	r18,r7,28dfc <__sfvwrite_r+0x388>
   28d8c:	80800917 	ldw	r2,36(r16)
   28d90:	81400717 	ldw	r5,28(r16)
   28d94:	a809883a 	mov	r4,r21
   28d98:	b00d883a 	mov	r6,r22
   28d9c:	103ee83a 	callr	r2
   28da0:	1027883a 	mov	r19,r2
   28da4:	00bfb20e 	bge	zero,r2,28c70 <__sfvwrite_r+0x1fc>
   28da8:	1039883a 	mov	fp,r2
   28dac:	003f9806 	br	28c10 <__sfvwrite_r+0x19c>
   28db0:	b80d883a 	mov	r6,r23
   28db4:	e00b883a 	mov	r5,fp
   28db8:	d8c00015 	stw	r3,0(sp)
   28dbc:	002931c0 	call	2931c <memmove>
   28dc0:	80800217 	ldw	r2,8(r16)
   28dc4:	81000017 	ldw	r4,0(r16)
   28dc8:	b827883a 	mov	r19,r23
   28dcc:	15c5c83a 	sub	r2,r2,r23
   28dd0:	25ef883a 	add	r23,r4,r23
   28dd4:	80800215 	stw	r2,8(r16)
   28dd8:	85c00015 	stw	r23,0(r16)
   28ddc:	d8c00017 	ldw	r3,0(sp)
   28de0:	003fc106 	br	28ce8 <__sfvwrite_r+0x274>
   28de4:	81000017 	ldw	r4,0(r16)
   28de8:	902f883a 	mov	r23,r18
   28dec:	9039883a 	mov	fp,r18
   28df0:	9027883a 	mov	r19,r18
   28df4:	900f883a 	mov	r7,r18
   28df8:	003f7a06 	br	28be4 <__sfvwrite_r+0x170>
   28dfc:	b00b883a 	mov	r5,r22
   28e00:	900d883a 	mov	r6,r18
   28e04:	002931c0 	call	2931c <memmove>
   28e08:	80c00217 	ldw	r3,8(r16)
   28e0c:	80800017 	ldw	r2,0(r16)
   28e10:	9027883a 	mov	r19,r18
   28e14:	1c87c83a 	sub	r3,r3,r18
   28e18:	1485883a 	add	r2,r2,r18
   28e1c:	80c00215 	stw	r3,8(r16)
   28e20:	80800015 	stw	r2,0(r16)
   28e24:	9039883a 	mov	fp,r18
   28e28:	003f7906 	br	28c10 <__sfvwrite_r+0x19c>
   28e2c:	e009883a 	mov	r4,fp
   28e30:	01400284 	movi	r5,10
   28e34:	900d883a 	mov	r6,r18
   28e38:	00292240 	call	29224 <memchr>
   28e3c:	10003c26 	beq	r2,zero,28f30 <__sfvwrite_r+0x4bc>
   28e40:	15800044 	addi	r22,r2,1
   28e44:	b72dc83a 	sub	r22,r22,fp
   28e48:	00c00044 	movi	r3,1
   28e4c:	003f9206 	br	28c98 <__sfvwrite_r+0x224>
   28e50:	81000517 	ldw	r4,20(r16)
   28e54:	81400417 	ldw	r5,16(r16)
   28e58:	80c00017 	ldw	r3,0(r16)
   28e5c:	210d883a 	add	r6,r4,r4
   28e60:	3109883a 	add	r4,r6,r4
   28e64:	2026d7fa 	srli	r19,r4,31
   28e68:	1979c83a 	sub	fp,r3,r5
   28e6c:	e1800044 	addi	r6,fp,1
   28e70:	9909883a 	add	r4,r19,r4
   28e74:	2027d07a 	srai	r19,r4,1
   28e78:	3489883a 	add	r4,r6,r18
   28e7c:	980d883a 	mov	r6,r19
   28e80:	9900022e 	bgeu	r19,r4,28e8c <__sfvwrite_r+0x418>
   28e84:	2027883a 	mov	r19,r4
   28e88:	200d883a 	mov	r6,r4
   28e8c:	1081000c 	andi	r2,r2,1024
   28e90:	10bfffcc 	andi	r2,r2,65535
   28e94:	10a0001c 	xori	r2,r2,32768
   28e98:	10a00004 	addi	r2,r2,-32768
   28e9c:	a809883a 	mov	r4,r21
   28ea0:	103f6b26 	beq	r2,zero,28c50 <__sfvwrite_r+0x1dc>
   28ea4:	300b883a 	mov	r5,r6
   28ea8:	00229a00 	call	229a0 <_malloc_r>
   28eac:	102f883a 	mov	r23,r2
   28eb0:	103f6d26 	beq	r2,zero,28c68 <__sfvwrite_r+0x1f4>
   28eb4:	81400417 	ldw	r5,16(r16)
   28eb8:	1009883a 	mov	r4,r2
   28ebc:	e00d883a 	mov	r6,fp
   28ec0:	00231240 	call	23124 <memcpy>
   28ec4:	8080030b 	ldhu	r2,12(r16)
   28ec8:	00fedfc4 	movi	r3,-1153
   28ecc:	10c4703a 	and	r2,r2,r3
   28ed0:	10802014 	ori	r2,r2,128
   28ed4:	8080030d 	sth	r2,12(r16)
   28ed8:	bf09883a 	add	r4,r23,fp
   28edc:	9f07c83a 	sub	r3,r19,fp
   28ee0:	85c00415 	stw	r23,16(r16)
   28ee4:	84c00515 	stw	r19,20(r16)
   28ee8:	81000015 	stw	r4,0(r16)
   28eec:	902f883a 	mov	r23,r18
   28ef0:	80c00215 	stw	r3,8(r16)
   28ef4:	9039883a 	mov	fp,r18
   28ef8:	9027883a 	mov	r19,r18
   28efc:	900f883a 	mov	r7,r18
   28f00:	003f3806 	br	28be4 <__sfvwrite_r+0x170>
   28f04:	b00b883a 	mov	r5,r22
   28f08:	980d883a 	mov	r6,r19
   28f0c:	002931c0 	call	2931c <memmove>
   28f10:	80800017 	ldw	r2,0(r16)
   28f14:	a809883a 	mov	r4,r21
   28f18:	800b883a 	mov	r5,r16
   28f1c:	14c5883a 	add	r2,r2,r19
   28f20:	80800015 	stw	r2,0(r16)
   28f24:	00213000 	call	21300 <_fflush_r>
   28f28:	103f3926 	beq	r2,zero,28c10 <__sfvwrite_r+0x19c>
   28f2c:	003f5006 	br	28c70 <__sfvwrite_r+0x1fc>
   28f30:	95800044 	addi	r22,r18,1
   28f34:	00c00044 	movi	r3,1
   28f38:	003f5706 	br	28c98 <__sfvwrite_r+0x224>
   28f3c:	80c0030b 	ldhu	r3,12(r16)
   28f40:	00bfffc4 	movi	r2,-1
   28f44:	18c01014 	ori	r3,r3,64
   28f48:	80c0030d 	sth	r3,12(r16)
   28f4c:	00c00244 	movi	r3,9
   28f50:	a8c00015 	stw	r3,0(r21)
   28f54:	003ef906 	br	28b3c <__sfvwrite_r+0xc8>

00028f58 <_isatty_r>:
   28f58:	defffd04 	addi	sp,sp,-12
   28f5c:	dc400115 	stw	r17,4(sp)
   28f60:	dc000015 	stw	r16,0(sp)
   28f64:	2023883a 	mov	r17,r4
   28f68:	040000f4 	movhi	r16,3
   28f6c:	841d9504 	addi	r16,r16,30292
   28f70:	2809883a 	mov	r4,r5
   28f74:	dfc00215 	stw	ra,8(sp)
   28f78:	80000015 	stw	zero,0(r16)
   28f7c:	00308980 	call	30898 <isatty>
   28f80:	00ffffc4 	movi	r3,-1
   28f84:	10c00526 	beq	r2,r3,28f9c <_isatty_r+0x44>
   28f88:	dfc00217 	ldw	ra,8(sp)
   28f8c:	dc400117 	ldw	r17,4(sp)
   28f90:	dc000017 	ldw	r16,0(sp)
   28f94:	dec00304 	addi	sp,sp,12
   28f98:	f800283a 	ret
   28f9c:	80c00017 	ldw	r3,0(r16)
   28fa0:	183ff926 	beq	r3,zero,28f88 <_isatty_r+0x30>
   28fa4:	88c00015 	stw	r3,0(r17)
   28fa8:	dfc00217 	ldw	ra,8(sp)
   28fac:	dc400117 	ldw	r17,4(sp)
   28fb0:	dc000017 	ldw	r16,0(sp)
   28fb4:	dec00304 	addi	sp,sp,12
   28fb8:	f800283a 	ret

00028fbc <iswspace>:
   28fbc:	00803fc4 	movi	r2,255
   28fc0:	11000a36 	bltu	r2,r4,28fec <iswspace+0x30>
   28fc4:	008000f4 	movhi	r2,3
   28fc8:	1096ba04 	addi	r2,r2,23272
   28fcc:	10800017 	ldw	r2,0(r2)
   28fd0:	1109883a 	add	r4,r2,r4
   28fd4:	20800003 	ldbu	r2,0(r4)
   28fd8:	1080020c 	andi	r2,r2,8
   28fdc:	10803fcc 	andi	r2,r2,255
   28fe0:	1080201c 	xori	r2,r2,128
   28fe4:	10bfe004 	addi	r2,r2,-128
   28fe8:	f800283a 	ret
   28fec:	0005883a 	mov	r2,zero
   28ff0:	f800283a 	ret

00028ff4 <_setlocale_r>:
   28ff4:	defffc04 	addi	sp,sp,-16
   28ff8:	dc800215 	stw	r18,8(sp)
   28ffc:	dc400115 	stw	r17,4(sp)
   29000:	dc000015 	stw	r16,0(sp)
   29004:	dfc00315 	stw	ra,12(sp)
   29008:	3021883a 	mov	r16,r6
   2900c:	2023883a 	mov	r17,r4
   29010:	2825883a 	mov	r18,r5
   29014:	30001626 	beq	r6,zero,29070 <_setlocale_r+0x7c>
   29018:	3009883a 	mov	r4,r6
   2901c:	014000f4 	movhi	r5,3
   29020:	294e9004 	addi	r5,r5,14912
   29024:	002ad540 	call	2ad54 <strcmp>
   29028:	10000a1e 	bne	r2,zero,29054 <_setlocale_r+0x60>
   2902c:	8c800c15 	stw	r18,48(r17)
   29030:	8c000d15 	stw	r16,52(r17)
   29034:	008000f4 	movhi	r2,3
   29038:	108e9004 	addi	r2,r2,14912
   2903c:	dfc00317 	ldw	ra,12(sp)
   29040:	dc800217 	ldw	r18,8(sp)
   29044:	dc400117 	ldw	r17,4(sp)
   29048:	dc000017 	ldw	r16,0(sp)
   2904c:	dec00404 	addi	sp,sp,16
   29050:	f800283a 	ret
   29054:	8009883a 	mov	r4,r16
   29058:	014000f4 	movhi	r5,3
   2905c:	294e9a04 	addi	r5,r5,14952
   29060:	002ad540 	call	2ad54 <strcmp>
   29064:	103ff126 	beq	r2,zero,2902c <_setlocale_r+0x38>
   29068:	0005883a 	mov	r2,zero
   2906c:	003ff306 	br	2903c <_setlocale_r+0x48>
   29070:	008000f4 	movhi	r2,3
   29074:	108e9004 	addi	r2,r2,14912
   29078:	dfc00317 	ldw	ra,12(sp)
   2907c:	dc800217 	ldw	r18,8(sp)
   29080:	dc400117 	ldw	r17,4(sp)
   29084:	dc000017 	ldw	r16,0(sp)
   29088:	dec00404 	addi	sp,sp,16
   2908c:	f800283a 	ret

00029090 <__locale_charset>:
   29090:	008000f4 	movhi	r2,3
   29094:	108f5a04 	addi	r2,r2,15720
   29098:	f800283a 	ret

0002909c <_localeconv_r>:
   2909c:	008000f4 	movhi	r2,3
   290a0:	108f5e04 	addi	r2,r2,15736
   290a4:	f800283a 	ret

000290a8 <setlocale>:
   290a8:	00c000f4 	movhi	r3,3
   290ac:	18d6b704 	addi	r3,r3,23260
   290b0:	2005883a 	mov	r2,r4
   290b4:	19000017 	ldw	r4,0(r3)
   290b8:	280d883a 	mov	r6,r5
   290bc:	100b883a 	mov	r5,r2
   290c0:	0028ff41 	jmpi	28ff4 <_setlocale_r>

000290c4 <localeconv>:
   290c4:	008000f4 	movhi	r2,3
   290c8:	108f5e04 	addi	r2,r2,15736
   290cc:	f800283a 	ret

000290d0 <_lseek_r>:
   290d0:	defffd04 	addi	sp,sp,-12
   290d4:	dc400115 	stw	r17,4(sp)
   290d8:	dc000015 	stw	r16,0(sp)
   290dc:	2023883a 	mov	r17,r4
   290e0:	040000f4 	movhi	r16,3
   290e4:	841d9504 	addi	r16,r16,30292
   290e8:	2809883a 	mov	r4,r5
   290ec:	300b883a 	mov	r5,r6
   290f0:	380d883a 	mov	r6,r7
   290f4:	dfc00215 	stw	ra,8(sp)
   290f8:	80000015 	stw	zero,0(r16)
   290fc:	0030a780 	call	30a78 <lseek>
   29100:	00ffffc4 	movi	r3,-1
   29104:	10c00526 	beq	r2,r3,2911c <_lseek_r+0x4c>
   29108:	dfc00217 	ldw	ra,8(sp)
   2910c:	dc400117 	ldw	r17,4(sp)
   29110:	dc000017 	ldw	r16,0(sp)
   29114:	dec00304 	addi	sp,sp,12
   29118:	f800283a 	ret
   2911c:	80c00017 	ldw	r3,0(r16)
   29120:	183ff926 	beq	r3,zero,29108 <_lseek_r+0x38>
   29124:	88c00015 	stw	r3,0(r17)
   29128:	dfc00217 	ldw	ra,8(sp)
   2912c:	dc400117 	ldw	r17,4(sp)
   29130:	dc000017 	ldw	r16,0(sp)
   29134:	dec00304 	addi	sp,sp,12
   29138:	f800283a 	ret

0002913c <_mbrtowc_r>:
   2913c:	defffc04 	addi	sp,sp,-16
   29140:	dc000115 	stw	r16,4(sp)
   29144:	dc000417 	ldw	r16,16(sp)
   29148:	dc400215 	stw	r17,8(sp)
   2914c:	dfc00315 	stw	ra,12(sp)
   29150:	dc000015 	stw	r16,0(sp)
   29154:	2023883a 	mov	r17,r4
   29158:	30000b26 	beq	r6,zero,29188 <_mbrtowc_r+0x4c>
   2915c:	00291e00 	call	291e0 <_mbtowc_r>
   29160:	00ffffc4 	movi	r3,-1
   29164:	10c0031e 	bne	r2,r3,29174 <_mbrtowc_r+0x38>
   29168:	80000015 	stw	zero,0(r16)
   2916c:	00c02284 	movi	r3,138
   29170:	88c00015 	stw	r3,0(r17)
   29174:	dfc00317 	ldw	ra,12(sp)
   29178:	dc400217 	ldw	r17,8(sp)
   2917c:	dc000117 	ldw	r16,4(sp)
   29180:	dec00404 	addi	sp,sp,16
   29184:	f800283a 	ret
   29188:	000b883a 	mov	r5,zero
   2918c:	018000f4 	movhi	r6,3
   29190:	318e9a04 	addi	r6,r6,14952
   29194:	01c00044 	movi	r7,1
   29198:	00291e00 	call	291e0 <_mbtowc_r>
   2919c:	003ff006 	br	29160 <_mbrtowc_r+0x24>

000291a0 <mbrtowc>:
   291a0:	008000f4 	movhi	r2,3
   291a4:	1096b704 	addi	r2,r2,23260
   291a8:	2011883a 	mov	r8,r4
   291ac:	11000017 	ldw	r4,0(r2)
   291b0:	defffe04 	addi	sp,sp,-8
   291b4:	2807883a 	mov	r3,r5
   291b8:	3005883a 	mov	r2,r6
   291bc:	d9c00015 	stw	r7,0(sp)
   291c0:	400b883a 	mov	r5,r8
   291c4:	180d883a 	mov	r6,r3
   291c8:	100f883a 	mov	r7,r2
   291cc:	dfc00115 	stw	ra,4(sp)
   291d0:	002913c0 	call	2913c <_mbrtowc_r>
   291d4:	dfc00117 	ldw	ra,4(sp)
   291d8:	dec00204 	addi	sp,sp,8
   291dc:	f800283a 	ret

000291e0 <_mbtowc_r>:
   291e0:	deffff04 	addi	sp,sp,-4
   291e4:	28000826 	beq	r5,zero,29208 <_mbtowc_r+0x28>
   291e8:	30000926 	beq	r6,zero,29210 <_mbtowc_r+0x30>
   291ec:	38000b26 	beq	r7,zero,2921c <_mbtowc_r+0x3c>
   291f0:	30800003 	ldbu	r2,0(r6)
   291f4:	28800015 	stw	r2,0(r5)
   291f8:	30800003 	ldbu	r2,0(r6)
   291fc:	1004c03a 	cmpne	r2,r2,zero
   29200:	dec00104 	addi	sp,sp,4
   29204:	f800283a 	ret
   29208:	d80b883a 	mov	r5,sp
   2920c:	303ff71e 	bne	r6,zero,291ec <_mbtowc_r+0xc>
   29210:	0005883a 	mov	r2,zero
   29214:	dec00104 	addi	sp,sp,4
   29218:	f800283a 	ret
   2921c:	00bfff84 	movi	r2,-2
   29220:	003ff706 	br	29200 <_mbtowc_r+0x20>

00029224 <memchr>:
   29224:	008000c4 	movi	r2,3
   29228:	29403fcc 	andi	r5,r5,255
   2922c:	1180282e 	bgeu	r2,r6,292d0 <memchr+0xac>
   29230:	2086703a 	and	r3,r4,r2
   29234:	1800351e 	bne	r3,zero,2930c <memchr+0xe8>
   29238:	2816923a 	slli	r11,r5,8
   2923c:	2093883a 	add	r9,r4,r2
   29240:	22000084 	addi	r8,r4,2
   29244:	5957883a 	add	r11,r11,r5
   29248:	5816923a 	slli	r11,r11,8
   2924c:	20c00044 	addi	r3,r4,1
   29250:	037fbff4 	movhi	r13,65279
   29254:	6b7fbfc4 	addi	r13,r13,-257
   29258:	5957883a 	add	r11,r11,r5
   2925c:	5816923a 	slli	r11,r11,8
   29260:	03202074 	movhi	r12,32897
   29264:	63202004 	addi	r12,r12,-32640
   29268:	101d883a 	mov	r14,r2
   2926c:	5957883a 	add	r11,r11,r5
   29270:	21c00017 	ldw	r7,0(r4)
   29274:	31bfff04 	addi	r6,r6,-4
   29278:	1805883a 	mov	r2,r3
   2927c:	3acef03a 	xor	r7,r7,r11
   29280:	3b55883a 	add	r10,r7,r13
   29284:	01ce303a 	nor	r7,zero,r7
   29288:	51ce703a 	and	r7,r10,r7
   2928c:	3b0e703a 	and	r7,r7,r12
   29290:	38000a26 	beq	r7,zero,292bc <memchr+0x98>
   29294:	21c00003 	ldbu	r7,0(r4)
   29298:	39401e26 	beq	r7,r5,29314 <memchr+0xf0>
   2929c:	19c00003 	ldbu	r7,0(r3)
   292a0:	39401926 	beq	r7,r5,29308 <memchr+0xe4>
   292a4:	41c00003 	ldbu	r7,0(r8)
   292a8:	4005883a 	mov	r2,r8
   292ac:	39401626 	beq	r7,r5,29308 <memchr+0xe4>
   292b0:	49c00003 	ldbu	r7,0(r9)
   292b4:	4805883a 	mov	r2,r9
   292b8:	39401326 	beq	r7,r5,29308 <memchr+0xe4>
   292bc:	21000104 	addi	r4,r4,4
   292c0:	4a400104 	addi	r9,r9,4
   292c4:	42000104 	addi	r8,r8,4
   292c8:	18c00104 	addi	r3,r3,4
   292cc:	71bfe836 	bltu	r14,r6,29270 <memchr+0x4c>
   292d0:	2005883a 	mov	r2,r4
   292d4:	30000a26 	beq	r6,zero,29300 <memchr+0xdc>
   292d8:	10c00003 	ldbu	r3,0(r2)
   292dc:	19400a26 	beq	r3,r5,29308 <memchr+0xe4>
   292e0:	10c00044 	addi	r3,r2,1
   292e4:	118d883a 	add	r6,r2,r6
   292e8:	00000306 	br	292f8 <memchr+0xd4>
   292ec:	11000003 	ldbu	r4,0(r2)
   292f0:	18c00044 	addi	r3,r3,1
   292f4:	21400426 	beq	r4,r5,29308 <memchr+0xe4>
   292f8:	1805883a 	mov	r2,r3
   292fc:	19bffb1e 	bne	r3,r6,292ec <memchr+0xc8>
   29300:	0005883a 	mov	r2,zero
   29304:	f800283a 	ret
   29308:	f800283a 	ret
   2930c:	2005883a 	mov	r2,r4
   29310:	003ff106 	br	292d8 <memchr+0xb4>
   29314:	2005883a 	mov	r2,r4
   29318:	f800283a 	ret

0002931c <memmove>:
   2931c:	defffb04 	addi	sp,sp,-20
   29320:	dc000015 	stw	r16,0(sp)
   29324:	dfc00415 	stw	ra,16(sp)
   29328:	dcc00315 	stw	r19,12(sp)
   2932c:	dc800215 	stw	r18,8(sp)
   29330:	dc400115 	stw	r17,4(sp)
   29334:	2021883a 	mov	r16,r4
   29338:	300f883a 	mov	r7,r6
   2933c:	2900122e 	bgeu	r5,r4,29388 <memmove+0x6c>
   29340:	2987883a 	add	r3,r5,r6
   29344:	20c0102e 	bgeu	r4,r3,29388 <memmove+0x6c>
   29348:	218b883a 	add	r5,r4,r6
   2934c:	1989c83a 	sub	r4,r3,r6
   29350:	30000526 	beq	r6,zero,29368 <memmove+0x4c>
   29354:	18ffffc4 	addi	r3,r3,-1
   29358:	18800003 	ldbu	r2,0(r3)
   2935c:	297fffc4 	addi	r5,r5,-1
   29360:	28800005 	stb	r2,0(r5)
   29364:	193ffb1e 	bne	r3,r4,29354 <memmove+0x38>
   29368:	8005883a 	mov	r2,r16
   2936c:	dfc00417 	ldw	ra,16(sp)
   29370:	dcc00317 	ldw	r19,12(sp)
   29374:	dc800217 	ldw	r18,8(sp)
   29378:	dc400117 	ldw	r17,4(sp)
   2937c:	dc000017 	ldw	r16,0(sp)
   29380:	dec00504 	addi	sp,sp,20
   29384:	f800283a 	ret
   29388:	008003c4 	movi	r2,15
   2938c:	1180422e 	bgeu	r2,r6,29498 <memmove+0x17c>
   29390:	2c04b03a 	or	r2,r5,r16
   29394:	108000cc 	andi	r2,r2,3
   29398:	10003f1e 	bne	r2,zero,29498 <memmove+0x17c>
   2939c:	32bffc04 	addi	r10,r6,-16
   293a0:	5014d13a 	srli	r10,r10,4
   293a4:	81000404 	addi	r4,r16,16
   293a8:	8007883a 	mov	r3,r16
   293ac:	5004913a 	slli	r2,r10,4
   293b0:	280f883a 	mov	r7,r5
   293b4:	2089883a 	add	r4,r4,r2
   293b8:	38800017 	ldw	r2,0(r7)
   293bc:	18c00404 	addi	r3,r3,16
   293c0:	39c00404 	addi	r7,r7,16
   293c4:	18bffc15 	stw	r2,-16(r3)
   293c8:	38bffd17 	ldw	r2,-12(r7)
   293cc:	18bffd15 	stw	r2,-12(r3)
   293d0:	38bffe17 	ldw	r2,-8(r7)
   293d4:	18bffe15 	stw	r2,-8(r3)
   293d8:	38bfff17 	ldw	r2,-4(r7)
   293dc:	18bfff15 	stw	r2,-4(r3)
   293e0:	193ff51e 	bne	r3,r4,293b8 <memmove+0x9c>
   293e4:	52800044 	addi	r10,r10,1
   293e8:	5014913a 	slli	r10,r10,4
   293ec:	31c003cc 	andi	r7,r6,15
   293f0:	008000c4 	movi	r2,3
   293f4:	8287883a 	add	r3,r16,r10
   293f8:	2a95883a 	add	r10,r5,r10
   293fc:	11c0282e 	bgeu	r2,r7,294a0 <memmove+0x184>
   29400:	3c7fff04 	addi	r17,r7,-4
   29404:	8808d0ba 	srli	r4,r17,2
   29408:	1a400104 	addi	r9,r3,4
   2940c:	180d883a 	mov	r6,r3
   29410:	2105883a 	add	r2,r4,r4
   29414:	1085883a 	add	r2,r2,r2
   29418:	4893883a 	add	r9,r9,r2
   2941c:	5005883a 	mov	r2,r10
   29420:	12000017 	ldw	r8,0(r2)
   29424:	31800104 	addi	r6,r6,4
   29428:	10800104 	addi	r2,r2,4
   2942c:	323fff15 	stw	r8,-4(r6)
   29430:	327ffb1e 	bne	r6,r9,29420 <memmove+0x104>
   29434:	20800044 	addi	r2,r4,1
   29438:	1085883a 	add	r2,r2,r2
   2943c:	1085883a 	add	r2,r2,r2
   29440:	017fff04 	movi	r5,-4
   29444:	18a5883a 	add	r18,r3,r2
   29448:	50a7883a 	add	r19,r10,r2
   2944c:	00211880 	call	21188 <__mulsi3>
   29450:	144f883a 	add	r7,r2,r17
   29454:	980b883a 	mov	r5,r19
   29458:	9007883a 	mov	r3,r18
   2945c:	383fc226 	beq	r7,zero,29368 <memmove+0x4c>
   29460:	19cf883a 	add	r7,r3,r7
   29464:	29800003 	ldbu	r6,0(r5)
   29468:	18c00044 	addi	r3,r3,1
   2946c:	29400044 	addi	r5,r5,1
   29470:	19bfffc5 	stb	r6,-1(r3)
   29474:	19fffb1e 	bne	r3,r7,29464 <memmove+0x148>
   29478:	8005883a 	mov	r2,r16
   2947c:	dfc00417 	ldw	ra,16(sp)
   29480:	dcc00317 	ldw	r19,12(sp)
   29484:	dc800217 	ldw	r18,8(sp)
   29488:	dc400117 	ldw	r17,4(sp)
   2948c:	dc000017 	ldw	r16,0(sp)
   29490:	dec00504 	addi	sp,sp,20
   29494:	f800283a 	ret
   29498:	8007883a 	mov	r3,r16
   2949c:	003fef06 	br	2945c <memmove+0x140>
   294a0:	500b883a 	mov	r5,r10
   294a4:	003fed06 	br	2945c <memmove+0x140>

000294a8 <_Balloc>:
   294a8:	20801317 	ldw	r2,76(r4)
   294ac:	defffc04 	addi	sp,sp,-16
   294b0:	dc400115 	stw	r17,4(sp)
   294b4:	dc000015 	stw	r16,0(sp)
   294b8:	dfc00315 	stw	ra,12(sp)
   294bc:	dc800215 	stw	r18,8(sp)
   294c0:	2023883a 	mov	r17,r4
   294c4:	2821883a 	mov	r16,r5
   294c8:	10000f26 	beq	r2,zero,29508 <_Balloc+0x60>
   294cc:	8407883a 	add	r3,r16,r16
   294d0:	18c7883a 	add	r3,r3,r3
   294d4:	10c7883a 	add	r3,r2,r3
   294d8:	18800017 	ldw	r2,0(r3)
   294dc:	10001126 	beq	r2,zero,29524 <_Balloc+0x7c>
   294e0:	11000017 	ldw	r4,0(r2)
   294e4:	19000015 	stw	r4,0(r3)
   294e8:	10000415 	stw	zero,16(r2)
   294ec:	10000315 	stw	zero,12(r2)
   294f0:	dfc00317 	ldw	ra,12(sp)
   294f4:	dc800217 	ldw	r18,8(sp)
   294f8:	dc400117 	ldw	r17,4(sp)
   294fc:	dc000017 	ldw	r16,0(sp)
   29500:	dec00404 	addi	sp,sp,16
   29504:	f800283a 	ret
   29508:	01400104 	movi	r5,4
   2950c:	01800404 	movi	r6,16
   29510:	002d34c0 	call	2d34c <_calloc_r>
   29514:	88801315 	stw	r2,76(r17)
   29518:	103fec1e 	bne	r2,zero,294cc <_Balloc+0x24>
   2951c:	0005883a 	mov	r2,zero
   29520:	003ff306 	br	294f0 <_Balloc+0x48>
   29524:	01400044 	movi	r5,1
   29528:	2c24983a 	sll	r18,r5,r16
   2952c:	8809883a 	mov	r4,r17
   29530:	91800144 	addi	r6,r18,5
   29534:	318d883a 	add	r6,r6,r6
   29538:	318d883a 	add	r6,r6,r6
   2953c:	002d34c0 	call	2d34c <_calloc_r>
   29540:	103ff626 	beq	r2,zero,2951c <_Balloc+0x74>
   29544:	14000115 	stw	r16,4(r2)
   29548:	14800215 	stw	r18,8(r2)
   2954c:	003fe606 	br	294e8 <_Balloc+0x40>

00029550 <_Bfree>:
   29550:	28000826 	beq	r5,zero,29574 <_Bfree+0x24>
   29554:	28c00117 	ldw	r3,4(r5)
   29558:	20801317 	ldw	r2,76(r4)
   2955c:	18c7883a 	add	r3,r3,r3
   29560:	18c7883a 	add	r3,r3,r3
   29564:	10c5883a 	add	r2,r2,r3
   29568:	10c00017 	ldw	r3,0(r2)
   2956c:	28c00015 	stw	r3,0(r5)
   29570:	11400015 	stw	r5,0(r2)
   29574:	f800283a 	ret

00029578 <__multadd>:
   29578:	defff604 	addi	sp,sp,-40
   2957c:	dd400515 	stw	r21,20(sp)
   29580:	2d400417 	ldw	r21,16(r5)
   29584:	df000815 	stw	fp,32(sp)
   29588:	ddc00715 	stw	r23,28(sp)
   2958c:	dd800615 	stw	r22,24(sp)
   29590:	dd000415 	stw	r20,16(sp)
   29594:	dc400115 	stw	r17,4(sp)
   29598:	dc000015 	stw	r16,0(sp)
   2959c:	dfc00915 	stw	ra,36(sp)
   295a0:	dcc00315 	stw	r19,12(sp)
   295a4:	dc800215 	stw	r18,8(sp)
   295a8:	282d883a 	mov	r22,r5
   295ac:	202f883a 	mov	r23,r4
   295b0:	3029883a 	mov	r20,r6
   295b4:	3839883a 	mov	fp,r7
   295b8:	2c000504 	addi	r16,r5,20
   295bc:	0023883a 	mov	r17,zero
   295c0:	84c00017 	ldw	r19,0(r16)
   295c4:	a00b883a 	mov	r5,r20
   295c8:	8c400044 	addi	r17,r17,1
   295cc:	993fffcc 	andi	r4,r19,65535
   295d0:	00211880 	call	21188 <__mulsi3>
   295d4:	1725883a 	add	r18,r2,fp
   295d8:	9808d43a 	srli	r4,r19,16
   295dc:	9026d43a 	srli	r19,r18,16
   295e0:	a00b883a 	mov	r5,r20
   295e4:	00211880 	call	21188 <__mulsi3>
   295e8:	988f883a 	add	r7,r19,r2
   295ec:	3804943a 	slli	r2,r7,16
   295f0:	94bfffcc 	andi	r18,r18,65535
   295f4:	3838d43a 	srli	fp,r7,16
   295f8:	14a5883a 	add	r18,r2,r18
   295fc:	84800015 	stw	r18,0(r16)
   29600:	84000104 	addi	r16,r16,4
   29604:	8d7fee16 	blt	r17,r21,295c0 <__multadd+0x48>
   29608:	e0000926 	beq	fp,zero,29630 <__multadd+0xb8>
   2960c:	b0800217 	ldw	r2,8(r22)
   29610:	a880140e 	bge	r21,r2,29664 <__multadd+0xec>
   29614:	a8800144 	addi	r2,r21,5
   29618:	1085883a 	add	r2,r2,r2
   2961c:	1085883a 	add	r2,r2,r2
   29620:	b085883a 	add	r2,r22,r2
   29624:	ad400044 	addi	r21,r21,1
   29628:	17000015 	stw	fp,0(r2)
   2962c:	b5400415 	stw	r21,16(r22)
   29630:	b005883a 	mov	r2,r22
   29634:	dfc00917 	ldw	ra,36(sp)
   29638:	df000817 	ldw	fp,32(sp)
   2963c:	ddc00717 	ldw	r23,28(sp)
   29640:	dd800617 	ldw	r22,24(sp)
   29644:	dd400517 	ldw	r21,20(sp)
   29648:	dd000417 	ldw	r20,16(sp)
   2964c:	dcc00317 	ldw	r19,12(sp)
   29650:	dc800217 	ldw	r18,8(sp)
   29654:	dc400117 	ldw	r17,4(sp)
   29658:	dc000017 	ldw	r16,0(sp)
   2965c:	dec00a04 	addi	sp,sp,40
   29660:	f800283a 	ret
   29664:	b1400117 	ldw	r5,4(r22)
   29668:	b809883a 	mov	r4,r23
   2966c:	29400044 	addi	r5,r5,1
   29670:	00294a80 	call	294a8 <_Balloc>
   29674:	b1800417 	ldw	r6,16(r22)
   29678:	b1400304 	addi	r5,r22,12
   2967c:	11000304 	addi	r4,r2,12
   29680:	31800084 	addi	r6,r6,2
   29684:	318d883a 	add	r6,r6,r6
   29688:	318d883a 	add	r6,r6,r6
   2968c:	1021883a 	mov	r16,r2
   29690:	00231240 	call	23124 <memcpy>
   29694:	b0c00117 	ldw	r3,4(r22)
   29698:	b8801317 	ldw	r2,76(r23)
   2969c:	18c7883a 	add	r3,r3,r3
   296a0:	18c7883a 	add	r3,r3,r3
   296a4:	10c5883a 	add	r2,r2,r3
   296a8:	10c00017 	ldw	r3,0(r2)
   296ac:	b0c00015 	stw	r3,0(r22)
   296b0:	15800015 	stw	r22,0(r2)
   296b4:	802d883a 	mov	r22,r16
   296b8:	003fd606 	br	29614 <__multadd+0x9c>

000296bc <__s2b>:
   296bc:	defff904 	addi	sp,sp,-28
   296c0:	dd000415 	stw	r20,16(sp)
   296c4:	dc400115 	stw	r17,4(sp)
   296c8:	2829883a 	mov	r20,r5
   296cc:	2023883a 	mov	r17,r4
   296d0:	01400244 	movi	r5,9
   296d4:	39000204 	addi	r4,r7,8
   296d8:	dcc00315 	stw	r19,12(sp)
   296dc:	dc800215 	stw	r18,8(sp)
   296e0:	dfc00615 	stw	ra,24(sp)
   296e4:	dd400515 	stw	r21,20(sp)
   296e8:	dc000015 	stw	r16,0(sp)
   296ec:	3825883a 	mov	r18,r7
   296f0:	3027883a 	mov	r19,r6
   296f4:	002fd3c0 	call	2fd3c <__divsi3>
   296f8:	00c00044 	movi	r3,1
   296fc:	000b883a 	mov	r5,zero
   29700:	1880030e 	bge	r3,r2,29710 <__s2b+0x54>
   29704:	18c7883a 	add	r3,r3,r3
   29708:	29400044 	addi	r5,r5,1
   2970c:	18bffd16 	blt	r3,r2,29704 <__s2b+0x48>
   29710:	8809883a 	mov	r4,r17
   29714:	00294a80 	call	294a8 <_Balloc>
   29718:	d8c00717 	ldw	r3,28(sp)
   2971c:	10c00515 	stw	r3,20(r2)
   29720:	00c00044 	movi	r3,1
   29724:	10c00415 	stw	r3,16(r2)
   29728:	00c00244 	movi	r3,9
   2972c:	1cc0210e 	bge	r3,r19,297b4 <__s2b+0xf8>
   29730:	a0eb883a 	add	r21,r20,r3
   29734:	a821883a 	mov	r16,r21
   29738:	a4e9883a 	add	r20,r20,r19
   2973c:	81c00007 	ldb	r7,0(r16)
   29740:	8809883a 	mov	r4,r17
   29744:	84000044 	addi	r16,r16,1
   29748:	100b883a 	mov	r5,r2
   2974c:	01800284 	movi	r6,10
   29750:	39fff404 	addi	r7,r7,-48
   29754:	00295780 	call	29578 <__multadd>
   29758:	853ff81e 	bne	r16,r20,2973c <__s2b+0x80>
   2975c:	ace1883a 	add	r16,r21,r19
   29760:	843ffe04 	addi	r16,r16,-8
   29764:	9c800a0e 	bge	r19,r18,29790 <__s2b+0xd4>
   29768:	94e5c83a 	sub	r18,r18,r19
   2976c:	84a5883a 	add	r18,r16,r18
   29770:	81c00007 	ldb	r7,0(r16)
   29774:	8809883a 	mov	r4,r17
   29778:	84000044 	addi	r16,r16,1
   2977c:	100b883a 	mov	r5,r2
   29780:	01800284 	movi	r6,10
   29784:	39fff404 	addi	r7,r7,-48
   29788:	00295780 	call	29578 <__multadd>
   2978c:	84bff81e 	bne	r16,r18,29770 <__s2b+0xb4>
   29790:	dfc00617 	ldw	ra,24(sp)
   29794:	dd400517 	ldw	r21,20(sp)
   29798:	dd000417 	ldw	r20,16(sp)
   2979c:	dcc00317 	ldw	r19,12(sp)
   297a0:	dc800217 	ldw	r18,8(sp)
   297a4:	dc400117 	ldw	r17,4(sp)
   297a8:	dc000017 	ldw	r16,0(sp)
   297ac:	dec00704 	addi	sp,sp,28
   297b0:	f800283a 	ret
   297b4:	a4000284 	addi	r16,r20,10
   297b8:	1827883a 	mov	r19,r3
   297bc:	003fe906 	br	29764 <__s2b+0xa8>

000297c0 <__hi0bits>:
   297c0:	20bfffec 	andhi	r2,r4,65535
   297c4:	1000141e 	bne	r2,zero,29818 <__hi0bits+0x58>
   297c8:	2008943a 	slli	r4,r4,16
   297cc:	00800404 	movi	r2,16
   297d0:	20ffc02c 	andhi	r3,r4,65280
   297d4:	1800021e 	bne	r3,zero,297e0 <__hi0bits+0x20>
   297d8:	2008923a 	slli	r4,r4,8
   297dc:	10800204 	addi	r2,r2,8
   297e0:	20fc002c 	andhi	r3,r4,61440
   297e4:	1800021e 	bne	r3,zero,297f0 <__hi0bits+0x30>
   297e8:	2008913a 	slli	r4,r4,4
   297ec:	10800104 	addi	r2,r2,4
   297f0:	20f0002c 	andhi	r3,r4,49152
   297f4:	1800031e 	bne	r3,zero,29804 <__hi0bits+0x44>
   297f8:	2109883a 	add	r4,r4,r4
   297fc:	10800084 	addi	r2,r2,2
   29800:	2109883a 	add	r4,r4,r4
   29804:	20000316 	blt	r4,zero,29814 <__hi0bits+0x54>
   29808:	2110002c 	andhi	r4,r4,16384
   2980c:	2000041e 	bne	r4,zero,29820 <__hi0bits+0x60>
   29810:	00800804 	movi	r2,32
   29814:	f800283a 	ret
   29818:	0005883a 	mov	r2,zero
   2981c:	003fec06 	br	297d0 <__hi0bits+0x10>
   29820:	10800044 	addi	r2,r2,1
   29824:	f800283a 	ret

00029828 <__lo0bits>:
   29828:	20c00017 	ldw	r3,0(r4)
   2982c:	188001cc 	andi	r2,r3,7
   29830:	10000826 	beq	r2,zero,29854 <__lo0bits+0x2c>
   29834:	1880004c 	andi	r2,r3,1
   29838:	1000211e 	bne	r2,zero,298c0 <__lo0bits+0x98>
   2983c:	1880008c 	andi	r2,r3,2
   29840:	1000211e 	bne	r2,zero,298c8 <__lo0bits+0xa0>
   29844:	1806d0ba 	srli	r3,r3,2
   29848:	00800084 	movi	r2,2
   2984c:	20c00015 	stw	r3,0(r4)
   29850:	f800283a 	ret
   29854:	18bfffcc 	andi	r2,r3,65535
   29858:	10001326 	beq	r2,zero,298a8 <__lo0bits+0x80>
   2985c:	0005883a 	mov	r2,zero
   29860:	19403fcc 	andi	r5,r3,255
   29864:	2800021e 	bne	r5,zero,29870 <__lo0bits+0x48>
   29868:	1806d23a 	srli	r3,r3,8
   2986c:	10800204 	addi	r2,r2,8
   29870:	194003cc 	andi	r5,r3,15
   29874:	2800021e 	bne	r5,zero,29880 <__lo0bits+0x58>
   29878:	1806d13a 	srli	r3,r3,4
   2987c:	10800104 	addi	r2,r2,4
   29880:	194000cc 	andi	r5,r3,3
   29884:	2800021e 	bne	r5,zero,29890 <__lo0bits+0x68>
   29888:	1806d0ba 	srli	r3,r3,2
   2988c:	10800084 	addi	r2,r2,2
   29890:	1940004c 	andi	r5,r3,1
   29894:	2800081e 	bne	r5,zero,298b8 <__lo0bits+0x90>
   29898:	1806d07a 	srli	r3,r3,1
   2989c:	1800051e 	bne	r3,zero,298b4 <__lo0bits+0x8c>
   298a0:	00800804 	movi	r2,32
   298a4:	f800283a 	ret
   298a8:	1806d43a 	srli	r3,r3,16
   298ac:	00800404 	movi	r2,16
   298b0:	003feb06 	br	29860 <__lo0bits+0x38>
   298b4:	10800044 	addi	r2,r2,1
   298b8:	20c00015 	stw	r3,0(r4)
   298bc:	f800283a 	ret
   298c0:	0005883a 	mov	r2,zero
   298c4:	f800283a 	ret
   298c8:	1806d07a 	srli	r3,r3,1
   298cc:	00800044 	movi	r2,1
   298d0:	20c00015 	stw	r3,0(r4)
   298d4:	f800283a 	ret

000298d8 <__i2b>:
   298d8:	defffd04 	addi	sp,sp,-12
   298dc:	dc000015 	stw	r16,0(sp)
   298e0:	04000044 	movi	r16,1
   298e4:	dc400115 	stw	r17,4(sp)
   298e8:	2823883a 	mov	r17,r5
   298ec:	800b883a 	mov	r5,r16
   298f0:	dfc00215 	stw	ra,8(sp)
   298f4:	00294a80 	call	294a8 <_Balloc>
   298f8:	14400515 	stw	r17,20(r2)
   298fc:	14000415 	stw	r16,16(r2)
   29900:	dfc00217 	ldw	ra,8(sp)
   29904:	dc400117 	ldw	r17,4(sp)
   29908:	dc000017 	ldw	r16,0(sp)
   2990c:	dec00304 	addi	sp,sp,12
   29910:	f800283a 	ret

00029914 <__multiply>:
   29914:	defff004 	addi	sp,sp,-64
   29918:	dc800815 	stw	r18,32(sp)
   2991c:	dc400715 	stw	r17,28(sp)
   29920:	34800417 	ldw	r18,16(r6)
   29924:	2c400417 	ldw	r17,16(r5)
   29928:	ddc00d15 	stw	r23,52(sp)
   2992c:	dc000615 	stw	r16,24(sp)
   29930:	dfc00f15 	stw	ra,60(sp)
   29934:	df000e15 	stw	fp,56(sp)
   29938:	dd800c15 	stw	r22,48(sp)
   2993c:	dd400b15 	stw	r21,44(sp)
   29940:	dd000a15 	stw	r20,40(sp)
   29944:	dcc00915 	stw	r19,36(sp)
   29948:	2821883a 	mov	r16,r5
   2994c:	302f883a 	mov	r23,r6
   29950:	8c80050e 	bge	r17,r18,29968 <__multiply+0x54>
   29954:	8807883a 	mov	r3,r17
   29958:	3021883a 	mov	r16,r6
   2995c:	9023883a 	mov	r17,r18
   29960:	282f883a 	mov	r23,r5
   29964:	1825883a 	mov	r18,r3
   29968:	80800217 	ldw	r2,8(r16)
   2996c:	8c87883a 	add	r3,r17,r18
   29970:	d8c00115 	stw	r3,4(sp)
   29974:	81400117 	ldw	r5,4(r16)
   29978:	10c0010e 	bge	r2,r3,29980 <__multiply+0x6c>
   2997c:	29400044 	addi	r5,r5,1
   29980:	00294a80 	call	294a8 <_Balloc>
   29984:	d8c00117 	ldw	r3,4(sp)
   29988:	d8800515 	stw	r2,20(sp)
   2998c:	14c00504 	addi	r19,r2,20
   29990:	1d400144 	addi	r21,r3,5
   29994:	ad6b883a 	add	r21,r21,r21
   29998:	ad6b883a 	add	r21,r21,r21
   2999c:	156b883a 	add	r21,r2,r21
   299a0:	dd400215 	stw	r21,8(sp)
   299a4:	9805883a 	mov	r2,r19
   299a8:	9d40042e 	bgeu	r19,r21,299bc <__multiply+0xa8>
   299ac:	d8c00217 	ldw	r3,8(sp)
   299b0:	10000015 	stw	zero,0(r2)
   299b4:	10800104 	addi	r2,r2,4
   299b8:	10fffc36 	bltu	r2,r3,299ac <__multiply+0x98>
   299bc:	94800144 	addi	r18,r18,5
   299c0:	94a5883a 	add	r18,r18,r18
   299c4:	94ad883a 	add	r22,r18,r18
   299c8:	8c400144 	addi	r17,r17,5
   299cc:	8c63883a 	add	r17,r17,r17
   299d0:	bdad883a 	add	r22,r23,r22
   299d4:	80c00504 	addi	r3,r16,20
   299d8:	8c63883a 	add	r17,r17,r17
   299dc:	bc800504 	addi	r18,r23,20
   299e0:	dd800315 	stw	r22,12(sp)
   299e4:	d8c00415 	stw	r3,16(sp)
   299e8:	dcc00015 	stw	r19,0(sp)
   299ec:	8463883a 	add	r17,r16,r17
   299f0:	9580412e 	bgeu	r18,r22,29af8 <__multiply+0x1e4>
   299f4:	90800017 	ldw	r2,0(r18)
   299f8:	173fffcc 	andi	fp,r2,65535
   299fc:	e0001a26 	beq	fp,zero,29a68 <__multiply+0x154>
   29a00:	dd000017 	ldw	r20,0(sp)
   29a04:	dd800417 	ldw	r22,16(sp)
   29a08:	002b883a 	mov	r21,zero
   29a0c:	b4c00017 	ldw	r19,0(r22)
   29a10:	a4000017 	ldw	r16,0(r20)
   29a14:	e00b883a 	mov	r5,fp
   29a18:	993fffcc 	andi	r4,r19,65535
   29a1c:	00211880 	call	21188 <__mulsi3>
   29a20:	9808d43a 	srli	r4,r19,16
   29a24:	817fffcc 	andi	r5,r16,65535
   29a28:	1145883a 	add	r2,r2,r5
   29a2c:	e00b883a 	mov	r5,fp
   29a30:	1567883a 	add	r19,r2,r21
   29a34:	8020d43a 	srli	r16,r16,16
   29a38:	00211880 	call	21188 <__mulsi3>
   29a3c:	9808d43a 	srli	r4,r19,16
   29a40:	1405883a 	add	r2,r2,r16
   29a44:	a4c0000d 	sth	r19,0(r20)
   29a48:	110f883a 	add	r7,r2,r4
   29a4c:	a1c0008d 	sth	r7,2(r20)
   29a50:	b5800104 	addi	r22,r22,4
   29a54:	382ad43a 	srli	r21,r7,16
   29a58:	a5000104 	addi	r20,r20,4
   29a5c:	b47feb36 	bltu	r22,r17,29a0c <__multiply+0xf8>
   29a60:	a5400015 	stw	r21,0(r20)
   29a64:	90800017 	ldw	r2,0(r18)
   29a68:	1038d43a 	srli	fp,r2,16
   29a6c:	e0001c26 	beq	fp,zero,29ae0 <__multiply+0x1cc>
   29a70:	d8c00017 	ldw	r3,0(sp)
   29a74:	dd000417 	ldw	r20,16(sp)
   29a78:	002b883a 	mov	r21,zero
   29a7c:	1d800017 	ldw	r22,0(r3)
   29a80:	182f883a 	mov	r23,r3
   29a84:	b021883a 	mov	r16,r22
   29a88:	a4c00017 	ldw	r19,0(r20)
   29a8c:	8020d43a 	srli	r16,r16,16
   29a90:	e00b883a 	mov	r5,fp
   29a94:	993fffcc 	andi	r4,r19,65535
   29a98:	00211880 	call	21188 <__mulsi3>
   29a9c:	1405883a 	add	r2,r2,r16
   29aa0:	9808d43a 	srli	r4,r19,16
   29aa4:	156b883a 	add	r21,r2,r21
   29aa8:	bdc00104 	addi	r23,r23,4
   29aac:	bdbfff0d 	sth	r22,-4(r23)
   29ab0:	bd7fff8d 	sth	r21,-2(r23)
   29ab4:	bc000017 	ldw	r16,0(r23)
   29ab8:	e00b883a 	mov	r5,fp
   29abc:	00211880 	call	21188 <__mulsi3>
   29ac0:	a80ed43a 	srli	r7,r21,16
   29ac4:	813fffcc 	andi	r4,r16,65535
   29ac8:	2085883a 	add	r2,r4,r2
   29acc:	11ed883a 	add	r22,r2,r7
   29ad0:	a5000104 	addi	r20,r20,4
   29ad4:	b02ad43a 	srli	r21,r22,16
   29ad8:	a47feb36 	bltu	r20,r17,29a88 <__multiply+0x174>
   29adc:	bd800015 	stw	r22,0(r23)
   29ae0:	d8c00017 	ldw	r3,0(sp)
   29ae4:	94800104 	addi	r18,r18,4
   29ae8:	18c00104 	addi	r3,r3,4
   29aec:	d8c00015 	stw	r3,0(sp)
   29af0:	d8c00317 	ldw	r3,12(sp)
   29af4:	90ffbf36 	bltu	r18,r3,299f4 <__multiply+0xe0>
   29af8:	d8c00117 	ldw	r3,4(sp)
   29afc:	00c00c0e 	bge	zero,r3,29b30 <__multiply+0x21c>
   29b00:	d8c00217 	ldw	r3,8(sp)
   29b04:	18bfff17 	ldw	r2,-4(r3)
   29b08:	1d7fff04 	addi	r21,r3,-4
   29b0c:	10000326 	beq	r2,zero,29b1c <__multiply+0x208>
   29b10:	00000706 	br	29b30 <__multiply+0x21c>
   29b14:	a8800017 	ldw	r2,0(r21)
   29b18:	1000051e 	bne	r2,zero,29b30 <__multiply+0x21c>
   29b1c:	d8c00117 	ldw	r3,4(sp)
   29b20:	ad7fff04 	addi	r21,r21,-4
   29b24:	18ffffc4 	addi	r3,r3,-1
   29b28:	d8c00115 	stw	r3,4(sp)
   29b2c:	183ff91e 	bne	r3,zero,29b14 <__multiply+0x200>
   29b30:	d8800517 	ldw	r2,20(sp)
   29b34:	d8c00117 	ldw	r3,4(sp)
   29b38:	10c00415 	stw	r3,16(r2)
   29b3c:	dfc00f17 	ldw	ra,60(sp)
   29b40:	df000e17 	ldw	fp,56(sp)
   29b44:	ddc00d17 	ldw	r23,52(sp)
   29b48:	dd800c17 	ldw	r22,48(sp)
   29b4c:	dd400b17 	ldw	r21,44(sp)
   29b50:	dd000a17 	ldw	r20,40(sp)
   29b54:	dcc00917 	ldw	r19,36(sp)
   29b58:	dc800817 	ldw	r18,32(sp)
   29b5c:	dc400717 	ldw	r17,28(sp)
   29b60:	dc000617 	ldw	r16,24(sp)
   29b64:	dec01004 	addi	sp,sp,64
   29b68:	f800283a 	ret

00029b6c <__pow5mult>:
   29b6c:	defffb04 	addi	sp,sp,-20
   29b70:	dcc00315 	stw	r19,12(sp)
   29b74:	dc800215 	stw	r18,8(sp)
   29b78:	dc000015 	stw	r16,0(sp)
   29b7c:	dfc00415 	stw	ra,16(sp)
   29b80:	dc400115 	stw	r17,4(sp)
   29b84:	308000cc 	andi	r2,r6,3
   29b88:	3021883a 	mov	r16,r6
   29b8c:	2027883a 	mov	r19,r4
   29b90:	2825883a 	mov	r18,r5
   29b94:	10002e1e 	bne	r2,zero,29c50 <__pow5mult+0xe4>
   29b98:	8021d0ba 	srai	r16,r16,2
   29b9c:	80001a26 	beq	r16,zero,29c08 <__pow5mult+0x9c>
   29ba0:	9c401217 	ldw	r17,72(r19)
   29ba4:	8800061e 	bne	r17,zero,29bc0 <__pow5mult+0x54>
   29ba8:	00003406 	br	29c7c <__pow5mult+0x110>
   29bac:	8021d07a 	srai	r16,r16,1
   29bb0:	80001526 	beq	r16,zero,29c08 <__pow5mult+0x9c>
   29bb4:	88c00017 	ldw	r3,0(r17)
   29bb8:	18001b26 	beq	r3,zero,29c28 <__pow5mult+0xbc>
   29bbc:	1823883a 	mov	r17,r3
   29bc0:	80c0004c 	andi	r3,r16,1
   29bc4:	183ff926 	beq	r3,zero,29bac <__pow5mult+0x40>
   29bc8:	900b883a 	mov	r5,r18
   29bcc:	880d883a 	mov	r6,r17
   29bd0:	9809883a 	mov	r4,r19
   29bd4:	00299140 	call	29914 <__multiply>
   29bd8:	90001b26 	beq	r18,zero,29c48 <__pow5mult+0xdc>
   29bdc:	91000117 	ldw	r4,4(r18)
   29be0:	98c01317 	ldw	r3,76(r19)
   29be4:	8021d07a 	srai	r16,r16,1
   29be8:	2109883a 	add	r4,r4,r4
   29bec:	2109883a 	add	r4,r4,r4
   29bf0:	1907883a 	add	r3,r3,r4
   29bf4:	19000017 	ldw	r4,0(r3)
   29bf8:	91000015 	stw	r4,0(r18)
   29bfc:	1c800015 	stw	r18,0(r3)
   29c00:	1025883a 	mov	r18,r2
   29c04:	803feb1e 	bne	r16,zero,29bb4 <__pow5mult+0x48>
   29c08:	9005883a 	mov	r2,r18
   29c0c:	dfc00417 	ldw	ra,16(sp)
   29c10:	dcc00317 	ldw	r19,12(sp)
   29c14:	dc800217 	ldw	r18,8(sp)
   29c18:	dc400117 	ldw	r17,4(sp)
   29c1c:	dc000017 	ldw	r16,0(sp)
   29c20:	dec00504 	addi	sp,sp,20
   29c24:	f800283a 	ret
   29c28:	880b883a 	mov	r5,r17
   29c2c:	880d883a 	mov	r6,r17
   29c30:	9809883a 	mov	r4,r19
   29c34:	00299140 	call	29914 <__multiply>
   29c38:	88800015 	stw	r2,0(r17)
   29c3c:	10000015 	stw	zero,0(r2)
   29c40:	1023883a 	mov	r17,r2
   29c44:	003fde06 	br	29bc0 <__pow5mult+0x54>
   29c48:	1025883a 	mov	r18,r2
   29c4c:	003fd706 	br	29bac <__pow5mult+0x40>
   29c50:	10bfffc4 	addi	r2,r2,-1
   29c54:	1085883a 	add	r2,r2,r2
   29c58:	00c000f4 	movhi	r3,3
   29c5c:	18cfb004 	addi	r3,r3,16064
   29c60:	1085883a 	add	r2,r2,r2
   29c64:	1885883a 	add	r2,r3,r2
   29c68:	11800017 	ldw	r6,0(r2)
   29c6c:	000f883a 	mov	r7,zero
   29c70:	00295780 	call	29578 <__multadd>
   29c74:	1025883a 	mov	r18,r2
   29c78:	003fc706 	br	29b98 <__pow5mult+0x2c>
   29c7c:	9809883a 	mov	r4,r19
   29c80:	01409c44 	movi	r5,625
   29c84:	00298d80 	call	298d8 <__i2b>
   29c88:	98801215 	stw	r2,72(r19)
   29c8c:	1023883a 	mov	r17,r2
   29c90:	10000015 	stw	zero,0(r2)
   29c94:	003fca06 	br	29bc0 <__pow5mult+0x54>

00029c98 <__lshift>:
   29c98:	defff904 	addi	sp,sp,-28
   29c9c:	dd400515 	stw	r21,20(sp)
   29ca0:	dc400115 	stw	r17,4(sp)
   29ca4:	2d400417 	ldw	r21,16(r5)
   29ca8:	3023d17a 	srai	r17,r6,5
   29cac:	28800217 	ldw	r2,8(r5)
   29cb0:	dd000415 	stw	r20,16(sp)
   29cb4:	8d6b883a 	add	r21,r17,r21
   29cb8:	dcc00315 	stw	r19,12(sp)
   29cbc:	dc800215 	stw	r18,8(sp)
   29cc0:	dc000015 	stw	r16,0(sp)
   29cc4:	dfc00615 	stw	ra,24(sp)
   29cc8:	ac000044 	addi	r16,r21,1
   29ccc:	2825883a 	mov	r18,r5
   29cd0:	3029883a 	mov	r20,r6
   29cd4:	2027883a 	mov	r19,r4
   29cd8:	29400117 	ldw	r5,4(r5)
   29cdc:	1400030e 	bge	r2,r16,29cec <__lshift+0x54>
   29ce0:	1085883a 	add	r2,r2,r2
   29ce4:	29400044 	addi	r5,r5,1
   29ce8:	143ffd16 	blt	r2,r16,29ce0 <__lshift+0x48>
   29cec:	9809883a 	mov	r4,r19
   29cf0:	00294a80 	call	294a8 <_Balloc>
   29cf4:	10c00504 	addi	r3,r2,20
   29cf8:	0440090e 	bge	zero,r17,29d20 <__lshift+0x88>
   29cfc:	000f883a 	mov	r7,zero
   29d00:	18000015 	stw	zero,0(r3)
   29d04:	39c00044 	addi	r7,r7,1
   29d08:	18c00104 	addi	r3,r3,4
   29d0c:	3c7ffc1e 	bne	r7,r17,29d00 <__lshift+0x68>
   29d10:	38c00144 	addi	r3,r7,5
   29d14:	18c7883a 	add	r3,r3,r3
   29d18:	18c7883a 	add	r3,r3,r3
   29d1c:	10c7883a 	add	r3,r2,r3
   29d20:	92000417 	ldw	r8,16(r18)
   29d24:	a18007cc 	andi	r6,r20,31
   29d28:	91c00504 	addi	r7,r18,20
   29d2c:	42000144 	addi	r8,r8,5
   29d30:	4211883a 	add	r8,r8,r8
   29d34:	4211883a 	add	r8,r8,r8
   29d38:	9211883a 	add	r8,r18,r8
   29d3c:	30002226 	beq	r6,zero,29dc8 <__lshift+0x130>
   29d40:	02800804 	movi	r10,32
   29d44:	5195c83a 	sub	r10,r10,r6
   29d48:	000b883a 	mov	r5,zero
   29d4c:	3a400017 	ldw	r9,0(r7)
   29d50:	18c00104 	addi	r3,r3,4
   29d54:	39c00104 	addi	r7,r7,4
   29d58:	4992983a 	sll	r9,r9,r6
   29d5c:	2a4ab03a 	or	r5,r5,r9
   29d60:	197fff15 	stw	r5,-4(r3)
   29d64:	397fff17 	ldw	r5,-4(r7)
   29d68:	2a8ad83a 	srl	r5,r5,r10
   29d6c:	3a3ff736 	bltu	r7,r8,29d4c <__lshift+0xb4>
   29d70:	19400015 	stw	r5,0(r3)
   29d74:	28000126 	beq	r5,zero,29d7c <__lshift+0xe4>
   29d78:	ac000084 	addi	r16,r21,2
   29d7c:	91000117 	ldw	r4,4(r18)
   29d80:	98c01317 	ldw	r3,76(r19)
   29d84:	843fffc4 	addi	r16,r16,-1
   29d88:	2109883a 	add	r4,r4,r4
   29d8c:	2109883a 	add	r4,r4,r4
   29d90:	1907883a 	add	r3,r3,r4
   29d94:	19000017 	ldw	r4,0(r3)
   29d98:	14000415 	stw	r16,16(r2)
   29d9c:	91000015 	stw	r4,0(r18)
   29da0:	1c800015 	stw	r18,0(r3)
   29da4:	dfc00617 	ldw	ra,24(sp)
   29da8:	dd400517 	ldw	r21,20(sp)
   29dac:	dd000417 	ldw	r20,16(sp)
   29db0:	dcc00317 	ldw	r19,12(sp)
   29db4:	dc800217 	ldw	r18,8(sp)
   29db8:	dc400117 	ldw	r17,4(sp)
   29dbc:	dc000017 	ldw	r16,0(sp)
   29dc0:	dec00704 	addi	sp,sp,28
   29dc4:	f800283a 	ret
   29dc8:	39400017 	ldw	r5,0(r7)
   29dcc:	18c00104 	addi	r3,r3,4
   29dd0:	39c00104 	addi	r7,r7,4
   29dd4:	197fff15 	stw	r5,-4(r3)
   29dd8:	3a3fe82e 	bgeu	r7,r8,29d7c <__lshift+0xe4>
   29ddc:	39400017 	ldw	r5,0(r7)
   29de0:	18c00104 	addi	r3,r3,4
   29de4:	39c00104 	addi	r7,r7,4
   29de8:	197fff15 	stw	r5,-4(r3)
   29dec:	3a3ff636 	bltu	r7,r8,29dc8 <__lshift+0x130>
   29df0:	003fe206 	br	29d7c <__lshift+0xe4>

00029df4 <__mcmp>:
   29df4:	20800417 	ldw	r2,16(r4)
   29df8:	28c00417 	ldw	r3,16(r5)
   29dfc:	10c5c83a 	sub	r2,r2,r3
   29e00:	10000f1e 	bne	r2,zero,29e40 <__mcmp+0x4c>
   29e04:	18c00144 	addi	r3,r3,5
   29e08:	18c7883a 	add	r3,r3,r3
   29e0c:	18c7883a 	add	r3,r3,r3
   29e10:	21c00504 	addi	r7,r4,20
   29e14:	28cb883a 	add	r5,r5,r3
   29e18:	20c9883a 	add	r4,r4,r3
   29e1c:	213fff04 	addi	r4,r4,-4
   29e20:	297fff04 	addi	r5,r5,-4
   29e24:	21800017 	ldw	r6,0(r4)
   29e28:	28c00017 	ldw	r3,0(r5)
   29e2c:	30c0021e 	bne	r6,r3,29e38 <__mcmp+0x44>
   29e30:	393ffa36 	bltu	r7,r4,29e1c <__mcmp+0x28>
   29e34:	f800283a 	ret
   29e38:	30c00236 	bltu	r6,r3,29e44 <__mcmp+0x50>
   29e3c:	00800044 	movi	r2,1
   29e40:	f800283a 	ret
   29e44:	00bfffc4 	movi	r2,-1
   29e48:	f800283a 	ret

00029e4c <__mdiff>:
   29e4c:	defffb04 	addi	sp,sp,-20
   29e50:	dc000015 	stw	r16,0(sp)
   29e54:	2821883a 	mov	r16,r5
   29e58:	dc800215 	stw	r18,8(sp)
   29e5c:	300b883a 	mov	r5,r6
   29e60:	2025883a 	mov	r18,r4
   29e64:	8009883a 	mov	r4,r16
   29e68:	dc400115 	stw	r17,4(sp)
   29e6c:	dfc00415 	stw	ra,16(sp)
   29e70:	dcc00315 	stw	r19,12(sp)
   29e74:	3023883a 	mov	r17,r6
   29e78:	0029df40 	call	29df4 <__mcmp>
   29e7c:	10005026 	beq	r2,zero,29fc0 <__mdiff+0x174>
   29e80:	10004a16 	blt	r2,zero,29fac <__mdiff+0x160>
   29e84:	0027883a 	mov	r19,zero
   29e88:	81400117 	ldw	r5,4(r16)
   29e8c:	9009883a 	mov	r4,r18
   29e90:	00294a80 	call	294a8 <_Balloc>
   29e94:	82400417 	ldw	r9,16(r16)
   29e98:	89800417 	ldw	r6,16(r17)
   29e9c:	14c00315 	stw	r19,12(r2)
   29ea0:	4b800144 	addi	r14,r9,5
   29ea4:	31800144 	addi	r6,r6,5
   29ea8:	739d883a 	add	r14,r14,r14
   29eac:	318d883a 	add	r6,r6,r6
   29eb0:	739d883a 	add	r14,r14,r14
   29eb4:	318d883a 	add	r6,r6,r6
   29eb8:	81c00504 	addi	r7,r16,20
   29ebc:	839d883a 	add	r14,r16,r14
   29ec0:	8a000504 	addi	r8,r17,20
   29ec4:	898d883a 	add	r6,r17,r6
   29ec8:	10c00504 	addi	r3,r2,20
   29ecc:	0009883a 	mov	r4,zero
   29ed0:	3b000017 	ldw	r12,0(r7)
   29ed4:	42c00017 	ldw	r11,0(r8)
   29ed8:	42000104 	addi	r8,r8,4
   29edc:	62bfffcc 	andi	r10,r12,65535
   29ee0:	5b7fffcc 	andi	r13,r11,65535
   29ee4:	5109883a 	add	r4,r10,r4
   29ee8:	2355c83a 	sub	r10,r4,r13
   29eec:	5816d43a 	srli	r11,r11,16
   29ef0:	6008d43a 	srli	r4,r12,16
   29ef4:	501bd43a 	srai	r13,r10,16
   29ef8:	1a80000d 	sth	r10,0(r3)
   29efc:	22c9c83a 	sub	r4,r4,r11
   29f00:	2349883a 	add	r4,r4,r13
   29f04:	1900008d 	sth	r4,2(r3)
   29f08:	39c00104 	addi	r7,r7,4
   29f0c:	2009d43a 	srai	r4,r4,16
   29f10:	18c00104 	addi	r3,r3,4
   29f14:	41bfee36 	bltu	r8,r6,29ed0 <__mdiff+0x84>
   29f18:	180b883a 	mov	r5,r3
   29f1c:	3815883a 	mov	r10,r7
   29f20:	3b80132e 	bgeu	r7,r14,29f70 <__mdiff+0x124>
   29f24:	3a000017 	ldw	r8,0(r7)
   29f28:	18c00104 	addi	r3,r3,4
   29f2c:	39c00104 	addi	r7,r7,4
   29f30:	41bfffcc 	andi	r6,r8,65535
   29f34:	310d883a 	add	r6,r6,r4
   29f38:	3009d43a 	srai	r4,r6,16
   29f3c:	4010d43a 	srli	r8,r8,16
   29f40:	19bfff0d 	sth	r6,-4(r3)
   29f44:	2209883a 	add	r4,r4,r8
   29f48:	193fff8d 	sth	r4,-2(r3)
   29f4c:	2009d43a 	srai	r4,r4,16
   29f50:	3bbff436 	bltu	r7,r14,29f24 <__mdiff+0xd8>
   29f54:	0286303a 	nor	r3,zero,r10
   29f58:	1b87883a 	add	r3,r3,r14
   29f5c:	1806d0ba 	srli	r3,r3,2
   29f60:	18c00044 	addi	r3,r3,1
   29f64:	18c7883a 	add	r3,r3,r3
   29f68:	18c7883a 	add	r3,r3,r3
   29f6c:	28c7883a 	add	r3,r5,r3
   29f70:	193fff17 	ldw	r4,-4(r3)
   29f74:	18ffff04 	addi	r3,r3,-4
   29f78:	2000041e 	bne	r4,zero,29f8c <__mdiff+0x140>
   29f7c:	18ffff04 	addi	r3,r3,-4
   29f80:	19000017 	ldw	r4,0(r3)
   29f84:	4a7fffc4 	addi	r9,r9,-1
   29f88:	203ffc26 	beq	r4,zero,29f7c <__mdiff+0x130>
   29f8c:	12400415 	stw	r9,16(r2)
   29f90:	dfc00417 	ldw	ra,16(sp)
   29f94:	dcc00317 	ldw	r19,12(sp)
   29f98:	dc800217 	ldw	r18,8(sp)
   29f9c:	dc400117 	ldw	r17,4(sp)
   29fa0:	dc000017 	ldw	r16,0(sp)
   29fa4:	dec00504 	addi	sp,sp,20
   29fa8:	f800283a 	ret
   29fac:	8005883a 	mov	r2,r16
   29fb0:	04c00044 	movi	r19,1
   29fb4:	8821883a 	mov	r16,r17
   29fb8:	1023883a 	mov	r17,r2
   29fbc:	003fb206 	br	29e88 <__mdiff+0x3c>
   29fc0:	9009883a 	mov	r4,r18
   29fc4:	000b883a 	mov	r5,zero
   29fc8:	00294a80 	call	294a8 <_Balloc>
   29fcc:	00c00044 	movi	r3,1
   29fd0:	10c00415 	stw	r3,16(r2)
   29fd4:	10000515 	stw	zero,20(r2)
   29fd8:	dfc00417 	ldw	ra,16(sp)
   29fdc:	dcc00317 	ldw	r19,12(sp)
   29fe0:	dc800217 	ldw	r18,8(sp)
   29fe4:	dc400117 	ldw	r17,4(sp)
   29fe8:	dc000017 	ldw	r16,0(sp)
   29fec:	dec00504 	addi	sp,sp,20
   29ff0:	f800283a 	ret

00029ff4 <__ulp>:
   29ff4:	295ffc2c 	andhi	r5,r5,32752
   29ff8:	00bf3034 	movhi	r2,64704
   29ffc:	2887883a 	add	r3,r5,r2
   2a000:	00c0020e 	bge	zero,r3,2a00c <__ulp+0x18>
   2a004:	0005883a 	mov	r2,zero
   2a008:	f800283a 	ret
   2a00c:	00c7c83a 	sub	r3,zero,r3
   2a010:	1805d53a 	srai	r2,r3,20
   2a014:	00c004c4 	movi	r3,19
   2a018:	18800a0e 	bge	r3,r2,2a044 <__ulp+0x50>
   2a01c:	01000c84 	movi	r4,50
   2a020:	0007883a 	mov	r3,zero
   2a024:	20800516 	blt	r4,r2,2a03c <__ulp+0x48>
   2a028:	01000cc4 	movi	r4,51
   2a02c:	2085c83a 	sub	r2,r4,r2
   2a030:	01000044 	movi	r4,1
   2a034:	2084983a 	sll	r2,r4,r2
   2a038:	f800283a 	ret
   2a03c:	00800044 	movi	r2,1
   2a040:	f800283a 	ret
   2a044:	00c00234 	movhi	r3,8
   2a048:	1887d83a 	sra	r3,r3,r2
   2a04c:	0005883a 	mov	r2,zero
   2a050:	f800283a 	ret

0002a054 <__b2d>:
   2a054:	defffa04 	addi	sp,sp,-24
   2a058:	dc000015 	stw	r16,0(sp)
   2a05c:	24000417 	ldw	r16,16(r4)
   2a060:	dc400115 	stw	r17,4(sp)
   2a064:	dcc00315 	stw	r19,12(sp)
   2a068:	84000144 	addi	r16,r16,5
   2a06c:	8421883a 	add	r16,r16,r16
   2a070:	8421883a 	add	r16,r16,r16
   2a074:	2421883a 	add	r16,r4,r16
   2a078:	847fff17 	ldw	r17,-4(r16)
   2a07c:	24c00504 	addi	r19,r4,20
   2a080:	dd000415 	stw	r20,16(sp)
   2a084:	8809883a 	mov	r4,r17
   2a088:	dc800215 	stw	r18,8(sp)
   2a08c:	2829883a 	mov	r20,r5
   2a090:	dfc00515 	stw	ra,20(sp)
   2a094:	00297c00 	call	297c0 <__hi0bits>
   2a098:	00c00804 	movi	r3,32
   2a09c:	1887c83a 	sub	r3,r3,r2
   2a0a0:	a0c00015 	stw	r3,0(r20)
   2a0a4:	00c00284 	movi	r3,10
   2a0a8:	84bfff04 	addi	r18,r16,-4
   2a0ac:	18801216 	blt	r3,r2,2a0f8 <__b2d+0xa4>
   2a0b0:	010002c4 	movi	r4,11
   2a0b4:	2089c83a 	sub	r4,r4,r2
   2a0b8:	8906d83a 	srl	r3,r17,r4
   2a0bc:	18cffc34 	orhi	r3,r3,16368
   2a0c0:	9c80322e 	bgeu	r19,r18,2a18c <__b2d+0x138>
   2a0c4:	817ffe17 	ldw	r5,-8(r16)
   2a0c8:	2908d83a 	srl	r4,r5,r4
   2a0cc:	10800544 	addi	r2,r2,21
   2a0d0:	88a2983a 	sll	r17,r17,r2
   2a0d4:	2444b03a 	or	r2,r4,r17
   2a0d8:	dfc00517 	ldw	ra,20(sp)
   2a0dc:	dd000417 	ldw	r20,16(sp)
   2a0e0:	dcc00317 	ldw	r19,12(sp)
   2a0e4:	dc800217 	ldw	r18,8(sp)
   2a0e8:	dc400117 	ldw	r17,4(sp)
   2a0ec:	dc000017 	ldw	r16,0(sp)
   2a0f0:	dec00604 	addi	sp,sp,24
   2a0f4:	f800283a 	ret
   2a0f8:	9c801636 	bltu	r19,r18,2a154 <__b2d+0x100>
   2a0fc:	113ffd44 	addi	r4,r2,-11
   2a100:	000b883a 	mov	r5,zero
   2a104:	20001726 	beq	r4,zero,2a164 <__b2d+0x110>
   2a108:	00c00ac4 	movi	r3,43
   2a10c:	1885c83a 	sub	r2,r3,r2
   2a110:	8906983a 	sll	r3,r17,r4
   2a114:	288cd83a 	srl	r6,r5,r2
   2a118:	18cffc34 	orhi	r3,r3,16368
   2a11c:	1986b03a 	or	r3,r3,r6
   2a120:	9c801c2e 	bgeu	r19,r18,2a194 <__b2d+0x140>
   2a124:	91bfff17 	ldw	r6,-4(r18)
   2a128:	3084d83a 	srl	r2,r6,r2
   2a12c:	2908983a 	sll	r4,r5,r4
   2a130:	1104b03a 	or	r2,r2,r4
   2a134:	dfc00517 	ldw	ra,20(sp)
   2a138:	dd000417 	ldw	r20,16(sp)
   2a13c:	dcc00317 	ldw	r19,12(sp)
   2a140:	dc800217 	ldw	r18,8(sp)
   2a144:	dc400117 	ldw	r17,4(sp)
   2a148:	dc000017 	ldw	r16,0(sp)
   2a14c:	dec00604 	addi	sp,sp,24
   2a150:	f800283a 	ret
   2a154:	113ffd44 	addi	r4,r2,-11
   2a158:	84bffe04 	addi	r18,r16,-8
   2a15c:	817ffe17 	ldw	r5,-8(r16)
   2a160:	203fe91e 	bne	r4,zero,2a108 <__b2d+0xb4>
   2a164:	88cffc34 	orhi	r3,r17,16368
   2a168:	2805883a 	mov	r2,r5
   2a16c:	dfc00517 	ldw	ra,20(sp)
   2a170:	dd000417 	ldw	r20,16(sp)
   2a174:	dcc00317 	ldw	r19,12(sp)
   2a178:	dc800217 	ldw	r18,8(sp)
   2a17c:	dc400117 	ldw	r17,4(sp)
   2a180:	dc000017 	ldw	r16,0(sp)
   2a184:	dec00604 	addi	sp,sp,24
   2a188:	f800283a 	ret
   2a18c:	0009883a 	mov	r4,zero
   2a190:	003fce06 	br	2a0cc <__b2d+0x78>
   2a194:	0005883a 	mov	r2,zero
   2a198:	003fe406 	br	2a12c <__b2d+0xd8>

0002a19c <__d2b>:
   2a19c:	defff804 	addi	sp,sp,-32
   2a1a0:	dc400315 	stw	r17,12(sp)
   2a1a4:	3023883a 	mov	r17,r6
   2a1a8:	dc800415 	stw	r18,16(sp)
   2a1ac:	8824907a 	slli	r18,r17,1
   2a1b0:	dcc00515 	stw	r19,20(sp)
   2a1b4:	2827883a 	mov	r19,r5
   2a1b8:	9024d57a 	srli	r18,r18,21
   2a1bc:	01400044 	movi	r5,1
   2a1c0:	dd000615 	stw	r20,24(sp)
   2a1c4:	dc000215 	stw	r16,8(sp)
   2a1c8:	dfc00715 	stw	ra,28(sp)
   2a1cc:	3829883a 	mov	r20,r7
   2a1d0:	00294a80 	call	294a8 <_Balloc>
   2a1d4:	1021883a 	mov	r16,r2
   2a1d8:	00800434 	movhi	r2,16
   2a1dc:	10bfffc4 	addi	r2,r2,-1
   2a1e0:	88a2703a 	and	r17,r17,r2
   2a1e4:	90000126 	beq	r18,zero,2a1ec <__d2b+0x50>
   2a1e8:	8c400434 	orhi	r17,r17,16
   2a1ec:	dc400015 	stw	r17,0(sp)
   2a1f0:	98002226 	beq	r19,zero,2a27c <__d2b+0xe0>
   2a1f4:	d9000104 	addi	r4,sp,4
   2a1f8:	dcc00115 	stw	r19,4(sp)
   2a1fc:	00298280 	call	29828 <__lo0bits>
   2a200:	d8c00017 	ldw	r3,0(sp)
   2a204:	10002d1e 	bne	r2,zero,2a2bc <__d2b+0x120>
   2a208:	d9000117 	ldw	r4,4(sp)
   2a20c:	81000515 	stw	r4,20(r16)
   2a210:	1823003a 	cmpeq	r17,r3,zero
   2a214:	01000084 	movi	r4,2
   2a218:	2463c83a 	sub	r17,r4,r17
   2a21c:	80c00615 	stw	r3,24(r16)
   2a220:	84400415 	stw	r17,16(r16)
   2a224:	90001d1e 	bne	r18,zero,2a29c <__d2b+0x100>
   2a228:	88c00104 	addi	r3,r17,4
   2a22c:	18c7883a 	add	r3,r3,r3
   2a230:	18c7883a 	add	r3,r3,r3
   2a234:	80c7883a 	add	r3,r16,r3
   2a238:	19000017 	ldw	r4,0(r3)
   2a23c:	10bef384 	addi	r2,r2,-1074
   2a240:	a0800015 	stw	r2,0(r20)
   2a244:	00297c00 	call	297c0 <__hi0bits>
   2a248:	8822917a 	slli	r17,r17,5
   2a24c:	d8c00817 	ldw	r3,32(sp)
   2a250:	8885c83a 	sub	r2,r17,r2
   2a254:	18800015 	stw	r2,0(r3)
   2a258:	8005883a 	mov	r2,r16
   2a25c:	dfc00717 	ldw	ra,28(sp)
   2a260:	dd000617 	ldw	r20,24(sp)
   2a264:	dcc00517 	ldw	r19,20(sp)
   2a268:	dc800417 	ldw	r18,16(sp)
   2a26c:	dc400317 	ldw	r17,12(sp)
   2a270:	dc000217 	ldw	r16,8(sp)
   2a274:	dec00804 	addi	sp,sp,32
   2a278:	f800283a 	ret
   2a27c:	d809883a 	mov	r4,sp
   2a280:	00298280 	call	29828 <__lo0bits>
   2a284:	d8c00017 	ldw	r3,0(sp)
   2a288:	04400044 	movi	r17,1
   2a28c:	84400415 	stw	r17,16(r16)
   2a290:	80c00515 	stw	r3,20(r16)
   2a294:	10800804 	addi	r2,r2,32
   2a298:	903fe326 	beq	r18,zero,2a228 <__d2b+0x8c>
   2a29c:	00c00d44 	movi	r3,53
   2a2a0:	94bef344 	addi	r18,r18,-1075
   2a2a4:	90a5883a 	add	r18,r18,r2
   2a2a8:	1885c83a 	sub	r2,r3,r2
   2a2ac:	d8c00817 	ldw	r3,32(sp)
   2a2b0:	a4800015 	stw	r18,0(r20)
   2a2b4:	18800015 	stw	r2,0(r3)
   2a2b8:	003fe706 	br	2a258 <__d2b+0xbc>
   2a2bc:	01000804 	movi	r4,32
   2a2c0:	2089c83a 	sub	r4,r4,r2
   2a2c4:	1908983a 	sll	r4,r3,r4
   2a2c8:	d9400117 	ldw	r5,4(sp)
   2a2cc:	1886d83a 	srl	r3,r3,r2
   2a2d0:	2148b03a 	or	r4,r4,r5
   2a2d4:	81000515 	stw	r4,20(r16)
   2a2d8:	d8c00015 	stw	r3,0(sp)
   2a2dc:	003fcc06 	br	2a210 <__d2b+0x74>

0002a2e0 <__ratio>:
   2a2e0:	defff904 	addi	sp,sp,-28
   2a2e4:	dc400315 	stw	r17,12(sp)
   2a2e8:	2823883a 	mov	r17,r5
   2a2ec:	d9400104 	addi	r5,sp,4
   2a2f0:	dfc00615 	stw	ra,24(sp)
   2a2f4:	dcc00515 	stw	r19,20(sp)
   2a2f8:	dc800415 	stw	r18,16(sp)
   2a2fc:	2027883a 	mov	r19,r4
   2a300:	dc000215 	stw	r16,8(sp)
   2a304:	002a0540 	call	2a054 <__b2d>
   2a308:	8809883a 	mov	r4,r17
   2a30c:	d80b883a 	mov	r5,sp
   2a310:	1025883a 	mov	r18,r2
   2a314:	1821883a 	mov	r16,r3
   2a318:	002a0540 	call	2a054 <__b2d>
   2a31c:	99400417 	ldw	r5,16(r19)
   2a320:	89000417 	ldw	r4,16(r17)
   2a324:	d9800117 	ldw	r6,4(sp)
   2a328:	2909c83a 	sub	r4,r5,r4
   2a32c:	d9400017 	ldw	r5,0(sp)
   2a330:	2008917a 	slli	r4,r4,5
   2a334:	314bc83a 	sub	r5,r6,r5
   2a338:	290b883a 	add	r5,r5,r4
   2a33c:	01400e0e 	bge	zero,r5,2a378 <__ratio+0x98>
   2a340:	280a953a 	slli	r5,r5,20
   2a344:	2c21883a 	add	r16,r5,r16
   2a348:	9009883a 	mov	r4,r18
   2a34c:	800b883a 	mov	r5,r16
   2a350:	100d883a 	mov	r6,r2
   2a354:	180f883a 	mov	r7,r3
   2a358:	002f5b80 	call	2f5b8 <__divdf3>
   2a35c:	dfc00617 	ldw	ra,24(sp)
   2a360:	dcc00517 	ldw	r19,20(sp)
   2a364:	dc800417 	ldw	r18,16(sp)
   2a368:	dc400317 	ldw	r17,12(sp)
   2a36c:	dc000217 	ldw	r16,8(sp)
   2a370:	dec00704 	addi	sp,sp,28
   2a374:	f800283a 	ret
   2a378:	280a953a 	slli	r5,r5,20
   2a37c:	1947c83a 	sub	r3,r3,r5
   2a380:	003ff106 	br	2a348 <__ratio+0x68>

0002a384 <_mprec_log10>:
   2a384:	defffe04 	addi	sp,sp,-8
   2a388:	dc000015 	stw	r16,0(sp)
   2a38c:	dfc00115 	stw	ra,4(sp)
   2a390:	008005c4 	movi	r2,23
   2a394:	2021883a 	mov	r16,r4
   2a398:	11000d0e 	bge	r2,r4,2a3d0 <_mprec_log10+0x4c>
   2a39c:	0005883a 	mov	r2,zero
   2a3a0:	00cffc34 	movhi	r3,16368
   2a3a4:	843fffc4 	addi	r16,r16,-1
   2a3a8:	1009883a 	mov	r4,r2
   2a3ac:	180b883a 	mov	r5,r3
   2a3b0:	000d883a 	mov	r6,zero
   2a3b4:	01d00934 	movhi	r7,16420
   2a3b8:	002f2d40 	call	2f2d4 <__muldf3>
   2a3bc:	803ff91e 	bne	r16,zero,2a3a4 <_mprec_log10+0x20>
   2a3c0:	dfc00117 	ldw	ra,4(sp)
   2a3c4:	dc000017 	ldw	r16,0(sp)
   2a3c8:	dec00204 	addi	sp,sp,8
   2a3cc:	f800283a 	ret
   2a3d0:	202090fa 	slli	r16,r4,3
   2a3d4:	008000f4 	movhi	r2,3
   2a3d8:	108f7e04 	addi	r2,r2,15864
   2a3dc:	1421883a 	add	r16,r2,r16
   2a3e0:	80800017 	ldw	r2,0(r16)
   2a3e4:	80c00117 	ldw	r3,4(r16)
   2a3e8:	dfc00117 	ldw	ra,4(sp)
   2a3ec:	dc000017 	ldw	r16,0(sp)
   2a3f0:	dec00204 	addi	sp,sp,8
   2a3f4:	f800283a 	ret

0002a3f8 <__copybits>:
   2a3f8:	297fffc4 	addi	r5,r5,-1
   2a3fc:	31c00417 	ldw	r7,16(r6)
   2a400:	2811d17a 	srai	r8,r5,5
   2a404:	30800504 	addi	r2,r6,20
   2a408:	39c00144 	addi	r7,r7,5
   2a40c:	42000044 	addi	r8,r8,1
   2a410:	39cf883a 	add	r7,r7,r7
   2a414:	4211883a 	add	r8,r8,r8
   2a418:	39cf883a 	add	r7,r7,r7
   2a41c:	4211883a 	add	r8,r8,r8
   2a420:	31cf883a 	add	r7,r6,r7
   2a424:	2211883a 	add	r8,r4,r8
   2a428:	11c00d2e 	bgeu	r2,r7,2a460 <__copybits+0x68>
   2a42c:	2007883a 	mov	r3,r4
   2a430:	11400017 	ldw	r5,0(r2)
   2a434:	18c00104 	addi	r3,r3,4
   2a438:	10800104 	addi	r2,r2,4
   2a43c:	197fff15 	stw	r5,-4(r3)
   2a440:	11fffb36 	bltu	r2,r7,2a430 <__copybits+0x38>
   2a444:	3985c83a 	sub	r2,r7,r6
   2a448:	10bffac4 	addi	r2,r2,-21
   2a44c:	1004d0ba 	srli	r2,r2,2
   2a450:	10800044 	addi	r2,r2,1
   2a454:	1085883a 	add	r2,r2,r2
   2a458:	1085883a 	add	r2,r2,r2
   2a45c:	2089883a 	add	r4,r4,r2
   2a460:	2200032e 	bgeu	r4,r8,2a470 <__copybits+0x78>
   2a464:	20000015 	stw	zero,0(r4)
   2a468:	21000104 	addi	r4,r4,4
   2a46c:	223ffd36 	bltu	r4,r8,2a464 <__copybits+0x6c>
   2a470:	f800283a 	ret

0002a474 <__any_on>:
   2a474:	21800417 	ldw	r6,16(r4)
   2a478:	2805d17a 	srai	r2,r5,5
   2a47c:	20c00504 	addi	r3,r4,20
   2a480:	30800f0e 	bge	r6,r2,2a4c0 <__any_on+0x4c>
   2a484:	3005883a 	mov	r2,r6
   2a488:	10800144 	addi	r2,r2,5
   2a48c:	1085883a 	add	r2,r2,r2
   2a490:	1085883a 	add	r2,r2,r2
   2a494:	2089883a 	add	r4,r4,r2
   2a498:	1900152e 	bgeu	r3,r4,2a4f0 <__any_on+0x7c>
   2a49c:	20bfff17 	ldw	r2,-4(r4)
   2a4a0:	213fff04 	addi	r4,r4,-4
   2a4a4:	1000041e 	bne	r2,zero,2a4b8 <__any_on+0x44>
   2a4a8:	1900112e 	bgeu	r3,r4,2a4f0 <__any_on+0x7c>
   2a4ac:	213fff04 	addi	r4,r4,-4
   2a4b0:	20800017 	ldw	r2,0(r4)
   2a4b4:	103ffc26 	beq	r2,zero,2a4a8 <__any_on+0x34>
   2a4b8:	00800044 	movi	r2,1
   2a4bc:	f800283a 	ret
   2a4c0:	11bff10e 	bge	r2,r6,2a488 <__any_on+0x14>
   2a4c4:	294007cc 	andi	r5,r5,31
   2a4c8:	283fef26 	beq	r5,zero,2a488 <__any_on+0x14>
   2a4cc:	11800144 	addi	r6,r2,5
   2a4d0:	318d883a 	add	r6,r6,r6
   2a4d4:	318d883a 	add	r6,r6,r6
   2a4d8:	218d883a 	add	r6,r4,r6
   2a4dc:	31800017 	ldw	r6,0(r6)
   2a4e0:	314ed83a 	srl	r7,r6,r5
   2a4e4:	394a983a 	sll	r5,r7,r5
   2a4e8:	29bff31e 	bne	r5,r6,2a4b8 <__any_on+0x44>
   2a4ec:	003fe606 	br	2a488 <__any_on+0x14>
   2a4f0:	0005883a 	mov	r2,zero
   2a4f4:	f800283a 	ret

0002a4f8 <_read_r>:
   2a4f8:	defffd04 	addi	sp,sp,-12
   2a4fc:	dc400115 	stw	r17,4(sp)
   2a500:	dc000015 	stw	r16,0(sp)
   2a504:	2023883a 	mov	r17,r4
   2a508:	040000f4 	movhi	r16,3
   2a50c:	841d9504 	addi	r16,r16,30292
   2a510:	2809883a 	mov	r4,r5
   2a514:	300b883a 	mov	r5,r6
   2a518:	380d883a 	mov	r6,r7
   2a51c:	dfc00215 	stw	ra,8(sp)
   2a520:	80000015 	stw	zero,0(r16)
   2a524:	0030eec0 	call	30eec <read>
   2a528:	00ffffc4 	movi	r3,-1
   2a52c:	10c00526 	beq	r2,r3,2a544 <_read_r+0x4c>
   2a530:	dfc00217 	ldw	ra,8(sp)
   2a534:	dc400117 	ldw	r17,4(sp)
   2a538:	dc000017 	ldw	r16,0(sp)
   2a53c:	dec00304 	addi	sp,sp,12
   2a540:	f800283a 	ret
   2a544:	80c00017 	ldw	r3,0(r16)
   2a548:	183ff926 	beq	r3,zero,2a530 <_read_r+0x38>
   2a54c:	88c00015 	stw	r3,0(r17)
   2a550:	dfc00217 	ldw	ra,8(sp)
   2a554:	dc400117 	ldw	r17,4(sp)
   2a558:	dc000017 	ldw	r16,0(sp)
   2a55c:	dec00304 	addi	sp,sp,12
   2a560:	f800283a 	ret

0002a564 <_realloc_r>:
   2a564:	defff504 	addi	sp,sp,-44
   2a568:	dd400615 	stw	r21,24(sp)
   2a56c:	dc800315 	stw	r18,12(sp)
   2a570:	dc000115 	stw	r16,4(sp)
   2a574:	dfc00a15 	stw	ra,40(sp)
   2a578:	df000915 	stw	fp,36(sp)
   2a57c:	ddc00815 	stw	r23,32(sp)
   2a580:	dd800715 	stw	r22,28(sp)
   2a584:	dd000515 	stw	r20,20(sp)
   2a588:	dcc00415 	stw	r19,16(sp)
   2a58c:	dc400215 	stw	r17,8(sp)
   2a590:	2821883a 	mov	r16,r5
   2a594:	202b883a 	mov	r21,r4
   2a598:	3025883a 	mov	r18,r6
   2a59c:	28009626 	beq	r5,zero,2a7f8 <_realloc_r+0x294>
   2a5a0:	0030bc40 	call	30bc4 <__malloc_lock>
   2a5a4:	80bfff17 	ldw	r2,-4(r16)
   2a5a8:	04ffff04 	movi	r19,-4
   2a5ac:	90c002c4 	addi	r3,r18,11
   2a5b0:	01000584 	movi	r4,22
   2a5b4:	85bffe04 	addi	r22,r16,-8
   2a5b8:	14e6703a 	and	r19,r2,r19
   2a5bc:	20c0372e 	bgeu	r4,r3,2a69c <_realloc_r+0x138>
   2a5c0:	047ffe04 	movi	r17,-8
   2a5c4:	1c62703a 	and	r17,r3,r17
   2a5c8:	8807883a 	mov	r3,r17
   2a5cc:	88005a16 	blt	r17,zero,2a738 <_realloc_r+0x1d4>
   2a5d0:	8c805936 	bltu	r17,r18,2a738 <_realloc_r+0x1d4>
   2a5d4:	98c0340e 	bge	r19,r3,2a6a8 <_realloc_r+0x144>
   2a5d8:	070000f4 	movhi	fp,3
   2a5dc:	e7111b04 	addi	fp,fp,17516
   2a5e0:	e1400217 	ldw	r5,8(fp)
   2a5e4:	b4c9883a 	add	r4,r22,r19
   2a5e8:	29009026 	beq	r5,r4,2a82c <_realloc_r+0x2c8>
   2a5ec:	21800117 	ldw	r6,4(r4)
   2a5f0:	01ffff84 	movi	r7,-2
   2a5f4:	31ce703a 	and	r7,r6,r7
   2a5f8:	21cf883a 	add	r7,r4,r7
   2a5fc:	39c00117 	ldw	r7,4(r7)
   2a600:	39c0004c 	andi	r7,r7,1
   2a604:	38004326 	beq	r7,zero,2a714 <_realloc_r+0x1b0>
   2a608:	000d883a 	mov	r6,zero
   2a60c:	0009883a 	mov	r4,zero
   2a610:	1080004c 	andi	r2,r2,1
   2a614:	10005a1e 	bne	r2,zero,2a780 <_realloc_r+0x21c>
   2a618:	85fffe17 	ldw	r23,-8(r16)
   2a61c:	00bfff04 	movi	r2,-4
   2a620:	b5efc83a 	sub	r23,r22,r23
   2a624:	b9c00117 	ldw	r7,4(r23)
   2a628:	388e703a 	and	r7,r7,r2
   2a62c:	3ccf883a 	add	r7,r7,r19
   2a630:	20005226 	beq	r4,zero,2a77c <_realloc_r+0x218>
   2a634:	31e9883a 	add	r20,r6,r7
   2a638:	2140c726 	beq	r4,r5,2a958 <_realloc_r+0x3f4>
   2a63c:	a0c04f16 	blt	r20,r3,2a77c <_realloc_r+0x218>
   2a640:	20800317 	ldw	r2,12(r4)
   2a644:	20c00217 	ldw	r3,8(r4)
   2a648:	99bfff04 	addi	r6,r19,-4
   2a64c:	01000904 	movi	r4,36
   2a650:	18800315 	stw	r2,12(r3)
   2a654:	10c00215 	stw	r3,8(r2)
   2a658:	b8c00217 	ldw	r3,8(r23)
   2a65c:	b8800317 	ldw	r2,12(r23)
   2a660:	bc800204 	addi	r18,r23,8
   2a664:	18800315 	stw	r2,12(r3)
   2a668:	10c00215 	stw	r3,8(r2)
   2a66c:	2180ed36 	bltu	r4,r6,2aa24 <_realloc_r+0x4c0>
   2a670:	008004c4 	movi	r2,19
   2a674:	11809b2e 	bgeu	r2,r6,2a8e4 <_realloc_r+0x380>
   2a678:	80800017 	ldw	r2,0(r16)
   2a67c:	b8800215 	stw	r2,8(r23)
   2a680:	80800117 	ldw	r2,4(r16)
   2a684:	b8800315 	stw	r2,12(r23)
   2a688:	008006c4 	movi	r2,27
   2a68c:	1180f936 	bltu	r2,r6,2aa74 <_realloc_r+0x510>
   2a690:	b8800404 	addi	r2,r23,16
   2a694:	80c00204 	addi	r3,r16,8
   2a698:	00009406 	br	2a8ec <_realloc_r+0x388>
   2a69c:	00c00404 	movi	r3,16
   2a6a0:	1823883a 	mov	r17,r3
   2a6a4:	003fca06 	br	2a5d0 <_realloc_r+0x6c>
   2a6a8:	9829883a 	mov	r20,r19
   2a6ac:	a447c83a 	sub	r3,r20,r17
   2a6b0:	010003c4 	movi	r4,15
   2a6b4:	1080004c 	andi	r2,r2,1
   2a6b8:	20c02336 	bltu	r4,r3,2a748 <_realloc_r+0x1e4>
   2a6bc:	1504b03a 	or	r2,r2,r20
   2a6c0:	b0800115 	stw	r2,4(r22)
   2a6c4:	b52d883a 	add	r22,r22,r20
   2a6c8:	b0800117 	ldw	r2,4(r22)
   2a6cc:	10800054 	ori	r2,r2,1
   2a6d0:	b0800115 	stw	r2,4(r22)
   2a6d4:	a809883a 	mov	r4,r21
   2a6d8:	0030be40 	call	30be4 <__malloc_unlock>
   2a6dc:	8025883a 	mov	r18,r16
   2a6e0:	9005883a 	mov	r2,r18
   2a6e4:	dfc00a17 	ldw	ra,40(sp)
   2a6e8:	df000917 	ldw	fp,36(sp)
   2a6ec:	ddc00817 	ldw	r23,32(sp)
   2a6f0:	dd800717 	ldw	r22,28(sp)
   2a6f4:	dd400617 	ldw	r21,24(sp)
   2a6f8:	dd000517 	ldw	r20,20(sp)
   2a6fc:	dcc00417 	ldw	r19,16(sp)
   2a700:	dc800317 	ldw	r18,12(sp)
   2a704:	dc400217 	ldw	r17,8(sp)
   2a708:	dc000117 	ldw	r16,4(sp)
   2a70c:	dec00b04 	addi	sp,sp,44
   2a710:	f800283a 	ret
   2a714:	01ffff04 	movi	r7,-4
   2a718:	31cc703a 	and	r6,r6,r7
   2a71c:	34e9883a 	add	r20,r6,r19
   2a720:	a0ffbb16 	blt	r20,r3,2a610 <_realloc_r+0xac>
   2a724:	20c00317 	ldw	r3,12(r4)
   2a728:	21000217 	ldw	r4,8(r4)
   2a72c:	20c00315 	stw	r3,12(r4)
   2a730:	19000215 	stw	r4,8(r3)
   2a734:	003fdd06 	br	2a6ac <_realloc_r+0x148>
   2a738:	00800304 	movi	r2,12
   2a73c:	a8800015 	stw	r2,0(r21)
   2a740:	0025883a 	mov	r18,zero
   2a744:	003fe606 	br	2a6e0 <_realloc_r+0x17c>
   2a748:	1444b03a 	or	r2,r2,r17
   2a74c:	b0800115 	stw	r2,4(r22)
   2a750:	b44b883a 	add	r5,r22,r17
   2a754:	18800054 	ori	r2,r3,1
   2a758:	28800115 	stw	r2,4(r5)
   2a75c:	28c7883a 	add	r3,r5,r3
   2a760:	18800117 	ldw	r2,4(r3)
   2a764:	a809883a 	mov	r4,r21
   2a768:	29400204 	addi	r5,r5,8
   2a76c:	10800054 	ori	r2,r2,1
   2a770:	18800115 	stw	r2,4(r3)
   2a774:	0021d540 	call	21d54 <_free_r>
   2a778:	003fd606 	br	2a6d4 <_realloc_r+0x170>
   2a77c:	38c0330e 	bge	r7,r3,2a84c <_realloc_r+0x2e8>
   2a780:	900b883a 	mov	r5,r18
   2a784:	a809883a 	mov	r4,r21
   2a788:	00229a00 	call	229a0 <_malloc_r>
   2a78c:	1025883a 	mov	r18,r2
   2a790:	10001626 	beq	r2,zero,2a7ec <_realloc_r+0x288>
   2a794:	80bfff17 	ldw	r2,-4(r16)
   2a798:	00ffff84 	movi	r3,-2
   2a79c:	913ffe04 	addi	r4,r18,-8
   2a7a0:	10c6703a 	and	r3,r2,r3
   2a7a4:	b0c7883a 	add	r3,r22,r3
   2a7a8:	20c09926 	beq	r4,r3,2aa10 <_realloc_r+0x4ac>
   2a7ac:	99bfff04 	addi	r6,r19,-4
   2a7b0:	00800904 	movi	r2,36
   2a7b4:	11806436 	bltu	r2,r6,2a948 <_realloc_r+0x3e4>
   2a7b8:	00c004c4 	movi	r3,19
   2a7bc:	19804036 	bltu	r3,r6,2a8c0 <_realloc_r+0x35c>
   2a7c0:	9005883a 	mov	r2,r18
   2a7c4:	8007883a 	mov	r3,r16
   2a7c8:	19000017 	ldw	r4,0(r3)
   2a7cc:	11000015 	stw	r4,0(r2)
   2a7d0:	19000117 	ldw	r4,4(r3)
   2a7d4:	11000115 	stw	r4,4(r2)
   2a7d8:	18c00217 	ldw	r3,8(r3)
   2a7dc:	10c00215 	stw	r3,8(r2)
   2a7e0:	a809883a 	mov	r4,r21
   2a7e4:	800b883a 	mov	r5,r16
   2a7e8:	0021d540 	call	21d54 <_free_r>
   2a7ec:	a809883a 	mov	r4,r21
   2a7f0:	0030be40 	call	30be4 <__malloc_unlock>
   2a7f4:	003fba06 	br	2a6e0 <_realloc_r+0x17c>
   2a7f8:	300b883a 	mov	r5,r6
   2a7fc:	dfc00a17 	ldw	ra,40(sp)
   2a800:	df000917 	ldw	fp,36(sp)
   2a804:	ddc00817 	ldw	r23,32(sp)
   2a808:	dd800717 	ldw	r22,28(sp)
   2a80c:	dd400617 	ldw	r21,24(sp)
   2a810:	dd000517 	ldw	r20,20(sp)
   2a814:	dcc00417 	ldw	r19,16(sp)
   2a818:	dc800317 	ldw	r18,12(sp)
   2a81c:	dc400217 	ldw	r17,8(sp)
   2a820:	dc000117 	ldw	r16,4(sp)
   2a824:	dec00b04 	addi	sp,sp,44
   2a828:	00229a01 	jmpi	229a0 <_malloc_r>
   2a82c:	29800117 	ldw	r6,4(r5)
   2a830:	013fff04 	movi	r4,-4
   2a834:	89c00404 	addi	r7,r17,16
   2a838:	310c703a 	and	r6,r6,r4
   2a83c:	34c9883a 	add	r4,r6,r19
   2a840:	21c0340e 	bge	r4,r7,2a914 <_realloc_r+0x3b0>
   2a844:	2809883a 	mov	r4,r5
   2a848:	003f7106 	br	2a610 <_realloc_r+0xac>
   2a84c:	b8800317 	ldw	r2,12(r23)
   2a850:	b8c00217 	ldw	r3,8(r23)
   2a854:	99bfff04 	addi	r6,r19,-4
   2a858:	01000904 	movi	r4,36
   2a85c:	18800315 	stw	r2,12(r3)
   2a860:	10c00215 	stw	r3,8(r2)
   2a864:	bc800204 	addi	r18,r23,8
   2a868:	21807836 	bltu	r4,r6,2aa4c <_realloc_r+0x4e8>
   2a86c:	008004c4 	movi	r2,19
   2a870:	1180732e 	bgeu	r2,r6,2aa40 <_realloc_r+0x4dc>
   2a874:	80800017 	ldw	r2,0(r16)
   2a878:	b8800215 	stw	r2,8(r23)
   2a87c:	80800117 	ldw	r2,4(r16)
   2a880:	b8800315 	stw	r2,12(r23)
   2a884:	008006c4 	movi	r2,27
   2a888:	11808936 	bltu	r2,r6,2aab0 <_realloc_r+0x54c>
   2a88c:	b8800404 	addi	r2,r23,16
   2a890:	80c00204 	addi	r3,r16,8
   2a894:	19000017 	ldw	r4,0(r3)
   2a898:	9021883a 	mov	r16,r18
   2a89c:	3829883a 	mov	r20,r7
   2a8a0:	11000015 	stw	r4,0(r2)
   2a8a4:	19000117 	ldw	r4,4(r3)
   2a8a8:	b82d883a 	mov	r22,r23
   2a8ac:	11000115 	stw	r4,4(r2)
   2a8b0:	18c00217 	ldw	r3,8(r3)
   2a8b4:	10c00215 	stw	r3,8(r2)
   2a8b8:	b8800117 	ldw	r2,4(r23)
   2a8bc:	003f7b06 	br	2a6ac <_realloc_r+0x148>
   2a8c0:	80c00017 	ldw	r3,0(r16)
   2a8c4:	90c00015 	stw	r3,0(r18)
   2a8c8:	80c00117 	ldw	r3,4(r16)
   2a8cc:	90c00115 	stw	r3,4(r18)
   2a8d0:	00c006c4 	movi	r3,27
   2a8d4:	19804636 	bltu	r3,r6,2a9f0 <_realloc_r+0x48c>
   2a8d8:	90800204 	addi	r2,r18,8
   2a8dc:	80c00204 	addi	r3,r16,8
   2a8e0:	003fb906 	br	2a7c8 <_realloc_r+0x264>
   2a8e4:	9005883a 	mov	r2,r18
   2a8e8:	8007883a 	mov	r3,r16
   2a8ec:	19000017 	ldw	r4,0(r3)
   2a8f0:	9021883a 	mov	r16,r18
   2a8f4:	b82d883a 	mov	r22,r23
   2a8f8:	11000015 	stw	r4,0(r2)
   2a8fc:	19000117 	ldw	r4,4(r3)
   2a900:	11000115 	stw	r4,4(r2)
   2a904:	18c00217 	ldw	r3,8(r3)
   2a908:	10c00215 	stw	r3,8(r2)
   2a90c:	b8800117 	ldw	r2,4(r23)
   2a910:	003f6606 	br	2a6ac <_realloc_r+0x148>
   2a914:	2445c83a 	sub	r2,r4,r17
   2a918:	b46d883a 	add	r22,r22,r17
   2a91c:	10800054 	ori	r2,r2,1
   2a920:	b0800115 	stw	r2,4(r22)
   2a924:	80bfff17 	ldw	r2,-4(r16)
   2a928:	a809883a 	mov	r4,r21
   2a92c:	e5800215 	stw	r22,8(fp)
   2a930:	1080004c 	andi	r2,r2,1
   2a934:	88a2b03a 	or	r17,r17,r2
   2a938:	847fff15 	stw	r17,-4(r16)
   2a93c:	0030be40 	call	30be4 <__malloc_unlock>
   2a940:	8025883a 	mov	r18,r16
   2a944:	003f6606 	br	2a6e0 <_realloc_r+0x17c>
   2a948:	9009883a 	mov	r4,r18
   2a94c:	800b883a 	mov	r5,r16
   2a950:	002931c0 	call	2931c <memmove>
   2a954:	003fa206 	br	2a7e0 <_realloc_r+0x27c>
   2a958:	88800404 	addi	r2,r17,16
   2a95c:	a0bf8716 	blt	r20,r2,2a77c <_realloc_r+0x218>
   2a960:	b8800317 	ldw	r2,12(r23)
   2a964:	b8c00217 	ldw	r3,8(r23)
   2a968:	99bfff04 	addi	r6,r19,-4
   2a96c:	01000904 	movi	r4,36
   2a970:	18800315 	stw	r2,12(r3)
   2a974:	10c00215 	stw	r3,8(r2)
   2a978:	bc800204 	addi	r18,r23,8
   2a97c:	21806536 	bltu	r4,r6,2ab14 <_realloc_r+0x5b0>
   2a980:	008004c4 	movi	r2,19
   2a984:	1180592e 	bgeu	r2,r6,2aaec <_realloc_r+0x588>
   2a988:	80800017 	ldw	r2,0(r16)
   2a98c:	b8800215 	stw	r2,8(r23)
   2a990:	80800117 	ldw	r2,4(r16)
   2a994:	b8800315 	stw	r2,12(r23)
   2a998:	008006c4 	movi	r2,27
   2a99c:	11806136 	bltu	r2,r6,2ab24 <_realloc_r+0x5c0>
   2a9a0:	b8800404 	addi	r2,r23,16
   2a9a4:	80c00204 	addi	r3,r16,8
   2a9a8:	19000017 	ldw	r4,0(r3)
   2a9ac:	11000015 	stw	r4,0(r2)
   2a9b0:	19000117 	ldw	r4,4(r3)
   2a9b4:	11000115 	stw	r4,4(r2)
   2a9b8:	18c00217 	ldw	r3,8(r3)
   2a9bc:	10c00215 	stw	r3,8(r2)
   2a9c0:	a447c83a 	sub	r3,r20,r17
   2a9c4:	bc45883a 	add	r2,r23,r17
   2a9c8:	18c00054 	ori	r3,r3,1
   2a9cc:	10c00115 	stw	r3,4(r2)
   2a9d0:	b8c00117 	ldw	r3,4(r23)
   2a9d4:	e0800215 	stw	r2,8(fp)
   2a9d8:	a809883a 	mov	r4,r21
   2a9dc:	1880004c 	andi	r2,r3,1
   2a9e0:	88a2b03a 	or	r17,r17,r2
   2a9e4:	bc400115 	stw	r17,4(r23)
   2a9e8:	0030be40 	call	30be4 <__malloc_unlock>
   2a9ec:	003f3c06 	br	2a6e0 <_realloc_r+0x17c>
   2a9f0:	80c00217 	ldw	r3,8(r16)
   2a9f4:	90c00215 	stw	r3,8(r18)
   2a9f8:	80c00317 	ldw	r3,12(r16)
   2a9fc:	90c00315 	stw	r3,12(r18)
   2aa00:	30802426 	beq	r6,r2,2aa94 <_realloc_r+0x530>
   2aa04:	90800404 	addi	r2,r18,16
   2aa08:	80c00404 	addi	r3,r16,16
   2aa0c:	003f6e06 	br	2a7c8 <_realloc_r+0x264>
   2aa10:	953fff17 	ldw	r20,-4(r18)
   2aa14:	00ffff04 	movi	r3,-4
   2aa18:	a0e8703a 	and	r20,r20,r3
   2aa1c:	a4e9883a 	add	r20,r20,r19
   2aa20:	003f2206 	br	2a6ac <_realloc_r+0x148>
   2aa24:	800b883a 	mov	r5,r16
   2aa28:	9009883a 	mov	r4,r18
   2aa2c:	002931c0 	call	2931c <memmove>
   2aa30:	9021883a 	mov	r16,r18
   2aa34:	b8800117 	ldw	r2,4(r23)
   2aa38:	b82d883a 	mov	r22,r23
   2aa3c:	003f1b06 	br	2a6ac <_realloc_r+0x148>
   2aa40:	9005883a 	mov	r2,r18
   2aa44:	8007883a 	mov	r3,r16
   2aa48:	003f9206 	br	2a894 <_realloc_r+0x330>
   2aa4c:	800b883a 	mov	r5,r16
   2aa50:	9009883a 	mov	r4,r18
   2aa54:	d9c00015 	stw	r7,0(sp)
   2aa58:	002931c0 	call	2931c <memmove>
   2aa5c:	d9c00017 	ldw	r7,0(sp)
   2aa60:	9021883a 	mov	r16,r18
   2aa64:	b8800117 	ldw	r2,4(r23)
   2aa68:	3829883a 	mov	r20,r7
   2aa6c:	b82d883a 	mov	r22,r23
   2aa70:	003f0e06 	br	2a6ac <_realloc_r+0x148>
   2aa74:	80800217 	ldw	r2,8(r16)
   2aa78:	b8800415 	stw	r2,16(r23)
   2aa7c:	80800317 	ldw	r2,12(r16)
   2aa80:	b8800515 	stw	r2,20(r23)
   2aa84:	31001226 	beq	r6,r4,2aad0 <_realloc_r+0x56c>
   2aa88:	b8800604 	addi	r2,r23,24
   2aa8c:	80c00404 	addi	r3,r16,16
   2aa90:	003f9606 	br	2a8ec <_realloc_r+0x388>
   2aa94:	81000417 	ldw	r4,16(r16)
   2aa98:	90800604 	addi	r2,r18,24
   2aa9c:	80c00604 	addi	r3,r16,24
   2aaa0:	91000415 	stw	r4,16(r18)
   2aaa4:	81000517 	ldw	r4,20(r16)
   2aaa8:	91000515 	stw	r4,20(r18)
   2aaac:	003f4606 	br	2a7c8 <_realloc_r+0x264>
   2aab0:	80800217 	ldw	r2,8(r16)
   2aab4:	b8800415 	stw	r2,16(r23)
   2aab8:	80800317 	ldw	r2,12(r16)
   2aabc:	b8800515 	stw	r2,20(r23)
   2aac0:	31000d26 	beq	r6,r4,2aaf8 <_realloc_r+0x594>
   2aac4:	b8800604 	addi	r2,r23,24
   2aac8:	80c00404 	addi	r3,r16,16
   2aacc:	003f7106 	br	2a894 <_realloc_r+0x330>
   2aad0:	81000417 	ldw	r4,16(r16)
   2aad4:	b8800804 	addi	r2,r23,32
   2aad8:	80c00604 	addi	r3,r16,24
   2aadc:	b9000615 	stw	r4,24(r23)
   2aae0:	81000517 	ldw	r4,20(r16)
   2aae4:	b9000715 	stw	r4,28(r23)
   2aae8:	003f8006 	br	2a8ec <_realloc_r+0x388>
   2aaec:	9005883a 	mov	r2,r18
   2aaf0:	8007883a 	mov	r3,r16
   2aaf4:	003fac06 	br	2a9a8 <_realloc_r+0x444>
   2aaf8:	81000417 	ldw	r4,16(r16)
   2aafc:	b8800804 	addi	r2,r23,32
   2ab00:	80c00604 	addi	r3,r16,24
   2ab04:	b9000615 	stw	r4,24(r23)
   2ab08:	81000517 	ldw	r4,20(r16)
   2ab0c:	b9000715 	stw	r4,28(r23)
   2ab10:	003f6006 	br	2a894 <_realloc_r+0x330>
   2ab14:	9009883a 	mov	r4,r18
   2ab18:	800b883a 	mov	r5,r16
   2ab1c:	002931c0 	call	2931c <memmove>
   2ab20:	003fa706 	br	2a9c0 <_realloc_r+0x45c>
   2ab24:	80800217 	ldw	r2,8(r16)
   2ab28:	b8800415 	stw	r2,16(r23)
   2ab2c:	80800317 	ldw	r2,12(r16)
   2ab30:	b8800515 	stw	r2,20(r23)
   2ab34:	31000326 	beq	r6,r4,2ab44 <_realloc_r+0x5e0>
   2ab38:	b8800604 	addi	r2,r23,24
   2ab3c:	80c00404 	addi	r3,r16,16
   2ab40:	003f9906 	br	2a9a8 <_realloc_r+0x444>
   2ab44:	81000417 	ldw	r4,16(r16)
   2ab48:	b8800804 	addi	r2,r23,32
   2ab4c:	80c00604 	addi	r3,r16,24
   2ab50:	b9000615 	stw	r4,24(r23)
   2ab54:	81000517 	ldw	r4,20(r16)
   2ab58:	b9000715 	stw	r4,28(r23)
   2ab5c:	003f9206 	br	2a9a8 <_realloc_r+0x444>

0002ab60 <__isinfd>:
   2ab60:	0105c83a 	sub	r2,zero,r4
   2ab64:	1108b03a 	or	r4,r2,r4
   2ab68:	2004d7fa 	srli	r2,r4,31
   2ab6c:	00e00034 	movhi	r3,32768
   2ab70:	18ffffc4 	addi	r3,r3,-1
   2ab74:	28ca703a 	and	r5,r5,r3
   2ab78:	1144b03a 	or	r2,r2,r5
   2ab7c:	00dffc34 	movhi	r3,32752
   2ab80:	1885c83a 	sub	r2,r3,r2
   2ab84:	0087c83a 	sub	r3,zero,r2
   2ab88:	1884b03a 	or	r2,r3,r2
   2ab8c:	1005d7fa 	srai	r2,r2,31
   2ab90:	10800044 	addi	r2,r2,1
   2ab94:	f800283a 	ret

0002ab98 <__isnand>:
   2ab98:	0105c83a 	sub	r2,zero,r4
   2ab9c:	1108b03a 	or	r4,r2,r4
   2aba0:	2004d7fa 	srli	r2,r4,31
   2aba4:	00e00034 	movhi	r3,32768
   2aba8:	18ffffc4 	addi	r3,r3,-1
   2abac:	28ca703a 	and	r5,r5,r3
   2abb0:	1144b03a 	or	r2,r2,r5
   2abb4:	00dffc34 	movhi	r3,32752
   2abb8:	1885c83a 	sub	r2,r3,r2
   2abbc:	1004d7fa 	srli	r2,r2,31
   2abc0:	f800283a 	ret

0002abc4 <__sccl>:
   2abc4:	2a400003 	ldbu	r9,0(r5)
   2abc8:	00801784 	movi	r2,94
   2abcc:	48802626 	beq	r9,r2,2ac68 <__sccl+0xa4>
   2abd0:	28800044 	addi	r2,r5,1
   2abd4:	0011883a 	mov	r8,zero
   2abd8:	000b883a 	mov	r5,zero
   2abdc:	0007883a 	mov	r3,zero
   2abe0:	01c04004 	movi	r7,256
   2abe4:	20cd883a 	add	r6,r4,r3
   2abe8:	32000005 	stb	r8,0(r6)
   2abec:	18c00044 	addi	r3,r3,1
   2abf0:	19fffc1e 	bne	r3,r7,2abe4 <__sccl+0x20>
   2abf4:	48000f26 	beq	r9,zero,2ac34 <__sccl+0x70>
   2abf8:	01800044 	movi	r6,1
   2abfc:	314dc83a 	sub	r6,r6,r5
   2ac00:	02001744 	movi	r8,93
   2ac04:	01400b44 	movi	r5,45
   2ac08:	2247883a 	add	r3,r4,r9
   2ac0c:	19800005 	stb	r6,0(r3)
   2ac10:	10c00003 	ldbu	r3,0(r2)
   2ac14:	11c00044 	addi	r7,r2,1
   2ac18:	19400a26 	beq	r3,r5,2ac44 <__sccl+0x80>
   2ac1c:	1a000726 	beq	r3,r8,2ac3c <__sccl+0x78>
   2ac20:	1800011e 	bne	r3,zero,2ac28 <__sccl+0x64>
   2ac24:	f800283a 	ret
   2ac28:	1813883a 	mov	r9,r3
   2ac2c:	3805883a 	mov	r2,r7
   2ac30:	003ff506 	br	2ac08 <__sccl+0x44>
   2ac34:	10bfffc4 	addi	r2,r2,-1
   2ac38:	f800283a 	ret
   2ac3c:	3805883a 	mov	r2,r7
   2ac40:	f800283a 	ret
   2ac44:	10c00043 	ldbu	r3,1(r2)
   2ac48:	1a000c26 	beq	r3,r8,2ac7c <__sccl+0xb8>
   2ac4c:	1a400b16 	blt	r3,r9,2ac7c <__sccl+0xb8>
   2ac50:	10800084 	addi	r2,r2,2
   2ac54:	4a400044 	addi	r9,r9,1
   2ac58:	224f883a 	add	r7,r4,r9
   2ac5c:	39800005 	stb	r6,0(r7)
   2ac60:	48fffc16 	blt	r9,r3,2ac54 <__sccl+0x90>
   2ac64:	003fea06 	br	2ac10 <__sccl+0x4c>
   2ac68:	2a400043 	ldbu	r9,1(r5)
   2ac6c:	28800084 	addi	r2,r5,2
   2ac70:	02000044 	movi	r8,1
   2ac74:	01400044 	movi	r5,1
   2ac78:	003fd806 	br	2abdc <__sccl+0x18>
   2ac7c:	2813883a 	mov	r9,r5
   2ac80:	3805883a 	mov	r2,r7
   2ac84:	003fe006 	br	2ac08 <__sccl+0x44>

0002ac88 <nanf>:
   2ac88:	009ff034 	movhi	r2,32704
   2ac8c:	f800283a 	ret

0002ac90 <_sprintf_r>:
   2ac90:	deffe704 	addi	sp,sp,-100
   2ac94:	2807883a 	mov	r3,r5
   2ac98:	dfc01715 	stw	ra,92(sp)
   2ac9c:	d9c01815 	stw	r7,96(sp)
   2aca0:	00a00034 	movhi	r2,32768
   2aca4:	10bfffc4 	addi	r2,r2,-1
   2aca8:	02008204 	movi	r8,520
   2acac:	d8800215 	stw	r2,8(sp)
   2acb0:	d8800515 	stw	r2,20(sp)
   2acb4:	d80b883a 	mov	r5,sp
   2acb8:	d9c01804 	addi	r7,sp,96
   2acbc:	00bfffc4 	movi	r2,-1
   2acc0:	d8c00015 	stw	r3,0(sp)
   2acc4:	d8c00415 	stw	r3,16(sp)
   2acc8:	da00030d 	sth	r8,12(sp)
   2accc:	d880038d 	sth	r2,14(sp)
   2acd0:	00239180 	call	23918 <___vfprintf_internal_r>
   2acd4:	d8c00017 	ldw	r3,0(sp)
   2acd8:	18000005 	stb	zero,0(r3)
   2acdc:	dfc01717 	ldw	ra,92(sp)
   2ace0:	dec01904 	addi	sp,sp,100
   2ace4:	f800283a 	ret

0002ace8 <sprintf>:
   2ace8:	deffe604 	addi	sp,sp,-104
   2acec:	2007883a 	mov	r3,r4
   2acf0:	dfc01715 	stw	ra,92(sp)
   2acf4:	d9801815 	stw	r6,96(sp)
   2acf8:	d9c01915 	stw	r7,100(sp)
   2acfc:	008000f4 	movhi	r2,3
   2ad00:	1096b704 	addi	r2,r2,23260
   2ad04:	11000017 	ldw	r4,0(r2)
   2ad08:	00a00034 	movhi	r2,32768
   2ad0c:	10bfffc4 	addi	r2,r2,-1
   2ad10:	280d883a 	mov	r6,r5
   2ad14:	02008204 	movi	r8,520
   2ad18:	d8800215 	stw	r2,8(sp)
   2ad1c:	d8800515 	stw	r2,20(sp)
   2ad20:	d80b883a 	mov	r5,sp
   2ad24:	d9c01804 	addi	r7,sp,96
   2ad28:	00bfffc4 	movi	r2,-1
   2ad2c:	d8c00015 	stw	r3,0(sp)
   2ad30:	d8c00415 	stw	r3,16(sp)
   2ad34:	da00030d 	sth	r8,12(sp)
   2ad38:	d880038d 	sth	r2,14(sp)
   2ad3c:	00239180 	call	23918 <___vfprintf_internal_r>
   2ad40:	d8c00017 	ldw	r3,0(sp)
   2ad44:	18000005 	stb	zero,0(r3)
   2ad48:	dfc01717 	ldw	ra,92(sp)
   2ad4c:	dec01a04 	addi	sp,sp,104
   2ad50:	f800283a 	ret

0002ad54 <strcmp>:
   2ad54:	2904b03a 	or	r2,r5,r4
   2ad58:	108000cc 	andi	r2,r2,3
   2ad5c:	1000171e 	bne	r2,zero,2adbc <strcmp+0x68>
   2ad60:	20800017 	ldw	r2,0(r4)
   2ad64:	28c00017 	ldw	r3,0(r5)
   2ad68:	10c0141e 	bne	r2,r3,2adbc <strcmp+0x68>
   2ad6c:	027fbff4 	movhi	r9,65279
   2ad70:	4a7fbfc4 	addi	r9,r9,-257
   2ad74:	1247883a 	add	r3,r2,r9
   2ad78:	0084303a 	nor	r2,zero,r2
   2ad7c:	1884703a 	and	r2,r3,r2
   2ad80:	02202074 	movhi	r8,32897
   2ad84:	42202004 	addi	r8,r8,-32640
   2ad88:	1204703a 	and	r2,r2,r8
   2ad8c:	10000226 	beq	r2,zero,2ad98 <strcmp+0x44>
   2ad90:	00001706 	br	2adf0 <strcmp+0x9c>
   2ad94:	3000161e 	bne	r6,zero,2adf0 <strcmp+0x9c>
   2ad98:	21000104 	addi	r4,r4,4
   2ad9c:	20800017 	ldw	r2,0(r4)
   2ada0:	29400104 	addi	r5,r5,4
   2ada4:	28c00017 	ldw	r3,0(r5)
   2ada8:	124f883a 	add	r7,r2,r9
   2adac:	008c303a 	nor	r6,zero,r2
   2adb0:	398c703a 	and	r6,r7,r6
   2adb4:	320c703a 	and	r6,r6,r8
   2adb8:	10fff626 	beq	r2,r3,2ad94 <strcmp+0x40>
   2adbc:	20800007 	ldb	r2,0(r4)
   2adc0:	1000051e 	bne	r2,zero,2add8 <strcmp+0x84>
   2adc4:	00000606 	br	2ade0 <strcmp+0x8c>
   2adc8:	21000044 	addi	r4,r4,1
   2adcc:	20800007 	ldb	r2,0(r4)
   2add0:	29400044 	addi	r5,r5,1
   2add4:	10000226 	beq	r2,zero,2ade0 <strcmp+0x8c>
   2add8:	28c00007 	ldb	r3,0(r5)
   2addc:	10fffa26 	beq	r2,r3,2adc8 <strcmp+0x74>
   2ade0:	20c00003 	ldbu	r3,0(r4)
   2ade4:	28800003 	ldbu	r2,0(r5)
   2ade8:	1885c83a 	sub	r2,r3,r2
   2adec:	f800283a 	ret
   2adf0:	0005883a 	mov	r2,zero
   2adf4:	f800283a 	ret

0002adf8 <_strtod_r>:
   2adf8:	deffdc04 	addi	sp,sp,-144
   2adfc:	dc001a15 	stw	r16,104(sp)
   2ae00:	d9400e15 	stw	r5,56(sp)
   2ae04:	d9801115 	stw	r6,68(sp)
   2ae08:	d9400c15 	stw	r5,48(sp)
   2ae0c:	2805883a 	mov	r2,r5
   2ae10:	dfc02315 	stw	ra,140(sp)
   2ae14:	df002215 	stw	fp,136(sp)
   2ae18:	ddc02115 	stw	r23,132(sp)
   2ae1c:	dd802015 	stw	r22,128(sp)
   2ae20:	dd401f15 	stw	r21,124(sp)
   2ae24:	dd001e15 	stw	r20,120(sp)
   2ae28:	dcc01d15 	stw	r19,116(sp)
   2ae2c:	dc801c15 	stw	r18,112(sp)
   2ae30:	dc401b15 	stw	r17,108(sp)
   2ae34:	2021883a 	mov	r16,r4
   2ae38:	d8000615 	stw	zero,24(sp)
   2ae3c:	d8000715 	stw	zero,28(sp)
   2ae40:	01400b44 	movi	r5,45
   2ae44:	018000f4 	movhi	r6,3
   2ae48:	31abe704 	addi	r6,r6,-20580
   2ae4c:	10c00003 	ldbu	r3,0(r2)
   2ae50:	19003fcc 	andi	r4,r3,255
   2ae54:	29004c2e 	bgeu	r5,r4,2af88 <_strtod_r+0x190>
   2ae58:	1c803fcc 	andi	r18,r3,255
   2ae5c:	9480201c 	xori	r18,r18,128
   2ae60:	102d883a 	mov	r22,r2
   2ae64:	d8001215 	stw	zero,72(sp)
   2ae68:	94bfe004 	addi	r18,r18,-128
   2ae6c:	00800c04 	movi	r2,48
   2ae70:	9080f526 	beq	r18,r2,2b248 <_strtod_r+0x450>
   2ae74:	d8001315 	stw	zero,76(sp)
   2ae78:	04c00bc4 	movi	r19,47
   2ae7c:	900f883a 	mov	r7,r18
   2ae80:	9c84770e 	bge	r19,r18,2c060 <_strtod_r+0x1268>
   2ae84:	05c00e44 	movi	r23,57
   2ae88:	bc847a16 	blt	r23,r18,2c074 <_strtod_r+0x127c>
   2ae8c:	0039883a 	mov	fp,zero
   2ae90:	b4400044 	addi	r17,r22,1
   2ae94:	dd801015 	stw	r22,64(sp)
   2ae98:	d8000f15 	stw	zero,60(sp)
   2ae9c:	e02d883a 	mov	r22,fp
   2aea0:	002b883a 	mov	r21,zero
   2aea4:	8039883a 	mov	fp,r16
   2aea8:	05000204 	movi	r20,8
   2aeac:	0021883a 	mov	r16,zero
   2aeb0:	a5408c16 	blt	r20,r21,2b0e4 <_strtod_r+0x2ec>
   2aeb4:	b009883a 	mov	r4,r22
   2aeb8:	01400284 	movi	r5,10
   2aebc:	00211880 	call	21188 <__mulsi3>
   2aec0:	1485883a 	add	r2,r2,r18
   2aec4:	15bff404 	addi	r22,r2,-48
   2aec8:	dc400c15 	stw	r17,48(sp)
   2aecc:	8c800007 	ldb	r18,0(r17)
   2aed0:	ad400044 	addi	r21,r21,1
   2aed4:	880b883a 	mov	r5,r17
   2aed8:	900f883a 	mov	r7,r18
   2aedc:	9c808e0e 	bge	r19,r18,2b118 <_strtod_r+0x320>
   2aee0:	8c400044 	addi	r17,r17,1
   2aee4:	bcbff20e 	bge	r23,r18,2aeb0 <_strtod_r+0xb8>
   2aee8:	dc000f15 	stw	r16,60(sp)
   2aeec:	e021883a 	mov	r16,fp
   2aef0:	b039883a 	mov	fp,r22
   2aef4:	dd801017 	ldw	r22,64(sp)
   2aef8:	a827883a 	mov	r19,r21
   2aefc:	dd801415 	stw	r22,80(sp)
   2af00:	000d883a 	mov	r6,zero
   2af04:	0029883a 	mov	r20,zero
   2af08:	d8001015 	stw	zero,64(sp)
   2af0c:	00801944 	movi	r2,101
   2af10:	3880dd26 	beq	r7,r2,2b288 <_strtod_r+0x490>
   2af14:	00801144 	movi	r2,69
   2af18:	3880db26 	beq	r7,r2,2b288 <_strtod_r+0x490>
   2af1c:	0009883a 	mov	r4,zero
   2af20:	a8011d1e 	bne	r21,zero,2b398 <_strtod_r+0x5a0>
   2af24:	3001591e 	bne	r6,zero,2b48c <_strtod_r+0x694>
   2af28:	d8c01317 	ldw	r3,76(sp)
   2af2c:	1801571e 	bne	r3,zero,2b48c <_strtod_r+0x694>
   2af30:	d8c01017 	ldw	r3,64(sp)
   2af34:	1803081e 	bne	r3,zero,2bb58 <_strtod_r+0xd60>
   2af38:	00801384 	movi	r2,78
   2af3c:	38847e26 	beq	r7,r2,2c138 <_strtod_r+0x1340>
   2af40:	11c47916 	blt	r2,r7,2c128 <_strtod_r+0x1330>
   2af44:	00801244 	movi	r2,73
   2af48:	3883031e 	bne	r7,r2,2bb58 <_strtod_r+0xd60>
   2af4c:	d8800c17 	ldw	r2,48(sp)
   2af50:	010000f4 	movhi	r4,3
   2af54:	210fb304 	addi	r4,r4,16076
   2af58:	01801004 	movi	r6,64
   2af5c:	01c01684 	movi	r7,90
   2af60:	21400007 	ldb	r5,0(r4)
   2af64:	21000044 	addi	r4,r4,1
   2af68:	2804b426 	beq	r5,zero,2c23c <_strtod_r+0x1444>
   2af6c:	10800044 	addi	r2,r2,1
   2af70:	10c00007 	ldb	r3,0(r2)
   2af74:	30c0020e 	bge	r6,r3,2af80 <_strtod_r+0x188>
   2af78:	38c00116 	blt	r7,r3,2af80 <_strtod_r+0x188>
   2af7c:	18c00804 	addi	r3,r3,32
   2af80:	197ff726 	beq	r3,r5,2af60 <_strtod_r+0x168>
   2af84:	0002f406 	br	2bb58 <_strtod_r+0xd60>
   2af88:	2109883a 	add	r4,r4,r4
   2af8c:	2109883a 	add	r4,r4,r4
   2af90:	2189883a 	add	r4,r4,r6
   2af94:	21000017 	ldw	r4,0(r4)
   2af98:	2000683a 	jmp	r4
   2af9c:	0002b068 	cmpgeui	zero,zero,2753
   2afa0:	0002ae58 	cmpnei	zero,zero,2745
   2afa4:	0002ae58 	cmpnei	zero,zero,2745
   2afa8:	0002ae58 	cmpnei	zero,zero,2745
   2afac:	0002ae58 	cmpnei	zero,zero,2745
   2afb0:	0002ae58 	cmpnei	zero,zero,2745
   2afb4:	0002ae58 	cmpnei	zero,zero,2745
   2afb8:	0002ae58 	cmpnei	zero,zero,2745
   2afbc:	0002ae58 	cmpnei	zero,zero,2745
   2afc0:	0002b0cc 	andi	zero,zero,2755
   2afc4:	0002b0cc 	andi	zero,zero,2755
   2afc8:	0002b0cc 	andi	zero,zero,2755
   2afcc:	0002b0cc 	andi	zero,zero,2755
   2afd0:	0002b0cc 	andi	zero,zero,2755
   2afd4:	0002ae58 	cmpnei	zero,zero,2745
   2afd8:	0002ae58 	cmpnei	zero,zero,2745
   2afdc:	0002ae58 	cmpnei	zero,zero,2745
   2afe0:	0002ae58 	cmpnei	zero,zero,2745
   2afe4:	0002ae58 	cmpnei	zero,zero,2745
   2afe8:	0002ae58 	cmpnei	zero,zero,2745
   2afec:	0002ae58 	cmpnei	zero,zero,2745
   2aff0:	0002ae58 	cmpnei	zero,zero,2745
   2aff4:	0002ae58 	cmpnei	zero,zero,2745
   2aff8:	0002ae58 	cmpnei	zero,zero,2745
   2affc:	0002ae58 	cmpnei	zero,zero,2745
   2b000:	0002ae58 	cmpnei	zero,zero,2745
   2b004:	0002ae58 	cmpnei	zero,zero,2745
   2b008:	0002ae58 	cmpnei	zero,zero,2745
   2b00c:	0002ae58 	cmpnei	zero,zero,2745
   2b010:	0002ae58 	cmpnei	zero,zero,2745
   2b014:	0002ae58 	cmpnei	zero,zero,2745
   2b018:	0002ae58 	cmpnei	zero,zero,2745
   2b01c:	0002b0cc 	andi	zero,zero,2755
   2b020:	0002ae58 	cmpnei	zero,zero,2745
   2b024:	0002ae58 	cmpnei	zero,zero,2745
   2b028:	0002ae58 	cmpnei	zero,zero,2745
   2b02c:	0002ae58 	cmpnei	zero,zero,2745
   2b030:	0002ae58 	cmpnei	zero,zero,2745
   2b034:	0002ae58 	cmpnei	zero,zero,2745
   2b038:	0002ae58 	cmpnei	zero,zero,2745
   2b03c:	0002ae58 	cmpnei	zero,zero,2745
   2b040:	0002ae58 	cmpnei	zero,zero,2745
   2b044:	0002ae58 	cmpnei	zero,zero,2745
   2b048:	0002b054 	movui	zero,2753
   2b04c:	0002ae58 	cmpnei	zero,zero,2745
   2b050:	0002b0d8 	cmpnei	zero,zero,2755
   2b054:	d8001215 	stw	zero,72(sp)
   2b058:	15800044 	addi	r22,r2,1
   2b05c:	dd800c15 	stw	r22,48(sp)
   2b060:	14800047 	ldb	r18,1(r2)
   2b064:	903f811e 	bne	r18,zero,2ae6c <_strtod_r+0x74>
   2b068:	0005883a 	mov	r2,zero
   2b06c:	0007883a 	mov	r3,zero
   2b070:	d9400e17 	ldw	r5,56(sp)
   2b074:	d8001215 	stw	zero,72(sp)
   2b078:	d9400c15 	stw	r5,48(sp)
   2b07c:	d9001117 	ldw	r4,68(sp)
   2b080:	20000326 	beq	r4,zero,2b090 <_strtod_r+0x298>
   2b084:	d9000c17 	ldw	r4,48(sp)
   2b088:	d9401117 	ldw	r5,68(sp)
   2b08c:	29000015 	stw	r4,0(r5)
   2b090:	d9001217 	ldw	r4,72(sp)
   2b094:	20000126 	beq	r4,zero,2b09c <_strtod_r+0x2a4>
   2b098:	18e0003c 	xorhi	r3,r3,32768
   2b09c:	dfc02317 	ldw	ra,140(sp)
   2b0a0:	df002217 	ldw	fp,136(sp)
   2b0a4:	ddc02117 	ldw	r23,132(sp)
   2b0a8:	dd802017 	ldw	r22,128(sp)
   2b0ac:	dd401f17 	ldw	r21,124(sp)
   2b0b0:	dd001e17 	ldw	r20,120(sp)
   2b0b4:	dcc01d17 	ldw	r19,116(sp)
   2b0b8:	dc801c17 	ldw	r18,112(sp)
   2b0bc:	dc401b17 	ldw	r17,108(sp)
   2b0c0:	dc001a17 	ldw	r16,104(sp)
   2b0c4:	dec02404 	addi	sp,sp,144
   2b0c8:	f800283a 	ret
   2b0cc:	10800044 	addi	r2,r2,1
   2b0d0:	d8800c15 	stw	r2,48(sp)
   2b0d4:	003f5d06 	br	2ae4c <_strtod_r+0x54>
   2b0d8:	00c00044 	movi	r3,1
   2b0dc:	d8c01215 	stw	r3,72(sp)
   2b0e0:	003fdd06 	br	2b058 <_strtod_r+0x260>
   2b0e4:	010003c4 	movi	r4,15
   2b0e8:	257f7716 	blt	r4,r21,2aec8 <_strtod_r+0xd0>
   2b0ec:	8009883a 	mov	r4,r16
   2b0f0:	01400284 	movi	r5,10
   2b0f4:	00211880 	call	21188 <__mulsi3>
   2b0f8:	dc400c15 	stw	r17,48(sp)
   2b0fc:	1485883a 	add	r2,r2,r18
   2b100:	8c800007 	ldb	r18,0(r17)
   2b104:	143ff404 	addi	r16,r2,-48
   2b108:	ad400044 	addi	r21,r21,1
   2b10c:	880b883a 	mov	r5,r17
   2b110:	900f883a 	mov	r7,r18
   2b114:	9cbf7216 	blt	r19,r18,2aee0 <_strtod_r+0xe8>
   2b118:	dc000f15 	stw	r16,60(sp)
   2b11c:	e021883a 	mov	r16,fp
   2b120:	b039883a 	mov	fp,r22
   2b124:	dd801017 	ldw	r22,64(sp)
   2b128:	00800b84 	movi	r2,46
   2b12c:	9082561e 	bne	r18,r2,2ba88 <_strtod_r+0xc90>
   2b130:	28800044 	addi	r2,r5,1
   2b134:	d8800c15 	stw	r2,48(sp)
   2b138:	29c00047 	ldb	r7,1(r5)
   2b13c:	a802611e 	bne	r21,zero,2bac4 <_strtod_r+0xccc>
   2b140:	00800c04 	movi	r2,48
   2b144:	3884161e 	bne	r7,r2,2c1a0 <_strtod_r+0x13a8>
   2b148:	00800044 	movi	r2,1
   2b14c:	3809883a 	mov	r4,r7
   2b150:	100d883a 	mov	r6,r2
   2b154:	10800044 	addi	r2,r2,1
   2b158:	2887883a 	add	r3,r5,r2
   2b15c:	d8c00c15 	stw	r3,48(sp)
   2b160:	2987883a 	add	r3,r5,r6
   2b164:	19c00047 	ldb	r7,1(r3)
   2b168:	393ff926 	beq	r7,r4,2b150 <_strtod_r+0x358>
   2b16c:	38bff3c4 	addi	r2,r7,-49
   2b170:	00c00204 	movi	r3,8
   2b174:	1882ad36 	bltu	r3,r2,2bc2c <_strtod_r+0xe34>
   2b178:	d9400c17 	ldw	r5,48(sp)
   2b17c:	3029883a 	mov	r20,r6
   2b180:	002f883a 	mov	r23,zero
   2b184:	d9401415 	stw	r5,80(sp)
   2b188:	2823883a 	mov	r17,r5
   2b18c:	01800044 	movi	r6,1
   2b190:	3dbff404 	addi	r22,r7,-48
   2b194:	b0002826 	beq	r22,zero,2b238 <_strtod_r+0x440>
   2b198:	00800044 	movi	r2,1
   2b19c:	a1a9883a 	add	r20,r20,r6
   2b1a0:	30844826 	beq	r6,r2,2c2c4 <_strtod_r+0x14cc>
   2b1a4:	b9a7883a 	add	r19,r23,r6
   2b1a8:	dc401015 	stw	r17,64(sp)
   2b1ac:	e023883a 	mov	r17,fp
   2b1b0:	b039883a 	mov	fp,r22
   2b1b4:	802d883a 	mov	r22,r16
   2b1b8:	dc000f17 	ldw	r16,60(sp)
   2b1bc:	98ffffc4 	addi	r3,r19,-1
   2b1c0:	dd001615 	stw	r20,88(sp)
   2b1c4:	04800204 	movi	r18,8
   2b1c8:	d9801515 	stw	r6,84(sp)
   2b1cc:	b829883a 	mov	r20,r23
   2b1d0:	1827883a 	mov	r19,r3
   2b1d4:	a5000044 	addi	r20,r20,1
   2b1d8:	a17fffc4 	addi	r5,r20,-1
   2b1dc:	9142b916 	blt	r18,r5,2bcc4 <_strtod_r+0xecc>
   2b1e0:	8809883a 	mov	r4,r17
   2b1e4:	01400284 	movi	r5,10
   2b1e8:	00211880 	call	21188 <__mulsi3>
   2b1ec:	1023883a 	mov	r17,r2
   2b1f0:	a4fff81e 	bne	r20,r19,2b1d4 <_strtod_r+0x3dc>
   2b1f4:	d9801517 	ldw	r6,84(sp)
   2b1f8:	dc000f15 	stw	r16,60(sp)
   2b1fc:	dd001617 	ldw	r20,88(sp)
   2b200:	b021883a 	mov	r16,r22
   2b204:	e02d883a 	mov	r22,fp
   2b208:	8839883a 	mov	fp,r17
   2b20c:	dc401017 	ldw	r17,64(sp)
   2b210:	b985883a 	add	r2,r23,r6
   2b214:	10bfffc4 	addi	r2,r2,-1
   2b218:	00c00204 	movi	r3,8
   2b21c:	15c00044 	addi	r23,r2,1
   2b220:	1883d616 	blt	r3,r2,2c17c <_strtod_r+0x1384>
   2b224:	e009883a 	mov	r4,fp
   2b228:	01400284 	movi	r5,10
   2b22c:	00211880 	call	21188 <__mulsi3>
   2b230:	15b9883a 	add	fp,r2,r22
   2b234:	000d883a 	mov	r6,zero
   2b238:	88800044 	addi	r2,r17,1
   2b23c:	d8800c15 	stw	r2,48(sp)
   2b240:	89c00047 	ldb	r7,1(r17)
   2b244:	00022306 	br	2bad4 <_strtod_r+0xcdc>
   2b248:	b0800047 	ldb	r2,1(r22)
   2b24c:	01001604 	movi	r4,88
   2b250:	1102a326 	beq	r2,r4,2bce0 <_strtod_r+0xee8>
   2b254:	01001e04 	movi	r4,120
   2b258:	1102a126 	beq	r2,r4,2bce0 <_strtod_r+0xee8>
   2b25c:	b0800044 	addi	r2,r22,1
   2b260:	9009883a 	mov	r4,r18
   2b264:	d8800c15 	stw	r2,48(sp)
   2b268:	14800007 	ldb	r18,0(r2)
   2b26c:	102d883a 	mov	r22,r2
   2b270:	10800044 	addi	r2,r2,1
   2b274:	913ffb26 	beq	r18,r4,2b264 <_strtod_r+0x46c>
   2b278:	90022526 	beq	r18,zero,2bb10 <_strtod_r+0xd18>
   2b27c:	00c00044 	movi	r3,1
   2b280:	d8c01315 	stw	r3,76(sp)
   2b284:	003efc06 	br	2ae78 <_strtod_r+0x80>
   2b288:	a800011e 	bne	r21,zero,2b290 <_strtod_r+0x498>
   2b28c:	30023026 	beq	r6,zero,2bb50 <_strtod_r+0xd58>
   2b290:	d9400c17 	ldw	r5,48(sp)
   2b294:	28800044 	addi	r2,r5,1
   2b298:	d8800c15 	stw	r2,48(sp)
   2b29c:	29c00047 	ldb	r7,1(r5)
   2b2a0:	d9400e15 	stw	r5,56(sp)
   2b2a4:	00800ac4 	movi	r2,43
   2b2a8:	38821026 	beq	r7,r2,2baec <_strtod_r+0xcf4>
   2b2ac:	00800b44 	movi	r2,45
   2b2b0:	38821426 	beq	r7,r2,2bb04 <_strtod_r+0xd0c>
   2b2b4:	d8001515 	stw	zero,84(sp)
   2b2b8:	38bff404 	addi	r2,r7,-48
   2b2bc:	00c00244 	movi	r3,9
   2b2c0:	1881fc36 	bltu	r3,r2,2bab4 <_strtod_r+0xcbc>
   2b2c4:	00800c04 	movi	r2,48
   2b2c8:	3880071e 	bne	r7,r2,2b2e8 <_strtod_r+0x4f0>
   2b2cc:	d8800c17 	ldw	r2,48(sp)
   2b2d0:	3807883a 	mov	r3,r7
   2b2d4:	10800044 	addi	r2,r2,1
   2b2d8:	d8800c15 	stw	r2,48(sp)
   2b2dc:	11c00007 	ldb	r7,0(r2)
   2b2e0:	10800044 	addi	r2,r2,1
   2b2e4:	38fffc26 	beq	r7,r3,2b2d8 <_strtod_r+0x4e0>
   2b2e8:	38bff3c4 	addi	r2,r7,-49
   2b2ec:	00c00204 	movi	r3,8
   2b2f0:	18bf0a36 	bltu	r3,r2,2af1c <_strtod_r+0x124>
   2b2f4:	d8c00c17 	ldw	r3,48(sp)
   2b2f8:	393ff404 	addi	r4,r7,-48
   2b2fc:	05c00bc4 	movi	r23,47
   2b300:	18800044 	addi	r2,r3,1
   2b304:	d8800c15 	stw	r2,48(sp)
   2b308:	19c00047 	ldb	r7,1(r3)
   2b30c:	d8c01615 	stw	r3,88(sp)
   2b310:	b9c0160e 	bge	r23,r7,2b36c <_strtod_r+0x574>
   2b314:	00c00e44 	movi	r3,57
   2b318:	19c01416 	blt	r3,r7,2b36c <_strtod_r+0x574>
   2b31c:	d9401617 	ldw	r5,88(sp)
   2b320:	dc001715 	stw	r16,92(sp)
   2b324:	1823883a 	mov	r17,r3
   2b328:	2d800084 	addi	r22,r5,2
   2b32c:	3025883a 	mov	r18,r6
   2b330:	3821883a 	mov	r16,r7
   2b334:	00000206 	br	2b340 <_strtod_r+0x548>
   2b338:	b5800044 	addi	r22,r22,1
   2b33c:	8c000816 	blt	r17,r16,2b360 <_strtod_r+0x568>
   2b340:	01400284 	movi	r5,10
   2b344:	00211880 	call	21188 <__mulsi3>
   2b348:	dd800c15 	stw	r22,48(sp)
   2b34c:	1405883a 	add	r2,r2,r16
   2b350:	b4000007 	ldb	r16,0(r22)
   2b354:	113ff404 	addi	r4,r2,-48
   2b358:	b005883a 	mov	r2,r22
   2b35c:	bc3ff616 	blt	r23,r16,2b338 <_strtod_r+0x540>
   2b360:	800f883a 	mov	r7,r16
   2b364:	dc001717 	ldw	r16,92(sp)
   2b368:	900d883a 	mov	r6,r18
   2b36c:	d8c01617 	ldw	r3,88(sp)
   2b370:	10c5c83a 	sub	r2,r2,r3
   2b374:	00c00204 	movi	r3,8
   2b378:	18833716 	blt	r3,r2,2c058 <_strtod_r+0x1260>
   2b37c:	009387c4 	movi	r2,19999
   2b380:	1100010e 	bge	r2,r4,2b388 <_strtod_r+0x590>
   2b384:	1009883a 	mov	r4,r2
   2b388:	d8c01517 	ldw	r3,84(sp)
   2b38c:	183ee426 	beq	r3,zero,2af20 <_strtod_r+0x128>
   2b390:	0109c83a 	sub	r4,zero,r4
   2b394:	a83ee326 	beq	r21,zero,2af24 <_strtod_r+0x12c>
   2b398:	2529c83a 	sub	r20,r4,r20
   2b39c:	dd001015 	stw	r20,64(sp)
   2b3a0:	9800011e 	bne	r19,zero,2b3a8 <_strtod_r+0x5b0>
   2b3a4:	a827883a 	mov	r19,r21
   2b3a8:	00800404 	movi	r2,16
   2b3ac:	a823883a 	mov	r17,r21
   2b3b0:	1540010e 	bge	r2,r21,2b3b8 <_strtod_r+0x5c0>
   2b3b4:	1023883a 	mov	r17,r2
   2b3b8:	e009883a 	mov	r4,fp
   2b3bc:	002fbac0 	call	2fbac <__floatunsidf>
   2b3c0:	d8800615 	stw	r2,24(sp)
   2b3c4:	d8c00715 	stw	r3,28(sp)
   2b3c8:	01000244 	movi	r4,9
   2b3cc:	2440150e 	bge	r4,r17,2b424 <_strtod_r+0x62c>
   2b3d0:	893ffdc4 	addi	r4,r17,-9
   2b3d4:	200890fa 	slli	r4,r4,3
   2b3d8:	180b883a 	mov	r5,r3
   2b3dc:	00c000f4 	movhi	r3,3
   2b3e0:	18cf7e04 	addi	r3,r3,15864
   2b3e4:	1907883a 	add	r3,r3,r4
   2b3e8:	19800017 	ldw	r6,0(r3)
   2b3ec:	19c00117 	ldw	r7,4(r3)
   2b3f0:	1009883a 	mov	r4,r2
   2b3f4:	002f2d40 	call	2f2d4 <__muldf3>
   2b3f8:	d9000f17 	ldw	r4,60(sp)
   2b3fc:	1025883a 	mov	r18,r2
   2b400:	1829883a 	mov	r20,r3
   2b404:	002fbac0 	call	2fbac <__floatunsidf>
   2b408:	9009883a 	mov	r4,r18
   2b40c:	a00b883a 	mov	r5,r20
   2b410:	100d883a 	mov	r6,r2
   2b414:	180f883a 	mov	r7,r3
   2b418:	002f2200 	call	2f220 <__adddf3>
   2b41c:	d8800615 	stw	r2,24(sp)
   2b420:	d8c00715 	stw	r3,28(sp)
   2b424:	008003c4 	movi	r2,15
   2b428:	15401b16 	blt	r2,r21,2b498 <_strtod_r+0x6a0>
   2b42c:	d8c01017 	ldw	r3,64(sp)
   2b430:	18001626 	beq	r3,zero,2b48c <_strtod_r+0x694>
   2b434:	d9001017 	ldw	r4,64(sp)
   2b438:	01032e0e 	bge	zero,r4,2c0f4 <_strtod_r+0x12fc>
   2b43c:	00c00584 	movi	r3,22
   2b440:	19031016 	blt	r3,r4,2c084 <_strtod_r+0x128c>
   2b444:	200490fa 	slli	r2,r4,3
   2b448:	00c000f4 	movhi	r3,3
   2b44c:	18cf7e04 	addi	r3,r3,15864
   2b450:	d9000617 	ldw	r4,24(sp)
   2b454:	1885883a 	add	r2,r3,r2
   2b458:	d9400717 	ldw	r5,28(sp)
   2b45c:	11800017 	ldw	r6,0(r2)
   2b460:	11c00117 	ldw	r7,4(r2)
   2b464:	002f2d40 	call	2f2d4 <__muldf3>
   2b468:	003f0406 	br	2b07c <_strtod_r+0x284>
   2b46c:	00dffc34 	movhi	r3,32752
   2b470:	d8c00715 	stw	r3,28(sp)
   2b474:	d8000615 	stw	zero,24(sp)
   2b478:	1080020c 	andi	r2,r2,8
   2b47c:	10000326 	beq	r2,zero,2b48c <_strtod_r+0x694>
   2b480:	d8800717 	ldw	r2,28(sp)
   2b484:	10a00034 	orhi	r2,r2,32768
   2b488:	d8800715 	stw	r2,28(sp)
   2b48c:	d8800617 	ldw	r2,24(sp)
   2b490:	d8c00717 	ldw	r3,28(sp)
   2b494:	003ef906 	br	2b07c <_strtod_r+0x284>
   2b498:	d8801017 	ldw	r2,64(sp)
   2b49c:	ac63c83a 	sub	r17,r21,r17
   2b4a0:	1463883a 	add	r17,r2,r17
   2b4a4:	0442a70e 	bge	zero,r17,2bf44 <_strtod_r+0x114c>
   2b4a8:	888003cc 	andi	r2,r17,15
   2b4ac:	10000b26 	beq	r2,zero,2b4dc <_strtod_r+0x6e4>
   2b4b0:	100490fa 	slli	r2,r2,3
   2b4b4:	00c000f4 	movhi	r3,3
   2b4b8:	18cf7e04 	addi	r3,r3,15864
   2b4bc:	d9000617 	ldw	r4,24(sp)
   2b4c0:	1885883a 	add	r2,r3,r2
   2b4c4:	d9400717 	ldw	r5,28(sp)
   2b4c8:	11800017 	ldw	r6,0(r2)
   2b4cc:	11c00117 	ldw	r7,4(r2)
   2b4d0:	002f2d40 	call	2f2d4 <__muldf3>
   2b4d4:	d8800615 	stw	r2,24(sp)
   2b4d8:	d8c00715 	stw	r3,28(sp)
   2b4dc:	00bffc04 	movi	r2,-16
   2b4e0:	88a2703a 	and	r17,r17,r2
   2b4e4:	8801a41e 	bne	r17,zero,2bb78 <_strtod_r+0xd80>
   2b4e8:	0029883a 	mov	r20,zero
   2b4ec:	d9401417 	ldw	r5,80(sp)
   2b4f0:	df000015 	stw	fp,0(sp)
   2b4f4:	8009883a 	mov	r4,r16
   2b4f8:	980d883a 	mov	r6,r19
   2b4fc:	a80f883a 	mov	r7,r21
   2b500:	00296bc0 	call	296bc <__s2b>
   2b504:	d8c01017 	ldw	r3,64(sp)
   2b508:	102d883a 	mov	r22,r2
   2b50c:	b1000304 	addi	r4,r22,12
   2b510:	1805d7fa 	srai	r2,r3,31
   2b514:	00f9c83a 	sub	fp,zero,r3
   2b518:	d9001315 	stw	r4,76(sp)
   2b51c:	e0b8703a 	and	fp,fp,r2
   2b520:	df000e15 	stw	fp,56(sp)
   2b524:	b1400117 	ldw	r5,4(r22)
   2b528:	8009883a 	mov	r4,r16
   2b52c:	0027883a 	mov	r19,zero
   2b530:	00294a80 	call	294a8 <_Balloc>
   2b534:	b1800417 	ldw	r6,16(r22)
   2b538:	d9401317 	ldw	r5,76(sp)
   2b53c:	11000304 	addi	r4,r2,12
   2b540:	31800084 	addi	r6,r6,2
   2b544:	318d883a 	add	r6,r6,r6
   2b548:	318d883a 	add	r6,r6,r6
   2b54c:	1025883a 	mov	r18,r2
   2b550:	00231240 	call	23124 <memcpy>
   2b554:	d9400617 	ldw	r5,24(sp)
   2b558:	d9800717 	ldw	r6,28(sp)
   2b55c:	d8800a04 	addi	r2,sp,40
   2b560:	8009883a 	mov	r4,r16
   2b564:	d9c00d04 	addi	r7,sp,52
   2b568:	d8800015 	stw	r2,0(sp)
   2b56c:	002a19c0 	call	2a19c <__d2b>
   2b570:	8009883a 	mov	r4,r16
   2b574:	01400044 	movi	r5,1
   2b578:	d8800b15 	stw	r2,44(sp)
   2b57c:	00298d80 	call	298d8 <__i2b>
   2b580:	d8c01017 	ldw	r3,64(sp)
   2b584:	1023883a 	mov	r17,r2
   2b588:	00c0010e 	bge	zero,r3,2b590 <_strtod_r+0x798>
   2b58c:	1827883a 	mov	r19,r3
   2b590:	d8800d17 	ldw	r2,52(sp)
   2b594:	1000de16 	blt	r2,zero,2b910 <_strtod_r+0xb18>
   2b598:	d9000e17 	ldw	r4,56(sp)
   2b59c:	9807883a 	mov	r3,r19
   2b5a0:	20af883a 	add	r23,r4,r2
   2b5a4:	d9000a17 	ldw	r4,40(sp)
   2b5a8:	1505c83a 	sub	r2,r2,r20
   2b5ac:	017f00c4 	movi	r5,-1021
   2b5b0:	110d883a 	add	r6,r2,r4
   2b5b4:	31409a0e 	bge	r6,r5,2b820 <_strtod_r+0xa28>
   2b5b8:	10810cc4 	addi	r2,r2,1075
   2b5bc:	b8b9883a 	add	fp,r23,r2
   2b5c0:	1885883a 	add	r2,r3,r2
   2b5c4:	152b883a 	add	r21,r2,r20
   2b5c8:	e005883a 	mov	r2,fp
   2b5cc:	bf00010e 	bge	r23,fp,2b5d4 <_strtod_r+0x7dc>
   2b5d0:	b805883a 	mov	r2,r23
   2b5d4:	a880010e 	bge	r21,r2,2b5dc <_strtod_r+0x7e4>
   2b5d8:	a805883a 	mov	r2,r21
   2b5dc:	0080030e 	bge	zero,r2,2b5ec <_strtod_r+0x7f4>
   2b5e0:	e0b9c83a 	sub	fp,fp,r2
   2b5e4:	a8abc83a 	sub	r21,r21,r2
   2b5e8:	b8afc83a 	sub	r23,r23,r2
   2b5ec:	d9400e17 	ldw	r5,56(sp)
   2b5f0:	28000f26 	beq	r5,zero,2b630 <_strtod_r+0x838>
   2b5f4:	280d883a 	mov	r6,r5
   2b5f8:	8009883a 	mov	r4,r16
   2b5fc:	880b883a 	mov	r5,r17
   2b600:	0029b6c0 	call	29b6c <__pow5mult>
   2b604:	d9800b17 	ldw	r6,44(sp)
   2b608:	8009883a 	mov	r4,r16
   2b60c:	100b883a 	mov	r5,r2
   2b610:	1023883a 	mov	r17,r2
   2b614:	00299140 	call	29914 <__multiply>
   2b618:	d9400b17 	ldw	r5,44(sp)
   2b61c:	8009883a 	mov	r4,r16
   2b620:	d8801815 	stw	r2,96(sp)
   2b624:	00295500 	call	29550 <_Bfree>
   2b628:	d8801817 	ldw	r2,96(sp)
   2b62c:	d8800b15 	stw	r2,44(sp)
   2b630:	0700050e 	bge	zero,fp,2b648 <_strtod_r+0x850>
   2b634:	d9400b17 	ldw	r5,44(sp)
   2b638:	8009883a 	mov	r4,r16
   2b63c:	e00d883a 	mov	r6,fp
   2b640:	0029c980 	call	29c98 <__lshift>
   2b644:	d8800b15 	stw	r2,44(sp)
   2b648:	98000526 	beq	r19,zero,2b660 <_strtod_r+0x868>
   2b64c:	900b883a 	mov	r5,r18
   2b650:	8009883a 	mov	r4,r16
   2b654:	980d883a 	mov	r6,r19
   2b658:	0029b6c0 	call	29b6c <__pow5mult>
   2b65c:	1025883a 	mov	r18,r2
   2b660:	0540050e 	bge	zero,r21,2b678 <_strtod_r+0x880>
   2b664:	900b883a 	mov	r5,r18
   2b668:	8009883a 	mov	r4,r16
   2b66c:	a80d883a 	mov	r6,r21
   2b670:	0029c980 	call	29c98 <__lshift>
   2b674:	1025883a 	mov	r18,r2
   2b678:	05c0050e 	bge	zero,r23,2b690 <_strtod_r+0x898>
   2b67c:	880b883a 	mov	r5,r17
   2b680:	8009883a 	mov	r4,r16
   2b684:	b80d883a 	mov	r6,r23
   2b688:	0029c980 	call	29c98 <__lshift>
   2b68c:	1023883a 	mov	r17,r2
   2b690:	d9400b17 	ldw	r5,44(sp)
   2b694:	8009883a 	mov	r4,r16
   2b698:	900d883a 	mov	r6,r18
   2b69c:	0029e4c0 	call	29e4c <__mdiff>
   2b6a0:	1027883a 	mov	r19,r2
   2b6a4:	10800317 	ldw	r2,12(r2)
   2b6a8:	9809883a 	mov	r4,r19
   2b6ac:	98000315 	stw	zero,12(r19)
   2b6b0:	880b883a 	mov	r5,r17
   2b6b4:	d8800f15 	stw	r2,60(sp)
   2b6b8:	0029df40 	call	29df4 <__mcmp>
   2b6bc:	1001cb16 	blt	r2,zero,2bdec <_strtod_r+0xff4>
   2b6c0:	1001fa26 	beq	r2,zero,2beac <_strtod_r+0x10b4>
   2b6c4:	9809883a 	mov	r4,r19
   2b6c8:	880b883a 	mov	r5,r17
   2b6cc:	002a2e00 	call	2a2e0 <__ratio>
   2b6d0:	1009883a 	mov	r4,r2
   2b6d4:	180b883a 	mov	r5,r3
   2b6d8:	000d883a 	mov	r6,zero
   2b6dc:	01d00034 	movhi	r7,16384
   2b6e0:	102f883a 	mov	r23,r2
   2b6e4:	1839883a 	mov	fp,r3
   2b6e8:	002f9480 	call	2f948 <__ledf2>
   2b6ec:	00804f16 	blt	zero,r2,2b82c <_strtod_r+0xa34>
   2b6f0:	d9400f17 	ldw	r5,60(sp)
   2b6f4:	28008926 	beq	r5,zero,2b91c <_strtod_r+0xb24>
   2b6f8:	da400717 	ldw	r9,28(sp)
   2b6fc:	05cffc34 	movhi	r23,16368
   2b700:	d8000815 	stw	zero,32(sp)
   2b704:	ddc00915 	stw	r23,36(sp)
   2b708:	002b883a 	mov	r21,zero
   2b70c:	4f1ffc2c 	andhi	fp,r9,32752
   2b710:	009ff834 	movhi	r2,32736
   2b714:	e0805526 	beq	fp,r2,2b86c <_strtod_r+0xa74>
   2b718:	a0001b26 	beq	r20,zero,2b788 <_strtod_r+0x990>
   2b71c:	0081a834 	movhi	r2,1696
   2b720:	17001936 	bltu	r2,fp,2b788 <_strtod_r+0x990>
   2b724:	a809883a 	mov	r4,r21
   2b728:	b80b883a 	mov	r5,r23
   2b72c:	01bff034 	movhi	r6,65472
   2b730:	01d07834 	movhi	r7,16864
   2b734:	39ffffc4 	addi	r7,r7,-1
   2b738:	002f9480 	call	2f948 <__ledf2>
   2b73c:	00800d16 	blt	zero,r2,2b774 <_strtod_r+0x97c>
   2b740:	a809883a 	mov	r4,r21
   2b744:	b80b883a 	mov	r5,r23
   2b748:	002e0cc0 	call	2e0cc <__fixunsdfsi>
   2b74c:	1000d626 	beq	r2,zero,2baa8 <_strtod_r+0xcb0>
   2b750:	1009883a 	mov	r4,r2
   2b754:	002fbac0 	call	2fbac <__floatunsidf>
   2b758:	102b883a 	mov	r21,r2
   2b75c:	182f883a 	mov	r23,r3
   2b760:	d9400f17 	ldw	r5,60(sp)
   2b764:	2800ce1e 	bne	r5,zero,2baa0 <_strtod_r+0xca8>
   2b768:	b8a0003c 	xorhi	r2,r23,32768
   2b76c:	dd400815 	stw	r21,32(sp)
   2b770:	d8800915 	stw	r2,36(sp)
   2b774:	d8c00917 	ldw	r3,36(sp)
   2b778:	0081ac34 	movhi	r2,1712
   2b77c:	1885883a 	add	r2,r3,r2
   2b780:	1705c83a 	sub	r2,r2,fp
   2b784:	d8800915 	stw	r2,36(sp)
   2b788:	d9000617 	ldw	r4,24(sp)
   2b78c:	d9400717 	ldw	r5,28(sp)
   2b790:	0029ff40 	call	29ff4 <__ulp>
   2b794:	da800617 	ldw	r10,24(sp)
   2b798:	da400717 	ldw	r9,28(sp)
   2b79c:	d9800817 	ldw	r6,32(sp)
   2b7a0:	d9c00917 	ldw	r7,36(sp)
   2b7a4:	1009883a 	mov	r4,r2
   2b7a8:	180b883a 	mov	r5,r3
   2b7ac:	da401915 	stw	r9,100(sp)
   2b7b0:	da801815 	stw	r10,96(sp)
   2b7b4:	002f2d40 	call	2f2d4 <__muldf3>
   2b7b8:	da401917 	ldw	r9,100(sp)
   2b7bc:	da801817 	ldw	r10,96(sp)
   2b7c0:	100d883a 	mov	r6,r2
   2b7c4:	480b883a 	mov	r5,r9
   2b7c8:	5009883a 	mov	r4,r10
   2b7cc:	180f883a 	mov	r7,r3
   2b7d0:	002f2200 	call	2f220 <__adddf3>
   2b7d4:	d8800615 	stw	r2,24(sp)
   2b7d8:	d8c00715 	stw	r3,28(sp)
   2b7dc:	1813883a 	mov	r9,r3
   2b7e0:	a000021e 	bne	r20,zero,2b7ec <_strtod_r+0x9f4>
   2b7e4:	489ffc2c 	andhi	r2,r9,32752
   2b7e8:	e0807226 	beq	fp,r2,2b9b4 <_strtod_r+0xbbc>
   2b7ec:	d9400b17 	ldw	r5,44(sp)
   2b7f0:	8009883a 	mov	r4,r16
   2b7f4:	00295500 	call	29550 <_Bfree>
   2b7f8:	8009883a 	mov	r4,r16
   2b7fc:	900b883a 	mov	r5,r18
   2b800:	00295500 	call	29550 <_Bfree>
   2b804:	8009883a 	mov	r4,r16
   2b808:	880b883a 	mov	r5,r17
   2b80c:	00295500 	call	29550 <_Bfree>
   2b810:	8009883a 	mov	r4,r16
   2b814:	980b883a 	mov	r5,r19
   2b818:	00295500 	call	29550 <_Bfree>
   2b81c:	003f4106 	br	2b524 <_strtod_r+0x72c>
   2b820:	00800d84 	movi	r2,54
   2b824:	1105c83a 	sub	r2,r2,r4
   2b828:	003f6406 	br	2b5bc <_strtod_r+0x7c4>
   2b82c:	b809883a 	mov	r4,r23
   2b830:	e00b883a 	mov	r5,fp
   2b834:	000d883a 	mov	r6,zero
   2b838:	01cff834 	movhi	r7,16352
   2b83c:	002f2d40 	call	2f2d4 <__muldf3>
   2b840:	d9000f17 	ldw	r4,60(sp)
   2b844:	102b883a 	mov	r21,r2
   2b848:	182f883a 	mov	r23,r3
   2b84c:	2000011e 	bne	r4,zero,2b854 <_strtod_r+0xa5c>
   2b850:	18e0003c 	xorhi	r3,r3,32768
   2b854:	da400717 	ldw	r9,28(sp)
   2b858:	d8800815 	stw	r2,32(sp)
   2b85c:	d8c00915 	stw	r3,36(sp)
   2b860:	4f1ffc2c 	andhi	fp,r9,32752
   2b864:	009ff834 	movhi	r2,32736
   2b868:	e0bfab1e 	bne	fp,r2,2b718 <_strtod_r+0x920>
   2b86c:	d8800617 	ldw	r2,24(sp)
   2b870:	00ff2c34 	movhi	r3,64688
   2b874:	48d3883a 	add	r9,r9,r3
   2b878:	1009883a 	mov	r4,r2
   2b87c:	d8800415 	stw	r2,16(sp)
   2b880:	d8800717 	ldw	r2,28(sp)
   2b884:	480b883a 	mov	r5,r9
   2b888:	da400715 	stw	r9,28(sp)
   2b88c:	d8800515 	stw	r2,20(sp)
   2b890:	0029ff40 	call	29ff4 <__ulp>
   2b894:	da800617 	ldw	r10,24(sp)
   2b898:	da400717 	ldw	r9,28(sp)
   2b89c:	d9800817 	ldw	r6,32(sp)
   2b8a0:	d9c00917 	ldw	r7,36(sp)
   2b8a4:	1009883a 	mov	r4,r2
   2b8a8:	180b883a 	mov	r5,r3
   2b8ac:	da401915 	stw	r9,100(sp)
   2b8b0:	da801815 	stw	r10,96(sp)
   2b8b4:	002f2d40 	call	2f2d4 <__muldf3>
   2b8b8:	da801817 	ldw	r10,96(sp)
   2b8bc:	da401917 	ldw	r9,100(sp)
   2b8c0:	100d883a 	mov	r6,r2
   2b8c4:	5009883a 	mov	r4,r10
   2b8c8:	480b883a 	mov	r5,r9
   2b8cc:	180f883a 	mov	r7,r3
   2b8d0:	002f2200 	call	2f220 <__adddf3>
   2b8d4:	d8800615 	stw	r2,24(sp)
   2b8d8:	015f2834 	movhi	r5,31904
   2b8dc:	297fffc4 	addi	r5,r5,-1
   2b8e0:	189ffc2c 	andhi	r2,r3,32752
   2b8e4:	2880642e 	bgeu	r5,r2,2ba78 <_strtod_r+0xc80>
   2b8e8:	d8800517 	ldw	r2,20(sp)
   2b8ec:	00dffc34 	movhi	r3,32752
   2b8f0:	18ffffc4 	addi	r3,r3,-1
   2b8f4:	10c18526 	beq	r2,r3,2bf0c <_strtod_r+0x1114>
   2b8f8:	011ffc34 	movhi	r4,32752
   2b8fc:	213fffc4 	addi	r4,r4,-1
   2b900:	00bfffc4 	movi	r2,-1
   2b904:	d9000715 	stw	r4,28(sp)
   2b908:	d8800615 	stw	r2,24(sp)
   2b90c:	003fb706 	br	2b7ec <_strtod_r+0x9f4>
   2b910:	9887c83a 	sub	r3,r19,r2
   2b914:	ddc00e17 	ldw	r23,56(sp)
   2b918:	003f2206 	br	2b5a4 <_strtod_r+0x7ac>
   2b91c:	d8800617 	ldw	r2,24(sp)
   2b920:	10001a1e 	bne	r2,zero,2b98c <_strtod_r+0xb94>
   2b924:	da400717 	ldw	r9,28(sp)
   2b928:	00c00434 	movhi	r3,16
   2b92c:	18ffffc4 	addi	r3,r3,-1
   2b930:	48c4703a 	and	r2,r9,r3
   2b934:	1000191e 	bne	r2,zero,2b99c <_strtod_r+0xba4>
   2b938:	b809883a 	mov	r4,r23
   2b93c:	e00b883a 	mov	r5,fp
   2b940:	000d883a 	mov	r6,zero
   2b944:	01cffc34 	movhi	r7,16368
   2b948:	da401915 	stw	r9,100(sp)
   2b94c:	002f8ec0 	call	2f8ec <__ltdf2>
   2b950:	da401917 	ldw	r9,100(sp)
   2b954:	1001bb16 	blt	r2,zero,2c044 <_strtod_r+0x124c>
   2b958:	b809883a 	mov	r4,r23
   2b95c:	e00b883a 	mov	r5,fp
   2b960:	000d883a 	mov	r6,zero
   2b964:	01cff834 	movhi	r7,16352
   2b968:	002f2d40 	call	2f2d4 <__muldf3>
   2b96c:	da401917 	ldw	r9,100(sp)
   2b970:	182f883a 	mov	r23,r3
   2b974:	102b883a 	mov	r21,r2
   2b978:	1007883a 	mov	r3,r2
   2b97c:	b8a0003c 	xorhi	r2,r23,32768
   2b980:	d8c00815 	stw	r3,32(sp)
   2b984:	d8800915 	stw	r2,36(sp)
   2b988:	003f6006 	br	2b70c <_strtod_r+0x914>
   2b98c:	00c00044 	movi	r3,1
   2b990:	da400717 	ldw	r9,28(sp)
   2b994:	10c0011e 	bne	r2,r3,2b99c <_strtod_r+0xba4>
   2b998:	4800c526 	beq	r9,zero,2bcb0 <_strtod_r+0xeb8>
   2b99c:	00affc34 	movhi	r2,49136
   2b9a0:	d8000815 	stw	zero,32(sp)
   2b9a4:	d8800915 	stw	r2,36(sp)
   2b9a8:	002b883a 	mov	r21,zero
   2b9ac:	05cffc34 	movhi	r23,16368
   2b9b0:	003f5606 	br	2b70c <_strtod_r+0x914>
   2b9b4:	b80b883a 	mov	r5,r23
   2b9b8:	a809883a 	mov	r4,r21
   2b9bc:	da401915 	stw	r9,100(sp)
   2b9c0:	002fa780 	call	2fa78 <__fixdfsi>
   2b9c4:	1009883a 	mov	r4,r2
   2b9c8:	002f9a40 	call	2f9a4 <__floatsidf>
   2b9cc:	b80b883a 	mov	r5,r23
   2b9d0:	a809883a 	mov	r4,r21
   2b9d4:	100d883a 	mov	r6,r2
   2b9d8:	180f883a 	mov	r7,r3
   2b9dc:	002f2740 	call	2f274 <__subdf3>
   2b9e0:	102f883a 	mov	r23,r2
   2b9e4:	d8800f17 	ldw	r2,60(sp)
   2b9e8:	1839883a 	mov	fp,r3
   2b9ec:	da401917 	ldw	r9,100(sp)
   2b9f0:	1000021e 	bne	r2,zero,2b9fc <_strtod_r+0xc04>
   2b9f4:	d8800617 	ldw	r2,24(sp)
   2b9f8:	10004826 	beq	r2,zero,2bb1c <_strtod_r+0xd24>
   2b9fc:	b809883a 	mov	r4,r23
   2ba00:	e00b883a 	mov	r5,fp
   2ba04:	01a52834 	movhi	r6,38048
   2ba08:	318d6544 	addi	r6,r6,13717
   2ba0c:	01cff834 	movhi	r7,16352
   2ba10:	39ffffc4 	addi	r7,r7,-1
   2ba14:	002f8ec0 	call	2f8ec <__ltdf2>
   2ba18:	10000716 	blt	r2,zero,2ba38 <_strtod_r+0xc40>
   2ba1c:	b809883a 	mov	r4,r23
   2ba20:	e00b883a 	mov	r5,fp
   2ba24:	018d6c34 	movhi	r6,13744
   2ba28:	31b94d44 	addi	r6,r6,-6859
   2ba2c:	01cff834 	movhi	r7,16352
   2ba30:	002f8240 	call	2f824 <__gtdf2>
   2ba34:	00bf6d0e 	bge	zero,r2,2b7ec <_strtod_r+0x9f4>
   2ba38:	d9400b17 	ldw	r5,44(sp)
   2ba3c:	8009883a 	mov	r4,r16
   2ba40:	00295500 	call	29550 <_Bfree>
   2ba44:	8009883a 	mov	r4,r16
   2ba48:	900b883a 	mov	r5,r18
   2ba4c:	00295500 	call	29550 <_Bfree>
   2ba50:	8009883a 	mov	r4,r16
   2ba54:	880b883a 	mov	r5,r17
   2ba58:	00295500 	call	29550 <_Bfree>
   2ba5c:	8009883a 	mov	r4,r16
   2ba60:	b00b883a 	mov	r5,r22
   2ba64:	00295500 	call	29550 <_Bfree>
   2ba68:	8009883a 	mov	r4,r16
   2ba6c:	980b883a 	mov	r5,r19
   2ba70:	00295500 	call	29550 <_Bfree>
   2ba74:	003e8506 	br	2b48c <_strtod_r+0x694>
   2ba78:	0240d434 	movhi	r9,848
   2ba7c:	1a53883a 	add	r9,r3,r9
   2ba80:	da400715 	stw	r9,28(sp)
   2ba84:	003f5606 	br	2b7e0 <_strtod_r+0x9e8>
   2ba88:	a827883a 	mov	r19,r21
   2ba8c:	dd801415 	stw	r22,80(sp)
   2ba90:	000d883a 	mov	r6,zero
   2ba94:	0029883a 	mov	r20,zero
   2ba98:	d8001015 	stw	zero,64(sp)
   2ba9c:	003d1d06 	br	2af14 <_strtod_r+0x11c>
   2baa0:	b805883a 	mov	r2,r23
   2baa4:	003f3106 	br	2b76c <_strtod_r+0x974>
   2baa8:	002b883a 	mov	r21,zero
   2baac:	05cffc34 	movhi	r23,16368
   2bab0:	003f2b06 	br	2b760 <_strtod_r+0x968>
   2bab4:	d9400e17 	ldw	r5,56(sp)
   2bab8:	0009883a 	mov	r4,zero
   2babc:	d9400c15 	stw	r5,48(sp)
   2bac0:	003d1706 	br	2af20 <_strtod_r+0x128>
   2bac4:	dd801415 	stw	r22,80(sp)
   2bac8:	a82f883a 	mov	r23,r21
   2bacc:	000d883a 	mov	r6,zero
   2bad0:	0029883a 	mov	r20,zero
   2bad4:	3dbff404 	addi	r22,r7,-48
   2bad8:	00800244 	movi	r2,9
   2badc:	15802136 	bltu	r2,r22,2bb64 <_strtod_r+0xd6c>
   2bae0:	31800044 	addi	r6,r6,1
   2bae4:	dc400c17 	ldw	r17,48(sp)
   2bae8:	003daa06 	br	2b194 <_strtod_r+0x39c>
   2baec:	d8001515 	stw	zero,84(sp)
   2baf0:	d9400e17 	ldw	r5,56(sp)
   2baf4:	28800084 	addi	r2,r5,2
   2baf8:	d8800c15 	stw	r2,48(sp)
   2bafc:	29c00087 	ldb	r7,2(r5)
   2bb00:	003ded06 	br	2b2b8 <_strtod_r+0x4c0>
   2bb04:	00c00044 	movi	r3,1
   2bb08:	d8c01515 	stw	r3,84(sp)
   2bb0c:	003ff806 	br	2baf0 <_strtod_r+0xcf8>
   2bb10:	0005883a 	mov	r2,zero
   2bb14:	0007883a 	mov	r3,zero
   2bb18:	003d5806 	br	2b07c <_strtod_r+0x284>
   2bb1c:	00c00434 	movhi	r3,16
   2bb20:	18ffffc4 	addi	r3,r3,-1
   2bb24:	48d2703a 	and	r9,r9,r3
   2bb28:	483fb41e 	bne	r9,zero,2b9fc <_strtod_r+0xc04>
   2bb2c:	b809883a 	mov	r4,r23
   2bb30:	e00b883a 	mov	r5,fp
   2bb34:	01a52834 	movhi	r6,38048
   2bb38:	318d6544 	addi	r6,r6,13717
   2bb3c:	01cff434 	movhi	r7,16336
   2bb40:	39ffffc4 	addi	r7,r7,-1
   2bb44:	002f8ec0 	call	2f8ec <__ltdf2>
   2bb48:	103f280e 	bge	r2,zero,2b7ec <_strtod_r+0x9f4>
   2bb4c:	003fba06 	br	2ba38 <_strtod_r+0xc40>
   2bb50:	d8c01317 	ldw	r3,76(sp)
   2bb54:	183dce1e 	bne	r3,zero,2b290 <_strtod_r+0x498>
   2bb58:	d8800617 	ldw	r2,24(sp)
   2bb5c:	d8c00717 	ldw	r3,28(sp)
   2bb60:	003d4306 	br	2b070 <_strtod_r+0x278>
   2bb64:	00c00044 	movi	r3,1
   2bb68:	a827883a 	mov	r19,r21
   2bb6c:	d8c01015 	stw	r3,64(sp)
   2bb70:	b82b883a 	mov	r21,r23
   2bb74:	003ce506 	br	2af0c <_strtod_r+0x114>
   2bb78:	00804d04 	movi	r2,308
   2bb7c:	1440ec16 	blt	r2,r17,2bf30 <_strtod_r+0x1138>
   2bb80:	8825d13a 	srai	r18,r17,4
   2bb84:	05c00044 	movi	r23,1
   2bb88:	bc81ca0e 	bge	r23,r18,2c2b4 <_strtod_r+0x14bc>
   2bb8c:	d8800617 	ldw	r2,24(sp)
   2bb90:	d8c00717 	ldw	r3,28(sp)
   2bb94:	058000f4 	movhi	r22,3
   2bb98:	b58f7404 	addi	r22,r22,15824
   2bb9c:	b029883a 	mov	r20,r22
   2bba0:	0023883a 	mov	r17,zero
   2bba4:	9180004c 	andi	r6,r18,1
   2bba8:	30000526 	beq	r6,zero,2bbc0 <_strtod_r+0xdc8>
   2bbac:	a1800017 	ldw	r6,0(r20)
   2bbb0:	a1c00117 	ldw	r7,4(r20)
   2bbb4:	1009883a 	mov	r4,r2
   2bbb8:	180b883a 	mov	r5,r3
   2bbbc:	002f2d40 	call	2f2d4 <__muldf3>
   2bbc0:	9025d07a 	srai	r18,r18,1
   2bbc4:	8c400044 	addi	r17,r17,1
   2bbc8:	a5000204 	addi	r20,r20,8
   2bbcc:	bcbff516 	blt	r23,r18,2bba4 <_strtod_r+0xdac>
   2bbd0:	d8800615 	stw	r2,24(sp)
   2bbd4:	d8c00715 	stw	r3,28(sp)
   2bbd8:	880490fa 	slli	r2,r17,3
   2bbdc:	d9400717 	ldw	r5,28(sp)
   2bbe0:	d9000617 	ldw	r4,24(sp)
   2bbe4:	b0a3883a 	add	r17,r22,r2
   2bbe8:	89800017 	ldw	r6,0(r17)
   2bbec:	89c00117 	ldw	r7,4(r17)
   2bbf0:	00bf2c34 	movhi	r2,64688
   2bbf4:	288b883a 	add	r5,r5,r2
   2bbf8:	002f2d40 	call	2f2d4 <__muldf3>
   2bbfc:	d8800615 	stw	r2,24(sp)
   2bc00:	011f2834 	movhi	r4,31904
   2bc04:	189ffc2c 	andhi	r2,r3,32752
   2bc08:	2080c936 	bltu	r4,r2,2bf30 <_strtod_r+0x1138>
   2bc0c:	011f2434 	movhi	r4,31888
   2bc10:	2081652e 	bgeu	r4,r2,2c1a8 <_strtod_r+0x13b0>
   2bc14:	009ffc34 	movhi	r2,32752
   2bc18:	10bfffc4 	addi	r2,r2,-1
   2bc1c:	d8800715 	stw	r2,28(sp)
   2bc20:	00bfffc4 	movi	r2,-1
   2bc24:	d8800615 	stw	r2,24(sp)
   2bc28:	003e2f06 	br	2b4e8 <_strtod_r+0x6f0>
   2bc2c:	00c00044 	movi	r3,1
   2bc30:	0027883a 	mov	r19,zero
   2bc34:	dd801415 	stw	r22,80(sp)
   2bc38:	0029883a 	mov	r20,zero
   2bc3c:	d8c01015 	stw	r3,64(sp)
   2bc40:	003cb206 	br	2af0c <_strtod_r+0x114>
   2bc44:	d8800717 	ldw	r2,28(sp)
   2bc48:	00c00434 	movhi	r3,16
   2bc4c:	18ffffc4 	addi	r3,r3,-1
   2bc50:	10c6703a 	and	r3,r2,r3
   2bc54:	1801471e 	bne	r3,zero,2c174 <_strtod_r+0x137c>
   2bc58:	d8c00617 	ldw	r3,24(sp)
   2bc5c:	18007e26 	beq	r3,zero,2be58 <_strtod_r+0x1060>
   2bc60:	18c0004c 	andi	r3,r3,1
   2bc64:	1800a726 	beq	r3,zero,2bf04 <_strtod_r+0x110c>
   2bc68:	ddc00617 	ldw	r23,24(sp)
   2bc6c:	dd400717 	ldw	r21,28(sp)
   2bc70:	b809883a 	mov	r4,r23
   2bc74:	a80b883a 	mov	r5,r21
   2bc78:	0029ff40 	call	29ff4 <__ulp>
   2bc7c:	b809883a 	mov	r4,r23
   2bc80:	a80b883a 	mov	r5,r21
   2bc84:	100d883a 	mov	r6,r2
   2bc88:	180f883a 	mov	r7,r3
   2bc8c:	002f2740 	call	2f274 <__subdf3>
   2bc90:	1009883a 	mov	r4,r2
   2bc94:	180b883a 	mov	r5,r3
   2bc98:	000d883a 	mov	r6,zero
   2bc9c:	000f883a 	mov	r7,zero
   2bca0:	d8800615 	stw	r2,24(sp)
   2bca4:	d8c00715 	stw	r3,28(sp)
   2bca8:	002f76c0 	call	2f76c <__eqdf2>
   2bcac:	1000951e 	bne	r2,zero,2bf04 <_strtod_r+0x110c>
   2bcb0:	d8000615 	stw	zero,24(sp)
   2bcb4:	d8000715 	stw	zero,28(sp)
   2bcb8:	00800884 	movi	r2,34
   2bcbc:	80800015 	stw	r2,0(r16)
   2bcc0:	003f5d06 	br	2ba38 <_strtod_r+0xc40>
   2bcc4:	00800404 	movi	r2,16
   2bcc8:	153d4916 	blt	r2,r20,2b1f0 <_strtod_r+0x3f8>
   2bccc:	8009883a 	mov	r4,r16
   2bcd0:	01400284 	movi	r5,10
   2bcd4:	00211880 	call	21188 <__mulsi3>
   2bcd8:	1021883a 	mov	r16,r2
   2bcdc:	003d4406 	br	2b1f0 <_strtod_r+0x3f8>
   2bce0:	d9001217 	ldw	r4,72(sp)
   2bce4:	d8800b04 	addi	r2,sp,44
   2bce8:	04c000f4 	movhi	r19,3
   2bcec:	9cd22004 	addi	r19,r19,18560
   2bcf0:	d9000115 	stw	r4,4(sp)
   2bcf4:	d8800015 	stw	r2,0(sp)
   2bcf8:	8009883a 	mov	r4,r16
   2bcfc:	d9400c04 	addi	r5,sp,48
   2bd00:	980d883a 	mov	r6,r19
   2bd04:	d9c00a04 	addi	r7,sp,40
   2bd08:	002d5b80 	call	2d5b8 <__gethex>
   2bd0c:	148001cc 	andi	r18,r2,7
   2bd10:	903dde26 	beq	r18,zero,2b48c <_strtod_r+0x694>
   2bd14:	00c00184 	movi	r3,6
   2bd18:	90c0f226 	beq	r18,r3,2c0e4 <_strtod_r+0x12ec>
   2bd1c:	d9800b17 	ldw	r6,44(sp)
   2bd20:	30000826 	beq	r6,zero,2bd44 <_strtod_r+0xf4c>
   2bd24:	99400017 	ldw	r5,0(r19)
   2bd28:	d9000204 	addi	r4,sp,8
   2bd2c:	d8801815 	stw	r2,96(sp)
   2bd30:	002a3f80 	call	2a3f8 <__copybits>
   2bd34:	d9400b17 	ldw	r5,44(sp)
   2bd38:	8009883a 	mov	r4,r16
   2bd3c:	00295500 	call	29550 <_Bfree>
   2bd40:	d8801817 	ldw	r2,96(sp)
   2bd44:	00c00184 	movi	r3,6
   2bd48:	d9000a17 	ldw	r4,40(sp)
   2bd4c:	1cbdca36 	bltu	r3,r18,2b478 <_strtod_r+0x680>
   2bd50:	94a5883a 	add	r18,r18,r18
   2bd54:	94a5883a 	add	r18,r18,r18
   2bd58:	00c000f4 	movhi	r3,3
   2bd5c:	18ef5b04 	addi	r3,r3,-17044
   2bd60:	90c7883a 	add	r3,r18,r3
   2bd64:	18c00017 	ldw	r3,0(r3)
   2bd68:	1800683a 	jmp	r3
   2bd6c:	0002bde0 	cmpeqi	zero,zero,2807
   2bd70:	0002bd9c 	xori	zero,zero,2806
   2bd74:	0002bd88 	cmpgei	zero,zero,2806
   2bd78:	0002b46c 	andhi	zero,zero,2769
   2bd7c:	0002bdc8 	cmpgei	zero,zero,2807
   2bd80:	0002bd9c 	xori	zero,zero,2806
   2bd84:	0002bde0 	cmpeqi	zero,zero,2807
   2bd88:	d8c00217 	ldw	r3,8(sp)
   2bd8c:	d8c00615 	stw	r3,24(sp)
   2bd90:	d8c00317 	ldw	r3,12(sp)
   2bd94:	d8c00715 	stw	r3,28(sp)
   2bd98:	003db706 	br	2b478 <_strtod_r+0x680>
   2bd9c:	21010cc4 	addi	r4,r4,1075
   2bda0:	d9400317 	ldw	r5,12(sp)
   2bda4:	2008953a 	slli	r4,r4,20
   2bda8:	00fffc34 	movhi	r3,65520
   2bdac:	18ffffc4 	addi	r3,r3,-1
   2bdb0:	28c6703a 	and	r3,r5,r3
   2bdb4:	20c6b03a 	or	r3,r4,r3
   2bdb8:	d9000217 	ldw	r4,8(sp)
   2bdbc:	d8c00715 	stw	r3,28(sp)
   2bdc0:	d9000615 	stw	r4,24(sp)
   2bdc4:	003dac06 	br	2b478 <_strtod_r+0x680>
   2bdc8:	00e00034 	movhi	r3,32768
   2bdcc:	18ffffc4 	addi	r3,r3,-1
   2bdd0:	d8c00715 	stw	r3,28(sp)
   2bdd4:	00ffffc4 	movi	r3,-1
   2bdd8:	d8c00615 	stw	r3,24(sp)
   2bddc:	003da606 	br	2b478 <_strtod_r+0x680>
   2bde0:	d8000715 	stw	zero,28(sp)
   2bde4:	d8000615 	stw	zero,24(sp)
   2bde8:	003da306 	br	2b478 <_strtod_r+0x680>
   2bdec:	d8c00f17 	ldw	r3,60(sp)
   2bdf0:	1800441e 	bne	r3,zero,2bf04 <_strtod_r+0x110c>
   2bdf4:	d8800617 	ldw	r2,24(sp)
   2bdf8:	1000421e 	bne	r2,zero,2bf04 <_strtod_r+0x110c>
   2bdfc:	d8800717 	ldw	r2,28(sp)
   2be00:	00c00434 	movhi	r3,16
   2be04:	18ffffc4 	addi	r3,r3,-1
   2be08:	10c6703a 	and	r3,r2,r3
   2be0c:	18003d1e 	bne	r3,zero,2bf04 <_strtod_r+0x110c>
   2be10:	109ffc2c 	andhi	r2,r2,32752
   2be14:	00c1ac34 	movhi	r3,1712
   2be18:	18803a2e 	bgeu	r3,r2,2bf04 <_strtod_r+0x110c>
   2be1c:	98800517 	ldw	r2,20(r19)
   2be20:	1000031e 	bne	r2,zero,2be30 <_strtod_r+0x1038>
   2be24:	98800417 	ldw	r2,16(r19)
   2be28:	00c00044 	movi	r3,1
   2be2c:	1880350e 	bge	r3,r2,2bf04 <_strtod_r+0x110c>
   2be30:	980b883a 	mov	r5,r19
   2be34:	8009883a 	mov	r4,r16
   2be38:	01800044 	movi	r6,1
   2be3c:	0029c980 	call	29c98 <__lshift>
   2be40:	1009883a 	mov	r4,r2
   2be44:	880b883a 	mov	r5,r17
   2be48:	1027883a 	mov	r19,r2
   2be4c:	0029df40 	call	29df4 <__mcmp>
   2be50:	00802c0e 	bge	zero,r2,2bf04 <_strtod_r+0x110c>
   2be54:	d8800717 	ldw	r2,28(sp)
   2be58:	109ffc2c 	andhi	r2,r2,32752
   2be5c:	a000ed26 	beq	r20,zero,2c214 <_strtod_r+0x141c>
   2be60:	00c1ac34 	movhi	r3,1712
   2be64:	1880eb36 	bltu	r3,r2,2c214 <_strtod_r+0x141c>
   2be68:	00c0dc34 	movhi	r3,880
   2be6c:	18bf902e 	bgeu	r3,r2,2bcb0 <_strtod_r+0xeb8>
   2be70:	d9000617 	ldw	r4,24(sp)
   2be74:	d9400717 	ldw	r5,28(sp)
   2be78:	008e5434 	movhi	r2,14672
   2be7c:	000d883a 	mov	r6,zero
   2be80:	100f883a 	mov	r7,r2
   2be84:	d8800515 	stw	r2,20(sp)
   2be88:	d8000415 	stw	zero,16(sp)
   2be8c:	002f2d40 	call	2f2d4 <__muldf3>
   2be90:	d8800615 	stw	r2,24(sp)
   2be94:	d8c00715 	stw	r3,28(sp)
   2be98:	183ee71e 	bne	r3,zero,2ba38 <_strtod_r+0xc40>
   2be9c:	103ee61e 	bne	r2,zero,2ba38 <_strtod_r+0xc40>
   2bea0:	00800884 	movi	r2,34
   2bea4:	80800015 	stw	r2,0(r16)
   2bea8:	003ee306 	br	2ba38 <_strtod_r+0xc40>
   2beac:	d9000f17 	ldw	r4,60(sp)
   2beb0:	203f6426 	beq	r4,zero,2bc44 <_strtod_r+0xe4c>
   2beb4:	d8c00717 	ldw	r3,28(sp)
   2beb8:	00800434 	movhi	r2,16
   2bebc:	10bfffc4 	addi	r2,r2,-1
   2bec0:	1888703a 	and	r4,r3,r2
   2bec4:	2080bd26 	beq	r4,r2,2c1bc <_strtod_r+0x13c4>
   2bec8:	d8800617 	ldw	r2,24(sp)
   2becc:	1080004c 	andi	r2,r2,1
   2bed0:	10000c26 	beq	r2,zero,2bf04 <_strtod_r+0x110c>
   2bed4:	ddc00617 	ldw	r23,24(sp)
   2bed8:	dd400717 	ldw	r21,28(sp)
   2bedc:	b809883a 	mov	r4,r23
   2bee0:	a80b883a 	mov	r5,r21
   2bee4:	0029ff40 	call	29ff4 <__ulp>
   2bee8:	b809883a 	mov	r4,r23
   2beec:	a80b883a 	mov	r5,r21
   2bef0:	100d883a 	mov	r6,r2
   2bef4:	180f883a 	mov	r7,r3
   2bef8:	002f2200 	call	2f220 <__adddf3>
   2befc:	d8800615 	stw	r2,24(sp)
   2bf00:	d8c00715 	stw	r3,28(sp)
   2bf04:	a03fda1e 	bne	r20,zero,2be70 <_strtod_r+0x1078>
   2bf08:	003ecb06 	br	2ba38 <_strtod_r+0xc40>
   2bf0c:	d8c00417 	ldw	r3,16(sp)
   2bf10:	00bfffc4 	movi	r2,-1
   2bf14:	18be781e 	bne	r3,r2,2b8f8 <_strtod_r+0xb00>
   2bf18:	00800884 	movi	r2,34
   2bf1c:	80800015 	stw	r2,0(r16)
   2bf20:	009ffc34 	movhi	r2,32752
   2bf24:	d8800715 	stw	r2,28(sp)
   2bf28:	d8000615 	stw	zero,24(sp)
   2bf2c:	003ec206 	br	2ba38 <_strtod_r+0xc40>
   2bf30:	00800884 	movi	r2,34
   2bf34:	80800015 	stw	r2,0(r16)
   2bf38:	00dffc34 	movhi	r3,32752
   2bf3c:	0005883a 	mov	r2,zero
   2bf40:	003c4e06 	br	2b07c <_strtod_r+0x284>
   2bf44:	883d6826 	beq	r17,zero,2b4e8 <_strtod_r+0x6f0>
   2bf48:	0463c83a 	sub	r17,zero,r17
   2bf4c:	888003cc 	andi	r2,r17,15
   2bf50:	10000b26 	beq	r2,zero,2bf80 <_strtod_r+0x1188>
   2bf54:	100490fa 	slli	r2,r2,3
   2bf58:	00c000f4 	movhi	r3,3
   2bf5c:	18cf7e04 	addi	r3,r3,15864
   2bf60:	d9000617 	ldw	r4,24(sp)
   2bf64:	1885883a 	add	r2,r3,r2
   2bf68:	d9400717 	ldw	r5,28(sp)
   2bf6c:	11800017 	ldw	r6,0(r2)
   2bf70:	11c00117 	ldw	r7,4(r2)
   2bf74:	002f5b80 	call	2f5b8 <__divdf3>
   2bf78:	d8800615 	stw	r2,24(sp)
   2bf7c:	d8c00715 	stw	r3,28(sp)
   2bf80:	8823d13a 	srai	r17,r17,4
   2bf84:	883d5826 	beq	r17,zero,2b4e8 <_strtod_r+0x6f0>
   2bf88:	008007c4 	movi	r2,31
   2bf8c:	14402816 	blt	r2,r17,2c030 <_strtod_r+0x1238>
   2bf90:	8880040c 	andi	r2,r17,16
   2bf94:	1000cf1e 	bne	r2,zero,2c2d4 <_strtod_r+0x14dc>
   2bf98:	0029883a 	mov	r20,zero
   2bf9c:	0440100e 	bge	zero,r17,2bfe0 <_strtod_r+0x11e8>
   2bfa0:	d8800617 	ldw	r2,24(sp)
   2bfa4:	d8c00717 	ldw	r3,28(sp)
   2bfa8:	048000f4 	movhi	r18,3
   2bfac:	948fb704 	addi	r18,r18,16092
   2bfb0:	8980004c 	andi	r6,r17,1
   2bfb4:	30000526 	beq	r6,zero,2bfcc <_strtod_r+0x11d4>
   2bfb8:	91800017 	ldw	r6,0(r18)
   2bfbc:	91c00117 	ldw	r7,4(r18)
   2bfc0:	1009883a 	mov	r4,r2
   2bfc4:	180b883a 	mov	r5,r3
   2bfc8:	002f2d40 	call	2f2d4 <__muldf3>
   2bfcc:	8823d07a 	srai	r17,r17,1
   2bfd0:	94800204 	addi	r18,r18,8
   2bfd4:	883ff61e 	bne	r17,zero,2bfb0 <_strtod_r+0x11b8>
   2bfd8:	d8800615 	stw	r2,24(sp)
   2bfdc:	d8c00715 	stw	r3,28(sp)
   2bfe0:	a0000d26 	beq	r20,zero,2c018 <_strtod_r+0x1220>
   2bfe4:	d8c00717 	ldw	r3,28(sp)
   2bfe8:	01001ac4 	movi	r4,107
   2bfec:	189ffc2c 	andhi	r2,r3,32752
   2bff0:	1004d53a 	srli	r2,r2,20
   2bff4:	2085c83a 	sub	r2,r4,r2
   2bff8:	0080070e 	bge	zero,r2,2c018 <_strtod_r+0x1220>
   2bffc:	010007c4 	movi	r4,31
   2c000:	2080c30e 	bge	r4,r2,2c310 <_strtod_r+0x1518>
   2c004:	d8000615 	stw	zero,24(sp)
   2c008:	01000d04 	movi	r4,52
   2c00c:	2080c60e 	bge	r4,r2,2c328 <_strtod_r+0x1530>
   2c010:	0080dc34 	movhi	r2,880
   2c014:	d8800715 	stw	r2,28(sp)
   2c018:	d9000617 	ldw	r4,24(sp)
   2c01c:	d9400717 	ldw	r5,28(sp)
   2c020:	000d883a 	mov	r6,zero
   2c024:	000f883a 	mov	r7,zero
   2c028:	002f76c0 	call	2f76c <__eqdf2>
   2c02c:	103d2f1e 	bne	r2,zero,2b4ec <_strtod_r+0x6f4>
   2c030:	00800884 	movi	r2,34
   2c034:	80800015 	stw	r2,0(r16)
   2c038:	0007883a 	mov	r3,zero
   2c03c:	0005883a 	mov	r2,zero
   2c040:	003c0e06 	br	2b07c <_strtod_r+0x284>
   2c044:	0007883a 	mov	r3,zero
   2c048:	00aff834 	movhi	r2,49120
   2c04c:	002b883a 	mov	r21,zero
   2c050:	05cff834 	movhi	r23,16352
   2c054:	003e4a06 	br	2b980 <_strtod_r+0xb88>
   2c058:	011387c4 	movi	r4,19999
   2c05c:	003cca06 	br	2b388 <_strtod_r+0x590>
   2c060:	b00b883a 	mov	r5,r22
   2c064:	d8000f15 	stw	zero,60(sp)
   2c068:	0039883a 	mov	fp,zero
   2c06c:	002b883a 	mov	r21,zero
   2c070:	003c2d06 	br	2b128 <_strtod_r+0x330>
   2c074:	d8000f15 	stw	zero,60(sp)
   2c078:	0039883a 	mov	fp,zero
   2c07c:	002b883a 	mov	r21,zero
   2c080:	003b9d06 	br	2aef8 <_strtod_r+0x100>
   2c084:	d9401017 	ldw	r5,64(sp)
   2c088:	00c00944 	movi	r3,37
   2c08c:	1d47c83a 	sub	r3,r3,r21
   2c090:	197d0116 	blt	r3,r5,2b498 <_strtod_r+0x6a0>
   2c094:	1563c83a 	sub	r17,r2,r21
   2c098:	880490fa 	slli	r2,r17,3
   2c09c:	040000f4 	movhi	r16,3
   2c0a0:	840f7e04 	addi	r16,r16,15864
   2c0a4:	d9000617 	ldw	r4,24(sp)
   2c0a8:	8085883a 	add	r2,r16,r2
   2c0ac:	d9400717 	ldw	r5,28(sp)
   2c0b0:	11800017 	ldw	r6,0(r2)
   2c0b4:	11c00117 	ldw	r7,4(r2)
   2c0b8:	002f2d40 	call	2f2d4 <__muldf3>
   2c0bc:	d9001017 	ldw	r4,64(sp)
   2c0c0:	180b883a 	mov	r5,r3
   2c0c4:	244dc83a 	sub	r6,r4,r17
   2c0c8:	300c90fa 	slli	r6,r6,3
   2c0cc:	1009883a 	mov	r4,r2
   2c0d0:	81a1883a 	add	r16,r16,r6
   2c0d4:	81800017 	ldw	r6,0(r16)
   2c0d8:	81c00117 	ldw	r7,4(r16)
   2c0dc:	002f2d40 	call	2f2d4 <__muldf3>
   2c0e0:	003be606 	br	2b07c <_strtod_r+0x284>
   2c0e4:	d9400e17 	ldw	r5,56(sp)
   2c0e8:	d8001215 	stw	zero,72(sp)
   2c0ec:	d9400c15 	stw	r5,48(sp)
   2c0f0:	003ce606 	br	2b48c <_strtod_r+0x694>
   2c0f4:	d9401017 	ldw	r5,64(sp)
   2c0f8:	00bffa84 	movi	r2,-22
   2c0fc:	28bce616 	blt	r5,r2,2b498 <_strtod_r+0x6a0>
   2c100:	280490fa 	slli	r2,r5,3
   2c104:	00c000f4 	movhi	r3,3
   2c108:	18cf7e04 	addi	r3,r3,15864
   2c10c:	d9000617 	ldw	r4,24(sp)
   2c110:	1885c83a 	sub	r2,r3,r2
   2c114:	d9400717 	ldw	r5,28(sp)
   2c118:	11800017 	ldw	r6,0(r2)
   2c11c:	11c00117 	ldw	r7,4(r2)
   2c120:	002f5b80 	call	2f5b8 <__divdf3>
   2c124:	003bd506 	br	2b07c <_strtod_r+0x284>
   2c128:	00801a44 	movi	r2,105
   2c12c:	38bb8726 	beq	r7,r2,2af4c <_strtod_r+0x154>
   2c130:	00801b84 	movi	r2,110
   2c134:	38be881e 	bne	r7,r2,2bb58 <_strtod_r+0xd60>
   2c138:	d8c00c17 	ldw	r3,48(sp)
   2c13c:	010000f4 	movhi	r4,3
   2c140:	210fb604 	addi	r4,r4,16088
   2c144:	01801004 	movi	r6,64
   2c148:	01c01684 	movi	r7,90
   2c14c:	21400007 	ldb	r5,0(r4)
   2c150:	21000044 	addi	r4,r4,1
   2c154:	28004e26 	beq	r5,zero,2c290 <_strtod_r+0x1498>
   2c158:	18c00044 	addi	r3,r3,1
   2c15c:	18800007 	ldb	r2,0(r3)
   2c160:	3080020e 	bge	r6,r2,2c16c <_strtod_r+0x1374>
   2c164:	38800116 	blt	r7,r2,2c16c <_strtod_r+0x1374>
   2c168:	10800804 	addi	r2,r2,32
   2c16c:	117ff726 	beq	r2,r5,2c14c <_strtod_r+0x1354>
   2c170:	003e7906 	br	2bb58 <_strtod_r+0xd60>
   2c174:	d8c00617 	ldw	r3,24(sp)
   2c178:	003eb906 	br	2bc60 <_strtod_r+0xe68>
   2c17c:	00800404 	movi	r2,16
   2c180:	15c02216 	blt	r2,r23,2c20c <_strtod_r+0x1414>
   2c184:	d9000f17 	ldw	r4,60(sp)
   2c188:	01400284 	movi	r5,10
   2c18c:	00211880 	call	21188 <__mulsi3>
   2c190:	15ad883a 	add	r22,r2,r22
   2c194:	dd800f15 	stw	r22,60(sp)
   2c198:	000d883a 	mov	r6,zero
   2c19c:	003c2606 	br	2b238 <_strtod_r+0x440>
   2c1a0:	000d883a 	mov	r6,zero
   2c1a4:	003bf106 	br	2b16c <_strtod_r+0x374>
   2c1a8:	0080d434 	movhi	r2,848
   2c1ac:	1887883a 	add	r3,r3,r2
   2c1b0:	d8c00715 	stw	r3,28(sp)
   2c1b4:	0029883a 	mov	r20,zero
   2c1b8:	003ccc06 	br	2b4ec <_strtod_r+0x6f4>
   2c1bc:	d8800617 	ldw	r2,24(sp)
   2c1c0:	a0001026 	beq	r20,zero,2c204 <_strtod_r+0x140c>
   2c1c4:	191ffc2c 	andhi	r4,r3,32752
   2c1c8:	0141a834 	movhi	r5,1696
   2c1cc:	29000d36 	bltu	r5,r4,2c204 <_strtod_r+0x140c>
   2c1d0:	2008d53a 	srli	r4,r4,20
   2c1d4:	01401ac4 	movi	r5,107
   2c1d8:	2909c83a 	sub	r4,r5,r4
   2c1dc:	017fffc4 	movi	r5,-1
   2c1e0:	2908983a 	sll	r4,r5,r4
   2c1e4:	113f391e 	bne	r2,r4,2becc <_strtod_r+0x10d4>
   2c1e8:	18dffc2c 	andhi	r3,r3,32752
   2c1ec:	00800434 	movhi	r2,16
   2c1f0:	1885883a 	add	r2,r3,r2
   2c1f4:	d8800715 	stw	r2,28(sp)
   2c1f8:	d8000615 	stw	zero,24(sp)
   2c1fc:	a03f1c1e 	bne	r20,zero,2be70 <_strtod_r+0x1078>
   2c200:	003e0d06 	br	2ba38 <_strtod_r+0xc40>
   2c204:	013fffc4 	movi	r4,-1
   2c208:	003ff606 	br	2c1e4 <_strtod_r+0x13ec>
   2c20c:	000d883a 	mov	r6,zero
   2c210:	003c0906 	br	2b238 <_strtod_r+0x440>
   2c214:	00fffc34 	movhi	r3,65520
   2c218:	10c5883a 	add	r2,r2,r3
   2c21c:	00c00434 	movhi	r3,16
   2c220:	18ffffc4 	addi	r3,r3,-1
   2c224:	10c4b03a 	or	r2,r2,r3
   2c228:	d8800715 	stw	r2,28(sp)
   2c22c:	00bfffc4 	movi	r2,-1
   2c230:	d8800615 	stw	r2,24(sp)
   2c234:	a03f0e1e 	bne	r20,zero,2be70 <_strtod_r+0x1078>
   2c238:	003dff06 	br	2ba38 <_strtod_r+0xc40>
   2c23c:	1011883a 	mov	r8,r2
   2c240:	d8800c15 	stw	r2,48(sp)
   2c244:	010000f4 	movhi	r4,3
   2c248:	210fb404 	addi	r4,r4,16080
   2c24c:	01801004 	movi	r6,64
   2c250:	01c01684 	movi	r7,90
   2c254:	21400007 	ldb	r5,0(r4)
   2c258:	10800044 	addi	r2,r2,1
   2c25c:	21000044 	addi	r4,r4,1
   2c260:	28001a26 	beq	r5,zero,2c2cc <_strtod_r+0x14d4>
   2c264:	10c00007 	ldb	r3,0(r2)
   2c268:	30c0020e 	bge	r6,r3,2c274 <_strtod_r+0x147c>
   2c26c:	38c00116 	blt	r7,r3,2c274 <_strtod_r+0x147c>
   2c270:	18c00804 	addi	r3,r3,32
   2c274:	197ff726 	beq	r3,r5,2c254 <_strtod_r+0x145c>
   2c278:	40800044 	addi	r2,r8,1
   2c27c:	d8800c15 	stw	r2,48(sp)
   2c280:	009ffc34 	movhi	r2,32752
   2c284:	d8800715 	stw	r2,28(sp)
   2c288:	d8000615 	stw	zero,24(sp)
   2c28c:	003c7f06 	br	2b48c <_strtod_r+0x694>
   2c290:	18800044 	addi	r2,r3,1
   2c294:	d8800c15 	stw	r2,48(sp)
   2c298:	18c00047 	ldb	r3,1(r3)
   2c29c:	00800a04 	movi	r2,40
   2c2a0:	18800e26 	beq	r3,r2,2c2dc <_strtod_r+0x14e4>
   2c2a4:	00bffe34 	movhi	r2,65528
   2c2a8:	d8800715 	stw	r2,28(sp)
   2c2ac:	d8000615 	stw	zero,24(sp)
   2c2b0:	003c7606 	br	2b48c <_strtod_r+0x694>
   2c2b4:	0023883a 	mov	r17,zero
   2c2b8:	058000f4 	movhi	r22,3
   2c2bc:	b58f7404 	addi	r22,r22,15824
   2c2c0:	003e4506 	br	2bbd8 <_strtod_r+0xde0>
   2c2c4:	b805883a 	mov	r2,r23
   2c2c8:	003bd306 	br	2b218 <_strtod_r+0x420>
   2c2cc:	d8800c15 	stw	r2,48(sp)
   2c2d0:	003feb06 	br	2c280 <_strtod_r+0x1488>
   2c2d4:	05001a84 	movi	r20,106
   2c2d8:	003f3006 	br	2bf9c <_strtod_r+0x11a4>
   2c2dc:	d9000c04 	addi	r4,sp,48
   2c2e0:	014000f4 	movhi	r5,3
   2c2e4:	29522504 	addi	r5,r5,18580
   2c2e8:	d9800204 	addi	r6,sp,8
   2c2ec:	002dd300 	call	2dd30 <__hexnan>
   2c2f0:	00c00144 	movi	r3,5
   2c2f4:	10ffeb1e 	bne	r2,r3,2c2a4 <_strtod_r+0x14ac>
   2c2f8:	d8800317 	ldw	r2,12(sp)
   2c2fc:	109ffc34 	orhi	r2,r2,32752
   2c300:	d8800715 	stw	r2,28(sp)
   2c304:	d8800217 	ldw	r2,8(sp)
   2c308:	d8800615 	stw	r2,24(sp)
   2c30c:	003c5f06 	br	2b48c <_strtod_r+0x694>
   2c310:	00ffffc4 	movi	r3,-1
   2c314:	1884983a 	sll	r2,r3,r2
   2c318:	d8c00617 	ldw	r3,24(sp)
   2c31c:	1884703a 	and	r2,r3,r2
   2c320:	d8800615 	stw	r2,24(sp)
   2c324:	003f3c06 	br	2c018 <_strtod_r+0x1220>
   2c328:	10bff804 	addi	r2,r2,-32
   2c32c:	013fffc4 	movi	r4,-1
   2c330:	2084983a 	sll	r2,r4,r2
   2c334:	10c6703a 	and	r3,r2,r3
   2c338:	d8c00715 	stw	r3,28(sp)
   2c33c:	003f3606 	br	2c018 <_strtod_r+0x1220>

0002c340 <strtod>:
   2c340:	00c000f4 	movhi	r3,3
   2c344:	18d6b704 	addi	r3,r3,23260
   2c348:	2005883a 	mov	r2,r4
   2c34c:	19000017 	ldw	r4,0(r3)
   2c350:	280d883a 	mov	r6,r5
   2c354:	100b883a 	mov	r5,r2
   2c358:	002adf81 	jmpi	2adf8 <_strtod_r>

0002c35c <strtof>:
   2c35c:	defffb04 	addi	sp,sp,-20
   2c360:	dcc00315 	stw	r19,12(sp)
   2c364:	04c000f4 	movhi	r19,3
   2c368:	9cd6b704 	addi	r19,r19,23260
   2c36c:	2005883a 	mov	r2,r4
   2c370:	99000017 	ldw	r4,0(r19)
   2c374:	280d883a 	mov	r6,r5
   2c378:	100b883a 	mov	r5,r2
   2c37c:	dfc00415 	stw	ra,16(sp)
   2c380:	dc800215 	stw	r18,8(sp)
   2c384:	dc400115 	stw	r17,4(sp)
   2c388:	dc000015 	stw	r16,0(sp)
   2c38c:	002adf80 	call	2adf8 <_strtod_r>
   2c390:	1009883a 	mov	r4,r2
   2c394:	180b883a 	mov	r5,r3
   2c398:	1025883a 	mov	r18,r2
   2c39c:	1823883a 	mov	r17,r3
   2c3a0:	002fb4c0 	call	2fb4c <__truncdfsf2>
   2c3a4:	1009883a 	mov	r4,r2
   2c3a8:	000b883a 	mov	r5,zero
   2c3ac:	1021883a 	mov	r16,r2
   2c3b0:	002edc80 	call	2edc8 <__eqsf2>
   2c3b4:	1000111e 	bne	r2,zero,2c3fc <strtof+0xa0>
   2c3b8:	9009883a 	mov	r4,r18
   2c3bc:	880b883a 	mov	r5,r17
   2c3c0:	000d883a 	mov	r6,zero
   2c3c4:	000f883a 	mov	r7,zero
   2c3c8:	002f7c80 	call	2f7c8 <__nedf2>
   2c3cc:	10000b26 	beq	r2,zero,2c3fc <strtof+0xa0>
   2c3d0:	98800017 	ldw	r2,0(r19)
   2c3d4:	00c00884 	movi	r3,34
   2c3d8:	10c00015 	stw	r3,0(r2)
   2c3dc:	8005883a 	mov	r2,r16
   2c3e0:	dfc00417 	ldw	ra,16(sp)
   2c3e4:	dcc00317 	ldw	r19,12(sp)
   2c3e8:	dc800217 	ldw	r18,8(sp)
   2c3ec:	dc400117 	ldw	r17,4(sp)
   2c3f0:	dc000017 	ldw	r16,0(sp)
   2c3f4:	dec00504 	addi	sp,sp,20
   2c3f8:	f800283a 	ret
   2c3fc:	8009883a 	mov	r4,r16
   2c400:	015fe034 	movhi	r5,32640
   2c404:	297fffc4 	addi	r5,r5,-1
   2c408:	002ee1c0 	call	2ee1c <__gtsf2>
   2c40c:	0080070e 	bge	zero,r2,2c42c <strtof+0xd0>
   2c410:	9009883a 	mov	r4,r18
   2c414:	880b883a 	mov	r5,r17
   2c418:	01bfffc4 	movi	r6,-1
   2c41c:	01dffc34 	movhi	r7,32752
   2c420:	39ffffc4 	addi	r7,r7,-1
   2c424:	002f8240 	call	2f824 <__gtdf2>
   2c428:	00bfe90e 	bge	zero,r2,2c3d0 <strtof+0x74>
   2c42c:	8009883a 	mov	r4,r16
   2c430:	017fe034 	movhi	r5,65408
   2c434:	297fffc4 	addi	r5,r5,-1
   2c438:	002ee780 	call	2ee78 <__ltsf2>
   2c43c:	103fe70e 	bge	r2,zero,2c3dc <strtof+0x80>
   2c440:	9009883a 	mov	r4,r18
   2c444:	880b883a 	mov	r5,r17
   2c448:	01bfffc4 	movi	r6,-1
   2c44c:	01fffc34 	movhi	r7,65520
   2c450:	39ffffc4 	addi	r7,r7,-1
   2c454:	002f8ec0 	call	2f8ec <__ltdf2>
   2c458:	103fdd0e 	bge	r2,zero,2c3d0 <strtof+0x74>
   2c45c:	8005883a 	mov	r2,r16
   2c460:	dfc00417 	ldw	ra,16(sp)
   2c464:	dcc00317 	ldw	r19,12(sp)
   2c468:	dc800217 	ldw	r18,8(sp)
   2c46c:	dc400117 	ldw	r17,4(sp)
   2c470:	dc000017 	ldw	r16,0(sp)
   2c474:	dec00504 	addi	sp,sp,20
   2c478:	f800283a 	ret

0002c47c <_strtol_r>:
   2c47c:	defff304 	addi	sp,sp,-52
   2c480:	008000f4 	movhi	r2,3
   2c484:	1096ba04 	addi	r2,r2,23272
   2c488:	df000b15 	stw	fp,44(sp)
   2c48c:	17000017 	ldw	fp,0(r2)
   2c490:	ddc00a15 	stw	r23,40(sp)
   2c494:	dd000715 	stw	r20,28(sp)
   2c498:	dcc00615 	stw	r19,24(sp)
   2c49c:	dc000315 	stw	r16,12(sp)
   2c4a0:	dfc00c15 	stw	ra,48(sp)
   2c4a4:	dd800915 	stw	r22,36(sp)
   2c4a8:	dd400815 	stw	r21,32(sp)
   2c4ac:	dc800515 	stw	r18,20(sp)
   2c4b0:	dc400415 	stw	r17,16(sp)
   2c4b4:	2827883a 	mov	r19,r5
   2c4b8:	d9000215 	stw	r4,8(sp)
   2c4bc:	3029883a 	mov	r20,r6
   2c4c0:	382f883a 	mov	r23,r7
   2c4c4:	2821883a 	mov	r16,r5
   2c4c8:	84400007 	ldb	r17,0(r16)
   2c4cc:	84000044 	addi	r16,r16,1
   2c4d0:	e445883a 	add	r2,fp,r17
   2c4d4:	10800003 	ldbu	r2,0(r2)
   2c4d8:	1080020c 	andi	r2,r2,8
   2c4dc:	10803fcc 	andi	r2,r2,255
   2c4e0:	1080201c 	xori	r2,r2,128
   2c4e4:	10bfe004 	addi	r2,r2,-128
   2c4e8:	103ff71e 	bne	r2,zero,2c4c8 <_strtol_r+0x4c>
   2c4ec:	00800b44 	movi	r2,45
   2c4f0:	88806d26 	beq	r17,r2,2c6a8 <_strtol_r+0x22c>
   2c4f4:	00800ac4 	movi	r2,43
   2c4f8:	88807026 	beq	r17,r2,2c6bc <_strtol_r+0x240>
   2c4fc:	d8000015 	stw	zero,0(sp)
   2c500:	b800471e 	bne	r23,zero,2c620 <_strtol_r+0x1a4>
   2c504:	00800c04 	movi	r2,48
   2c508:	88804926 	beq	r17,r2,2c630 <_strtol_r+0x1b4>
   2c50c:	05c00284 	movi	r23,10
   2c510:	b825883a 	mov	r18,r23
   2c514:	d9000017 	ldw	r4,0(sp)
   2c518:	20006026 	beq	r4,zero,2c69c <_strtol_r+0x220>
   2c51c:	05600034 	movhi	r21,32768
   2c520:	a809883a 	mov	r4,r21
   2c524:	900b883a 	mov	r5,r18
   2c528:	002fdf00 	call	2fdf0 <__umodsi3>
   2c52c:	a809883a 	mov	r4,r21
   2c530:	900b883a 	mov	r5,r18
   2c534:	d8800115 	stw	r2,4(sp)
   2c538:	002fde80 	call	2fde8 <__udivsi3>
   2c53c:	e447883a 	add	r3,fp,r17
   2c540:	18c00003 	ldbu	r3,0(r3)
   2c544:	102b883a 	mov	r21,r2
   2c548:	000d883a 	mov	r6,zero
   2c54c:	1940010c 	andi	r5,r3,4
   2c550:	29403fcc 	andi	r5,r5,255
   2c554:	2940201c 	xori	r5,r5,128
   2c558:	297fe004 	addi	r5,r5,-128
   2c55c:	0009883a 	mov	r4,zero
   2c560:	05bfffc4 	movi	r22,-1
   2c564:	28001226 	beq	r5,zero,2c5b0 <_strtol_r+0x134>
   2c568:	8c7ff404 	addi	r17,r17,-48
   2c56c:	8dc0170e 	bge	r17,r23,2c5cc <_strtol_r+0x150>
   2c570:	35800626 	beq	r6,r22,2c58c <_strtol_r+0x110>
   2c574:	a9003a36 	bltu	r21,r4,2c660 <_strtol_r+0x1e4>
   2c578:	25403726 	beq	r4,r21,2c658 <_strtol_r+0x1dc>
   2c57c:	900b883a 	mov	r5,r18
   2c580:	00211880 	call	21188 <__mulsi3>
   2c584:	8889883a 	add	r4,r17,r2
   2c588:	01800044 	movi	r6,1
   2c58c:	84400007 	ldb	r17,0(r16)
   2c590:	84000044 	addi	r16,r16,1
   2c594:	e447883a 	add	r3,fp,r17
   2c598:	18c00003 	ldbu	r3,0(r3)
   2c59c:	1940010c 	andi	r5,r3,4
   2c5a0:	29403fcc 	andi	r5,r5,255
   2c5a4:	2940201c 	xori	r5,r5,128
   2c5a8:	297fe004 	addi	r5,r5,-128
   2c5ac:	283fee1e 	bne	r5,zero,2c568 <_strtol_r+0xec>
   2c5b0:	188000cc 	andi	r2,r3,3
   2c5b4:	10000526 	beq	r2,zero,2c5cc <_strtol_r+0x150>
   2c5b8:	18c0004c 	andi	r3,r3,1
   2c5bc:	18002a26 	beq	r3,zero,2c668 <_strtol_r+0x1ec>
   2c5c0:	00800dc4 	movi	r2,55
   2c5c4:	88a3c83a 	sub	r17,r17,r2
   2c5c8:	8dffe916 	blt	r17,r23,2c570 <_strtol_r+0xf4>
   2c5cc:	00bfffc4 	movi	r2,-1
   2c5d0:	30802826 	beq	r6,r2,2c674 <_strtol_r+0x1f8>
   2c5d4:	d8800017 	ldw	r2,0(sp)
   2c5d8:	10000126 	beq	r2,zero,2c5e0 <_strtol_r+0x164>
   2c5dc:	0109c83a 	sub	r4,zero,r4
   2c5e0:	2005883a 	mov	r2,r4
   2c5e4:	a0000226 	beq	r20,zero,2c5f0 <_strtol_r+0x174>
   2c5e8:	30002a1e 	bne	r6,zero,2c694 <_strtol_r+0x218>
   2c5ec:	a4c00015 	stw	r19,0(r20)
   2c5f0:	dfc00c17 	ldw	ra,48(sp)
   2c5f4:	df000b17 	ldw	fp,44(sp)
   2c5f8:	ddc00a17 	ldw	r23,40(sp)
   2c5fc:	dd800917 	ldw	r22,36(sp)
   2c600:	dd400817 	ldw	r21,32(sp)
   2c604:	dd000717 	ldw	r20,28(sp)
   2c608:	dcc00617 	ldw	r19,24(sp)
   2c60c:	dc800517 	ldw	r18,20(sp)
   2c610:	dc400417 	ldw	r17,16(sp)
   2c614:	dc000317 	ldw	r16,12(sp)
   2c618:	dec00d04 	addi	sp,sp,52
   2c61c:	f800283a 	ret
   2c620:	00800404 	movi	r2,16
   2c624:	b8bfba1e 	bne	r23,r2,2c510 <_strtol_r+0x94>
   2c628:	00800c04 	movi	r2,48
   2c62c:	88bfb81e 	bne	r17,r2,2c510 <_strtol_r+0x94>
   2c630:	80800007 	ldb	r2,0(r16)
   2c634:	00c01e04 	movi	r3,120
   2c638:	10c02626 	beq	r2,r3,2c6d4 <_strtol_r+0x258>
   2c63c:	00c01604 	movi	r3,88
   2c640:	10c02426 	beq	r2,r3,2c6d4 <_strtol_r+0x258>
   2c644:	b800281e 	bne	r23,zero,2c6e8 <_strtol_r+0x26c>
   2c648:	04800204 	movi	r18,8
   2c64c:	04400c04 	movi	r17,48
   2c650:	902f883a 	mov	r23,r18
   2c654:	003faf06 	br	2c514 <_strtol_r+0x98>
   2c658:	d8800117 	ldw	r2,4(sp)
   2c65c:	147fc70e 	bge	r2,r17,2c57c <_strtol_r+0x100>
   2c660:	01bfffc4 	movi	r6,-1
   2c664:	003fc906 	br	2c58c <_strtol_r+0x110>
   2c668:	008015c4 	movi	r2,87
   2c66c:	88a3c83a 	sub	r17,r17,r2
   2c670:	003fd506 	br	2c5c8 <_strtol_r+0x14c>
   2c674:	d9000017 	ldw	r4,0(sp)
   2c678:	2000141e 	bne	r4,zero,2c6cc <_strtol_r+0x250>
   2c67c:	00a00034 	movhi	r2,32768
   2c680:	10bfffc4 	addi	r2,r2,-1
   2c684:	d9000217 	ldw	r4,8(sp)
   2c688:	00c00884 	movi	r3,34
   2c68c:	20c00015 	stw	r3,0(r4)
   2c690:	a03fd726 	beq	r20,zero,2c5f0 <_strtol_r+0x174>
   2c694:	84ffffc4 	addi	r19,r16,-1
   2c698:	003fd406 	br	2c5ec <_strtol_r+0x170>
   2c69c:	05600034 	movhi	r21,32768
   2c6a0:	ad7fffc4 	addi	r21,r21,-1
   2c6a4:	003f9e06 	br	2c520 <_strtol_r+0xa4>
   2c6a8:	00800044 	movi	r2,1
   2c6ac:	84400007 	ldb	r17,0(r16)
   2c6b0:	d8800015 	stw	r2,0(sp)
   2c6b4:	80a1883a 	add	r16,r16,r2
   2c6b8:	003f9106 	br	2c500 <_strtol_r+0x84>
   2c6bc:	84400007 	ldb	r17,0(r16)
   2c6c0:	d8000015 	stw	zero,0(sp)
   2c6c4:	84000044 	addi	r16,r16,1
   2c6c8:	003f8d06 	br	2c500 <_strtol_r+0x84>
   2c6cc:	00a00034 	movhi	r2,32768
   2c6d0:	003fec06 	br	2c684 <_strtol_r+0x208>
   2c6d4:	04800404 	movi	r18,16
   2c6d8:	84400047 	ldb	r17,1(r16)
   2c6dc:	902f883a 	mov	r23,r18
   2c6e0:	84000084 	addi	r16,r16,2
   2c6e4:	003f8b06 	br	2c514 <_strtol_r+0x98>
   2c6e8:	b825883a 	mov	r18,r23
   2c6ec:	04400c04 	movi	r17,48
   2c6f0:	003f8806 	br	2c514 <_strtol_r+0x98>

0002c6f4 <strtol>:
   2c6f4:	008000f4 	movhi	r2,3
   2c6f8:	1096b704 	addi	r2,r2,23260
   2c6fc:	2007883a 	mov	r3,r4
   2c700:	11000017 	ldw	r4,0(r2)
   2c704:	2805883a 	mov	r2,r5
   2c708:	300f883a 	mov	r7,r6
   2c70c:	180b883a 	mov	r5,r3
   2c710:	100d883a 	mov	r6,r2
   2c714:	002c47c1 	jmpi	2c47c <_strtol_r>

0002c718 <_strtoll_r>:
   2c718:	defff004 	addi	sp,sp,-64
   2c71c:	008000f4 	movhi	r2,3
   2c720:	1096ba04 	addi	r2,r2,23272
   2c724:	ddc00d15 	stw	r23,52(sp)
   2c728:	15c00017 	ldw	r23,0(r2)
   2c72c:	df000e15 	stw	fp,56(sp)
   2c730:	dc000615 	stw	r16,24(sp)
   2c734:	dfc00f15 	stw	ra,60(sp)
   2c738:	dd800c15 	stw	r22,48(sp)
   2c73c:	dd400b15 	stw	r21,44(sp)
   2c740:	dd000a15 	stw	r20,40(sp)
   2c744:	dcc00915 	stw	r19,36(sp)
   2c748:	dc800815 	stw	r18,32(sp)
   2c74c:	dc400715 	stw	r17,28(sp)
   2c750:	d9400015 	stw	r5,0(sp)
   2c754:	d9000415 	stw	r4,16(sp)
   2c758:	d9800115 	stw	r6,4(sp)
   2c75c:	3839883a 	mov	fp,r7
   2c760:	2821883a 	mov	r16,r5
   2c764:	82000007 	ldb	r8,0(r16)
   2c768:	84000044 	addi	r16,r16,1
   2c76c:	ba05883a 	add	r2,r23,r8
   2c770:	10800003 	ldbu	r2,0(r2)
   2c774:	1080020c 	andi	r2,r2,8
   2c778:	10803fcc 	andi	r2,r2,255
   2c77c:	1080201c 	xori	r2,r2,128
   2c780:	10bfe004 	addi	r2,r2,-128
   2c784:	103ff71e 	bne	r2,zero,2c764 <_strtoll_r+0x4c>
   2c788:	00800b44 	movi	r2,45
   2c78c:	40807a26 	beq	r8,r2,2c978 <_strtoll_r+0x260>
   2c790:	00800ac4 	movi	r2,43
   2c794:	40808826 	beq	r8,r2,2c9b8 <_strtoll_r+0x2a0>
   2c798:	d8000215 	stw	zero,8(sp)
   2c79c:	e000061e 	bne	fp,zero,2c7b8 <_strtoll_r+0xa0>
   2c7a0:	00800c04 	movi	r2,48
   2c7a4:	40808b26 	beq	r8,r2,2c9d4 <_strtoll_r+0x2bc>
   2c7a8:	04800284 	movi	r18,10
   2c7ac:	0027883a 	mov	r19,zero
   2c7b0:	9039883a 	mov	fp,r18
   2c7b4:	00000406 	br	2c7c8 <_strtoll_r+0xb0>
   2c7b8:	00800404 	movi	r2,16
   2c7bc:	e0809926 	beq	fp,r2,2ca24 <_strtoll_r+0x30c>
   2c7c0:	e027d7fa 	srai	r19,fp,31
   2c7c4:	e025883a 	mov	r18,fp
   2c7c8:	d9000217 	ldw	r4,8(sp)
   2c7cc:	20006226 	beq	r4,zero,2c958 <_strtoll_r+0x240>
   2c7d0:	002b883a 	mov	r21,zero
   2c7d4:	04600034 	movhi	r17,32768
   2c7d8:	a809883a 	mov	r4,r21
   2c7dc:	880b883a 	mov	r5,r17
   2c7e0:	900d883a 	mov	r6,r18
   2c7e4:	980f883a 	mov	r7,r19
   2c7e8:	da000515 	stw	r8,20(sp)
   2c7ec:	002e7a00 	call	2e7a0 <__umoddi3>
   2c7f0:	a809883a 	mov	r4,r21
   2c7f4:	880b883a 	mov	r5,r17
   2c7f8:	900d883a 	mov	r6,r18
   2c7fc:	980f883a 	mov	r7,r19
   2c800:	d8800315 	stw	r2,12(sp)
   2c804:	002e1500 	call	2e150 <__udivdi3>
   2c808:	da000517 	ldw	r8,20(sp)
   2c80c:	182b883a 	mov	r21,r3
   2c810:	1023883a 	mov	r17,r2
   2c814:	ba0d883a 	add	r6,r23,r8
   2c818:	31800003 	ldbu	r6,0(r6)
   2c81c:	0007883a 	mov	r3,zero
   2c820:	0009883a 	mov	r4,zero
   2c824:	3240010c 	andi	r9,r6,4
   2c828:	4a403fcc 	andi	r9,r9,255
   2c82c:	4a40201c 	xori	r9,r9,128
   2c830:	4a7fe004 	addi	r9,r9,-128
   2c834:	000b883a 	mov	r5,zero
   2c838:	05bfffc4 	movi	r22,-1
   2c83c:	48001026 	beq	r9,zero,2c880 <_strtoll_r+0x168>
   2c840:	453ff404 	addi	r20,r8,-48
   2c844:	a700150e 	bge	r20,fp,2c89c <_strtoll_r+0x184>
   2c848:	1d800426 	beq	r3,r22,2c85c <_strtoll_r+0x144>
   2c84c:	a9400236 	bltu	r21,r5,2c858 <_strtoll_r+0x140>
   2c850:	2d402e1e 	bne	r5,r21,2c90c <_strtoll_r+0x1f4>
   2c854:	89002d2e 	bgeu	r17,r4,2c90c <_strtoll_r+0x1f4>
   2c858:	00ffffc4 	movi	r3,-1
   2c85c:	82000007 	ldb	r8,0(r16)
   2c860:	84000044 	addi	r16,r16,1
   2c864:	ba0d883a 	add	r6,r23,r8
   2c868:	31800003 	ldbu	r6,0(r6)
   2c86c:	3240010c 	andi	r9,r6,4
   2c870:	4a403fcc 	andi	r9,r9,255
   2c874:	4a40201c 	xori	r9,r9,128
   2c878:	4a7fe004 	addi	r9,r9,-128
   2c87c:	483ff01e 	bne	r9,zero,2c840 <_strtoll_r+0x128>
   2c880:	308000cc 	andi	r2,r6,3
   2c884:	10000526 	beq	r2,zero,2c89c <_strtoll_r+0x184>
   2c888:	3180004c 	andi	r6,r6,1
   2c88c:	30002b26 	beq	r6,zero,2c93c <_strtoll_r+0x224>
   2c890:	00800dc4 	movi	r2,55
   2c894:	40a9c83a 	sub	r20,r8,r2
   2c898:	a73feb16 	blt	r20,fp,2c848 <_strtoll_r+0x130>
   2c89c:	00bfffc4 	movi	r2,-1
   2c8a0:	18803a26 	beq	r3,r2,2c98c <_strtoll_r+0x274>
   2c8a4:	d8800217 	ldw	r2,8(sp)
   2c8a8:	10000426 	beq	r2,zero,2c8bc <_strtoll_r+0x1a4>
   2c8ac:	0109c83a 	sub	r4,zero,r4
   2c8b0:	2004c03a 	cmpne	r2,r4,zero
   2c8b4:	014bc83a 	sub	r5,zero,r5
   2c8b8:	288bc83a 	sub	r5,r5,r2
   2c8bc:	d8800117 	ldw	r2,4(sp)
   2c8c0:	10004f26 	beq	r2,zero,2ca00 <_strtoll_r+0x2e8>
   2c8c4:	2005883a 	mov	r2,r4
   2c8c8:	1800271e 	bne	r3,zero,2c968 <_strtoll_r+0x250>
   2c8cc:	2807883a 	mov	r3,r5
   2c8d0:	d9400017 	ldw	r5,0(sp)
   2c8d4:	d9000117 	ldw	r4,4(sp)
   2c8d8:	21400015 	stw	r5,0(r4)
   2c8dc:	dfc00f17 	ldw	ra,60(sp)
   2c8e0:	df000e17 	ldw	fp,56(sp)
   2c8e4:	ddc00d17 	ldw	r23,52(sp)
   2c8e8:	dd800c17 	ldw	r22,48(sp)
   2c8ec:	dd400b17 	ldw	r21,44(sp)
   2c8f0:	dd000a17 	ldw	r20,40(sp)
   2c8f4:	dcc00917 	ldw	r19,36(sp)
   2c8f8:	dc800817 	ldw	r18,32(sp)
   2c8fc:	dc400717 	ldw	r17,28(sp)
   2c900:	dc000617 	ldw	r16,24(sp)
   2c904:	dec01004 	addi	sp,sp,64
   2c908:	f800283a 	ret
   2c90c:	24400e26 	beq	r4,r17,2c948 <_strtoll_r+0x230>
   2c910:	900d883a 	mov	r6,r18
   2c914:	980f883a 	mov	r7,r19
   2c918:	002dfbc0 	call	2dfbc <__muldi3>
   2c91c:	a00dd7fa 	srai	r6,r20,31
   2c920:	a085883a 	add	r2,r20,r2
   2c924:	1511803a 	cmpltu	r8,r2,r20
   2c928:	30c7883a 	add	r3,r6,r3
   2c92c:	40cb883a 	add	r5,r8,r3
   2c930:	1009883a 	mov	r4,r2
   2c934:	00c00044 	movi	r3,1
   2c938:	003fc806 	br	2c85c <_strtoll_r+0x144>
   2c93c:	008015c4 	movi	r2,87
   2c940:	40a9c83a 	sub	r20,r8,r2
   2c944:	003fd406 	br	2c898 <_strtoll_r+0x180>
   2c948:	2d7ff11e 	bne	r5,r21,2c910 <_strtoll_r+0x1f8>
   2c94c:	d8800317 	ldw	r2,12(sp)
   2c950:	153fc116 	blt	r2,r20,2c858 <_strtoll_r+0x140>
   2c954:	003fee06 	br	2c910 <_strtoll_r+0x1f8>
   2c958:	057fffc4 	movi	r21,-1
   2c95c:	04600034 	movhi	r17,32768
   2c960:	8c7fffc4 	addi	r17,r17,-1
   2c964:	003f9c06 	br	2c7d8 <_strtoll_r+0xc0>
   2c968:	2807883a 	mov	r3,r5
   2c96c:	843fffc4 	addi	r16,r16,-1
   2c970:	dc000015 	stw	r16,0(sp)
   2c974:	003fd606 	br	2c8d0 <_strtoll_r+0x1b8>
   2c978:	00800044 	movi	r2,1
   2c97c:	82000007 	ldb	r8,0(r16)
   2c980:	d8800215 	stw	r2,8(sp)
   2c984:	80a1883a 	add	r16,r16,r2
   2c988:	003f8406 	br	2c79c <_strtoll_r+0x84>
   2c98c:	d9000217 	ldw	r4,8(sp)
   2c990:	20000d1e 	bne	r4,zero,2c9c8 <_strtoll_r+0x2b0>
   2c994:	1805883a 	mov	r2,r3
   2c998:	00e00034 	movhi	r3,32768
   2c99c:	18ffffc4 	addi	r3,r3,-1
   2c9a0:	d9400417 	ldw	r5,16(sp)
   2c9a4:	01000884 	movi	r4,34
   2c9a8:	29000015 	stw	r4,0(r5)
   2c9ac:	d9000117 	ldw	r4,4(sp)
   2c9b0:	203fee1e 	bne	r4,zero,2c96c <_strtoll_r+0x254>
   2c9b4:	003fc906 	br	2c8dc <_strtoll_r+0x1c4>
   2c9b8:	82000007 	ldb	r8,0(r16)
   2c9bc:	d8000215 	stw	zero,8(sp)
   2c9c0:	84000044 	addi	r16,r16,1
   2c9c4:	003f7506 	br	2c79c <_strtoll_r+0x84>
   2c9c8:	0005883a 	mov	r2,zero
   2c9cc:	00e00034 	movhi	r3,32768
   2c9d0:	003ff306 	br	2c9a0 <_strtoll_r+0x288>
   2c9d4:	80800007 	ldb	r2,0(r16)
   2c9d8:	00c01e04 	movi	r3,120
   2c9dc:	10c00b26 	beq	r2,r3,2ca0c <_strtoll_r+0x2f4>
   2c9e0:	00c01604 	movi	r3,88
   2c9e4:	10c00926 	beq	r2,r3,2ca0c <_strtoll_r+0x2f4>
   2c9e8:	e000131e 	bne	fp,zero,2ca38 <_strtoll_r+0x320>
   2c9ec:	04800204 	movi	r18,8
   2c9f0:	0027883a 	mov	r19,zero
   2c9f4:	02000c04 	movi	r8,48
   2c9f8:	9039883a 	mov	fp,r18
   2c9fc:	003f7206 	br	2c7c8 <_strtoll_r+0xb0>
   2ca00:	2005883a 	mov	r2,r4
   2ca04:	2807883a 	mov	r3,r5
   2ca08:	003fb406 	br	2c8dc <_strtoll_r+0x1c4>
   2ca0c:	04800404 	movi	r18,16
   2ca10:	82000047 	ldb	r8,1(r16)
   2ca14:	0027883a 	mov	r19,zero
   2ca18:	84000084 	addi	r16,r16,2
   2ca1c:	9039883a 	mov	fp,r18
   2ca20:	003f6906 	br	2c7c8 <_strtoll_r+0xb0>
   2ca24:	00800c04 	movi	r2,48
   2ca28:	40bfea26 	beq	r8,r2,2c9d4 <_strtoll_r+0x2bc>
   2ca2c:	e025883a 	mov	r18,fp
   2ca30:	0027883a 	mov	r19,zero
   2ca34:	003f6406 	br	2c7c8 <_strtoll_r+0xb0>
   2ca38:	e025883a 	mov	r18,fp
   2ca3c:	e027d7fa 	srai	r19,fp,31
   2ca40:	02000c04 	movi	r8,48
   2ca44:	003f6006 	br	2c7c8 <_strtoll_r+0xb0>

0002ca48 <_strtoul_r>:
   2ca48:	defff304 	addi	sp,sp,-52
   2ca4c:	008000f4 	movhi	r2,3
   2ca50:	1096ba04 	addi	r2,r2,23272
   2ca54:	df000b15 	stw	fp,44(sp)
   2ca58:	17000017 	ldw	fp,0(r2)
   2ca5c:	ddc00a15 	stw	r23,40(sp)
   2ca60:	dd000715 	stw	r20,28(sp)
   2ca64:	dcc00615 	stw	r19,24(sp)
   2ca68:	dc000315 	stw	r16,12(sp)
   2ca6c:	dfc00c15 	stw	ra,48(sp)
   2ca70:	dd800915 	stw	r22,36(sp)
   2ca74:	dd400815 	stw	r21,32(sp)
   2ca78:	dc800515 	stw	r18,20(sp)
   2ca7c:	dc400415 	stw	r17,16(sp)
   2ca80:	2827883a 	mov	r19,r5
   2ca84:	d9000215 	stw	r4,8(sp)
   2ca88:	3029883a 	mov	r20,r6
   2ca8c:	382f883a 	mov	r23,r7
   2ca90:	2821883a 	mov	r16,r5
   2ca94:	84400007 	ldb	r17,0(r16)
   2ca98:	84000044 	addi	r16,r16,1
   2ca9c:	e445883a 	add	r2,fp,r17
   2caa0:	10800003 	ldbu	r2,0(r2)
   2caa4:	1080020c 	andi	r2,r2,8
   2caa8:	10803fcc 	andi	r2,r2,255
   2caac:	1080201c 	xori	r2,r2,128
   2cab0:	10bfe004 	addi	r2,r2,-128
   2cab4:	103ff71e 	bne	r2,zero,2ca94 <_strtoul_r+0x4c>
   2cab8:	00800b44 	movi	r2,45
   2cabc:	88805e26 	beq	r17,r2,2cc38 <_strtoul_r+0x1f0>
   2cac0:	00800ac4 	movi	r2,43
   2cac4:	88806126 	beq	r17,r2,2cc4c <_strtoul_r+0x204>
   2cac8:	d8000115 	stw	zero,4(sp)
   2cacc:	b800091e 	bne	r23,zero,2caf4 <_strtoul_r+0xac>
   2cad0:	00800c04 	movi	r2,48
   2cad4:	88806326 	beq	r17,r2,2cc64 <_strtoul_r+0x21c>
   2cad8:	05c00284 	movi	r23,10
   2cadc:	00800144 	movi	r2,5
   2cae0:	d8800015 	stw	r2,0(sp)
   2cae4:	058666b4 	movhi	r22,6554
   2cae8:	b5a66644 	addi	r22,r22,-26215
   2caec:	b825883a 	mov	r18,r23
   2caf0:	00000b06 	br	2cb20 <_strtoul_r+0xd8>
   2caf4:	00800404 	movi	r2,16
   2caf8:	b8805826 	beq	r23,r2,2cc5c <_strtoul_r+0x214>
   2cafc:	013fffc4 	movi	r4,-1
   2cb00:	b80b883a 	mov	r5,r23
   2cb04:	002fde80 	call	2fde8 <__udivsi3>
   2cb08:	013fffc4 	movi	r4,-1
   2cb0c:	b80b883a 	mov	r5,r23
   2cb10:	102d883a 	mov	r22,r2
   2cb14:	002fdf00 	call	2fdf0 <__umodsi3>
   2cb18:	d8800015 	stw	r2,0(sp)
   2cb1c:	b825883a 	mov	r18,r23
   2cb20:	e447883a 	add	r3,fp,r17
   2cb24:	18c00003 	ldbu	r3,0(r3)
   2cb28:	0011883a 	mov	r8,zero
   2cb2c:	0009883a 	mov	r4,zero
   2cb30:	1980010c 	andi	r6,r3,4
   2cb34:	31803fcc 	andi	r6,r6,255
   2cb38:	3180201c 	xori	r6,r6,128
   2cb3c:	31bfe004 	addi	r6,r6,-128
   2cb40:	057fffc4 	movi	r21,-1
   2cb44:	30001226 	beq	r6,zero,2cb90 <_strtoul_r+0x148>
   2cb48:	8c7ff404 	addi	r17,r17,-48
   2cb4c:	8dc0170e 	bge	r17,r23,2cbac <_strtoul_r+0x164>
   2cb50:	45400626 	beq	r8,r21,2cb6c <_strtoul_r+0x124>
   2cb54:	b1002c36 	bltu	r22,r4,2cc08 <_strtoul_r+0x1c0>
   2cb58:	25802926 	beq	r4,r22,2cc00 <_strtoul_r+0x1b8>
   2cb5c:	900b883a 	mov	r5,r18
   2cb60:	00211880 	call	21188 <__mulsi3>
   2cb64:	8889883a 	add	r4,r17,r2
   2cb68:	02000044 	movi	r8,1
   2cb6c:	84400007 	ldb	r17,0(r16)
   2cb70:	84000044 	addi	r16,r16,1
   2cb74:	e447883a 	add	r3,fp,r17
   2cb78:	18c00003 	ldbu	r3,0(r3)
   2cb7c:	1980010c 	andi	r6,r3,4
   2cb80:	31803fcc 	andi	r6,r6,255
   2cb84:	3180201c 	xori	r6,r6,128
   2cb88:	31bfe004 	addi	r6,r6,-128
   2cb8c:	303fee1e 	bne	r6,zero,2cb48 <_strtoul_r+0x100>
   2cb90:	188000cc 	andi	r2,r3,3
   2cb94:	10000526 	beq	r2,zero,2cbac <_strtoul_r+0x164>
   2cb98:	18c0004c 	andi	r3,r3,1
   2cb9c:	18001c26 	beq	r3,zero,2cc10 <_strtoul_r+0x1c8>
   2cba0:	00800dc4 	movi	r2,55
   2cba4:	88a3c83a 	sub	r17,r17,r2
   2cba8:	8dffe916 	blt	r17,r23,2cb50 <_strtoul_r+0x108>
   2cbac:	00bfffc4 	movi	r2,-1
   2cbb0:	40801a26 	beq	r8,r2,2cc1c <_strtoul_r+0x1d4>
   2cbb4:	d8c00117 	ldw	r3,4(sp)
   2cbb8:	18000126 	beq	r3,zero,2cbc0 <_strtoul_r+0x178>
   2cbbc:	0109c83a 	sub	r4,zero,r4
   2cbc0:	a0000226 	beq	r20,zero,2cbcc <_strtoul_r+0x184>
   2cbc4:	40001a1e 	bne	r8,zero,2cc30 <_strtoul_r+0x1e8>
   2cbc8:	a4c00015 	stw	r19,0(r20)
   2cbcc:	2005883a 	mov	r2,r4
   2cbd0:	dfc00c17 	ldw	ra,48(sp)
   2cbd4:	df000b17 	ldw	fp,44(sp)
   2cbd8:	ddc00a17 	ldw	r23,40(sp)
   2cbdc:	dd800917 	ldw	r22,36(sp)
   2cbe0:	dd400817 	ldw	r21,32(sp)
   2cbe4:	dd000717 	ldw	r20,28(sp)
   2cbe8:	dcc00617 	ldw	r19,24(sp)
   2cbec:	dc800517 	ldw	r18,20(sp)
   2cbf0:	dc400417 	ldw	r17,16(sp)
   2cbf4:	dc000317 	ldw	r16,12(sp)
   2cbf8:	dec00d04 	addi	sp,sp,52
   2cbfc:	f800283a 	ret
   2cc00:	d8800017 	ldw	r2,0(sp)
   2cc04:	147fd50e 	bge	r2,r17,2cb5c <_strtoul_r+0x114>
   2cc08:	023fffc4 	movi	r8,-1
   2cc0c:	003fd706 	br	2cb6c <_strtoul_r+0x124>
   2cc10:	008015c4 	movi	r2,87
   2cc14:	88a3c83a 	sub	r17,r17,r2
   2cc18:	003fe306 	br	2cba8 <_strtoul_r+0x160>
   2cc1c:	d8c00217 	ldw	r3,8(sp)
   2cc20:	00800884 	movi	r2,34
   2cc24:	4009883a 	mov	r4,r8
   2cc28:	18800015 	stw	r2,0(r3)
   2cc2c:	a03fe726 	beq	r20,zero,2cbcc <_strtoul_r+0x184>
   2cc30:	84ffffc4 	addi	r19,r16,-1
   2cc34:	003fe406 	br	2cbc8 <_strtoul_r+0x180>
   2cc38:	00c00044 	movi	r3,1
   2cc3c:	84400007 	ldb	r17,0(r16)
   2cc40:	d8c00115 	stw	r3,4(sp)
   2cc44:	80e1883a 	add	r16,r16,r3
   2cc48:	003fa006 	br	2cacc <_strtoul_r+0x84>
   2cc4c:	84400007 	ldb	r17,0(r16)
   2cc50:	d8000115 	stw	zero,4(sp)
   2cc54:	84000044 	addi	r16,r16,1
   2cc58:	003f9c06 	br	2cacc <_strtoul_r+0x84>
   2cc5c:	00800c04 	movi	r2,48
   2cc60:	88bfa61e 	bne	r17,r2,2cafc <_strtoul_r+0xb4>
   2cc64:	80800007 	ldb	r2,0(r16)
   2cc68:	00c01e04 	movi	r3,120
   2cc6c:	10c00b26 	beq	r2,r3,2cc9c <_strtoul_r+0x254>
   2cc70:	00c01604 	movi	r3,88
   2cc74:	10c00926 	beq	r2,r3,2cc9c <_strtoul_r+0x254>
   2cc78:	b800111e 	bne	r23,zero,2ccc0 <_strtoul_r+0x278>
   2cc7c:	04800204 	movi	r18,8
   2cc80:	008001c4 	movi	r2,7
   2cc84:	d8800015 	stw	r2,0(sp)
   2cc88:	05880034 	movhi	r22,8192
   2cc8c:	b5bfffc4 	addi	r22,r22,-1
   2cc90:	04400c04 	movi	r17,48
   2cc94:	902f883a 	mov	r23,r18
   2cc98:	003fa106 	br	2cb20 <_strtoul_r+0xd8>
   2cc9c:	04800404 	movi	r18,16
   2cca0:	008003c4 	movi	r2,15
   2cca4:	84400047 	ldb	r17,1(r16)
   2cca8:	d8800015 	stw	r2,0(sp)
   2ccac:	84000084 	addi	r16,r16,2
   2ccb0:	05840034 	movhi	r22,4096
   2ccb4:	b5bfffc4 	addi	r22,r22,-1
   2ccb8:	902f883a 	mov	r23,r18
   2ccbc:	003f9806 	br	2cb20 <_strtoul_r+0xd8>
   2ccc0:	013fffc4 	movi	r4,-1
   2ccc4:	b80b883a 	mov	r5,r23
   2ccc8:	002fde80 	call	2fde8 <__udivsi3>
   2cccc:	013fffc4 	movi	r4,-1
   2ccd0:	b80b883a 	mov	r5,r23
   2ccd4:	102d883a 	mov	r22,r2
   2ccd8:	002fdf00 	call	2fdf0 <__umodsi3>
   2ccdc:	d8800015 	stw	r2,0(sp)
   2cce0:	b825883a 	mov	r18,r23
   2cce4:	04400c04 	movi	r17,48
   2cce8:	003f8d06 	br	2cb20 <_strtoul_r+0xd8>

0002ccec <strtoul>:
   2ccec:	008000f4 	movhi	r2,3
   2ccf0:	1096b704 	addi	r2,r2,23260
   2ccf4:	2007883a 	mov	r3,r4
   2ccf8:	11000017 	ldw	r4,0(r2)
   2ccfc:	2805883a 	mov	r2,r5
   2cd00:	300f883a 	mov	r7,r6
   2cd04:	180b883a 	mov	r5,r3
   2cd08:	100d883a 	mov	r6,r2
   2cd0c:	002ca481 	jmpi	2ca48 <_strtoul_r>

0002cd10 <_strtoull_r>:
   2cd10:	defff004 	addi	sp,sp,-64
   2cd14:	008000f4 	movhi	r2,3
   2cd18:	1096ba04 	addi	r2,r2,23272
   2cd1c:	dd800c15 	stw	r22,48(sp)
   2cd20:	15800017 	ldw	r22,0(r2)
   2cd24:	df000e15 	stw	fp,56(sp)
   2cd28:	dc000615 	stw	r16,24(sp)
   2cd2c:	dfc00f15 	stw	ra,60(sp)
   2cd30:	ddc00d15 	stw	r23,52(sp)
   2cd34:	dd400b15 	stw	r21,44(sp)
   2cd38:	dd000a15 	stw	r20,40(sp)
   2cd3c:	dcc00915 	stw	r19,36(sp)
   2cd40:	dc800815 	stw	r18,32(sp)
   2cd44:	dc400715 	stw	r17,28(sp)
   2cd48:	d9400015 	stw	r5,0(sp)
   2cd4c:	d9000415 	stw	r4,16(sp)
   2cd50:	d9800115 	stw	r6,4(sp)
   2cd54:	3839883a 	mov	fp,r7
   2cd58:	2821883a 	mov	r16,r5
   2cd5c:	82000007 	ldb	r8,0(r16)
   2cd60:	84000044 	addi	r16,r16,1
   2cd64:	b205883a 	add	r2,r22,r8
   2cd68:	10800003 	ldbu	r2,0(r2)
   2cd6c:	1080020c 	andi	r2,r2,8
   2cd70:	10803fcc 	andi	r2,r2,255
   2cd74:	1080201c 	xori	r2,r2,128
   2cd78:	10bfe004 	addi	r2,r2,-128
   2cd7c:	103ff71e 	bne	r2,zero,2cd5c <_strtoull_r+0x4c>
   2cd80:	00800b44 	movi	r2,45
   2cd84:	40807e26 	beq	r8,r2,2cf80 <_strtoull_r+0x270>
   2cd88:	00800ac4 	movi	r2,43
   2cd8c:	40808126 	beq	r8,r2,2cf94 <_strtoull_r+0x284>
   2cd90:	d8000315 	stw	zero,12(sp)
   2cd94:	e0000c1e 	bne	fp,zero,2cdc8 <_strtoull_r+0xb8>
   2cd98:	00800c04 	movi	r2,48
   2cd9c:	40808126 	beq	r8,r2,2cfa4 <_strtoull_r+0x294>
   2cda0:	04c00284 	movi	r19,10
   2cda4:	00800144 	movi	r2,5
   2cda8:	d8800215 	stw	r2,8(sp)
   2cdac:	046666b4 	movhi	r17,39322
   2cdb0:	8c666644 	addi	r17,r17,-26215
   2cdb4:	05c666b4 	movhi	r23,6554
   2cdb8:	bde66644 	addi	r23,r23,-26215
   2cdbc:	0025883a 	mov	r18,zero
   2cdc0:	9839883a 	mov	fp,r19
   2cdc4:	00001306 	br	2ce14 <_strtoull_r+0x104>
   2cdc8:	00800404 	movi	r2,16
   2cdcc:	e0809026 	beq	fp,r2,2d010 <_strtoull_r+0x300>
   2cdd0:	e025d7fa 	srai	r18,fp,31
   2cdd4:	013fffc4 	movi	r4,-1
   2cdd8:	200b883a 	mov	r5,r4
   2cddc:	e00d883a 	mov	r6,fp
   2cde0:	900f883a 	mov	r7,r18
   2cde4:	da000515 	stw	r8,20(sp)
   2cde8:	002e1500 	call	2e150 <__udivdi3>
   2cdec:	013fffc4 	movi	r4,-1
   2cdf0:	200b883a 	mov	r5,r4
   2cdf4:	e00d883a 	mov	r6,fp
   2cdf8:	900f883a 	mov	r7,r18
   2cdfc:	1023883a 	mov	r17,r2
   2ce00:	182f883a 	mov	r23,r3
   2ce04:	002e7a00 	call	2e7a0 <__umoddi3>
   2ce08:	da000517 	ldw	r8,20(sp)
   2ce0c:	d8800215 	stw	r2,8(sp)
   2ce10:	e027883a 	mov	r19,fp
   2ce14:	b20d883a 	add	r6,r22,r8
   2ce18:	32400003 	ldbu	r9,0(r6)
   2ce1c:	0007883a 	mov	r3,zero
   2ce20:	0009883a 	mov	r4,zero
   2ce24:	4a80010c 	andi	r10,r9,4
   2ce28:	52803fcc 	andi	r10,r10,255
   2ce2c:	5280201c 	xori	r10,r10,128
   2ce30:	52bfe004 	addi	r10,r10,-128
   2ce34:	000b883a 	mov	r5,zero
   2ce38:	057fffc4 	movi	r21,-1
   2ce3c:	50001026 	beq	r10,zero,2ce80 <_strtoull_r+0x170>
   2ce40:	453ff404 	addi	r20,r8,-48
   2ce44:	a700150e 	bge	r20,fp,2ce9c <_strtoull_r+0x18c>
   2ce48:	1d400426 	beq	r3,r21,2ce5c <_strtoull_r+0x14c>
   2ce4c:	b9400236 	bltu	r23,r5,2ce58 <_strtoull_r+0x148>
   2ce50:	2dc0301e 	bne	r5,r23,2cf14 <_strtoull_r+0x204>
   2ce54:	89002f2e 	bgeu	r17,r4,2cf14 <_strtoull_r+0x204>
   2ce58:	00ffffc4 	movi	r3,-1
   2ce5c:	82000007 	ldb	r8,0(r16)
   2ce60:	84000044 	addi	r16,r16,1
   2ce64:	b20d883a 	add	r6,r22,r8
   2ce68:	32400003 	ldbu	r9,0(r6)
   2ce6c:	4a80010c 	andi	r10,r9,4
   2ce70:	52803fcc 	andi	r10,r10,255
   2ce74:	5280201c 	xori	r10,r10,128
   2ce78:	52bfe004 	addi	r10,r10,-128
   2ce7c:	503ff01e 	bne	r10,zero,2ce40 <_strtoull_r+0x130>
   2ce80:	488000cc 	andi	r2,r9,3
   2ce84:	10000526 	beq	r2,zero,2ce9c <_strtoull_r+0x18c>
   2ce88:	4a40004c 	andi	r9,r9,1
   2ce8c:	48002d26 	beq	r9,zero,2cf44 <_strtoull_r+0x234>
   2ce90:	00800dc4 	movi	r2,55
   2ce94:	40a9c83a 	sub	r20,r8,r2
   2ce98:	a73feb16 	blt	r20,fp,2ce48 <_strtoull_r+0x138>
   2ce9c:	00bfffc4 	movi	r2,-1
   2cea0:	18802f26 	beq	r3,r2,2cf60 <_strtoull_r+0x250>
   2cea4:	d8800317 	ldw	r2,12(sp)
   2cea8:	10000426 	beq	r2,zero,2cebc <_strtoull_r+0x1ac>
   2ceac:	0109c83a 	sub	r4,zero,r4
   2ceb0:	2004c03a 	cmpne	r2,r4,zero
   2ceb4:	014bc83a 	sub	r5,zero,r5
   2ceb8:	288bc83a 	sub	r5,r5,r2
   2cebc:	d8800117 	ldw	r2,4(sp)
   2cec0:	10000626 	beq	r2,zero,2cedc <_strtoull_r+0x1cc>
   2cec4:	18000226 	beq	r3,zero,2ced0 <_strtoull_r+0x1c0>
   2cec8:	843fffc4 	addi	r16,r16,-1
   2cecc:	dc000015 	stw	r16,0(sp)
   2ced0:	d8800017 	ldw	r2,0(sp)
   2ced4:	d8c00117 	ldw	r3,4(sp)
   2ced8:	18800015 	stw	r2,0(r3)
   2cedc:	2005883a 	mov	r2,r4
   2cee0:	2807883a 	mov	r3,r5
   2cee4:	dfc00f17 	ldw	ra,60(sp)
   2cee8:	df000e17 	ldw	fp,56(sp)
   2ceec:	ddc00d17 	ldw	r23,52(sp)
   2cef0:	dd800c17 	ldw	r22,48(sp)
   2cef4:	dd400b17 	ldw	r21,44(sp)
   2cef8:	dd000a17 	ldw	r20,40(sp)
   2cefc:	dcc00917 	ldw	r19,36(sp)
   2cf00:	dc800817 	ldw	r18,32(sp)
   2cf04:	dc400717 	ldw	r17,28(sp)
   2cf08:	dc000617 	ldw	r16,24(sp)
   2cf0c:	dec01004 	addi	sp,sp,64
   2cf10:	f800283a 	ret
   2cf14:	24400e26 	beq	r4,r17,2cf50 <_strtoull_r+0x240>
   2cf18:	980d883a 	mov	r6,r19
   2cf1c:	900f883a 	mov	r7,r18
   2cf20:	002dfbc0 	call	2dfbc <__muldi3>
   2cf24:	a00dd7fa 	srai	r6,r20,31
   2cf28:	a085883a 	add	r2,r20,r2
   2cf2c:	1511803a 	cmpltu	r8,r2,r20
   2cf30:	30c7883a 	add	r3,r6,r3
   2cf34:	40cb883a 	add	r5,r8,r3
   2cf38:	1009883a 	mov	r4,r2
   2cf3c:	00c00044 	movi	r3,1
   2cf40:	003fc606 	br	2ce5c <_strtoull_r+0x14c>
   2cf44:	008015c4 	movi	r2,87
   2cf48:	40a9c83a 	sub	r20,r8,r2
   2cf4c:	003fd206 	br	2ce98 <_strtoull_r+0x188>
   2cf50:	2dfff11e 	bne	r5,r23,2cf18 <_strtoull_r+0x208>
   2cf54:	d8800217 	ldw	r2,8(sp)
   2cf58:	153fbf16 	blt	r2,r20,2ce58 <_strtoull_r+0x148>
   2cf5c:	003fee06 	br	2cf18 <_strtoull_r+0x208>
   2cf60:	d9000417 	ldw	r4,16(sp)
   2cf64:	00800884 	movi	r2,34
   2cf68:	180b883a 	mov	r5,r3
   2cf6c:	20800015 	stw	r2,0(r4)
   2cf70:	d8800117 	ldw	r2,4(sp)
   2cf74:	1809883a 	mov	r4,r3
   2cf78:	103fd31e 	bne	r2,zero,2cec8 <_strtoull_r+0x1b8>
   2cf7c:	003fd706 	br	2cedc <_strtoull_r+0x1cc>
   2cf80:	00800044 	movi	r2,1
   2cf84:	82000007 	ldb	r8,0(r16)
   2cf88:	d8800315 	stw	r2,12(sp)
   2cf8c:	80a1883a 	add	r16,r16,r2
   2cf90:	003f8006 	br	2cd94 <_strtoull_r+0x84>
   2cf94:	82000007 	ldb	r8,0(r16)
   2cf98:	d8000315 	stw	zero,12(sp)
   2cf9c:	84000044 	addi	r16,r16,1
   2cfa0:	003f7c06 	br	2cd94 <_strtoull_r+0x84>
   2cfa4:	80800007 	ldb	r2,0(r16)
   2cfa8:	00c01e04 	movi	r3,120
   2cfac:	10c00d26 	beq	r2,r3,2cfe4 <_strtoull_r+0x2d4>
   2cfb0:	00c01604 	movi	r3,88
   2cfb4:	10c00b26 	beq	r2,r3,2cfe4 <_strtoull_r+0x2d4>
   2cfb8:	e000291e 	bne	fp,zero,2d060 <_strtoull_r+0x350>
   2cfbc:	04c00204 	movi	r19,8
   2cfc0:	008001c4 	movi	r2,7
   2cfc4:	d8800215 	stw	r2,8(sp)
   2cfc8:	047fffc4 	movi	r17,-1
   2cfcc:	05c80034 	movhi	r23,8192
   2cfd0:	bdffffc4 	addi	r23,r23,-1
   2cfd4:	0025883a 	mov	r18,zero
   2cfd8:	02000c04 	movi	r8,48
   2cfdc:	9839883a 	mov	fp,r19
   2cfe0:	003f8c06 	br	2ce14 <_strtoull_r+0x104>
   2cfe4:	04c00404 	movi	r19,16
   2cfe8:	008003c4 	movi	r2,15
   2cfec:	82000047 	ldb	r8,1(r16)
   2cff0:	d8800215 	stw	r2,8(sp)
   2cff4:	84000084 	addi	r16,r16,2
   2cff8:	047fffc4 	movi	r17,-1
   2cffc:	05c40034 	movhi	r23,4096
   2d000:	bdffffc4 	addi	r23,r23,-1
   2d004:	0025883a 	mov	r18,zero
   2d008:	9839883a 	mov	fp,r19
   2d00c:	003f8106 	br	2ce14 <_strtoull_r+0x104>
   2d010:	00800c04 	movi	r2,48
   2d014:	40bfe326 	beq	r8,r2,2cfa4 <_strtoull_r+0x294>
   2d018:	013fffc4 	movi	r4,-1
   2d01c:	200b883a 	mov	r5,r4
   2d020:	e00d883a 	mov	r6,fp
   2d024:	000f883a 	mov	r7,zero
   2d028:	da000515 	stw	r8,20(sp)
   2d02c:	002e1500 	call	2e150 <__udivdi3>
   2d030:	013fffc4 	movi	r4,-1
   2d034:	200b883a 	mov	r5,r4
   2d038:	e00d883a 	mov	r6,fp
   2d03c:	000f883a 	mov	r7,zero
   2d040:	1023883a 	mov	r17,r2
   2d044:	182f883a 	mov	r23,r3
   2d048:	002e7a00 	call	2e7a0 <__umoddi3>
   2d04c:	d8800215 	stw	r2,8(sp)
   2d050:	e027883a 	mov	r19,fp
   2d054:	0025883a 	mov	r18,zero
   2d058:	da000517 	ldw	r8,20(sp)
   2d05c:	003f6d06 	br	2ce14 <_strtoull_r+0x104>
   2d060:	e025d7fa 	srai	r18,fp,31
   2d064:	013fffc4 	movi	r4,-1
   2d068:	200b883a 	mov	r5,r4
   2d06c:	e00d883a 	mov	r6,fp
   2d070:	900f883a 	mov	r7,r18
   2d074:	002e1500 	call	2e150 <__udivdi3>
   2d078:	013fffc4 	movi	r4,-1
   2d07c:	200b883a 	mov	r5,r4
   2d080:	e00d883a 	mov	r6,fp
   2d084:	900f883a 	mov	r7,r18
   2d088:	1023883a 	mov	r17,r2
   2d08c:	182f883a 	mov	r23,r3
   2d090:	002e7a00 	call	2e7a0 <__umoddi3>
   2d094:	d8800215 	stw	r2,8(sp)
   2d098:	e027883a 	mov	r19,fp
   2d09c:	02000c04 	movi	r8,48
   2d0a0:	003f5c06 	br	2ce14 <_strtoull_r+0x104>

0002d0a4 <__submore>:
   2d0a4:	defffa04 	addi	sp,sp,-24
   2d0a8:	dc000015 	stw	r16,0(sp)
   2d0ac:	2821883a 	mov	r16,r5
   2d0b0:	29400c17 	ldw	r5,48(r5)
   2d0b4:	dfc00515 	stw	ra,20(sp)
   2d0b8:	dd000415 	stw	r20,16(sp)
   2d0bc:	dcc00315 	stw	r19,12(sp)
   2d0c0:	dc800215 	stw	r18,8(sp)
   2d0c4:	dc400115 	stw	r17,4(sp)
   2d0c8:	80801004 	addi	r2,r16,64
   2d0cc:	28801726 	beq	r5,r2,2d12c <__submore+0x88>
   2d0d0:	84400d17 	ldw	r17,52(r16)
   2d0d4:	8c67883a 	add	r19,r17,r17
   2d0d8:	980d883a 	mov	r6,r19
   2d0dc:	002a5640 	call	2a564 <_realloc_r>
   2d0e0:	1025883a 	mov	r18,r2
   2d0e4:	10002926 	beq	r2,zero,2d18c <__submore+0xe8>
   2d0e8:	1469883a 	add	r20,r2,r17
   2d0ec:	a009883a 	mov	r4,r20
   2d0f0:	100b883a 	mov	r5,r2
   2d0f4:	880d883a 	mov	r6,r17
   2d0f8:	00231240 	call	23124 <memcpy>
   2d0fc:	0005883a 	mov	r2,zero
   2d100:	85000015 	stw	r20,0(r16)
   2d104:	84800c15 	stw	r18,48(r16)
   2d108:	84c00d15 	stw	r19,52(r16)
   2d10c:	dfc00517 	ldw	ra,20(sp)
   2d110:	dd000417 	ldw	r20,16(sp)
   2d114:	dcc00317 	ldw	r19,12(sp)
   2d118:	dc800217 	ldw	r18,8(sp)
   2d11c:	dc400117 	ldw	r17,4(sp)
   2d120:	dc000017 	ldw	r16,0(sp)
   2d124:	dec00604 	addi	sp,sp,24
   2d128:	f800283a 	ret
   2d12c:	04410004 	movi	r17,1024
   2d130:	880b883a 	mov	r5,r17
   2d134:	00229a00 	call	229a0 <_malloc_r>
   2d138:	1007883a 	mov	r3,r2
   2d13c:	10001326 	beq	r2,zero,2d18c <__submore+0xe8>
   2d140:	80801083 	ldbu	r2,66(r16)
   2d144:	80c00c15 	stw	r3,48(r16)
   2d148:	84400d15 	stw	r17,52(r16)
   2d14c:	1880ffc5 	stb	r2,1023(r3)
   2d150:	81401043 	ldbu	r5,65(r16)
   2d154:	1900ff44 	addi	r4,r3,1021
   2d158:	0005883a 	mov	r2,zero
   2d15c:	1940ff85 	stb	r5,1022(r3)
   2d160:	81401003 	ldbu	r5,64(r16)
   2d164:	1940ff45 	stb	r5,1021(r3)
   2d168:	81000015 	stw	r4,0(r16)
   2d16c:	dfc00517 	ldw	ra,20(sp)
   2d170:	dd000417 	ldw	r20,16(sp)
   2d174:	dcc00317 	ldw	r19,12(sp)
   2d178:	dc800217 	ldw	r18,8(sp)
   2d17c:	dc400117 	ldw	r17,4(sp)
   2d180:	dc000017 	ldw	r16,0(sp)
   2d184:	dec00604 	addi	sp,sp,24
   2d188:	f800283a 	ret
   2d18c:	00bfffc4 	movi	r2,-1
   2d190:	003fde06 	br	2d10c <__submore+0x68>

0002d194 <_ungetc_r>:
   2d194:	defffc04 	addi	sp,sp,-16
   2d198:	dc800215 	stw	r18,8(sp)
   2d19c:	dc400115 	stw	r17,4(sp)
   2d1a0:	dc000015 	stw	r16,0(sp)
   2d1a4:	dfc00315 	stw	ra,12(sp)
   2d1a8:	00bfffc4 	movi	r2,-1
   2d1ac:	2825883a 	mov	r18,r5
   2d1b0:	2023883a 	mov	r17,r4
   2d1b4:	3021883a 	mov	r16,r6
   2d1b8:	28803026 	beq	r5,r2,2d27c <_ungetc_r+0xe8>
   2d1bc:	20000226 	beq	r4,zero,2d1c8 <_ungetc_r+0x34>
   2d1c0:	20800e17 	ldw	r2,56(r4)
   2d1c4:	10002f26 	beq	r2,zero,2d284 <_ungetc_r+0xf0>
   2d1c8:	80c0030b 	ldhu	r3,12(r16)
   2d1cc:	00bff7c4 	movi	r2,-33
   2d1d0:	1900010c 	andi	r4,r3,4
   2d1d4:	213fffcc 	andi	r4,r4,65535
   2d1d8:	1884703a 	and	r2,r3,r2
   2d1dc:	2120001c 	xori	r4,r4,32768
   2d1e0:	8080030d 	sth	r2,12(r16)
   2d1e4:	21200004 	addi	r4,r4,-32768
   2d1e8:	20000c1e 	bne	r4,zero,2d21c <_ungetc_r+0x88>
   2d1ec:	1900040c 	andi	r4,r3,16
   2d1f0:	213fffcc 	andi	r4,r4,65535
   2d1f4:	2120001c 	xori	r4,r4,32768
   2d1f8:	21200004 	addi	r4,r4,-32768
   2d1fc:	20001f26 	beq	r4,zero,2d27c <_ungetc_r+0xe8>
   2d200:	18c0020c 	andi	r3,r3,8
   2d204:	18ffffcc 	andi	r3,r3,65535
   2d208:	18e0001c 	xori	r3,r3,32768
   2d20c:	18e00004 	addi	r3,r3,-32768
   2d210:	1800371e 	bne	r3,zero,2d2f0 <_ungetc_r+0x15c>
   2d214:	10800114 	ori	r2,r2,4
   2d218:	8080030d 	sth	r2,12(r16)
   2d21c:	80800c17 	ldw	r2,48(r16)
   2d220:	94803fcc 	andi	r18,r18,255
   2d224:	10001926 	beq	r2,zero,2d28c <_ungetc_r+0xf8>
   2d228:	80c00117 	ldw	r3,4(r16)
   2d22c:	80800d17 	ldw	r2,52(r16)
   2d230:	18800e0e 	bge	r3,r2,2d26c <_ungetc_r+0xd8>
   2d234:	80800017 	ldw	r2,0(r16)
   2d238:	10ffffc4 	addi	r3,r2,-1
   2d23c:	80c00015 	stw	r3,0(r16)
   2d240:	14bfffc5 	stb	r18,-1(r2)
   2d244:	80800117 	ldw	r2,4(r16)
   2d248:	10800044 	addi	r2,r2,1
   2d24c:	80800115 	stw	r2,4(r16)
   2d250:	9005883a 	mov	r2,r18
   2d254:	dfc00317 	ldw	ra,12(sp)
   2d258:	dc800217 	ldw	r18,8(sp)
   2d25c:	dc400117 	ldw	r17,4(sp)
   2d260:	dc000017 	ldw	r16,0(sp)
   2d264:	dec00404 	addi	sp,sp,16
   2d268:	f800283a 	ret
   2d26c:	8809883a 	mov	r4,r17
   2d270:	800b883a 	mov	r5,r16
   2d274:	002d0a40 	call	2d0a4 <__submore>
   2d278:	103fee26 	beq	r2,zero,2d234 <_ungetc_r+0xa0>
   2d27c:	04bfffc4 	movi	r18,-1
   2d280:	003ff306 	br	2d250 <_ungetc_r+0xbc>
   2d284:	00215bc0 	call	215bc <__sinit>
   2d288:	003fcf06 	br	2d1c8 <_ungetc_r+0x34>
   2d28c:	80c00417 	ldw	r3,16(r16)
   2d290:	80800017 	ldw	r2,0(r16)
   2d294:	18000326 	beq	r3,zero,2d2a4 <_ungetc_r+0x110>
   2d298:	1880022e 	bgeu	r3,r2,2d2a4 <_ungetc_r+0x110>
   2d29c:	10ffffc3 	ldbu	r3,-1(r2)
   2d2a0:	1c801d26 	beq	r3,r18,2d318 <_ungetc_r+0x184>
   2d2a4:	81400117 	ldw	r5,4(r16)
   2d2a8:	80800e15 	stw	r2,56(r16)
   2d2ac:	008000c4 	movi	r2,3
   2d2b0:	80800d15 	stw	r2,52(r16)
   2d2b4:	00800044 	movi	r2,1
   2d2b8:	81001004 	addi	r4,r16,64
   2d2bc:	80c01084 	addi	r3,r16,66
   2d2c0:	80800115 	stw	r2,4(r16)
   2d2c4:	9005883a 	mov	r2,r18
   2d2c8:	81400f15 	stw	r5,60(r16)
   2d2cc:	81000c15 	stw	r4,48(r16)
   2d2d0:	84801085 	stb	r18,66(r16)
   2d2d4:	80c00015 	stw	r3,0(r16)
   2d2d8:	dfc00317 	ldw	ra,12(sp)
   2d2dc:	dc800217 	ldw	r18,8(sp)
   2d2e0:	dc400117 	ldw	r17,4(sp)
   2d2e4:	dc000017 	ldw	r16,0(sp)
   2d2e8:	dec00404 	addi	sp,sp,16
   2d2ec:	f800283a 	ret
   2d2f0:	8809883a 	mov	r4,r17
   2d2f4:	800b883a 	mov	r5,r16
   2d2f8:	00213000 	call	21300 <_fflush_r>
   2d2fc:	103fdf1e 	bne	r2,zero,2d27c <_ungetc_r+0xe8>
   2d300:	8080030b 	ldhu	r2,12(r16)
   2d304:	00fffdc4 	movi	r3,-9
   2d308:	80000215 	stw	zero,8(r16)
   2d30c:	1884703a 	and	r2,r3,r2
   2d310:	80000615 	stw	zero,24(r16)
   2d314:	003fbf06 	br	2d214 <_ungetc_r+0x80>
   2d318:	80c00117 	ldw	r3,4(r16)
   2d31c:	10bfffc4 	addi	r2,r2,-1
   2d320:	80800015 	stw	r2,0(r16)
   2d324:	18800044 	addi	r2,r3,1
   2d328:	80800115 	stw	r2,4(r16)
   2d32c:	003fc806 	br	2d250 <_ungetc_r+0xbc>

0002d330 <ungetc>:
   2d330:	00c000f4 	movhi	r3,3
   2d334:	18d6b704 	addi	r3,r3,23260
   2d338:	2005883a 	mov	r2,r4
   2d33c:	19000017 	ldw	r4,0(r3)
   2d340:	280d883a 	mov	r6,r5
   2d344:	100b883a 	mov	r5,r2
   2d348:	002d1941 	jmpi	2d194 <_ungetc_r>

0002d34c <_calloc_r>:
   2d34c:	defffe04 	addi	sp,sp,-8
   2d350:	dc000015 	stw	r16,0(sp)
   2d354:	2021883a 	mov	r16,r4
   2d358:	3009883a 	mov	r4,r6
   2d35c:	dfc00115 	stw	ra,4(sp)
   2d360:	00211880 	call	21188 <__mulsi3>
   2d364:	8009883a 	mov	r4,r16
   2d368:	100b883a 	mov	r5,r2
   2d36c:	00229a00 	call	229a0 <_malloc_r>
   2d370:	1021883a 	mov	r16,r2
   2d374:	10000c26 	beq	r2,zero,2d3a8 <_calloc_r+0x5c>
   2d378:	11bfff17 	ldw	r6,-4(r2)
   2d37c:	00ffff04 	movi	r3,-4
   2d380:	00800904 	movi	r2,36
   2d384:	30cc703a 	and	r6,r6,r3
   2d388:	30cd883a 	add	r6,r6,r3
   2d38c:	11801436 	bltu	r2,r6,2d3e0 <_calloc_r+0x94>
   2d390:	00c004c4 	movi	r3,19
   2d394:	19800936 	bltu	r3,r6,2d3bc <_calloc_r+0x70>
   2d398:	8005883a 	mov	r2,r16
   2d39c:	10000015 	stw	zero,0(r2)
   2d3a0:	10000115 	stw	zero,4(r2)
   2d3a4:	10000215 	stw	zero,8(r2)
   2d3a8:	8005883a 	mov	r2,r16
   2d3ac:	dfc00117 	ldw	ra,4(sp)
   2d3b0:	dc000017 	ldw	r16,0(sp)
   2d3b4:	dec00204 	addi	sp,sp,8
   2d3b8:	f800283a 	ret
   2d3bc:	80000015 	stw	zero,0(r16)
   2d3c0:	80000115 	stw	zero,4(r16)
   2d3c4:	00c006c4 	movi	r3,27
   2d3c8:	19800d2e 	bgeu	r3,r6,2d400 <_calloc_r+0xb4>
   2d3cc:	80000215 	stw	zero,8(r16)
   2d3d0:	80000315 	stw	zero,12(r16)
   2d3d4:	30800c26 	beq	r6,r2,2d408 <_calloc_r+0xbc>
   2d3d8:	80800404 	addi	r2,r16,16
   2d3dc:	003fef06 	br	2d39c <_calloc_r+0x50>
   2d3e0:	8009883a 	mov	r4,r16
   2d3e4:	000b883a 	mov	r5,zero
   2d3e8:	00232640 	call	23264 <memset>
   2d3ec:	8005883a 	mov	r2,r16
   2d3f0:	dfc00117 	ldw	ra,4(sp)
   2d3f4:	dc000017 	ldw	r16,0(sp)
   2d3f8:	dec00204 	addi	sp,sp,8
   2d3fc:	f800283a 	ret
   2d400:	80800204 	addi	r2,r16,8
   2d404:	003fe506 	br	2d39c <_calloc_r+0x50>
   2d408:	80000415 	stw	zero,16(r16)
   2d40c:	80000515 	stw	zero,20(r16)
   2d410:	80800604 	addi	r2,r16,24
   2d414:	003fe106 	br	2d39c <_calloc_r+0x50>

0002d418 <rshift>:
   2d418:	2805d17a 	srai	r2,r5,5
   2d41c:	20c00417 	ldw	r3,16(r4)
   2d420:	22800504 	addi	r10,r4,20
   2d424:	10c0270e 	bge	r2,r3,2d4c4 <rshift+0xac>
   2d428:	19800144 	addi	r6,r3,5
   2d42c:	12c00144 	addi	r11,r2,5
   2d430:	318d883a 	add	r6,r6,r6
   2d434:	5ad7883a 	add	r11,r11,r11
   2d438:	318d883a 	add	r6,r6,r6
   2d43c:	5ad7883a 	add	r11,r11,r11
   2d440:	294007cc 	andi	r5,r5,31
   2d444:	218d883a 	add	r6,r4,r6
   2d448:	22d7883a 	add	r11,r4,r11
   2d44c:	28002026 	beq	r5,zero,2d4d0 <rshift+0xb8>
   2d450:	59c00017 	ldw	r7,0(r11)
   2d454:	02400804 	movi	r9,32
   2d458:	58800104 	addi	r2,r11,4
   2d45c:	4953c83a 	sub	r9,r9,r5
   2d460:	394ed83a 	srl	r7,r7,r5
   2d464:	11802e2e 	bgeu	r2,r6,2d520 <rshift+0x108>
   2d468:	5007883a 	mov	r3,r10
   2d46c:	12000017 	ldw	r8,0(r2)
   2d470:	18c00104 	addi	r3,r3,4
   2d474:	10800104 	addi	r2,r2,4
   2d478:	4250983a 	sll	r8,r8,r9
   2d47c:	3a0eb03a 	or	r7,r7,r8
   2d480:	19ffff15 	stw	r7,-4(r3)
   2d484:	11ffff17 	ldw	r7,-4(r2)
   2d488:	394ed83a 	srl	r7,r7,r5
   2d48c:	11bff736 	bltu	r2,r6,2d46c <rshift+0x54>
   2d490:	32c5c83a 	sub	r2,r6,r11
   2d494:	10bffec4 	addi	r2,r2,-5
   2d498:	1004d0ba 	srli	r2,r2,2
   2d49c:	10800184 	addi	r2,r2,6
   2d4a0:	1085883a 	add	r2,r2,r2
   2d4a4:	1085883a 	add	r2,r2,r2
   2d4a8:	2085883a 	add	r2,r4,r2
   2d4ac:	11c00015 	stw	r7,0(r2)
   2d4b0:	38001626 	beq	r7,zero,2d50c <rshift+0xf4>
   2d4b4:	10800104 	addi	r2,r2,4
   2d4b8:	1295c83a 	sub	r10,r2,r10
   2d4bc:	5015d0ba 	srai	r10,r10,2
   2d4c0:	00001406 	br	2d514 <rshift+0xfc>
   2d4c4:	20000415 	stw	zero,16(r4)
   2d4c8:	20000515 	stw	zero,20(r4)
   2d4cc:	f800283a 	ret
   2d4d0:	59bffc2e 	bgeu	r11,r6,2d4c4 <rshift+0xac>
   2d4d4:	5007883a 	mov	r3,r10
   2d4d8:	5805883a 	mov	r2,r11
   2d4dc:	11400017 	ldw	r5,0(r2)
   2d4e0:	18c00104 	addi	r3,r3,4
   2d4e4:	10800104 	addi	r2,r2,4
   2d4e8:	197fff15 	stw	r5,-4(r3)
   2d4ec:	11bffb36 	bltu	r2,r6,2d4dc <rshift+0xc4>
   2d4f0:	02c4303a 	nor	r2,zero,r11
   2d4f4:	1185883a 	add	r2,r2,r6
   2d4f8:	1004d0ba 	srli	r2,r2,2
   2d4fc:	10800184 	addi	r2,r2,6
   2d500:	1085883a 	add	r2,r2,r2
   2d504:	1085883a 	add	r2,r2,r2
   2d508:	2085883a 	add	r2,r4,r2
   2d50c:	1295c83a 	sub	r10,r2,r10
   2d510:	5015d0ba 	srai	r10,r10,2
   2d514:	22800415 	stw	r10,16(r4)
   2d518:	503feb26 	beq	r10,zero,2d4c8 <rshift+0xb0>
   2d51c:	f800283a 	ret
   2d520:	5005883a 	mov	r2,r10
   2d524:	003fe106 	br	2d4ac <rshift+0x94>

0002d528 <__hexdig_init>:
   2d528:	014000f4 	movhi	r5,3
   2d52c:	294fc544 	addi	r5,r5,16149
   2d530:	01000404 	movi	r4,16
   2d534:	00c00c04 	movi	r3,48
   2d538:	008000f4 	movhi	r2,3
   2d53c:	109dac04 	addi	r2,r2,30384
   2d540:	29800003 	ldbu	r6,0(r5)
   2d544:	10c7883a 	add	r3,r2,r3
   2d548:	19000005 	stb	r4,0(r3)
   2d54c:	29400044 	addi	r5,r5,1
   2d550:	3007883a 	mov	r3,r6
   2d554:	21000044 	addi	r4,r4,1
   2d558:	303ff91e 	bne	r6,zero,2d540 <__hexdig_init+0x18>
   2d55c:	014000f4 	movhi	r5,3
   2d560:	294fc344 	addi	r5,r5,16141
   2d564:	01000684 	movi	r4,26
   2d568:	00c01844 	movi	r3,97
   2d56c:	29800003 	ldbu	r6,0(r5)
   2d570:	10c7883a 	add	r3,r2,r3
   2d574:	19000005 	stb	r4,0(r3)
   2d578:	29400044 	addi	r5,r5,1
   2d57c:	3007883a 	mov	r3,r6
   2d580:	21000044 	addi	r4,r4,1
   2d584:	303ff91e 	bne	r6,zero,2d56c <__hexdig_init+0x44>
   2d588:	014000f4 	movhi	r5,3
   2d58c:	294fc144 	addi	r5,r5,16133
   2d590:	01000684 	movi	r4,26
   2d594:	00c01044 	movi	r3,65
   2d598:	29800003 	ldbu	r6,0(r5)
   2d59c:	10c7883a 	add	r3,r2,r3
   2d5a0:	19000005 	stb	r4,0(r3)
   2d5a4:	29400044 	addi	r5,r5,1
   2d5a8:	3007883a 	mov	r3,r6
   2d5ac:	21000044 	addi	r4,r4,1
   2d5b0:	303ff91e 	bne	r6,zero,2d598 <__hexdig_init+0x70>
   2d5b4:	f800283a 	ret

0002d5b8 <__gethex>:
   2d5b8:	defff204 	addi	sp,sp,-56
   2d5bc:	dc800615 	stw	r18,24(sp)
   2d5c0:	048000f4 	movhi	r18,3
   2d5c4:	949dac04 	addi	r18,r18,30384
   2d5c8:	90800c03 	ldbu	r2,48(r18)
   2d5cc:	dd400915 	stw	r21,36(sp)
   2d5d0:	dc400515 	stw	r17,20(sp)
   2d5d4:	dfc00d15 	stw	ra,52(sp)
   2d5d8:	df000c15 	stw	fp,48(sp)
   2d5dc:	ddc00b15 	stw	r23,44(sp)
   2d5e0:	dd800a15 	stw	r22,40(sp)
   2d5e4:	dd000815 	stw	r20,32(sp)
   2d5e8:	dcc00715 	stw	r19,28(sp)
   2d5ec:	dc000415 	stw	r16,16(sp)
   2d5f0:	d9000115 	stw	r4,4(sp)
   2d5f4:	d9c00215 	stw	r7,8(sp)
   2d5f8:	282b883a 	mov	r21,r5
   2d5fc:	3023883a 	mov	r17,r6
   2d600:	1000b926 	beq	r2,zero,2d8e8 <__gethex+0x330>
   2d604:	a9000017 	ldw	r4,0(r21)
   2d608:	00800c04 	movi	r2,48
   2d60c:	20c00083 	ldbu	r3,2(r4)
   2d610:	24c00084 	addi	r19,r4,2
   2d614:	1881601e 	bne	r3,r2,2db98 <__gethex+0x5e0>
   2d618:	017fff84 	movi	r5,-2
   2d61c:	208000c4 	addi	r2,r4,3
   2d620:	290bc83a 	sub	r5,r5,r4
   2d624:	1809883a 	mov	r4,r3
   2d628:	28b9883a 	add	fp,r5,r2
   2d62c:	1027883a 	mov	r19,r2
   2d630:	10800044 	addi	r2,r2,1
   2d634:	10ffffc3 	ldbu	r3,-1(r2)
   2d638:	193ffb26 	beq	r3,r4,2d628 <__gethex+0x70>
   2d63c:	90c5883a 	add	r2,r18,r3
   2d640:	10800003 	ldbu	r2,0(r2)
   2d644:	014000f4 	movhi	r5,3
   2d648:	295dac04 	addi	r5,r5,30384
   2d64c:	10002b26 	beq	r2,zero,2d6fc <__gethex+0x144>
   2d650:	98800003 	ldbu	r2,0(r19)
   2d654:	0009883a 	mov	r4,zero
   2d658:	288b883a 	add	r5,r5,r2
   2d65c:	28c00003 	ldbu	r3,0(r5)
   2d660:	18016826 	beq	r3,zero,2dc04 <__gethex+0x64c>
   2d664:	9821883a 	mov	r16,r19
   2d668:	84000044 	addi	r16,r16,1
   2d66c:	80800003 	ldbu	r2,0(r16)
   2d670:	9087883a 	add	r3,r18,r2
   2d674:	18c00003 	ldbu	r3,0(r3)
   2d678:	183ffb1e 	bne	r3,zero,2d668 <__gethex+0xb0>
   2d67c:	d8000015 	stw	zero,0(sp)
   2d680:	00c00b84 	movi	r3,46
   2d684:	10c0f226 	beq	r2,r3,2da50 <__gethex+0x498>
   2d688:	80800003 	ldbu	r2,0(r16)
   2d68c:	20014426 	beq	r4,zero,2dba0 <__gethex+0x5e8>
   2d690:	8109c83a 	sub	r4,r16,r4
   2d694:	2109883a 	add	r4,r4,r4
   2d698:	2109883a 	add	r4,r4,r4
   2d69c:	0129c83a 	sub	r20,zero,r4
   2d6a0:	00c01404 	movi	r3,80
   2d6a4:	10c01e26 	beq	r2,r3,2d720 <__gethex+0x168>
   2d6a8:	00c01c04 	movi	r3,112
   2d6ac:	10c01c26 	beq	r2,r3,2d720 <__gethex+0x168>
   2d6b0:	d8c00017 	ldw	r3,0(sp)
   2d6b4:	802d883a 	mov	r22,r16
   2d6b8:	ad800015 	stw	r22,0(r21)
   2d6bc:	18004026 	beq	r3,zero,2d7c0 <__gethex+0x208>
   2d6c0:	e001061e 	bne	fp,zero,2dadc <__gethex+0x524>
   2d6c4:	04000184 	movi	r16,6
   2d6c8:	8005883a 	mov	r2,r16
   2d6cc:	dfc00d17 	ldw	ra,52(sp)
   2d6d0:	df000c17 	ldw	fp,48(sp)
   2d6d4:	ddc00b17 	ldw	r23,44(sp)
   2d6d8:	dd800a17 	ldw	r22,40(sp)
   2d6dc:	dd400917 	ldw	r21,36(sp)
   2d6e0:	dd000817 	ldw	r20,32(sp)
   2d6e4:	dcc00717 	ldw	r19,28(sp)
   2d6e8:	dc800617 	ldw	r18,24(sp)
   2d6ec:	dc400517 	ldw	r17,20(sp)
   2d6f0:	dc000417 	ldw	r16,16(sp)
   2d6f4:	dec00e04 	addi	sp,sp,56
   2d6f8:	f800283a 	ret
   2d6fc:	00800b84 	movi	r2,46
   2d700:	1880d626 	beq	r3,r2,2da5c <__gethex+0x4a4>
   2d704:	98800003 	ldbu	r2,0(r19)
   2d708:	00c00044 	movi	r3,1
   2d70c:	d8c00015 	stw	r3,0(sp)
   2d710:	00c01404 	movi	r3,80
   2d714:	9821883a 	mov	r16,r19
   2d718:	0029883a 	mov	r20,zero
   2d71c:	10ffe21e 	bne	r2,r3,2d6a8 <__gethex+0xf0>
   2d720:	80800043 	ldbu	r2,1(r16)
   2d724:	00c00ac4 	movi	r3,43
   2d728:	10c0f326 	beq	r2,r3,2daf8 <__gethex+0x540>
   2d72c:	00c00b44 	movi	r3,45
   2d730:	10c0ec26 	beq	r2,r3,2dae4 <__gethex+0x52c>
   2d734:	80c00044 	addi	r3,r16,1
   2d738:	d8000315 	stw	zero,12(sp)
   2d73c:	9085883a 	add	r2,r18,r2
   2d740:	11000003 	ldbu	r4,0(r2)
   2d744:	203fda26 	beq	r4,zero,2d6b0 <__gethex+0xf8>
   2d748:	01800644 	movi	r6,25
   2d74c:	313fd816 	blt	r6,r4,2d6b0 <__gethex+0xf8>
   2d750:	18800043 	ldbu	r2,1(r3)
   2d754:	014000f4 	movhi	r5,3
   2d758:	295dac04 	addi	r5,r5,30384
   2d75c:	213ffc04 	addi	r4,r4,-16
   2d760:	2885883a 	add	r2,r5,r2
   2d764:	15c00003 	ldbu	r23,0(r2)
   2d768:	1d800044 	addi	r22,r3,1
   2d76c:	b8000d26 	beq	r23,zero,2d7a4 <__gethex+0x1ec>
   2d770:	35c0030e 	bge	r6,r23,2d780 <__gethex+0x1c8>
   2d774:	00000b06 	br	2d7a4 <__gethex+0x1ec>
   2d778:	00800644 	movi	r2,25
   2d77c:	15c00916 	blt	r2,r23,2d7a4 <__gethex+0x1ec>
   2d780:	01400284 	movi	r5,10
   2d784:	00211880 	call	21188 <__mulsi3>
   2d788:	b5800044 	addi	r22,r22,1
   2d78c:	b1400003 	ldbu	r5,0(r22)
   2d790:	15c5883a 	add	r2,r2,r23
   2d794:	113ffc04 	addi	r4,r2,-16
   2d798:	914b883a 	add	r5,r18,r5
   2d79c:	2dc00003 	ldbu	r23,0(r5)
   2d7a0:	b83ff51e 	bne	r23,zero,2d778 <__gethex+0x1c0>
   2d7a4:	d8c00317 	ldw	r3,12(sp)
   2d7a8:	18000126 	beq	r3,zero,2d7b0 <__gethex+0x1f8>
   2d7ac:	0109c83a 	sub	r4,zero,r4
   2d7b0:	d8c00017 	ldw	r3,0(sp)
   2d7b4:	ad800015 	stw	r22,0(r21)
   2d7b8:	a129883a 	add	r20,r20,r4
   2d7bc:	183fc01e 	bne	r3,zero,2d6c0 <__gethex+0x108>
   2d7c0:	84c5c83a 	sub	r2,r16,r19
   2d7c4:	10bfffc4 	addi	r2,r2,-1
   2d7c8:	00c001c4 	movi	r3,7
   2d7cc:	000b883a 	mov	r5,zero
   2d7d0:	1880030e 	bge	r3,r2,2d7e0 <__gethex+0x228>
   2d7d4:	1005d07a 	srai	r2,r2,1
   2d7d8:	29400044 	addi	r5,r5,1
   2d7dc:	18bffd16 	blt	r3,r2,2d7d4 <__gethex+0x21c>
   2d7e0:	d9000117 	ldw	r4,4(sp)
   2d7e4:	00294a80 	call	294a8 <_Balloc>
   2d7e8:	102d883a 	mov	r22,r2
   2d7ec:	15400504 	addi	r21,r2,20
   2d7f0:	9c001b2e 	bgeu	r19,r16,2d860 <__gethex+0x2a8>
   2d7f4:	843fffc4 	addi	r16,r16,-1
   2d7f8:	98bfffc4 	addi	r2,r19,-1
   2d7fc:	a80b883a 	mov	r5,r21
   2d800:	0009883a 	mov	r4,zero
   2d804:	0007883a 	mov	r3,zero
   2d808:	02800b84 	movi	r10,46
   2d80c:	02c00804 	movi	r11,32
   2d810:	00000806 	br	2d834 <__gethex+0x27c>
   2d814:	18c00104 	addi	r3,r3,4
   2d818:	918d883a 	add	r6,r18,r6
   2d81c:	32400003 	ldbu	r9,0(r6)
   2d820:	4a4003cc 	andi	r9,r9,15
   2d824:	49ce983a 	sll	r7,r9,r7
   2d828:	21c8b03a 	or	r4,r4,r7
   2d82c:	843fffc4 	addi	r16,r16,-1
   2d830:	80800d26 	beq	r16,r2,2d868 <__gethex+0x2b0>
   2d834:	81800003 	ldbu	r6,0(r16)
   2d838:	180f883a 	mov	r7,r3
   2d83c:	32bffb26 	beq	r6,r10,2d82c <__gethex+0x274>
   2d840:	1afff41e 	bne	r3,r11,2d814 <__gethex+0x25c>
   2d844:	29000015 	stw	r4,0(r5)
   2d848:	81800003 	ldbu	r6,0(r16)
   2d84c:	0009883a 	mov	r4,zero
   2d850:	000f883a 	mov	r7,zero
   2d854:	29400104 	addi	r5,r5,4
   2d858:	00c00104 	movi	r3,4
   2d85c:	003fee06 	br	2d818 <__gethex+0x260>
   2d860:	a80b883a 	mov	r5,r21
   2d864:	0009883a 	mov	r4,zero
   2d868:	28c00104 	addi	r3,r5,4
   2d86c:	1d47c83a 	sub	r3,r3,r21
   2d870:	1807d0ba 	srai	r3,r3,2
   2d874:	29000015 	stw	r4,0(r5)
   2d878:	1820917a 	slli	r16,r3,5
   2d87c:	b0c00415 	stw	r3,16(r22)
   2d880:	00297c00 	call	297c0 <__hi0bits>
   2d884:	8dc00017 	ldw	r23,0(r17)
   2d888:	8085c83a 	sub	r2,r16,r2
   2d88c:	b8809c16 	blt	r23,r2,2db00 <__gethex+0x548>
   2d890:	15c0b716 	blt	r2,r23,2db70 <__gethex+0x5b8>
   2d894:	0039883a 	mov	fp,zero
   2d898:	88c00217 	ldw	r3,8(r17)
   2d89c:	1d006516 	blt	r3,r20,2da34 <__gethex+0x47c>
   2d8a0:	88800117 	ldw	r2,4(r17)
   2d8a4:	a080830e 	bge	r20,r2,2dab4 <__gethex+0x4fc>
   2d8a8:	1529c83a 	sub	r20,r2,r20
   2d8ac:	a5c01016 	blt	r20,r23,2d8f0 <__gethex+0x338>
   2d8b0:	88c00317 	ldw	r3,12(r17)
   2d8b4:	01000084 	movi	r4,2
   2d8b8:	1900c726 	beq	r3,r4,2dbd8 <__gethex+0x620>
   2d8bc:	010000c4 	movi	r4,3
   2d8c0:	1900f026 	beq	r3,r4,2dc84 <__gethex+0x6cc>
   2d8c4:	01000044 	movi	r4,1
   2d8c8:	1900e626 	beq	r3,r4,2dc64 <__gethex+0x6ac>
   2d8cc:	d9000117 	ldw	r4,4(sp)
   2d8d0:	b00b883a 	mov	r5,r22
   2d8d4:	04001404 	movi	r16,80
   2d8d8:	00295500 	call	29550 <_Bfree>
   2d8dc:	d8c00e17 	ldw	r3,56(sp)
   2d8e0:	18000015 	stw	zero,0(r3)
   2d8e4:	003f7806 	br	2d6c8 <__gethex+0x110>
   2d8e8:	002d5280 	call	2d528 <__hexdig_init>
   2d8ec:	003f4506 	br	2d604 <__gethex+0x4c>
   2d8f0:	a43fffc4 	addi	r16,r20,-1
   2d8f4:	e000b21e 	bne	fp,zero,2dbc0 <__gethex+0x608>
   2d8f8:	0400040e 	bge	zero,r16,2d90c <__gethex+0x354>
   2d8fc:	b009883a 	mov	r4,r22
   2d900:	800b883a 	mov	r5,r16
   2d904:	002a4740 	call	2a474 <__any_on>
   2d908:	1039883a 	mov	fp,r2
   2d90c:	8005d17a 	srai	r2,r16,5
   2d910:	00c00044 	movi	r3,1
   2d914:	840007cc 	andi	r16,r16,31
   2d918:	1085883a 	add	r2,r2,r2
   2d91c:	1085883a 	add	r2,r2,r2
   2d920:	a885883a 	add	r2,r21,r2
   2d924:	1c06983a 	sll	r3,r3,r16
   2d928:	10800017 	ldw	r2,0(r2)
   2d92c:	1884703a 	and	r2,r3,r2
   2d930:	10000126 	beq	r2,zero,2d938 <__gethex+0x380>
   2d934:	e7000094 	ori	fp,fp,2
   2d938:	a00b883a 	mov	r5,r20
   2d93c:	b009883a 	mov	r4,r22
   2d940:	002d4180 	call	2d418 <rshift>
   2d944:	bd2fc83a 	sub	r23,r23,r20
   2d948:	8d000117 	ldw	r20,4(r17)
   2d94c:	04000084 	movi	r16,2
   2d950:	e0005d26 	beq	fp,zero,2dac8 <__gethex+0x510>
   2d954:	88800317 	ldw	r2,12(r17)
   2d958:	00c00084 	movi	r3,2
   2d95c:	10c0b026 	beq	r2,r3,2dc20 <__gethex+0x668>
   2d960:	00c000c4 	movi	r3,3
   2d964:	10c05526 	beq	r2,r3,2dabc <__gethex+0x504>
   2d968:	00c00044 	movi	r3,1
   2d96c:	10c0551e 	bne	r2,r3,2dac4 <__gethex+0x50c>
   2d970:	e080008c 	andi	r2,fp,2
   2d974:	10005326 	beq	r2,zero,2dac4 <__gethex+0x50c>
   2d978:	a8800017 	ldw	r2,0(r21)
   2d97c:	e084b03a 	or	r2,fp,r2
   2d980:	10c4703a 	and	r2,r2,r3
   2d984:	10004f26 	beq	r2,zero,2dac4 <__gethex+0x50c>
   2d988:	b7000417 	ldw	fp,16(r22)
   2d98c:	00ffffc4 	movi	r3,-1
   2d990:	e1000144 	addi	r4,fp,5
   2d994:	2109883a 	add	r4,r4,r4
   2d998:	2109883a 	add	r4,r4,r4
   2d99c:	b109883a 	add	r4,r22,r4
   2d9a0:	a8800017 	ldw	r2,0(r21)
   2d9a4:	10c0ba1e 	bne	r2,r3,2dc90 <__gethex+0x6d8>
   2d9a8:	a8000015 	stw	zero,0(r21)
   2d9ac:	ad400104 	addi	r21,r21,4
   2d9b0:	a93ffb36 	bltu	r21,r4,2d9a0 <__gethex+0x3e8>
   2d9b4:	b0800217 	ldw	r2,8(r22)
   2d9b8:	e080bd0e 	bge	fp,r2,2dcb0 <__gethex+0x6f8>
   2d9bc:	e005883a 	mov	r2,fp
   2d9c0:	10c00144 	addi	r3,r2,5
   2d9c4:	18c7883a 	add	r3,r3,r3
   2d9c8:	18c7883a 	add	r3,r3,r3
   2d9cc:	b0c7883a 	add	r3,r22,r3
   2d9d0:	10800044 	addi	r2,r2,1
   2d9d4:	01000044 	movi	r4,1
   2d9d8:	19000015 	stw	r4,0(r3)
   2d9dc:	b0800415 	stw	r2,16(r22)
   2d9e0:	00800084 	movi	r2,2
   2d9e4:	8080ad26 	beq	r16,r2,2dc9c <__gethex+0x6e4>
   2d9e8:	b0800417 	ldw	r2,16(r22)
   2d9ec:	e0800b16 	blt	fp,r2,2da1c <__gethex+0x464>
   2d9f0:	bdc007cc 	andi	r23,r23,31
   2d9f4:	b8008626 	beq	r23,zero,2dc10 <__gethex+0x658>
   2d9f8:	e7000104 	addi	fp,fp,4
   2d9fc:	e739883a 	add	fp,fp,fp
   2da00:	e739883a 	add	fp,fp,fp
   2da04:	b705883a 	add	r2,r22,fp
   2da08:	11000017 	ldw	r4,0(r2)
   2da0c:	00297c00 	call	297c0 <__hi0bits>
   2da10:	00c00804 	movi	r3,32
   2da14:	1defc83a 	sub	r23,r3,r23
   2da18:	15c07d0e 	bge	r2,r23,2dc10 <__gethex+0x658>
   2da1c:	b009883a 	mov	r4,r22
   2da20:	01400044 	movi	r5,1
   2da24:	002d4180 	call	2d418 <rshift>
   2da28:	88800217 	ldw	r2,8(r17)
   2da2c:	a5000044 	addi	r20,r20,1
   2da30:	1500770e 	bge	r2,r20,2dc10 <__gethex+0x658>
   2da34:	d9000117 	ldw	r4,4(sp)
   2da38:	b00b883a 	mov	r5,r22
   2da3c:	040028c4 	movi	r16,163
   2da40:	00295500 	call	29550 <_Bfree>
   2da44:	d8800e17 	ldw	r2,56(sp)
   2da48:	10000015 	stw	zero,0(r2)
   2da4c:	003f1e06 	br	2d6c8 <__gethex+0x110>
   2da50:	20007826 	beq	r4,zero,2dc34 <__gethex+0x67c>
   2da54:	80800003 	ldbu	r2,0(r16)
   2da58:	003f0d06 	br	2d690 <__gethex+0xd8>
   2da5c:	98800043 	ldbu	r2,1(r19)
   2da60:	9c000044 	addi	r16,r19,1
   2da64:	288b883a 	add	r5,r5,r2
   2da68:	28c00003 	ldbu	r3,0(r5)
   2da6c:	18005026 	beq	r3,zero,2dbb0 <__gethex+0x5f8>
   2da70:	00c00c04 	movi	r3,48
   2da74:	10c0541e 	bne	r2,r3,2dbc8 <__gethex+0x610>
   2da78:	800d883a 	mov	r6,r16
   2da7c:	1007883a 	mov	r3,r2
   2da80:	31800044 	addi	r6,r6,1
   2da84:	30800003 	ldbu	r2,0(r6)
   2da88:	10fffd26 	beq	r2,r3,2da80 <__gethex+0x4c8>
   2da8c:	9087883a 	add	r3,r18,r2
   2da90:	18c00003 	ldbu	r3,0(r3)
   2da94:	3027883a 	mov	r19,r6
   2da98:	18004c1e 	bne	r3,zero,2dbcc <__gethex+0x614>
   2da9c:	00c00044 	movi	r3,1
   2daa0:	8009883a 	mov	r4,r16
   2daa4:	d8c00015 	stw	r3,0(sp)
   2daa8:	1839883a 	mov	fp,r3
   2daac:	3021883a 	mov	r16,r6
   2dab0:	003ef306 	br	2d680 <__gethex+0xc8>
   2dab4:	04000044 	movi	r16,1
   2dab8:	003fa506 	br	2d950 <__gethex+0x398>
   2dabc:	d8800f17 	ldw	r2,60(sp)
   2dac0:	103fb11e 	bne	r2,zero,2d988 <__gethex+0x3d0>
   2dac4:	84000414 	ori	r16,r16,16
   2dac8:	d8800e17 	ldw	r2,56(sp)
   2dacc:	d8c00217 	ldw	r3,8(sp)
   2dad0:	15800015 	stw	r22,0(r2)
   2dad4:	1d000015 	stw	r20,0(r3)
   2dad8:	003efb06 	br	2d6c8 <__gethex+0x110>
   2dadc:	0021883a 	mov	r16,zero
   2dae0:	003ef906 	br	2d6c8 <__gethex+0x110>
   2dae4:	00c00044 	movi	r3,1
   2dae8:	d8c00315 	stw	r3,12(sp)
   2daec:	80800083 	ldbu	r2,2(r16)
   2daf0:	80c00084 	addi	r3,r16,2
   2daf4:	003f1106 	br	2d73c <__gethex+0x184>
   2daf8:	d8000315 	stw	zero,12(sp)
   2dafc:	003ffb06 	br	2daec <__gethex+0x534>
   2db00:	15e1c83a 	sub	r16,r2,r23
   2db04:	b009883a 	mov	r4,r22
   2db08:	800b883a 	mov	r5,r16
   2db0c:	002a4740 	call	2a474 <__any_on>
   2db10:	10002526 	beq	r2,zero,2dba8 <__gethex+0x5f0>
   2db14:	80bfffc4 	addi	r2,r16,-1
   2db18:	1007d17a 	srai	r3,r2,5
   2db1c:	110007cc 	andi	r4,r2,31
   2db20:	07000044 	movi	fp,1
   2db24:	18c00144 	addi	r3,r3,5
   2db28:	18c7883a 	add	r3,r3,r3
   2db2c:	18c7883a 	add	r3,r3,r3
   2db30:	b0c7883a 	add	r3,r22,r3
   2db34:	e108983a 	sll	r4,fp,r4
   2db38:	18c00017 	ldw	r3,0(r3)
   2db3c:	20c6703a 	and	r3,r4,r3
   2db40:	18000626 	beq	r3,zero,2db5c <__gethex+0x5a4>
   2db44:	e080340e 	bge	fp,r2,2dc18 <__gethex+0x660>
   2db48:	b009883a 	mov	r4,r22
   2db4c:	817fff84 	addi	r5,r16,-2
   2db50:	002a4740 	call	2a474 <__any_on>
   2db54:	10003026 	beq	r2,zero,2dc18 <__gethex+0x660>
   2db58:	070000c4 	movi	fp,3
   2db5c:	b009883a 	mov	r4,r22
   2db60:	800b883a 	mov	r5,r16
   2db64:	002d4180 	call	2d418 <rshift>
   2db68:	a429883a 	add	r20,r20,r16
   2db6c:	003f4a06 	br	2d898 <__gethex+0x2e0>
   2db70:	d9000117 	ldw	r4,4(sp)
   2db74:	b8a1c83a 	sub	r16,r23,r2
   2db78:	b00b883a 	mov	r5,r22
   2db7c:	800d883a 	mov	r6,r16
   2db80:	0029c980 	call	29c98 <__lshift>
   2db84:	102d883a 	mov	r22,r2
   2db88:	a429c83a 	sub	r20,r20,r16
   2db8c:	15400504 	addi	r21,r2,20
   2db90:	0039883a 	mov	fp,zero
   2db94:	003f4006 	br	2d898 <__gethex+0x2e0>
   2db98:	0039883a 	mov	fp,zero
   2db9c:	003ea706 	br	2d63c <__gethex+0x84>
   2dba0:	0029883a 	mov	r20,zero
   2dba4:	003ebe06 	br	2d6a0 <__gethex+0xe8>
   2dba8:	0039883a 	mov	fp,zero
   2dbac:	003feb06 	br	2db5c <__gethex+0x5a4>
   2dbb0:	00c00044 	movi	r3,1
   2dbb4:	0029883a 	mov	r20,zero
   2dbb8:	d8c00015 	stw	r3,0(sp)
   2dbbc:	003eb806 	br	2d6a0 <__gethex+0xe8>
   2dbc0:	07000044 	movi	fp,1
   2dbc4:	003f5106 	br	2d90c <__gethex+0x354>
   2dbc8:	8027883a 	mov	r19,r16
   2dbcc:	8009883a 	mov	r4,r16
   2dbd0:	07000044 	movi	fp,1
   2dbd4:	003ea306 	br	2d664 <__gethex+0xac>
   2dbd8:	d8c00f17 	ldw	r3,60(sp)
   2dbdc:	183f3b1e 	bne	r3,zero,2d8cc <__gethex+0x314>
   2dbe0:	d8c00217 	ldw	r3,8(sp)
   2dbe4:	04001884 	movi	r16,98
   2dbe8:	18800015 	stw	r2,0(r3)
   2dbec:	00800044 	movi	r2,1
   2dbf0:	b0800415 	stw	r2,16(r22)
   2dbf4:	a8800015 	stw	r2,0(r21)
   2dbf8:	d8800e17 	ldw	r2,56(sp)
   2dbfc:	15800015 	stw	r22,0(r2)
   2dc00:	003eb106 	br	2d6c8 <__gethex+0x110>
   2dc04:	9821883a 	mov	r16,r19
   2dc08:	d8000015 	stw	zero,0(sp)
   2dc0c:	003e9c06 	br	2d680 <__gethex+0xc8>
   2dc10:	04000844 	movi	r16,33
   2dc14:	003fac06 	br	2dac8 <__gethex+0x510>
   2dc18:	07000084 	movi	fp,2
   2dc1c:	003fcf06 	br	2db5c <__gethex+0x5a4>
   2dc20:	d8c00f17 	ldw	r3,60(sp)
   2dc24:	00800044 	movi	r2,1
   2dc28:	10c5c83a 	sub	r2,r2,r3
   2dc2c:	103fa526 	beq	r2,zero,2dac4 <__gethex+0x50c>
   2dc30:	003f5506 	br	2d988 <__gethex+0x3d0>
   2dc34:	80800043 	ldbu	r2,1(r16)
   2dc38:	81000044 	addi	r4,r16,1
   2dc3c:	2021883a 	mov	r16,r4
   2dc40:	9087883a 	add	r3,r18,r2
   2dc44:	18c00003 	ldbu	r3,0(r3)
   2dc48:	183e9026 	beq	r3,zero,2d68c <__gethex+0xd4>
   2dc4c:	84000044 	addi	r16,r16,1
   2dc50:	80800003 	ldbu	r2,0(r16)
   2dc54:	9087883a 	add	r3,r18,r2
   2dc58:	18c00003 	ldbu	r3,0(r3)
   2dc5c:	183ffb1e 	bne	r3,zero,2dc4c <__gethex+0x694>
   2dc60:	003e8a06 	br	2d68c <__gethex+0xd4>
   2dc64:	a5ff191e 	bne	r20,r23,2d8cc <__gethex+0x314>
   2dc68:	1dffdd0e 	bge	r3,r23,2dbe0 <__gethex+0x628>
   2dc6c:	b009883a 	mov	r4,r22
   2dc70:	b97fffc4 	addi	r5,r23,-1
   2dc74:	002a4740 	call	2a474 <__any_on>
   2dc78:	103f1426 	beq	r2,zero,2d8cc <__gethex+0x314>
   2dc7c:	88800117 	ldw	r2,4(r17)
   2dc80:	003fd706 	br	2dbe0 <__gethex+0x628>
   2dc84:	d8c00f17 	ldw	r3,60(sp)
   2dc88:	183f1026 	beq	r3,zero,2d8cc <__gethex+0x314>
   2dc8c:	003fd406 	br	2dbe0 <__gethex+0x628>
   2dc90:	10800044 	addi	r2,r2,1
   2dc94:	a8800015 	stw	r2,0(r21)
   2dc98:	003f5106 	br	2d9e0 <__gethex+0x428>
   2dc9c:	88800017 	ldw	r2,0(r17)
   2dca0:	10bfffc4 	addi	r2,r2,-1
   2dca4:	15c01426 	beq	r2,r23,2dcf8 <__gethex+0x740>
   2dca8:	04000884 	movi	r16,34
   2dcac:	003f8606 	br	2dac8 <__gethex+0x510>
   2dcb0:	b1400117 	ldw	r5,4(r22)
   2dcb4:	d9000117 	ldw	r4,4(sp)
   2dcb8:	29400044 	addi	r5,r5,1
   2dcbc:	00294a80 	call	294a8 <_Balloc>
   2dcc0:	b1800417 	ldw	r6,16(r22)
   2dcc4:	b1400304 	addi	r5,r22,12
   2dcc8:	11000304 	addi	r4,r2,12
   2dccc:	31800084 	addi	r6,r6,2
   2dcd0:	318d883a 	add	r6,r6,r6
   2dcd4:	318d883a 	add	r6,r6,r6
   2dcd8:	102b883a 	mov	r21,r2
   2dcdc:	00231240 	call	23124 <memcpy>
   2dce0:	d9000117 	ldw	r4,4(sp)
   2dce4:	b00b883a 	mov	r5,r22
   2dce8:	a82d883a 	mov	r22,r21
   2dcec:	00295500 	call	29550 <_Bfree>
   2dcf0:	a8800417 	ldw	r2,16(r21)
   2dcf4:	003f3206 	br	2d9c0 <__gethex+0x408>
   2dcf8:	b805d17a 	srai	r2,r23,5
   2dcfc:	04000044 	movi	r16,1
   2dd00:	bdc007cc 	andi	r23,r23,31
   2dd04:	10800144 	addi	r2,r2,5
   2dd08:	1085883a 	add	r2,r2,r2
   2dd0c:	1085883a 	add	r2,r2,r2
   2dd10:	b085883a 	add	r2,r22,r2
   2dd14:	10800017 	ldw	r2,0(r2)
   2dd18:	85e0983a 	sll	r16,r16,r23
   2dd1c:	80a0703a 	and	r16,r16,r2
   2dd20:	8020c03a 	cmpne	r16,r16,zero
   2dd24:	00800884 	movi	r2,34
   2dd28:	1421c83a 	sub	r16,r2,r16
   2dd2c:	003f6606 	br	2dac8 <__gethex+0x510>

0002dd30 <__hexnan>:
   2dd30:	defff604 	addi	sp,sp,-40
   2dd34:	dc000315 	stw	r16,12(sp)
   2dd38:	040000f4 	movhi	r16,3
   2dd3c:	841dac04 	addi	r16,r16,30384
   2dd40:	80800c03 	ldbu	r2,48(r16)
   2dd44:	dfc00915 	stw	ra,36(sp)
   2dd48:	dd400815 	stw	r21,32(sp)
   2dd4c:	dd000715 	stw	r20,28(sp)
   2dd50:	dcc00615 	stw	r19,24(sp)
   2dd54:	dc800515 	stw	r18,20(sp)
   2dd58:	dc400415 	stw	r17,16(sp)
   2dd5c:	10006c26 	beq	r2,zero,2df10 <__hexnan+0x1e0>
   2dd60:	2d000017 	ldw	r20,0(r5)
   2dd64:	a025d17a 	srai	r18,r20,5
   2dd68:	a50007cc 	andi	r20,r20,31
   2dd6c:	94a5883a 	add	r18,r18,r18
   2dd70:	94a5883a 	add	r18,r18,r18
   2dd74:	34a5883a 	add	r18,r6,r18
   2dd78:	a0000126 	beq	r20,zero,2dd80 <__hexnan+0x50>
   2dd7c:	94800104 	addi	r18,r18,4
   2dd80:	20c00017 	ldw	r3,0(r4)
   2dd84:	903fff15 	stw	zero,-4(r18)
   2dd88:	947fff04 	addi	r17,r18,-4
   2dd8c:	18800043 	ldbu	r2,1(r3)
   2dd90:	8817883a 	mov	r11,r17
   2dd94:	880b883a 	mov	r5,r17
   2dd98:	0011883a 	mov	r8,zero
   2dd9c:	001b883a 	mov	r13,zero
   2dda0:	0015883a 	mov	r10,zero
   2dda4:	03c00204 	movi	r15,8
   2dda8:	03800804 	movi	r14,32
   2ddac:	04c001c4 	movi	r19,7
   2ddb0:	10001b26 	beq	r2,zero,2de20 <__hexnan+0xf0>
   2ddb4:	808f883a 	add	r7,r16,r2
   2ddb8:	39c00003 	ldbu	r7,0(r7)
   2ddbc:	3a403fcc 	andi	r9,r7,255
   2ddc0:	4800301e 	bne	r9,zero,2de84 <__hexnan+0x154>
   2ddc4:	70804636 	bltu	r14,r2,2dee0 <__hexnan+0x1b0>
   2ddc8:	6a80120e 	bge	r13,r10,2de14 <__hexnan+0xe4>
   2ddcc:	2ac00f2e 	bgeu	r5,r11,2de0c <__hexnan+0xdc>
   2ddd0:	9a000e16 	blt	r19,r8,2de0c <__hexnan+0xdc>
   2ddd4:	7a11c83a 	sub	r8,r15,r8
   2ddd8:	4211883a 	add	r8,r8,r8
   2dddc:	29c00017 	ldw	r7,0(r5)
   2dde0:	4211883a 	add	r8,r8,r8
   2dde4:	722bc83a 	sub	r21,r14,r8
   2dde8:	2805883a 	mov	r2,r5
   2ddec:	12400117 	ldw	r9,4(r2)
   2ddf0:	10800104 	addi	r2,r2,4
   2ddf4:	4d58983a 	sll	r12,r9,r21
   2ddf8:	3b18b03a 	or	r12,r7,r12
   2ddfc:	4a0ed83a 	srl	r7,r9,r8
   2de00:	133fff15 	stw	r12,-4(r2)
   2de04:	11c00015 	stw	r7,0(r2)
   2de08:	12fff836 	bltu	r2,r11,2ddec <__hexnan+0xbc>
   2de0c:	31402d36 	bltu	r6,r5,2dec4 <__hexnan+0x194>
   2de10:	02000204 	movi	r8,8
   2de14:	18c00044 	addi	r3,r3,1
   2de18:	18800043 	ldbu	r2,1(r3)
   2de1c:	103fe51e 	bne	r2,zero,2ddb4 <__hexnan+0x84>
   2de20:	50003126 	beq	r10,zero,2dee8 <__hexnan+0x1b8>
   2de24:	2ac0022e 	bgeu	r5,r11,2de30 <__hexnan+0x100>
   2de28:	008001c4 	movi	r2,7
   2de2c:	1200520e 	bge	r2,r8,2df78 <__hexnan+0x248>
   2de30:	31403f2e 	bgeu	r6,r5,2df30 <__hexnan+0x200>
   2de34:	3005883a 	mov	r2,r6
   2de38:	28c00017 	ldw	r3,0(r5)
   2de3c:	10800104 	addi	r2,r2,4
   2de40:	29400104 	addi	r5,r5,4
   2de44:	10ffff15 	stw	r3,-4(r2)
   2de48:	897ffb2e 	bgeu	r17,r5,2de38 <__hexnan+0x108>
   2de4c:	10000015 	stw	zero,0(r2)
   2de50:	10800104 	addi	r2,r2,4
   2de54:	88bffd2e 	bgeu	r17,r2,2de4c <__hexnan+0x11c>
   2de58:	90bfff17 	ldw	r2,-4(r18)
   2de5c:	1000071e 	bne	r2,zero,2de7c <__hexnan+0x14c>
   2de60:	34403c26 	beq	r6,r17,2df54 <__hexnan+0x224>
   2de64:	8805883a 	mov	r2,r17
   2de68:	00000106 	br	2de70 <__hexnan+0x140>
   2de6c:	30803a26 	beq	r6,r2,2df58 <__hexnan+0x228>
   2de70:	10bfff04 	addi	r2,r2,-4
   2de74:	10c00017 	ldw	r3,0(r2)
   2de78:	183ffc26 	beq	r3,zero,2de6c <__hexnan+0x13c>
   2de7c:	00800144 	movi	r2,5
   2de80:	00001a06 	br	2deec <__hexnan+0x1bc>
   2de84:	42000044 	addi	r8,r8,1
   2de88:	52800044 	addi	r10,r10,1
   2de8c:	7a000716 	blt	r15,r8,2deac <__hexnan+0x17c>
   2de90:	28800017 	ldw	r2,0(r5)
   2de94:	1004913a 	slli	r2,r2,4
   2de98:	39c003cc 	andi	r7,r7,15
   2de9c:	11ceb03a 	or	r7,r2,r7
   2dea0:	29c00015 	stw	r7,0(r5)
   2dea4:	18c00044 	addi	r3,r3,1
   2dea8:	003fdb06 	br	2de18 <__hexnan+0xe8>
   2deac:	317fd92e 	bgeu	r6,r5,2de14 <__hexnan+0xe4>
   2deb0:	283fff15 	stw	zero,-4(r5)
   2deb4:	0005883a 	mov	r2,zero
   2deb8:	297fff04 	addi	r5,r5,-4
   2debc:	02000044 	movi	r8,1
   2dec0:	003ff506 	br	2de98 <__hexnan+0x168>
   2dec4:	283fff15 	stw	zero,-4(r5)
   2dec8:	297fff04 	addi	r5,r5,-4
   2decc:	501b883a 	mov	r13,r10
   2ded0:	2817883a 	mov	r11,r5
   2ded4:	0011883a 	mov	r8,zero
   2ded8:	18c00044 	addi	r3,r3,1
   2dedc:	003fce06 	br	2de18 <__hexnan+0xe8>
   2dee0:	01c00a44 	movi	r7,41
   2dee4:	11c02026 	beq	r2,r7,2df68 <__hexnan+0x238>
   2dee8:	00800104 	movi	r2,4
   2deec:	dfc00917 	ldw	ra,36(sp)
   2def0:	dd400817 	ldw	r21,32(sp)
   2def4:	dd000717 	ldw	r20,28(sp)
   2def8:	dcc00617 	ldw	r19,24(sp)
   2defc:	dc800517 	ldw	r18,20(sp)
   2df00:	dc400417 	ldw	r17,16(sp)
   2df04:	dc000317 	ldw	r16,12(sp)
   2df08:	dec00a04 	addi	sp,sp,40
   2df0c:	f800283a 	ret
   2df10:	d9000015 	stw	r4,0(sp)
   2df14:	d9400115 	stw	r5,4(sp)
   2df18:	d9800215 	stw	r6,8(sp)
   2df1c:	002d5280 	call	2d528 <__hexdig_init>
   2df20:	d9800217 	ldw	r6,8(sp)
   2df24:	d9400117 	ldw	r5,4(sp)
   2df28:	d9000017 	ldw	r4,0(sp)
   2df2c:	003f8c06 	br	2dd60 <__hexnan+0x30>
   2df30:	a03fc926 	beq	r20,zero,2de58 <__hexnan+0x128>
   2df34:	00800804 	movi	r2,32
   2df38:	1529c83a 	sub	r20,r2,r20
   2df3c:	00ffffc4 	movi	r3,-1
   2df40:	90bfff17 	ldw	r2,-4(r18)
   2df44:	1d06d83a 	srl	r3,r3,r20
   2df48:	1884703a 	and	r2,r3,r2
   2df4c:	90bfff15 	stw	r2,-4(r18)
   2df50:	003fc206 	br	2de5c <__hexnan+0x12c>
   2df54:	3005883a 	mov	r2,r6
   2df58:	00c00044 	movi	r3,1
   2df5c:	10c00015 	stw	r3,0(r2)
   2df60:	00800144 	movi	r2,5
   2df64:	003fe106 	br	2deec <__hexnan+0x1bc>
   2df68:	503fdf26 	beq	r10,zero,2dee8 <__hexnan+0x1b8>
   2df6c:	18c00084 	addi	r3,r3,2
   2df70:	20c00015 	stw	r3,0(r4)
   2df74:	003fab06 	br	2de24 <__hexnan+0xf4>
   2df78:	00800204 	movi	r2,8
   2df7c:	1211c83a 	sub	r8,r2,r8
   2df80:	4211883a 	add	r8,r8,r8
   2df84:	28c00017 	ldw	r3,0(r5)
   2df88:	4211883a 	add	r8,r8,r8
   2df8c:	02400804 	movi	r9,32
   2df90:	4a13c83a 	sub	r9,r9,r8
   2df94:	2805883a 	mov	r2,r5
   2df98:	11000117 	ldw	r4,4(r2)
   2df9c:	10800104 	addi	r2,r2,4
   2dfa0:	224e983a 	sll	r7,r4,r9
   2dfa4:	19ceb03a 	or	r7,r3,r7
   2dfa8:	2206d83a 	srl	r3,r4,r8
   2dfac:	11ffff15 	stw	r7,-4(r2)
   2dfb0:	10c00015 	stw	r3,0(r2)
   2dfb4:	12fff836 	bltu	r2,r11,2df98 <__hexnan+0x268>
   2dfb8:	003f9d06 	br	2de30 <__hexnan+0x100>

0002dfbc <__muldi3>:
   2dfbc:	defff604 	addi	sp,sp,-40
   2dfc0:	dd400515 	stw	r21,20(sp)
   2dfc4:	dd000415 	stw	r20,16(sp)
   2dfc8:	257fffcc 	andi	r21,r4,65535
   2dfcc:	353fffcc 	andi	r20,r6,65535
   2dfd0:	dcc00315 	stw	r19,12(sp)
   2dfd4:	3026d43a 	srli	r19,r6,16
   2dfd8:	dd800615 	stw	r22,24(sp)
   2dfdc:	dc800215 	stw	r18,8(sp)
   2dfe0:	dc400115 	stw	r17,4(sp)
   2dfe4:	2024d43a 	srli	r18,r4,16
   2dfe8:	2023883a 	mov	r17,r4
   2dfec:	282d883a 	mov	r22,r5
   2dff0:	a009883a 	mov	r4,r20
   2dff4:	a80b883a 	mov	r5,r21
   2dff8:	dfc00915 	stw	ra,36(sp)
   2dffc:	df000815 	stw	fp,32(sp)
   2e000:	ddc00715 	stw	r23,28(sp)
   2e004:	3839883a 	mov	fp,r7
   2e008:	dc000015 	stw	r16,0(sp)
   2e00c:	3021883a 	mov	r16,r6
   2e010:	00211880 	call	21188 <__mulsi3>
   2e014:	a80b883a 	mov	r5,r21
   2e018:	9809883a 	mov	r4,r19
   2e01c:	102f883a 	mov	r23,r2
   2e020:	00211880 	call	21188 <__mulsi3>
   2e024:	a009883a 	mov	r4,r20
   2e028:	900b883a 	mov	r5,r18
   2e02c:	102b883a 	mov	r21,r2
   2e030:	00211880 	call	21188 <__mulsi3>
   2e034:	9809883a 	mov	r4,r19
   2e038:	900b883a 	mov	r5,r18
   2e03c:	1029883a 	mov	r20,r2
   2e040:	00211880 	call	21188 <__mulsi3>
   2e044:	1007883a 	mov	r3,r2
   2e048:	b804d43a 	srli	r2,r23,16
   2e04c:	a549883a 	add	r4,r20,r21
   2e050:	2089883a 	add	r4,r4,r2
   2e054:	2500022e 	bgeu	r4,r20,2e060 <__muldi3+0xa4>
   2e058:	00800074 	movhi	r2,1
   2e05c:	1887883a 	add	r3,r3,r2
   2e060:	200cd43a 	srli	r6,r4,16
   2e064:	2004943a 	slli	r2,r4,16
   2e068:	e00b883a 	mov	r5,fp
   2e06c:	8809883a 	mov	r4,r17
   2e070:	bdffffcc 	andi	r23,r23,65535
   2e074:	19a3883a 	add	r17,r3,r6
   2e078:	15ef883a 	add	r23,r2,r23
   2e07c:	00211880 	call	21188 <__mulsi3>
   2e080:	8009883a 	mov	r4,r16
   2e084:	b00b883a 	mov	r5,r22
   2e088:	1025883a 	mov	r18,r2
   2e08c:	00211880 	call	21188 <__mulsi3>
   2e090:	9085883a 	add	r2,r18,r2
   2e094:	1447883a 	add	r3,r2,r17
   2e098:	b805883a 	mov	r2,r23
   2e09c:	dfc00917 	ldw	ra,36(sp)
   2e0a0:	df000817 	ldw	fp,32(sp)
   2e0a4:	ddc00717 	ldw	r23,28(sp)
   2e0a8:	dd800617 	ldw	r22,24(sp)
   2e0ac:	dd400517 	ldw	r21,20(sp)
   2e0b0:	dd000417 	ldw	r20,16(sp)
   2e0b4:	dcc00317 	ldw	r19,12(sp)
   2e0b8:	dc800217 	ldw	r18,8(sp)
   2e0bc:	dc400117 	ldw	r17,4(sp)
   2e0c0:	dc000017 	ldw	r16,0(sp)
   2e0c4:	dec00a04 	addi	sp,sp,40
   2e0c8:	f800283a 	ret

0002e0cc <__fixunsdfsi>:
   2e0cc:	defffd04 	addi	sp,sp,-12
   2e0d0:	000d883a 	mov	r6,zero
   2e0d4:	01d07834 	movhi	r7,16864
   2e0d8:	dc400115 	stw	r17,4(sp)
   2e0dc:	dc000015 	stw	r16,0(sp)
   2e0e0:	dfc00215 	stw	ra,8(sp)
   2e0e4:	2023883a 	mov	r17,r4
   2e0e8:	2821883a 	mov	r16,r5
   2e0ec:	002f8880 	call	2f888 <__gedf2>
   2e0f0:	1000080e 	bge	r2,zero,2e114 <__fixunsdfsi+0x48>
   2e0f4:	8809883a 	mov	r4,r17
   2e0f8:	800b883a 	mov	r5,r16
   2e0fc:	002fa780 	call	2fa78 <__fixdfsi>
   2e100:	dfc00217 	ldw	ra,8(sp)
   2e104:	dc400117 	ldw	r17,4(sp)
   2e108:	dc000017 	ldw	r16,0(sp)
   2e10c:	dec00304 	addi	sp,sp,12
   2e110:	f800283a 	ret
   2e114:	000d883a 	mov	r6,zero
   2e118:	01d07834 	movhi	r7,16864
   2e11c:	8809883a 	mov	r4,r17
   2e120:	800b883a 	mov	r5,r16
   2e124:	002f2740 	call	2f274 <__subdf3>
   2e128:	180b883a 	mov	r5,r3
   2e12c:	1009883a 	mov	r4,r2
   2e130:	002fa780 	call	2fa78 <__fixdfsi>
   2e134:	00e00034 	movhi	r3,32768
   2e138:	10c5883a 	add	r2,r2,r3
   2e13c:	dfc00217 	ldw	ra,8(sp)
   2e140:	dc400117 	ldw	r17,4(sp)
   2e144:	dc000017 	ldw	r16,0(sp)
   2e148:	dec00304 	addi	sp,sp,12
   2e14c:	f800283a 	ret

0002e150 <__udivdi3>:
   2e150:	defff504 	addi	sp,sp,-44
   2e154:	dd000515 	stw	r20,20(sp)
   2e158:	dcc00415 	stw	r19,16(sp)
   2e15c:	dc800315 	stw	r18,12(sp)
   2e160:	dc400215 	stw	r17,8(sp)
   2e164:	dc000115 	stw	r16,4(sp)
   2e168:	dfc00a15 	stw	ra,40(sp)
   2e16c:	df000915 	stw	fp,36(sp)
   2e170:	ddc00815 	stw	r23,32(sp)
   2e174:	dd800715 	stw	r22,28(sp)
   2e178:	dd400615 	stw	r21,24(sp)
   2e17c:	2025883a 	mov	r18,r4
   2e180:	2823883a 	mov	r17,r5
   2e184:	3021883a 	mov	r16,r6
   2e188:	2027883a 	mov	r19,r4
   2e18c:	2829883a 	mov	r20,r5
   2e190:	3800451e 	bne	r7,zero,2e2a8 <__udivdi3+0x158>
   2e194:	2980652e 	bgeu	r5,r6,2e32c <__udivdi3+0x1dc>
   2e198:	00bfffd4 	movui	r2,65535
   2e19c:	1180b436 	bltu	r2,r6,2e470 <__udivdi3+0x320>
   2e1a0:	00803fc4 	movi	r2,255
   2e1a4:	11816636 	bltu	r2,r6,2e740 <__udivdi3+0x5f0>
   2e1a8:	0005883a 	mov	r2,zero
   2e1ac:	0007883a 	mov	r3,zero
   2e1b0:	3084d83a 	srl	r2,r6,r2
   2e1b4:	010000f4 	movhi	r4,3
   2e1b8:	210fcd04 	addi	r4,r4,16180
   2e1bc:	2085883a 	add	r2,r4,r2
   2e1c0:	10800003 	ldbu	r2,0(r2)
   2e1c4:	10c7883a 	add	r3,r2,r3
   2e1c8:	00800804 	movi	r2,32
   2e1cc:	10c5c83a 	sub	r2,r2,r3
   2e1d0:	10000526 	beq	r2,zero,2e1e8 <__udivdi3+0x98>
   2e1d4:	88a2983a 	sll	r17,r17,r2
   2e1d8:	90c6d83a 	srl	r3,r18,r3
   2e1dc:	30a0983a 	sll	r16,r6,r2
   2e1e0:	90a6983a 	sll	r19,r18,r2
   2e1e4:	88e8b03a 	or	r20,r17,r3
   2e1e8:	8022d43a 	srli	r17,r16,16
   2e1ec:	a009883a 	mov	r4,r20
   2e1f0:	857fffcc 	andi	r21,r16,65535
   2e1f4:	880b883a 	mov	r5,r17
   2e1f8:	002fdf00 	call	2fdf0 <__umodsi3>
   2e1fc:	a009883a 	mov	r4,r20
   2e200:	880b883a 	mov	r5,r17
   2e204:	102d883a 	mov	r22,r2
   2e208:	002fde80 	call	2fde8 <__udivsi3>
   2e20c:	1009883a 	mov	r4,r2
   2e210:	a80b883a 	mov	r5,r21
   2e214:	1025883a 	mov	r18,r2
   2e218:	00211880 	call	21188 <__mulsi3>
   2e21c:	1009883a 	mov	r4,r2
   2e220:	b006943a 	slli	r3,r22,16
   2e224:	9804d43a 	srli	r2,r19,16
   2e228:	1886b03a 	or	r3,r3,r2
   2e22c:	1900052e 	bgeu	r3,r4,2e244 <__udivdi3+0xf4>
   2e230:	1c07883a 	add	r3,r3,r16
   2e234:	90bfffc4 	addi	r2,r18,-1
   2e238:	1c000136 	bltu	r3,r16,2e240 <__udivdi3+0xf0>
   2e23c:	19015536 	bltu	r3,r4,2e794 <__udivdi3+0x644>
   2e240:	1025883a 	mov	r18,r2
   2e244:	1929c83a 	sub	r20,r3,r4
   2e248:	880b883a 	mov	r5,r17
   2e24c:	a009883a 	mov	r4,r20
   2e250:	002fdf00 	call	2fdf0 <__umodsi3>
   2e254:	102d883a 	mov	r22,r2
   2e258:	880b883a 	mov	r5,r17
   2e25c:	a009883a 	mov	r4,r20
   2e260:	b02c943a 	slli	r22,r22,16
   2e264:	002fde80 	call	2fde8 <__udivsi3>
   2e268:	1009883a 	mov	r4,r2
   2e26c:	a80b883a 	mov	r5,r21
   2e270:	9cffffcc 	andi	r19,r19,65535
   2e274:	1023883a 	mov	r17,r2
   2e278:	b4e6b03a 	or	r19,r22,r19
   2e27c:	00211880 	call	21188 <__mulsi3>
   2e280:	9880052e 	bgeu	r19,r2,2e298 <__udivdi3+0x148>
   2e284:	9c27883a 	add	r19,r19,r16
   2e288:	88ffffc4 	addi	r3,r17,-1
   2e28c:	9c011436 	bltu	r19,r16,2e6e0 <__udivdi3+0x590>
   2e290:	9881132e 	bgeu	r19,r2,2e6e0 <__udivdi3+0x590>
   2e294:	8c7fff84 	addi	r17,r17,-2
   2e298:	9004943a 	slli	r2,r18,16
   2e29c:	0007883a 	mov	r3,zero
   2e2a0:	8884b03a 	or	r2,r17,r2
   2e2a4:	00001506 	br	2e2fc <__udivdi3+0x1ac>
   2e2a8:	29c06a36 	bltu	r5,r7,2e454 <__udivdi3+0x304>
   2e2ac:	00bfffd4 	movui	r2,65535
   2e2b0:	11c06a2e 	bgeu	r2,r7,2e45c <__udivdi3+0x30c>
   2e2b4:	00804034 	movhi	r2,256
   2e2b8:	10bfffc4 	addi	r2,r2,-1
   2e2bc:	11c11436 	bltu	r2,r7,2e710 <__udivdi3+0x5c0>
   2e2c0:	00c00404 	movi	r3,16
   2e2c4:	180b883a 	mov	r5,r3
   2e2c8:	38c6d83a 	srl	r3,r7,r3
   2e2cc:	010000f4 	movhi	r4,3
   2e2d0:	210fcd04 	addi	r4,r4,16180
   2e2d4:	04000804 	movi	r16,32
   2e2d8:	20c7883a 	add	r3,r4,r3
   2e2dc:	18800003 	ldbu	r2,0(r3)
   2e2e0:	1145883a 	add	r2,r2,r5
   2e2e4:	80a1c83a 	sub	r16,r16,r2
   2e2e8:	80006e1e 	bne	r16,zero,2e4a4 <__udivdi3+0x354>
   2e2ec:	0007883a 	mov	r3,zero
   2e2f0:	3c406a36 	bltu	r7,r17,2e49c <__udivdi3+0x34c>
   2e2f4:	9180692e 	bgeu	r18,r6,2e49c <__udivdi3+0x34c>
   2e2f8:	0005883a 	mov	r2,zero
   2e2fc:	dfc00a17 	ldw	ra,40(sp)
   2e300:	df000917 	ldw	fp,36(sp)
   2e304:	ddc00817 	ldw	r23,32(sp)
   2e308:	dd800717 	ldw	r22,28(sp)
   2e30c:	dd400617 	ldw	r21,24(sp)
   2e310:	dd000517 	ldw	r20,20(sp)
   2e314:	dcc00417 	ldw	r19,16(sp)
   2e318:	dc800317 	ldw	r18,12(sp)
   2e31c:	dc400217 	ldw	r17,8(sp)
   2e320:	dc000117 	ldw	r16,4(sp)
   2e324:	dec00b04 	addi	sp,sp,44
   2e328:	f800283a 	ret
   2e32c:	3000041e 	bne	r6,zero,2e340 <__udivdi3+0x1f0>
   2e330:	01000044 	movi	r4,1
   2e334:	000b883a 	mov	r5,zero
   2e338:	002fde80 	call	2fde8 <__udivsi3>
   2e33c:	1021883a 	mov	r16,r2
   2e340:	00bfffd4 	movui	r2,65535
   2e344:	1400502e 	bgeu	r2,r16,2e488 <__udivdi3+0x338>
   2e348:	00804034 	movhi	r2,256
   2e34c:	10bfffc4 	addi	r2,r2,-1
   2e350:	1400f536 	bltu	r2,r16,2e728 <__udivdi3+0x5d8>
   2e354:	00800404 	movi	r2,16
   2e358:	1007883a 	mov	r3,r2
   2e35c:	8084d83a 	srl	r2,r16,r2
   2e360:	010000f4 	movhi	r4,3
   2e364:	210fcd04 	addi	r4,r4,16180
   2e368:	2085883a 	add	r2,r4,r2
   2e36c:	10800003 	ldbu	r2,0(r2)
   2e370:	10c7883a 	add	r3,r2,r3
   2e374:	00800804 	movi	r2,32
   2e378:	10c5c83a 	sub	r2,r2,r3
   2e37c:	1000a01e 	bne	r2,zero,2e600 <__udivdi3+0x4b0>
   2e380:	8028d43a 	srli	r20,r16,16
   2e384:	8c23c83a 	sub	r17,r17,r16
   2e388:	857fffcc 	andi	r21,r16,65535
   2e38c:	00c00044 	movi	r3,1
   2e390:	8809883a 	mov	r4,r17
   2e394:	a00b883a 	mov	r5,r20
   2e398:	d8c00015 	stw	r3,0(sp)
   2e39c:	002fdf00 	call	2fdf0 <__umodsi3>
   2e3a0:	8809883a 	mov	r4,r17
   2e3a4:	a00b883a 	mov	r5,r20
   2e3a8:	102d883a 	mov	r22,r2
   2e3ac:	002fde80 	call	2fde8 <__udivsi3>
   2e3b0:	1009883a 	mov	r4,r2
   2e3b4:	a80b883a 	mov	r5,r21
   2e3b8:	1025883a 	mov	r18,r2
   2e3bc:	00211880 	call	21188 <__mulsi3>
   2e3c0:	1009883a 	mov	r4,r2
   2e3c4:	b00c943a 	slli	r6,r22,16
   2e3c8:	9804d43a 	srli	r2,r19,16
   2e3cc:	d8c00017 	ldw	r3,0(sp)
   2e3d0:	308cb03a 	or	r6,r6,r2
   2e3d4:	3100052e 	bgeu	r6,r4,2e3ec <__udivdi3+0x29c>
   2e3d8:	340d883a 	add	r6,r6,r16
   2e3dc:	90bfffc4 	addi	r2,r18,-1
   2e3e0:	34000136 	bltu	r6,r16,2e3e8 <__udivdi3+0x298>
   2e3e4:	3100e836 	bltu	r6,r4,2e788 <__udivdi3+0x638>
   2e3e8:	1025883a 	mov	r18,r2
   2e3ec:	3123c83a 	sub	r17,r6,r4
   2e3f0:	8809883a 	mov	r4,r17
   2e3f4:	a00b883a 	mov	r5,r20
   2e3f8:	d8c00015 	stw	r3,0(sp)
   2e3fc:	002fdf00 	call	2fdf0 <__umodsi3>
   2e400:	102d883a 	mov	r22,r2
   2e404:	8809883a 	mov	r4,r17
   2e408:	a00b883a 	mov	r5,r20
   2e40c:	b02c943a 	slli	r22,r22,16
   2e410:	002fde80 	call	2fde8 <__udivsi3>
   2e414:	1009883a 	mov	r4,r2
   2e418:	a80b883a 	mov	r5,r21
   2e41c:	9cffffcc 	andi	r19,r19,65535
   2e420:	1023883a 	mov	r17,r2
   2e424:	b4e6b03a 	or	r19,r22,r19
   2e428:	00211880 	call	21188 <__mulsi3>
   2e42c:	d8c00017 	ldw	r3,0(sp)
   2e430:	9880052e 	bgeu	r19,r2,2e448 <__udivdi3+0x2f8>
   2e434:	9c27883a 	add	r19,r19,r16
   2e438:	893fffc4 	addi	r4,r17,-1
   2e43c:	9c00aa36 	bltu	r19,r16,2e6e8 <__udivdi3+0x598>
   2e440:	9880a92e 	bgeu	r19,r2,2e6e8 <__udivdi3+0x598>
   2e444:	8c7fff84 	addi	r17,r17,-2
   2e448:	9004943a 	slli	r2,r18,16
   2e44c:	8884b03a 	or	r2,r17,r2
   2e450:	003faa06 	br	2e2fc <__udivdi3+0x1ac>
   2e454:	0007883a 	mov	r3,zero
   2e458:	003fa706 	br	2e2f8 <__udivdi3+0x1a8>
   2e45c:	00803fc4 	movi	r2,255
   2e460:	11c0ae36 	bltu	r2,r7,2e71c <__udivdi3+0x5cc>
   2e464:	0007883a 	mov	r3,zero
   2e468:	000b883a 	mov	r5,zero
   2e46c:	003f9606 	br	2e2c8 <__udivdi3+0x178>
   2e470:	00804034 	movhi	r2,256
   2e474:	10bfffc4 	addi	r2,r2,-1
   2e478:	1180ae36 	bltu	r2,r6,2e734 <__udivdi3+0x5e4>
   2e47c:	00800404 	movi	r2,16
   2e480:	1007883a 	mov	r3,r2
   2e484:	003f4a06 	br	2e1b0 <__udivdi3+0x60>
   2e488:	00803fc4 	movi	r2,255
   2e48c:	1400af36 	bltu	r2,r16,2e74c <__udivdi3+0x5fc>
   2e490:	0005883a 	mov	r2,zero
   2e494:	0007883a 	mov	r3,zero
   2e498:	003fb006 	br	2e35c <__udivdi3+0x20c>
   2e49c:	00800044 	movi	r2,1
   2e4a0:	003f9606 	br	2e2fc <__udivdi3+0x1ac>
   2e4a4:	3c0e983a 	sll	r7,r7,r16
   2e4a8:	3086d83a 	srl	r3,r6,r2
   2e4ac:	88aed83a 	srl	r23,r17,r2
   2e4b0:	9084d83a 	srl	r2,r18,r2
   2e4b4:	38e6b03a 	or	r19,r7,r3
   2e4b8:	9828d43a 	srli	r20,r19,16
   2e4bc:	8c22983a 	sll	r17,r17,r16
   2e4c0:	b809883a 	mov	r4,r23
   2e4c4:	a00b883a 	mov	r5,r20
   2e4c8:	342a983a 	sll	r21,r6,r16
   2e4cc:	88a2b03a 	or	r17,r17,r2
   2e4d0:	002fdf00 	call	2fdf0 <__umodsi3>
   2e4d4:	b809883a 	mov	r4,r23
   2e4d8:	a00b883a 	mov	r5,r20
   2e4dc:	1039883a 	mov	fp,r2
   2e4e0:	9dbfffcc 	andi	r22,r19,65535
   2e4e4:	002fde80 	call	2fde8 <__udivsi3>
   2e4e8:	1009883a 	mov	r4,r2
   2e4ec:	b00b883a 	mov	r5,r22
   2e4f0:	102f883a 	mov	r23,r2
   2e4f4:	00211880 	call	21188 <__mulsi3>
   2e4f8:	1009883a 	mov	r4,r2
   2e4fc:	e00e943a 	slli	r7,fp,16
   2e500:	8804d43a 	srli	r2,r17,16
   2e504:	388eb03a 	or	r7,r7,r2
   2e508:	3900042e 	bgeu	r7,r4,2e51c <__udivdi3+0x3cc>
   2e50c:	3ccf883a 	add	r7,r7,r19
   2e510:	b8bfffc4 	addi	r2,r23,-1
   2e514:	3cc0942e 	bgeu	r7,r19,2e768 <__udivdi3+0x618>
   2e518:	102f883a 	mov	r23,r2
   2e51c:	3939c83a 	sub	fp,r7,r4
   2e520:	a00b883a 	mov	r5,r20
   2e524:	e009883a 	mov	r4,fp
   2e528:	002fdf00 	call	2fdf0 <__umodsi3>
   2e52c:	a00b883a 	mov	r5,r20
   2e530:	e009883a 	mov	r4,fp
   2e534:	d8800015 	stw	r2,0(sp)
   2e538:	002fde80 	call	2fde8 <__udivsi3>
   2e53c:	1009883a 	mov	r4,r2
   2e540:	b00b883a 	mov	r5,r22
   2e544:	1029883a 	mov	r20,r2
   2e548:	00211880 	call	21188 <__mulsi3>
   2e54c:	d8c00017 	ldw	r3,0(sp)
   2e550:	8c7fffcc 	andi	r17,r17,65535
   2e554:	1806943a 	slli	r3,r3,16
   2e558:	1c46b03a 	or	r3,r3,r17
   2e55c:	1880042e 	bgeu	r3,r2,2e570 <__udivdi3+0x420>
   2e560:	1cc7883a 	add	r3,r3,r19
   2e564:	a13fffc4 	addi	r4,r20,-1
   2e568:	1cc07b2e 	bgeu	r3,r19,2e758 <__udivdi3+0x608>
   2e56c:	2029883a 	mov	r20,r4
   2e570:	b82e943a 	slli	r23,r23,16
   2e574:	a822d43a 	srli	r17,r21,16
   2e578:	ad7fffcc 	andi	r21,r21,65535
   2e57c:	a5e8b03a 	or	r20,r20,r23
   2e580:	a5bfffcc 	andi	r22,r20,65535
   2e584:	b009883a 	mov	r4,r22
   2e588:	a80b883a 	mov	r5,r21
   2e58c:	18afc83a 	sub	r23,r3,r2
   2e590:	a026d43a 	srli	r19,r20,16
   2e594:	00211880 	call	21188 <__mulsi3>
   2e598:	b009883a 	mov	r4,r22
   2e59c:	880b883a 	mov	r5,r17
   2e5a0:	1039883a 	mov	fp,r2
   2e5a4:	00211880 	call	21188 <__mulsi3>
   2e5a8:	a80b883a 	mov	r5,r21
   2e5ac:	9809883a 	mov	r4,r19
   2e5b0:	102d883a 	mov	r22,r2
   2e5b4:	00211880 	call	21188 <__mulsi3>
   2e5b8:	9809883a 	mov	r4,r19
   2e5bc:	880b883a 	mov	r5,r17
   2e5c0:	102b883a 	mov	r21,r2
   2e5c4:	00211880 	call	21188 <__mulsi3>
   2e5c8:	100b883a 	mov	r5,r2
   2e5cc:	e004d43a 	srli	r2,fp,16
   2e5d0:	ad89883a 	add	r4,r21,r22
   2e5d4:	2089883a 	add	r4,r4,r2
   2e5d8:	2540022e 	bgeu	r4,r21,2e5e4 <__udivdi3+0x494>
   2e5dc:	00800074 	movhi	r2,1
   2e5e0:	288b883a 	add	r5,r5,r2
   2e5e4:	2004d43a 	srli	r2,r4,16
   2e5e8:	288b883a 	add	r5,r5,r2
   2e5ec:	b9404536 	bltu	r23,r5,2e704 <__udivdi3+0x5b4>
   2e5f0:	b9403f26 	beq	r23,r5,2e6f0 <__udivdi3+0x5a0>
   2e5f4:	a005883a 	mov	r2,r20
   2e5f8:	0007883a 	mov	r3,zero
   2e5fc:	003f3f06 	br	2e2fc <__udivdi3+0x1ac>
   2e600:	80a0983a 	sll	r16,r16,r2
   2e604:	88eed83a 	srl	r23,r17,r3
   2e608:	90c6d83a 	srl	r3,r18,r3
   2e60c:	8028d43a 	srli	r20,r16,16
   2e610:	88a2983a 	sll	r17,r17,r2
   2e614:	b809883a 	mov	r4,r23
   2e618:	a00b883a 	mov	r5,r20
   2e61c:	88ecb03a 	or	r22,r17,r3
   2e620:	90a6983a 	sll	r19,r18,r2
   2e624:	002fdf00 	call	2fdf0 <__umodsi3>
   2e628:	b809883a 	mov	r4,r23
   2e62c:	a00b883a 	mov	r5,r20
   2e630:	1023883a 	mov	r17,r2
   2e634:	857fffcc 	andi	r21,r16,65535
   2e638:	002fde80 	call	2fde8 <__udivsi3>
   2e63c:	1009883a 	mov	r4,r2
   2e640:	a80b883a 	mov	r5,r21
   2e644:	102f883a 	mov	r23,r2
   2e648:	00211880 	call	21188 <__mulsi3>
   2e64c:	1009883a 	mov	r4,r2
   2e650:	880a943a 	slli	r5,r17,16
   2e654:	b004d43a 	srli	r2,r22,16
   2e658:	288ab03a 	or	r5,r5,r2
   2e65c:	2900062e 	bgeu	r5,r4,2e678 <__udivdi3+0x528>
   2e660:	2c0b883a 	add	r5,r5,r16
   2e664:	b8bfffc4 	addi	r2,r23,-1
   2e668:	2c004536 	bltu	r5,r16,2e780 <__udivdi3+0x630>
   2e66c:	2900442e 	bgeu	r5,r4,2e780 <__udivdi3+0x630>
   2e670:	bdffff84 	addi	r23,r23,-2
   2e674:	2c0b883a 	add	r5,r5,r16
   2e678:	2925c83a 	sub	r18,r5,r4
   2e67c:	9009883a 	mov	r4,r18
   2e680:	a00b883a 	mov	r5,r20
   2e684:	002fdf00 	call	2fdf0 <__umodsi3>
   2e688:	1023883a 	mov	r17,r2
   2e68c:	9009883a 	mov	r4,r18
   2e690:	a00b883a 	mov	r5,r20
   2e694:	8822943a 	slli	r17,r17,16
   2e698:	002fde80 	call	2fde8 <__udivsi3>
   2e69c:	1009883a 	mov	r4,r2
   2e6a0:	a80b883a 	mov	r5,r21
   2e6a4:	b5bfffcc 	andi	r22,r22,65535
   2e6a8:	1025883a 	mov	r18,r2
   2e6ac:	8da2b03a 	or	r17,r17,r22
   2e6b0:	00211880 	call	21188 <__mulsi3>
   2e6b4:	8880062e 	bgeu	r17,r2,2e6d0 <__udivdi3+0x580>
   2e6b8:	8c23883a 	add	r17,r17,r16
   2e6bc:	90ffffc4 	addi	r3,r18,-1
   2e6c0:	8c002d36 	bltu	r17,r16,2e778 <__udivdi3+0x628>
   2e6c4:	88802c2e 	bgeu	r17,r2,2e778 <__udivdi3+0x628>
   2e6c8:	94bfff84 	addi	r18,r18,-2
   2e6cc:	8c23883a 	add	r17,r17,r16
   2e6d0:	b806943a 	slli	r3,r23,16
   2e6d4:	88a3c83a 	sub	r17,r17,r2
   2e6d8:	90c6b03a 	or	r3,r18,r3
   2e6dc:	003f2c06 	br	2e390 <__udivdi3+0x240>
   2e6e0:	1823883a 	mov	r17,r3
   2e6e4:	003eec06 	br	2e298 <__udivdi3+0x148>
   2e6e8:	2023883a 	mov	r17,r4
   2e6ec:	003f5606 	br	2e448 <__udivdi3+0x2f8>
   2e6f0:	2008943a 	slli	r4,r4,16
   2e6f4:	9420983a 	sll	r16,r18,r16
   2e6f8:	e73fffcc 	andi	fp,fp,65535
   2e6fc:	2709883a 	add	r4,r4,fp
   2e700:	813fbc2e 	bgeu	r16,r4,2e5f4 <__udivdi3+0x4a4>
   2e704:	a0bfffc4 	addi	r2,r20,-1
   2e708:	0007883a 	mov	r3,zero
   2e70c:	003efb06 	br	2e2fc <__udivdi3+0x1ac>
   2e710:	00c00604 	movi	r3,24
   2e714:	180b883a 	mov	r5,r3
   2e718:	003eeb06 	br	2e2c8 <__udivdi3+0x178>
   2e71c:	00c00204 	movi	r3,8
   2e720:	180b883a 	mov	r5,r3
   2e724:	003ee806 	br	2e2c8 <__udivdi3+0x178>
   2e728:	00800604 	movi	r2,24
   2e72c:	1007883a 	mov	r3,r2
   2e730:	003f0a06 	br	2e35c <__udivdi3+0x20c>
   2e734:	00800604 	movi	r2,24
   2e738:	1007883a 	mov	r3,r2
   2e73c:	003e9c06 	br	2e1b0 <__udivdi3+0x60>
   2e740:	00800204 	movi	r2,8
   2e744:	1007883a 	mov	r3,r2
   2e748:	003e9906 	br	2e1b0 <__udivdi3+0x60>
   2e74c:	00800204 	movi	r2,8
   2e750:	1007883a 	mov	r3,r2
   2e754:	003f0106 	br	2e35c <__udivdi3+0x20c>
   2e758:	18bf842e 	bgeu	r3,r2,2e56c <__udivdi3+0x41c>
   2e75c:	a53fff84 	addi	r20,r20,-2
   2e760:	1cc7883a 	add	r3,r3,r19
   2e764:	003f8206 	br	2e570 <__udivdi3+0x420>
   2e768:	393f6b2e 	bgeu	r7,r4,2e518 <__udivdi3+0x3c8>
   2e76c:	bdffff84 	addi	r23,r23,-2
   2e770:	3ccf883a 	add	r7,r7,r19
   2e774:	003f6906 	br	2e51c <__udivdi3+0x3cc>
   2e778:	1825883a 	mov	r18,r3
   2e77c:	003fd406 	br	2e6d0 <__udivdi3+0x580>
   2e780:	102f883a 	mov	r23,r2
   2e784:	003fbc06 	br	2e678 <__udivdi3+0x528>
   2e788:	94bfff84 	addi	r18,r18,-2
   2e78c:	340d883a 	add	r6,r6,r16
   2e790:	003f1606 	br	2e3ec <__udivdi3+0x29c>
   2e794:	94bfff84 	addi	r18,r18,-2
   2e798:	1c07883a 	add	r3,r3,r16
   2e79c:	003ea906 	br	2e244 <__udivdi3+0xf4>

0002e7a0 <__umoddi3>:
   2e7a0:	defff304 	addi	sp,sp,-52
   2e7a4:	dd000715 	stw	r20,28(sp)
   2e7a8:	dcc00615 	stw	r19,24(sp)
   2e7ac:	dc800515 	stw	r18,20(sp)
   2e7b0:	dc400415 	stw	r17,16(sp)
   2e7b4:	dc000315 	stw	r16,12(sp)
   2e7b8:	dfc00c15 	stw	ra,48(sp)
   2e7bc:	df000b15 	stw	fp,44(sp)
   2e7c0:	ddc00a15 	stw	r23,40(sp)
   2e7c4:	dd800915 	stw	r22,36(sp)
   2e7c8:	dd400815 	stw	r21,32(sp)
   2e7cc:	2025883a 	mov	r18,r4
   2e7d0:	2823883a 	mov	r17,r5
   2e7d4:	3021883a 	mov	r16,r6
   2e7d8:	2027883a 	mov	r19,r4
   2e7dc:	2829883a 	mov	r20,r5
   2e7e0:	38003a1e 	bne	r7,zero,2e8cc <__umoddi3+0x12c>
   2e7e4:	2980522e 	bgeu	r5,r6,2e930 <__umoddi3+0x190>
   2e7e8:	00bfffd4 	movui	r2,65535
   2e7ec:	1180a436 	bltu	r2,r6,2ea80 <__umoddi3+0x2e0>
   2e7f0:	00803fc4 	movi	r2,255
   2e7f4:	11816036 	bltu	r2,r6,2ed78 <__umoddi3+0x5d8>
   2e7f8:	0005883a 	mov	r2,zero
   2e7fc:	0009883a 	mov	r4,zero
   2e800:	3084d83a 	srl	r2,r6,r2
   2e804:	00c000f4 	movhi	r3,3
   2e808:	18cfcd04 	addi	r3,r3,16180
   2e80c:	05400804 	movi	r21,32
   2e810:	1885883a 	add	r2,r3,r2
   2e814:	10800003 	ldbu	r2,0(r2)
   2e818:	1109883a 	add	r4,r2,r4
   2e81c:	a92bc83a 	sub	r21,r21,r4
   2e820:	a8010e26 	beq	r21,zero,2ec5c <__umoddi3+0x4bc>
   2e824:	8d62983a 	sll	r17,r17,r21
   2e828:	9108d83a 	srl	r4,r18,r4
   2e82c:	3560983a 	sll	r16,r6,r21
   2e830:	9566983a 	sll	r19,r18,r21
   2e834:	8928b03a 	or	r20,r17,r4
   2e838:	8022d43a 	srli	r17,r16,16
   2e83c:	a009883a 	mov	r4,r20
   2e840:	84bfffcc 	andi	r18,r16,65535
   2e844:	880b883a 	mov	r5,r17
   2e848:	002fdf00 	call	2fdf0 <__umodsi3>
   2e84c:	a009883a 	mov	r4,r20
   2e850:	880b883a 	mov	r5,r17
   2e854:	102d883a 	mov	r22,r2
   2e858:	002fde80 	call	2fde8 <__udivsi3>
   2e85c:	1009883a 	mov	r4,r2
   2e860:	900b883a 	mov	r5,r18
   2e864:	00211880 	call	21188 <__mulsi3>
   2e868:	1009883a 	mov	r4,r2
   2e86c:	b006943a 	slli	r3,r22,16
   2e870:	9804d43a 	srli	r2,r19,16
   2e874:	1886b03a 	or	r3,r3,r2
   2e878:	1900042e 	bgeu	r3,r4,2e88c <__umoddi3+0xec>
   2e87c:	1c07883a 	add	r3,r3,r16
   2e880:	1c000236 	bltu	r3,r16,2e88c <__umoddi3+0xec>
   2e884:	1900012e 	bgeu	r3,r4,2e88c <__umoddi3+0xec>
   2e888:	1c07883a 	add	r3,r3,r16
   2e88c:	1929c83a 	sub	r20,r3,r4
   2e890:	a009883a 	mov	r4,r20
   2e894:	880b883a 	mov	r5,r17
   2e898:	002fdf00 	call	2fdf0 <__umodsi3>
   2e89c:	102d883a 	mov	r22,r2
   2e8a0:	a009883a 	mov	r4,r20
   2e8a4:	880b883a 	mov	r5,r17
   2e8a8:	b02c943a 	slli	r22,r22,16
   2e8ac:	002fde80 	call	2fde8 <__udivsi3>
   2e8b0:	1009883a 	mov	r4,r2
   2e8b4:	900b883a 	mov	r5,r18
   2e8b8:	9cffffcc 	andi	r19,r19,65535
   2e8bc:	00211880 	call	21188 <__mulsi3>
   2e8c0:	b4e6b03a 	or	r19,r22,r19
   2e8c4:	9880572e 	bgeu	r19,r2,2ea24 <__umoddi3+0x284>
   2e8c8:	00005206 	br	2ea14 <__umoddi3+0x274>
   2e8cc:	29c05936 	bltu	r5,r7,2ea34 <__umoddi3+0x294>
   2e8d0:	00bfffd4 	movui	r2,65535
   2e8d4:	11c0652e 	bgeu	r2,r7,2ea6c <__umoddi3+0x2cc>
   2e8d8:	00804034 	movhi	r2,256
   2e8dc:	10bfffc4 	addi	r2,r2,-1
   2e8e0:	11c11936 	bltu	r2,r7,2ed48 <__umoddi3+0x5a8>
   2e8e4:	00c00404 	movi	r3,16
   2e8e8:	1827883a 	mov	r19,r3
   2e8ec:	38c6d83a 	srl	r3,r7,r3
   2e8f0:	010000f4 	movhi	r4,3
   2e8f4:	210fcd04 	addi	r4,r4,16180
   2e8f8:	04000804 	movi	r16,32
   2e8fc:	20c7883a 	add	r3,r4,r3
   2e900:	18800003 	ldbu	r2,0(r3)
   2e904:	14e7883a 	add	r19,r2,r19
   2e908:	84e1c83a 	sub	r16,r16,r19
   2e90c:	8000671e 	bne	r16,zero,2eaac <__umoddi3+0x30c>
   2e910:	3c400136 	bltu	r7,r17,2e918 <__umoddi3+0x178>
   2e914:	91812536 	bltu	r18,r6,2edac <__umoddi3+0x60c>
   2e918:	9185c83a 	sub	r2,r18,r6
   2e91c:	89e3c83a 	sub	r17,r17,r7
   2e920:	90a5803a 	cmpltu	r18,r18,r2
   2e924:	8ca9c83a 	sub	r20,r17,r18
   2e928:	a007883a 	mov	r3,r20
   2e92c:	00004306 	br	2ea3c <__umoddi3+0x29c>
   2e930:	3000041e 	bne	r6,zero,2e944 <__umoddi3+0x1a4>
   2e934:	01000044 	movi	r4,1
   2e938:	000b883a 	mov	r5,zero
   2e93c:	002fde80 	call	2fde8 <__udivsi3>
   2e940:	1021883a 	mov	r16,r2
   2e944:	00bfffd4 	movui	r2,65535
   2e948:	1400532e 	bgeu	r2,r16,2ea98 <__umoddi3+0x2f8>
   2e94c:	00804034 	movhi	r2,256
   2e950:	10bfffc4 	addi	r2,r2,-1
   2e954:	14010536 	bltu	r2,r16,2ed6c <__umoddi3+0x5cc>
   2e958:	00800404 	movi	r2,16
   2e95c:	1007883a 	mov	r3,r2
   2e960:	8084d83a 	srl	r2,r16,r2
   2e964:	010000f4 	movhi	r4,3
   2e968:	210fcd04 	addi	r4,r4,16180
   2e96c:	05400804 	movi	r21,32
   2e970:	2085883a 	add	r2,r4,r2
   2e974:	10800003 	ldbu	r2,0(r2)
   2e978:	10c7883a 	add	r3,r2,r3
   2e97c:	a8ebc83a 	sub	r21,r21,r3
   2e980:	a800b81e 	bne	r21,zero,2ec64 <__umoddi3+0x4c4>
   2e984:	8028d43a 	srli	r20,r16,16
   2e988:	8c23c83a 	sub	r17,r17,r16
   2e98c:	85bfffcc 	andi	r22,r16,65535
   2e990:	8809883a 	mov	r4,r17
   2e994:	a00b883a 	mov	r5,r20
   2e998:	002fdf00 	call	2fdf0 <__umodsi3>
   2e99c:	8809883a 	mov	r4,r17
   2e9a0:	a00b883a 	mov	r5,r20
   2e9a4:	1025883a 	mov	r18,r2
   2e9a8:	002fde80 	call	2fde8 <__udivsi3>
   2e9ac:	1009883a 	mov	r4,r2
   2e9b0:	b00b883a 	mov	r5,r22
   2e9b4:	00211880 	call	21188 <__mulsi3>
   2e9b8:	1009883a 	mov	r4,r2
   2e9bc:	9006943a 	slli	r3,r18,16
   2e9c0:	9804d43a 	srli	r2,r19,16
   2e9c4:	1886b03a 	or	r3,r3,r2
   2e9c8:	1900032e 	bgeu	r3,r4,2e9d8 <__umoddi3+0x238>
   2e9cc:	1c07883a 	add	r3,r3,r16
   2e9d0:	1c000136 	bltu	r3,r16,2e9d8 <__umoddi3+0x238>
   2e9d4:	1900f336 	bltu	r3,r4,2eda4 <__umoddi3+0x604>
   2e9d8:	1923c83a 	sub	r17,r3,r4
   2e9dc:	8809883a 	mov	r4,r17
   2e9e0:	a00b883a 	mov	r5,r20
   2e9e4:	002fdf00 	call	2fdf0 <__umodsi3>
   2e9e8:	102f883a 	mov	r23,r2
   2e9ec:	8809883a 	mov	r4,r17
   2e9f0:	a00b883a 	mov	r5,r20
   2e9f4:	b82e943a 	slli	r23,r23,16
   2e9f8:	002fde80 	call	2fde8 <__udivsi3>
   2e9fc:	1009883a 	mov	r4,r2
   2ea00:	b00b883a 	mov	r5,r22
   2ea04:	9cffffcc 	andi	r19,r19,65535
   2ea08:	00211880 	call	21188 <__mulsi3>
   2ea0c:	bce6b03a 	or	r19,r23,r19
   2ea10:	9880042e 	bgeu	r19,r2,2ea24 <__umoddi3+0x284>
   2ea14:	9c27883a 	add	r19,r19,r16
   2ea18:	9c000236 	bltu	r19,r16,2ea24 <__umoddi3+0x284>
   2ea1c:	9880012e 	bgeu	r19,r2,2ea24 <__umoddi3+0x284>
   2ea20:	9c27883a 	add	r19,r19,r16
   2ea24:	9885c83a 	sub	r2,r19,r2
   2ea28:	1544d83a 	srl	r2,r2,r21
   2ea2c:	0007883a 	mov	r3,zero
   2ea30:	00000206 	br	2ea3c <__umoddi3+0x29c>
   2ea34:	2005883a 	mov	r2,r4
   2ea38:	2807883a 	mov	r3,r5
   2ea3c:	dfc00c17 	ldw	ra,48(sp)
   2ea40:	df000b17 	ldw	fp,44(sp)
   2ea44:	ddc00a17 	ldw	r23,40(sp)
   2ea48:	dd800917 	ldw	r22,36(sp)
   2ea4c:	dd400817 	ldw	r21,32(sp)
   2ea50:	dd000717 	ldw	r20,28(sp)
   2ea54:	dcc00617 	ldw	r19,24(sp)
   2ea58:	dc800517 	ldw	r18,20(sp)
   2ea5c:	dc400417 	ldw	r17,16(sp)
   2ea60:	dc000317 	ldw	r16,12(sp)
   2ea64:	dec00d04 	addi	sp,sp,52
   2ea68:	f800283a 	ret
   2ea6c:	00803fc4 	movi	r2,255
   2ea70:	11c0b236 	bltu	r2,r7,2ed3c <__umoddi3+0x59c>
   2ea74:	0007883a 	mov	r3,zero
   2ea78:	0027883a 	mov	r19,zero
   2ea7c:	003f9b06 	br	2e8ec <__umoddi3+0x14c>
   2ea80:	00804034 	movhi	r2,256
   2ea84:	10bfffc4 	addi	r2,r2,-1
   2ea88:	1180b236 	bltu	r2,r6,2ed54 <__umoddi3+0x5b4>
   2ea8c:	00800404 	movi	r2,16
   2ea90:	1009883a 	mov	r4,r2
   2ea94:	003f5a06 	br	2e800 <__umoddi3+0x60>
   2ea98:	00803fc4 	movi	r2,255
   2ea9c:	1400b036 	bltu	r2,r16,2ed60 <__umoddi3+0x5c0>
   2eaa0:	0005883a 	mov	r2,zero
   2eaa4:	0007883a 	mov	r3,zero
   2eaa8:	003fad06 	br	2e960 <__umoddi3+0x1c0>
   2eaac:	34c4d83a 	srl	r2,r6,r19
   2eab0:	3c0e983a 	sll	r7,r7,r16
   2eab4:	8cf8d83a 	srl	fp,r17,r19
   2eab8:	8c22983a 	sll	r17,r17,r16
   2eabc:	38a8b03a 	or	r20,r7,r2
   2eac0:	a02ad43a 	srli	r21,r20,16
   2eac4:	94c4d83a 	srl	r2,r18,r19
   2eac8:	e009883a 	mov	r4,fp
   2eacc:	a80b883a 	mov	r5,r21
   2ead0:	342c983a 	sll	r22,r6,r16
   2ead4:	88a2b03a 	or	r17,r17,r2
   2ead8:	002fdf00 	call	2fdf0 <__umodsi3>
   2eadc:	e009883a 	mov	r4,fp
   2eae0:	a80b883a 	mov	r5,r21
   2eae4:	a5ffffcc 	andi	r23,r20,65535
   2eae8:	d8800215 	stw	r2,8(sp)
   2eaec:	002fde80 	call	2fde8 <__udivsi3>
   2eaf0:	1009883a 	mov	r4,r2
   2eaf4:	b80b883a 	mov	r5,r23
   2eaf8:	1039883a 	mov	fp,r2
   2eafc:	00211880 	call	21188 <__mulsi3>
   2eb00:	d8c00217 	ldw	r3,8(sp)
   2eb04:	1009883a 	mov	r4,r2
   2eb08:	8804d43a 	srli	r2,r17,16
   2eb0c:	1806943a 	slli	r3,r3,16
   2eb10:	9424983a 	sll	r18,r18,r16
   2eb14:	1886b03a 	or	r3,r3,r2
   2eb18:	1900042e 	bgeu	r3,r4,2eb2c <__umoddi3+0x38c>
   2eb1c:	1d07883a 	add	r3,r3,r20
   2eb20:	e0bfffc4 	addi	r2,fp,-1
   2eb24:	1d009b2e 	bgeu	r3,r20,2ed94 <__umoddi3+0x5f4>
   2eb28:	1039883a 	mov	fp,r2
   2eb2c:	1907c83a 	sub	r3,r3,r4
   2eb30:	1809883a 	mov	r4,r3
   2eb34:	a80b883a 	mov	r5,r21
   2eb38:	d8c00215 	stw	r3,8(sp)
   2eb3c:	002fdf00 	call	2fdf0 <__umodsi3>
   2eb40:	d8c00217 	ldw	r3,8(sp)
   2eb44:	a80b883a 	mov	r5,r21
   2eb48:	d8800015 	stw	r2,0(sp)
   2eb4c:	1809883a 	mov	r4,r3
   2eb50:	002fde80 	call	2fde8 <__udivsi3>
   2eb54:	1009883a 	mov	r4,r2
   2eb58:	b80b883a 	mov	r5,r23
   2eb5c:	102b883a 	mov	r21,r2
   2eb60:	00211880 	call	21188 <__mulsi3>
   2eb64:	d9c00017 	ldw	r7,0(sp)
   2eb68:	8c7fffcc 	andi	r17,r17,65535
   2eb6c:	380e943a 	slli	r7,r7,16
   2eb70:	3c4eb03a 	or	r7,r7,r17
   2eb74:	3880042e 	bgeu	r7,r2,2eb88 <__umoddi3+0x3e8>
   2eb78:	3d0f883a 	add	r7,r7,r20
   2eb7c:	a8ffffc4 	addi	r3,r21,-1
   2eb80:	3d00802e 	bgeu	r7,r20,2ed84 <__umoddi3+0x5e4>
   2eb84:	182b883a 	mov	r21,r3
   2eb88:	e038943a 	slli	fp,fp,16
   2eb8c:	b010d43a 	srli	r8,r22,16
   2eb90:	b1bfffcc 	andi	r6,r22,65535
   2eb94:	af2ab03a 	or	r21,r21,fp
   2eb98:	a82ed43a 	srli	r23,r21,16
   2eb9c:	ad7fffcc 	andi	r21,r21,65535
   2eba0:	300b883a 	mov	r5,r6
   2eba4:	a809883a 	mov	r4,r21
   2eba8:	38a3c83a 	sub	r17,r7,r2
   2ebac:	d9800115 	stw	r6,4(sp)
   2ebb0:	da000015 	stw	r8,0(sp)
   2ebb4:	00211880 	call	21188 <__mulsi3>
   2ebb8:	da000017 	ldw	r8,0(sp)
   2ebbc:	a809883a 	mov	r4,r21
   2ebc0:	1039883a 	mov	fp,r2
   2ebc4:	400b883a 	mov	r5,r8
   2ebc8:	da000215 	stw	r8,8(sp)
   2ebcc:	00211880 	call	21188 <__mulsi3>
   2ebd0:	d9800117 	ldw	r6,4(sp)
   2ebd4:	b809883a 	mov	r4,r23
   2ebd8:	d8800015 	stw	r2,0(sp)
   2ebdc:	300b883a 	mov	r5,r6
   2ebe0:	00211880 	call	21188 <__mulsi3>
   2ebe4:	d8c00217 	ldw	r3,8(sp)
   2ebe8:	b809883a 	mov	r4,r23
   2ebec:	102b883a 	mov	r21,r2
   2ebf0:	180b883a 	mov	r5,r3
   2ebf4:	00211880 	call	21188 <__mulsi3>
   2ebf8:	d9c00017 	ldw	r7,0(sp)
   2ebfc:	1007883a 	mov	r3,r2
   2ec00:	e004d43a 	srli	r2,fp,16
   2ec04:	a9c9883a 	add	r4,r21,r7
   2ec08:	2089883a 	add	r4,r4,r2
   2ec0c:	2540022e 	bgeu	r4,r21,2ec18 <__umoddi3+0x478>
   2ec10:	00800074 	movhi	r2,1
   2ec14:	1887883a 	add	r3,r3,r2
   2ec18:	2004d43a 	srli	r2,r4,16
   2ec1c:	2008943a 	slli	r4,r4,16
   2ec20:	e73fffcc 	andi	fp,fp,65535
   2ec24:	1887883a 	add	r3,r3,r2
   2ec28:	2709883a 	add	r4,r4,fp
   2ec2c:	88c03d36 	bltu	r17,r3,2ed24 <__umoddi3+0x584>
   2ec30:	88c06126 	beq	r17,r3,2edb8 <__umoddi3+0x618>
   2ec34:	88c7c83a 	sub	r3,r17,r3
   2ec38:	202d883a 	mov	r22,r4
   2ec3c:	95adc83a 	sub	r22,r18,r22
   2ec40:	95a5803a 	cmpltu	r18,r18,r22
   2ec44:	1c87c83a 	sub	r3,r3,r18
   2ec48:	1cc4983a 	sll	r2,r3,r19
   2ec4c:	b42cd83a 	srl	r22,r22,r16
   2ec50:	1c06d83a 	srl	r3,r3,r16
   2ec54:	1584b03a 	or	r2,r2,r22
   2ec58:	003f7806 	br	2ea3c <__umoddi3+0x29c>
   2ec5c:	002b883a 	mov	r21,zero
   2ec60:	003ef506 	br	2e838 <__umoddi3+0x98>
   2ec64:	8560983a 	sll	r16,r16,r21
   2ec68:	88e6d83a 	srl	r19,r17,r3
   2ec6c:	90c6d83a 	srl	r3,r18,r3
   2ec70:	8028d43a 	srli	r20,r16,16
   2ec74:	8d62983a 	sll	r17,r17,r21
   2ec78:	9809883a 	mov	r4,r19
   2ec7c:	a00b883a 	mov	r5,r20
   2ec80:	88eeb03a 	or	r23,r17,r3
   2ec84:	002fdf00 	call	2fdf0 <__umodsi3>
   2ec88:	9809883a 	mov	r4,r19
   2ec8c:	a00b883a 	mov	r5,r20
   2ec90:	1023883a 	mov	r17,r2
   2ec94:	85bfffcc 	andi	r22,r16,65535
   2ec98:	002fde80 	call	2fde8 <__udivsi3>
   2ec9c:	1009883a 	mov	r4,r2
   2eca0:	b00b883a 	mov	r5,r22
   2eca4:	00211880 	call	21188 <__mulsi3>
   2eca8:	1007883a 	mov	r3,r2
   2ecac:	8808943a 	slli	r4,r17,16
   2ecb0:	b804d43a 	srli	r2,r23,16
   2ecb4:	9566983a 	sll	r19,r18,r21
   2ecb8:	2088b03a 	or	r4,r4,r2
   2ecbc:	20c0042e 	bgeu	r4,r3,2ecd0 <__umoddi3+0x530>
   2ecc0:	2409883a 	add	r4,r4,r16
   2ecc4:	24000236 	bltu	r4,r16,2ecd0 <__umoddi3+0x530>
   2ecc8:	20c0012e 	bgeu	r4,r3,2ecd0 <__umoddi3+0x530>
   2eccc:	2409883a 	add	r4,r4,r16
   2ecd0:	20e5c83a 	sub	r18,r4,r3
   2ecd4:	9009883a 	mov	r4,r18
   2ecd8:	a00b883a 	mov	r5,r20
   2ecdc:	002fdf00 	call	2fdf0 <__umodsi3>
   2ece0:	1023883a 	mov	r17,r2
   2ece4:	9009883a 	mov	r4,r18
   2ece8:	a00b883a 	mov	r5,r20
   2ecec:	8822943a 	slli	r17,r17,16
   2ecf0:	002fde80 	call	2fde8 <__udivsi3>
   2ecf4:	1009883a 	mov	r4,r2
   2ecf8:	b00b883a 	mov	r5,r22
   2ecfc:	bdffffcc 	andi	r23,r23,65535
   2ed00:	00211880 	call	21188 <__mulsi3>
   2ed04:	8de2b03a 	or	r17,r17,r23
   2ed08:	8880042e 	bgeu	r17,r2,2ed1c <__umoddi3+0x57c>
   2ed0c:	8c23883a 	add	r17,r17,r16
   2ed10:	8c000236 	bltu	r17,r16,2ed1c <__umoddi3+0x57c>
   2ed14:	8880012e 	bgeu	r17,r2,2ed1c <__umoddi3+0x57c>
   2ed18:	8c23883a 	add	r17,r17,r16
   2ed1c:	88a3c83a 	sub	r17,r17,r2
   2ed20:	003f1b06 	br	2e990 <__umoddi3+0x1f0>
   2ed24:	25adc83a 	sub	r22,r4,r22
   2ed28:	1d07c83a 	sub	r3,r3,r20
   2ed2c:	2589803a 	cmpltu	r4,r4,r22
   2ed30:	1907c83a 	sub	r3,r3,r4
   2ed34:	88c7c83a 	sub	r3,r17,r3
   2ed38:	003fc006 	br	2ec3c <__umoddi3+0x49c>
   2ed3c:	00c00204 	movi	r3,8
   2ed40:	1827883a 	mov	r19,r3
   2ed44:	003ee906 	br	2e8ec <__umoddi3+0x14c>
   2ed48:	00c00604 	movi	r3,24
   2ed4c:	1827883a 	mov	r19,r3
   2ed50:	003ee606 	br	2e8ec <__umoddi3+0x14c>
   2ed54:	00800604 	movi	r2,24
   2ed58:	1009883a 	mov	r4,r2
   2ed5c:	003ea806 	br	2e800 <__umoddi3+0x60>
   2ed60:	00800204 	movi	r2,8
   2ed64:	1007883a 	mov	r3,r2
   2ed68:	003efd06 	br	2e960 <__umoddi3+0x1c0>
   2ed6c:	00800604 	movi	r2,24
   2ed70:	1007883a 	mov	r3,r2
   2ed74:	003efa06 	br	2e960 <__umoddi3+0x1c0>
   2ed78:	00800204 	movi	r2,8
   2ed7c:	1009883a 	mov	r4,r2
   2ed80:	003e9f06 	br	2e800 <__umoddi3+0x60>
   2ed84:	38bf7f2e 	bgeu	r7,r2,2eb84 <__umoddi3+0x3e4>
   2ed88:	ad7fff84 	addi	r21,r21,-2
   2ed8c:	3d0f883a 	add	r7,r7,r20
   2ed90:	003f7d06 	br	2eb88 <__umoddi3+0x3e8>
   2ed94:	193f642e 	bgeu	r3,r4,2eb28 <__umoddi3+0x388>
   2ed98:	e73fff84 	addi	fp,fp,-2
   2ed9c:	1d07883a 	add	r3,r3,r20
   2eda0:	003f6206 	br	2eb2c <__umoddi3+0x38c>
   2eda4:	1c07883a 	add	r3,r3,r16
   2eda8:	003f0b06 	br	2e9d8 <__umoddi3+0x238>
   2edac:	9005883a 	mov	r2,r18
   2edb0:	a007883a 	mov	r3,r20
   2edb4:	003f2106 	br	2ea3c <__umoddi3+0x29c>
   2edb8:	913fda36 	bltu	r18,r4,2ed24 <__umoddi3+0x584>
   2edbc:	202d883a 	mov	r22,r4
   2edc0:	0007883a 	mov	r3,zero
   2edc4:	003f9d06 	br	2ec3c <__umoddi3+0x49c>

0002edc8 <__eqsf2>:
   2edc8:	defff504 	addi	sp,sp,-44
   2edcc:	d9000915 	stw	r4,36(sp)
   2edd0:	d9400815 	stw	r5,32(sp)
   2edd4:	d9000904 	addi	r4,sp,36
   2edd8:	d9400404 	addi	r5,sp,16
   2eddc:	dfc00a15 	stw	ra,40(sp)
   2ede0:	002fea40 	call	2fea4 <__unpack_f>
   2ede4:	d9000804 	addi	r4,sp,32
   2ede8:	d80b883a 	mov	r5,sp
   2edec:	002fea40 	call	2fea4 <__unpack_f>
   2edf0:	d8c00417 	ldw	r3,16(sp)
   2edf4:	00800044 	movi	r2,1
   2edf8:	10c0052e 	bgeu	r2,r3,2ee10 <__eqsf2+0x48>
   2edfc:	d8c00017 	ldw	r3,0(sp)
   2ee00:	10c0032e 	bgeu	r2,r3,2ee10 <__eqsf2+0x48>
   2ee04:	d9000404 	addi	r4,sp,16
   2ee08:	d80b883a 	mov	r5,sp
   2ee0c:	002ff6c0 	call	2ff6c <__fpcmp_parts_f>
   2ee10:	dfc00a17 	ldw	ra,40(sp)
   2ee14:	dec00b04 	addi	sp,sp,44
   2ee18:	f800283a 	ret

0002ee1c <__gtsf2>:
   2ee1c:	defff504 	addi	sp,sp,-44
   2ee20:	d9000915 	stw	r4,36(sp)
   2ee24:	d9400815 	stw	r5,32(sp)
   2ee28:	d9000904 	addi	r4,sp,36
   2ee2c:	d9400404 	addi	r5,sp,16
   2ee30:	dfc00a15 	stw	ra,40(sp)
   2ee34:	002fea40 	call	2fea4 <__unpack_f>
   2ee38:	d9000804 	addi	r4,sp,32
   2ee3c:	d80b883a 	mov	r5,sp
   2ee40:	002fea40 	call	2fea4 <__unpack_f>
   2ee44:	d8c00417 	ldw	r3,16(sp)
   2ee48:	00800044 	movi	r2,1
   2ee4c:	10c0082e 	bgeu	r2,r3,2ee70 <__gtsf2+0x54>
   2ee50:	d8c00017 	ldw	r3,0(sp)
   2ee54:	10c0062e 	bgeu	r2,r3,2ee70 <__gtsf2+0x54>
   2ee58:	d9000404 	addi	r4,sp,16
   2ee5c:	d80b883a 	mov	r5,sp
   2ee60:	002ff6c0 	call	2ff6c <__fpcmp_parts_f>
   2ee64:	dfc00a17 	ldw	ra,40(sp)
   2ee68:	dec00b04 	addi	sp,sp,44
   2ee6c:	f800283a 	ret
   2ee70:	00bfffc4 	movi	r2,-1
   2ee74:	003ffb06 	br	2ee64 <__gtsf2+0x48>

0002ee78 <__ltsf2>:
   2ee78:	defff504 	addi	sp,sp,-44
   2ee7c:	d9000915 	stw	r4,36(sp)
   2ee80:	d9400815 	stw	r5,32(sp)
   2ee84:	d9000904 	addi	r4,sp,36
   2ee88:	d9400404 	addi	r5,sp,16
   2ee8c:	dfc00a15 	stw	ra,40(sp)
   2ee90:	002fea40 	call	2fea4 <__unpack_f>
   2ee94:	d9000804 	addi	r4,sp,32
   2ee98:	d80b883a 	mov	r5,sp
   2ee9c:	002fea40 	call	2fea4 <__unpack_f>
   2eea0:	d8c00417 	ldw	r3,16(sp)
   2eea4:	00800044 	movi	r2,1
   2eea8:	10c0052e 	bgeu	r2,r3,2eec0 <__ltsf2+0x48>
   2eeac:	d8c00017 	ldw	r3,0(sp)
   2eeb0:	10c0032e 	bgeu	r2,r3,2eec0 <__ltsf2+0x48>
   2eeb4:	d9000404 	addi	r4,sp,16
   2eeb8:	d80b883a 	mov	r5,sp
   2eebc:	002ff6c0 	call	2ff6c <__fpcmp_parts_f>
   2eec0:	dfc00a17 	ldw	ra,40(sp)
   2eec4:	dec00b04 	addi	sp,sp,44
   2eec8:	f800283a 	ret

0002eecc <_fpadd_parts>:
   2eecc:	2005883a 	mov	r2,r4
   2eed0:	21000017 	ldw	r4,0(r4)
   2eed4:	01c00044 	movi	r7,1
   2eed8:	3900622e 	bgeu	r7,r4,2f064 <_fpadd_parts+0x198>
   2eedc:	28c00017 	ldw	r3,0(r5)
   2eee0:	38c05f2e 	bgeu	r7,r3,2f060 <_fpadd_parts+0x194>
   2eee4:	01c00104 	movi	r7,4
   2eee8:	21c0c626 	beq	r4,r7,2f204 <_fpadd_parts+0x338>
   2eeec:	19c05c26 	beq	r3,r7,2f060 <_fpadd_parts+0x194>
   2eef0:	01c00084 	movi	r7,2
   2eef4:	19c06b26 	beq	r3,r7,2f0a4 <_fpadd_parts+0x1d8>
   2eef8:	21c05926 	beq	r4,r7,2f060 <_fpadd_parts+0x194>
   2eefc:	11c00217 	ldw	r7,8(r2)
   2ef00:	2ac00217 	ldw	r11,8(r5)
   2ef04:	13000317 	ldw	r12,12(r2)
   2ef08:	13400417 	ldw	r13,16(r2)
   2ef0c:	3ac9c83a 	sub	r4,r7,r11
   2ef10:	2a000317 	ldw	r8,12(r5)
   2ef14:	2a400417 	ldw	r9,16(r5)
   2ef18:	2015883a 	mov	r10,r4
   2ef1c:	20007516 	blt	r4,zero,2f0f4 <_fpadd_parts+0x228>
   2ef20:	00c00fc4 	movi	r3,63
   2ef24:	1a805016 	blt	r3,r10,2f068 <_fpadd_parts+0x19c>
   2ef28:	0100870e 	bge	zero,r4,2f148 <_fpadd_parts+0x27c>
   2ef2c:	50fff804 	addi	r3,r10,-32
   2ef30:	18009916 	blt	r3,zero,2f198 <_fpadd_parts+0x2cc>
   2ef34:	48d6d83a 	srl	r11,r9,r3
   2ef38:	001d883a 	mov	r14,zero
   2ef3c:	18009e16 	blt	r3,zero,2f1b8 <_fpadd_parts+0x2ec>
   2ef40:	01000044 	movi	r4,1
   2ef44:	20c6983a 	sll	r3,r4,r3
   2ef48:	0015883a 	mov	r10,zero
   2ef4c:	513fffc4 	addi	r4,r10,-1
   2ef50:	2295403a 	cmpgeu	r10,r4,r10
   2ef54:	1a87c83a 	sub	r3,r3,r10
   2ef58:	1a52703a 	and	r9,r3,r9
   2ef5c:	2210703a 	and	r8,r4,r8
   2ef60:	4250b03a 	or	r8,r8,r9
   2ef64:	4010c03a 	cmpne	r8,r8,zero
   2ef68:	42d0b03a 	or	r8,r8,r11
   2ef6c:	7013883a 	mov	r9,r14
   2ef70:	11000117 	ldw	r4,4(r2)
   2ef74:	28800117 	ldw	r2,4(r5)
   2ef78:	20804126 	beq	r4,r2,2f080 <_fpadd_parts+0x1b4>
   2ef7c:	20006326 	beq	r4,zero,2f10c <_fpadd_parts+0x240>
   2ef80:	4305c83a 	sub	r2,r8,r12
   2ef84:	4091803a 	cmpltu	r8,r8,r2
   2ef88:	4b47c83a 	sub	r3,r9,r13
   2ef8c:	1a07c83a 	sub	r3,r3,r8
   2ef90:	18006316 	blt	r3,zero,2f120 <_fpadd_parts+0x254>
   2ef94:	30000115 	stw	zero,4(r6)
   2ef98:	31c00215 	stw	r7,8(r6)
   2ef9c:	30800315 	stw	r2,12(r6)
   2efa0:	30c00415 	stw	r3,16(r6)
   2efa4:	11ffffc4 	addi	r7,r2,-1
   2efa8:	388b403a 	cmpgeu	r5,r7,r2
   2efac:	194bc83a 	sub	r5,r3,r5
   2efb0:	01040034 	movhi	r4,4096
   2efb4:	213fffc4 	addi	r4,r4,-1
   2efb8:	21401736 	bltu	r4,r5,2f018 <_fpadd_parts+0x14c>
   2efbc:	29008226 	beq	r5,r4,2f1c8 <_fpadd_parts+0x2fc>
   2efc0:	31400217 	ldw	r5,8(r6)
   2efc4:	02840034 	movhi	r10,4096
   2efc8:	52bfffc4 	addi	r10,r10,-1
   2efcc:	033fff84 	movi	r12,-2
   2efd0:	297fffc4 	addi	r5,r5,-1
   2efd4:	00000106 	br	2efdc <_fpadd_parts+0x110>
   2efd8:	3a804a26 	beq	r7,r10,2f104 <_fpadd_parts+0x238>
   2efdc:	1089883a 	add	r4,r2,r2
   2efe0:	2091803a 	cmpltu	r8,r4,r2
   2efe4:	18c7883a 	add	r3,r3,r3
   2efe8:	227fffc4 	addi	r9,r4,-1
   2efec:	40d1883a 	add	r8,r8,r3
   2eff0:	490f403a 	cmpgeu	r7,r9,r4
   2eff4:	41cfc83a 	sub	r7,r8,r7
   2eff8:	2817883a 	mov	r11,r5
   2effc:	2005883a 	mov	r2,r4
   2f000:	4007883a 	mov	r3,r8
   2f004:	297fffc4 	addi	r5,r5,-1
   2f008:	51fff32e 	bgeu	r10,r7,2efd8 <_fpadd_parts+0x10c>
   2f00c:	31000315 	stw	r4,12(r6)
   2f010:	32000415 	stw	r8,16(r6)
   2f014:	32c00215 	stw	r11,8(r6)
   2f018:	010000c4 	movi	r4,3
   2f01c:	31000015 	stw	r4,0(r6)
   2f020:	01080034 	movhi	r4,8192
   2f024:	213fffc4 	addi	r4,r4,-1
   2f028:	20c00b2e 	bgeu	r4,r3,2f058 <_fpadd_parts+0x18c>
   2f02c:	180e97fa 	slli	r7,r3,31
   2f030:	1008d07a 	srli	r4,r2,1
   2f034:	31400217 	ldw	r5,8(r6)
   2f038:	1806d07a 	srli	r3,r3,1
   2f03c:	1080004c 	andi	r2,r2,1
   2f040:	3908b03a 	or	r4,r7,r4
   2f044:	1108b03a 	or	r4,r2,r4
   2f048:	29400044 	addi	r5,r5,1
   2f04c:	31000315 	stw	r4,12(r6)
   2f050:	30c00415 	stw	r3,16(r6)
   2f054:	31400215 	stw	r5,8(r6)
   2f058:	3005883a 	mov	r2,r6
   2f05c:	f800283a 	ret
   2f060:	2805883a 	mov	r2,r5
   2f064:	f800283a 	ret
   2f068:	59c01e0e 	bge	r11,r7,2f0e4 <_fpadd_parts+0x218>
   2f06c:	11000117 	ldw	r4,4(r2)
   2f070:	28800117 	ldw	r2,4(r5)
   2f074:	0011883a 	mov	r8,zero
   2f078:	0013883a 	mov	r9,zero
   2f07c:	20bfbf1e 	bne	r4,r2,2ef7c <_fpadd_parts+0xb0>
   2f080:	4305883a 	add	r2,r8,r12
   2f084:	1207803a 	cmpltu	r3,r2,r8
   2f088:	4b53883a 	add	r9,r9,r13
   2f08c:	1a47883a 	add	r3,r3,r9
   2f090:	31000115 	stw	r4,4(r6)
   2f094:	31c00215 	stw	r7,8(r6)
   2f098:	30800315 	stw	r2,12(r6)
   2f09c:	30c00415 	stw	r3,16(r6)
   2f0a0:	003fdd06 	br	2f018 <_fpadd_parts+0x14c>
   2f0a4:	20ffef1e 	bne	r4,r3,2f064 <_fpadd_parts+0x198>
   2f0a8:	31000015 	stw	r4,0(r6)
   2f0ac:	10c00117 	ldw	r3,4(r2)
   2f0b0:	30c00115 	stw	r3,4(r6)
   2f0b4:	10c00217 	ldw	r3,8(r2)
   2f0b8:	11000117 	ldw	r4,4(r2)
   2f0bc:	29400117 	ldw	r5,4(r5)
   2f0c0:	30c00215 	stw	r3,8(r6)
   2f0c4:	10c00317 	ldw	r3,12(r2)
   2f0c8:	2908703a 	and	r4,r5,r4
   2f0cc:	30c00315 	stw	r3,12(r6)
   2f0d0:	10c00417 	ldw	r3,16(r2)
   2f0d4:	31000115 	stw	r4,4(r6)
   2f0d8:	3005883a 	mov	r2,r6
   2f0dc:	30c00415 	stw	r3,16(r6)
   2f0e0:	f800283a 	ret
   2f0e4:	580f883a 	mov	r7,r11
   2f0e8:	0019883a 	mov	r12,zero
   2f0ec:	001b883a 	mov	r13,zero
   2f0f0:	003f9f06 	br	2ef70 <_fpadd_parts+0xa4>
   2f0f4:	0115c83a 	sub	r10,zero,r4
   2f0f8:	00c00fc4 	movi	r3,63
   2f0fc:	1abfda16 	blt	r3,r10,2f068 <_fpadd_parts+0x19c>
   2f100:	003f8906 	br	2ef28 <_fpadd_parts+0x5c>
   2f104:	627fb52e 	bgeu	r12,r9,2efdc <_fpadd_parts+0x110>
   2f108:	003fc006 	br	2f00c <_fpadd_parts+0x140>
   2f10c:	6205c83a 	sub	r2,r12,r8
   2f110:	6099803a 	cmpltu	r12,r12,r2
   2f114:	6a47c83a 	sub	r3,r13,r9
   2f118:	1b07c83a 	sub	r3,r3,r12
   2f11c:	183f9d0e 	bge	r3,zero,2ef94 <_fpadd_parts+0xc8>
   2f120:	0085c83a 	sub	r2,zero,r2
   2f124:	1008c03a 	cmpne	r4,r2,zero
   2f128:	00c7c83a 	sub	r3,zero,r3
   2f12c:	1907c83a 	sub	r3,r3,r4
   2f130:	01000044 	movi	r4,1
   2f134:	31000115 	stw	r4,4(r6)
   2f138:	31c00215 	stw	r7,8(r6)
   2f13c:	30800315 	stw	r2,12(r6)
   2f140:	30c00415 	stw	r3,16(r6)
   2f144:	003f9706 	br	2efa4 <_fpadd_parts+0xd8>
   2f148:	203f8926 	beq	r4,zero,2ef70 <_fpadd_parts+0xa4>
   2f14c:	50fff804 	addi	r3,r10,-32
   2f150:	3a8f883a 	add	r7,r7,r10
   2f154:	18002316 	blt	r3,zero,2f1e4 <_fpadd_parts+0x318>
   2f158:	68d6d83a 	srl	r11,r13,r3
   2f15c:	001d883a 	mov	r14,zero
   2f160:	18001c16 	blt	r3,zero,2f1d4 <_fpadd_parts+0x308>
   2f164:	01000044 	movi	r4,1
   2f168:	20c6983a 	sll	r3,r4,r3
   2f16c:	0015883a 	mov	r10,zero
   2f170:	513fffc4 	addi	r4,r10,-1
   2f174:	2295403a 	cmpgeu	r10,r4,r10
   2f178:	1a87c83a 	sub	r3,r3,r10
   2f17c:	1b5a703a 	and	r13,r3,r13
   2f180:	2318703a 	and	r12,r4,r12
   2f184:	6358b03a 	or	r12,r12,r13
   2f188:	6018c03a 	cmpne	r12,r12,zero
   2f18c:	62d8b03a 	or	r12,r12,r11
   2f190:	701b883a 	mov	r13,r14
   2f194:	003f7606 	br	2ef70 <_fpadd_parts+0xa4>
   2f198:	4808907a 	slli	r4,r9,1
   2f19c:	02c007c4 	movi	r11,31
   2f1a0:	5a97c83a 	sub	r11,r11,r10
   2f1a4:	22c8983a 	sll	r4,r4,r11
   2f1a8:	4296d83a 	srl	r11,r8,r10
   2f1ac:	4a9cd83a 	srl	r14,r9,r10
   2f1b0:	22d6b03a 	or	r11,r4,r11
   2f1b4:	003f6106 	br	2ef3c <_fpadd_parts+0x70>
   2f1b8:	00c00044 	movi	r3,1
   2f1bc:	1a94983a 	sll	r10,r3,r10
   2f1c0:	0007883a 	mov	r3,zero
   2f1c4:	003f6106 	br	2ef4c <_fpadd_parts+0x80>
   2f1c8:	013fff84 	movi	r4,-2
   2f1cc:	21ff7c2e 	bgeu	r4,r7,2efc0 <_fpadd_parts+0xf4>
   2f1d0:	003f9106 	br	2f018 <_fpadd_parts+0x14c>
   2f1d4:	00c00044 	movi	r3,1
   2f1d8:	1a94983a 	sll	r10,r3,r10
   2f1dc:	0007883a 	mov	r3,zero
   2f1e0:	003fe306 	br	2f170 <_fpadd_parts+0x2a4>
   2f1e4:	6816907a 	slli	r11,r13,1
   2f1e8:	010007c4 	movi	r4,31
   2f1ec:	2289c83a 	sub	r4,r4,r10
   2f1f0:	5908983a 	sll	r4,r11,r4
   2f1f4:	6296d83a 	srl	r11,r12,r10
   2f1f8:	6a9cd83a 	srl	r14,r13,r10
   2f1fc:	22d6b03a 	or	r11,r4,r11
   2f200:	003fd706 	br	2f160 <_fpadd_parts+0x294>
   2f204:	193f971e 	bne	r3,r4,2f064 <_fpadd_parts+0x198>
   2f208:	11000117 	ldw	r4,4(r2)
   2f20c:	28c00117 	ldw	r3,4(r5)
   2f210:	20ff9426 	beq	r4,r3,2f064 <_fpadd_parts+0x198>
   2f214:	008000f4 	movhi	r2,3
   2f218:	108fc804 	addi	r2,r2,16160
   2f21c:	f800283a 	ret

0002f220 <__adddf3>:
   2f220:	deffec04 	addi	sp,sp,-80
   2f224:	d9001115 	stw	r4,68(sp)
   2f228:	d9401215 	stw	r5,72(sp)
   2f22c:	d9001104 	addi	r4,sp,68
   2f230:	d9400a04 	addi	r5,sp,40
   2f234:	dfc01315 	stw	ra,76(sp)
   2f238:	d9c01015 	stw	r7,64(sp)
   2f23c:	d9800f15 	stw	r6,60(sp)
   2f240:	00302780 	call	30278 <__unpack_d>
   2f244:	d9000f04 	addi	r4,sp,60
   2f248:	d9400504 	addi	r5,sp,20
   2f24c:	00302780 	call	30278 <__unpack_d>
   2f250:	d9000a04 	addi	r4,sp,40
   2f254:	d9400504 	addi	r5,sp,20
   2f258:	d80d883a 	mov	r6,sp
   2f25c:	002eecc0 	call	2eecc <_fpadd_parts>
   2f260:	1009883a 	mov	r4,r2
   2f264:	00300540 	call	30054 <__pack_d>
   2f268:	dfc01317 	ldw	ra,76(sp)
   2f26c:	dec01404 	addi	sp,sp,80
   2f270:	f800283a 	ret

0002f274 <__subdf3>:
   2f274:	deffec04 	addi	sp,sp,-80
   2f278:	d9001115 	stw	r4,68(sp)
   2f27c:	d9401215 	stw	r5,72(sp)
   2f280:	d9001104 	addi	r4,sp,68
   2f284:	d9400a04 	addi	r5,sp,40
   2f288:	dfc01315 	stw	ra,76(sp)
   2f28c:	d9c01015 	stw	r7,64(sp)
   2f290:	d9800f15 	stw	r6,60(sp)
   2f294:	00302780 	call	30278 <__unpack_d>
   2f298:	d9000f04 	addi	r4,sp,60
   2f29c:	d9400504 	addi	r5,sp,20
   2f2a0:	00302780 	call	30278 <__unpack_d>
   2f2a4:	d8800617 	ldw	r2,24(sp)
   2f2a8:	d9000a04 	addi	r4,sp,40
   2f2ac:	d9400504 	addi	r5,sp,20
   2f2b0:	d80d883a 	mov	r6,sp
   2f2b4:	1080005c 	xori	r2,r2,1
   2f2b8:	d8800615 	stw	r2,24(sp)
   2f2bc:	002eecc0 	call	2eecc <_fpadd_parts>
   2f2c0:	1009883a 	mov	r4,r2
   2f2c4:	00300540 	call	30054 <__pack_d>
   2f2c8:	dfc01317 	ldw	ra,76(sp)
   2f2cc:	dec01404 	addi	sp,sp,80
   2f2d0:	f800283a 	ret

0002f2d4 <__muldf3>:
   2f2d4:	deffe404 	addi	sp,sp,-112
   2f2d8:	d9001115 	stw	r4,68(sp)
   2f2dc:	d9401215 	stw	r5,72(sp)
   2f2e0:	d9001104 	addi	r4,sp,68
   2f2e4:	d9400a04 	addi	r5,sp,40
   2f2e8:	dfc01b15 	stw	ra,108(sp)
   2f2ec:	d9800f15 	stw	r6,60(sp)
   2f2f0:	d9c01015 	stw	r7,64(sp)
   2f2f4:	ddc01a15 	stw	r23,104(sp)
   2f2f8:	dd801915 	stw	r22,100(sp)
   2f2fc:	dd401815 	stw	r21,96(sp)
   2f300:	dd001715 	stw	r20,92(sp)
   2f304:	dcc01615 	stw	r19,88(sp)
   2f308:	dc801515 	stw	r18,84(sp)
   2f30c:	dc401415 	stw	r17,80(sp)
   2f310:	dc001315 	stw	r16,76(sp)
   2f314:	00302780 	call	30278 <__unpack_d>
   2f318:	d9000f04 	addi	r4,sp,60
   2f31c:	d9400504 	addi	r5,sp,20
   2f320:	00302780 	call	30278 <__unpack_d>
   2f324:	d8c00a17 	ldw	r3,40(sp)
   2f328:	00800044 	movi	r2,1
   2f32c:	10c01136 	bltu	r2,r3,2f374 <__muldf3+0xa0>
   2f330:	d8c00b17 	ldw	r3,44(sp)
   2f334:	d8800617 	ldw	r2,24(sp)
   2f338:	d9000a04 	addi	r4,sp,40
   2f33c:	1884c03a 	cmpne	r2,r3,r2
   2f340:	d8800b15 	stw	r2,44(sp)
   2f344:	00300540 	call	30054 <__pack_d>
   2f348:	dfc01b17 	ldw	ra,108(sp)
   2f34c:	ddc01a17 	ldw	r23,104(sp)
   2f350:	dd801917 	ldw	r22,100(sp)
   2f354:	dd401817 	ldw	r21,96(sp)
   2f358:	dd001717 	ldw	r20,92(sp)
   2f35c:	dcc01617 	ldw	r19,88(sp)
   2f360:	dc801517 	ldw	r18,84(sp)
   2f364:	dc401417 	ldw	r17,80(sp)
   2f368:	dc001317 	ldw	r16,76(sp)
   2f36c:	dec01c04 	addi	sp,sp,112
   2f370:	f800283a 	ret
   2f374:	d9000517 	ldw	r4,20(sp)
   2f378:	11000636 	bltu	r2,r4,2f394 <__muldf3+0xc0>
   2f37c:	d8800617 	ldw	r2,24(sp)
   2f380:	d8c00b17 	ldw	r3,44(sp)
   2f384:	d9000504 	addi	r4,sp,20
   2f388:	1884c03a 	cmpne	r2,r3,r2
   2f38c:	d8800615 	stw	r2,24(sp)
   2f390:	003fec06 	br	2f344 <__muldf3+0x70>
   2f394:	00800104 	movi	r2,4
   2f398:	1880051e 	bne	r3,r2,2f3b0 <__muldf3+0xdc>
   2f39c:	00800084 	movi	r2,2
   2f3a0:	20bfe31e 	bne	r4,r2,2f330 <__muldf3+0x5c>
   2f3a4:	010000f4 	movhi	r4,3
   2f3a8:	210fc804 	addi	r4,r4,16160
   2f3ac:	003fe506 	br	2f344 <__muldf3+0x70>
   2f3b0:	2080031e 	bne	r4,r2,2f3c0 <__muldf3+0xec>
   2f3b4:	00800084 	movi	r2,2
   2f3b8:	18bffa26 	beq	r3,r2,2f3a4 <__muldf3+0xd0>
   2f3bc:	003fef06 	br	2f37c <__muldf3+0xa8>
   2f3c0:	00800084 	movi	r2,2
   2f3c4:	18bfda26 	beq	r3,r2,2f330 <__muldf3+0x5c>
   2f3c8:	20bfec26 	beq	r4,r2,2f37c <__muldf3+0xa8>
   2f3cc:	dc000d17 	ldw	r16,52(sp)
   2f3d0:	dd000817 	ldw	r20,32(sp)
   2f3d4:	dc800917 	ldw	r18,36(sp)
   2f3d8:	8009883a 	mov	r4,r16
   2f3dc:	000b883a 	mov	r5,zero
   2f3e0:	a00d883a 	mov	r6,r20
   2f3e4:	000f883a 	mov	r7,zero
   2f3e8:	002dfbc0 	call	2dfbc <__muldi3>
   2f3ec:	dc400e17 	ldw	r17,56(sp)
   2f3f0:	9009883a 	mov	r4,r18
   2f3f4:	800d883a 	mov	r6,r16
   2f3f8:	000b883a 	mov	r5,zero
   2f3fc:	000f883a 	mov	r7,zero
   2f400:	102f883a 	mov	r23,r2
   2f404:	1827883a 	mov	r19,r3
   2f408:	002dfbc0 	call	2dfbc <__muldi3>
   2f40c:	900d883a 	mov	r6,r18
   2f410:	8809883a 	mov	r4,r17
   2f414:	000b883a 	mov	r5,zero
   2f418:	000f883a 	mov	r7,zero
   2f41c:	102b883a 	mov	r21,r2
   2f420:	1821883a 	mov	r16,r3
   2f424:	002dfbc0 	call	2dfbc <__muldi3>
   2f428:	8809883a 	mov	r4,r17
   2f42c:	000b883a 	mov	r5,zero
   2f430:	a00d883a 	mov	r6,r20
   2f434:	000f883a 	mov	r7,zero
   2f438:	102d883a 	mov	r22,r2
   2f43c:	1825883a 	mov	r18,r3
   2f440:	002dfbc0 	call	2dfbc <__muldi3>
   2f444:	154b883a 	add	r5,r2,r21
   2f448:	2889803a 	cmpltu	r4,r5,r2
   2f44c:	1c07883a 	add	r3,r3,r16
   2f450:	20c9883a 	add	r4,r4,r3
   2f454:	24004b36 	bltu	r4,r16,2f584 <__muldf3+0x2b0>
   2f458:	8100011e 	bne	r16,r4,2f460 <__muldf3+0x18c>
   2f45c:	2d404936 	bltu	r5,r21,2f584 <__muldf3+0x2b0>
   2f460:	0011883a 	mov	r8,zero
   2f464:	0007883a 	mov	r3,zero
   2f468:	2ccb883a 	add	r5,r5,r19
   2f46c:	b80d883a 	mov	r6,r23
   2f470:	2cc0012e 	bgeu	r5,r19,2f478 <__muldf3+0x1a4>
   2f474:	02000044 	movi	r8,1
   2f478:	258f883a 	add	r7,r4,r22
   2f47c:	3909803a 	cmpltu	r4,r7,r4
   2f480:	da400c17 	ldw	r9,48(sp)
   2f484:	2489883a 	add	r4,r4,r18
   2f488:	d8800717 	ldw	r2,28(sp)
   2f48c:	20c9883a 	add	r4,r4,r3
   2f490:	da800b17 	ldw	r10,44(sp)
   2f494:	d8c00617 	ldw	r3,24(sp)
   2f498:	3a11883a 	add	r8,r7,r8
   2f49c:	4885883a 	add	r2,r9,r2
   2f4a0:	50c6c03a 	cmpne	r3,r10,r3
   2f4a4:	41cf803a 	cmpltu	r7,r8,r7
   2f4a8:	12400104 	addi	r9,r2,4
   2f4ac:	d8c00115 	stw	r3,4(sp)
   2f4b0:	3909883a 	add	r4,r7,r4
   2f4b4:	da400215 	stw	r9,8(sp)
   2f4b8:	03480034 	movhi	r13,8192
   2f4bc:	6b7fffc4 	addi	r13,r13,-1
   2f4c0:	4007883a 	mov	r3,r8
   2f4c4:	6900102e 	bgeu	r13,r4,2f508 <__muldf3+0x234>
   2f4c8:	10800144 	addi	r2,r2,5
   2f4cc:	180ed07a 	srli	r7,r3,1
   2f4d0:	18c0004c 	andi	r3,r3,1
   2f4d4:	201097fa 	slli	r8,r4,31
   2f4d8:	281697fa 	slli	r11,r5,31
   2f4dc:	2008d07a 	srli	r4,r4,1
   2f4e0:	3014d07a 	srli	r10,r6,1
   2f4e4:	2812d07a 	srli	r9,r5,1
   2f4e8:	1019883a 	mov	r12,r2
   2f4ec:	18000226 	beq	r3,zero,2f4f8 <__muldf3+0x224>
   2f4f0:	5a8cb03a 	or	r6,r11,r10
   2f4f4:	49600034 	orhi	r5,r9,32768
   2f4f8:	41c6b03a 	or	r3,r8,r7
   2f4fc:	10800044 	addi	r2,r2,1
   2f500:	693ff236 	bltu	r13,r4,2f4cc <__muldf3+0x1f8>
   2f504:	db000215 	stw	r12,8(sp)
   2f508:	03440034 	movhi	r13,4096
   2f50c:	6b7fffc4 	addi	r13,r13,-1
   2f510:	69001336 	bltu	r13,r4,2f560 <__muldf3+0x28c>
   2f514:	d8800217 	ldw	r2,8(sp)
   2f518:	10bfffc4 	addi	r2,r2,-1
   2f51c:	18d3883a 	add	r9,r3,r3
   2f520:	48c7803a 	cmpltu	r3,r9,r3
   2f524:	2109883a 	add	r4,r4,r4
   2f528:	190f883a 	add	r7,r3,r4
   2f52c:	3191883a 	add	r8,r6,r6
   2f530:	4197803a 	cmpltu	r11,r8,r6
   2f534:	2955883a 	add	r10,r5,r5
   2f538:	1019883a 	mov	r12,r2
   2f53c:	4807883a 	mov	r3,r9
   2f540:	3809883a 	mov	r4,r7
   2f544:	2800010e 	bge	r5,zero,2f54c <__muldf3+0x278>
   2f548:	48c00054 	ori	r3,r9,1
   2f54c:	400d883a 	mov	r6,r8
   2f550:	5a8b883a 	add	r5,r11,r10
   2f554:	10bfffc4 	addi	r2,r2,-1
   2f558:	69fff02e 	bgeu	r13,r7,2f51c <__muldf3+0x248>
   2f55c:	db000215 	stw	r12,8(sp)
   2f560:	18803fcc 	andi	r2,r3,255
   2f564:	01c02004 	movi	r7,128
   2f568:	11c00926 	beq	r2,r7,2f590 <__muldf3+0x2bc>
   2f56c:	008000c4 	movi	r2,3
   2f570:	d9000415 	stw	r4,16(sp)
   2f574:	d8c00315 	stw	r3,12(sp)
   2f578:	d8800015 	stw	r2,0(sp)
   2f57c:	d809883a 	mov	r4,sp
   2f580:	003f7006 	br	2f344 <__muldf3+0x70>
   2f584:	0011883a 	mov	r8,zero
   2f588:	00c00044 	movi	r3,1
   2f58c:	003fb606 	br	2f468 <__muldf3+0x194>
   2f590:	19c0400c 	andi	r7,r3,256
   2f594:	383ff51e 	bne	r7,zero,2f56c <__muldf3+0x298>
   2f598:	314ab03a 	or	r5,r6,r5
   2f59c:	283ff326 	beq	r5,zero,2f56c <__muldf3+0x298>
   2f5a0:	1885883a 	add	r2,r3,r2
   2f5a4:	10cb803a 	cmpltu	r5,r2,r3
   2f5a8:	00ffc004 	movi	r3,-256
   2f5ac:	10c6703a 	and	r3,r2,r3
   2f5b0:	2909883a 	add	r4,r5,r4
   2f5b4:	003fed06 	br	2f56c <__muldf3+0x298>

0002f5b8 <__divdf3>:
   2f5b8:	defff104 	addi	sp,sp,-60
   2f5bc:	d9000c15 	stw	r4,48(sp)
   2f5c0:	d9400d15 	stw	r5,52(sp)
   2f5c4:	d9000c04 	addi	r4,sp,48
   2f5c8:	d9400504 	addi	r5,sp,20
   2f5cc:	dfc00e15 	stw	ra,56(sp)
   2f5d0:	d9800a15 	stw	r6,40(sp)
   2f5d4:	d9c00b15 	stw	r7,44(sp)
   2f5d8:	00302780 	call	30278 <__unpack_d>
   2f5dc:	d9000a04 	addi	r4,sp,40
   2f5e0:	d80b883a 	mov	r5,sp
   2f5e4:	00302780 	call	30278 <__unpack_d>
   2f5e8:	d8c00517 	ldw	r3,20(sp)
   2f5ec:	00800044 	movi	r2,1
   2f5f0:	10c00536 	bltu	r2,r3,2f608 <__divdf3+0x50>
   2f5f4:	d9000504 	addi	r4,sp,20
   2f5f8:	00300540 	call	30054 <__pack_d>
   2f5fc:	dfc00e17 	ldw	ra,56(sp)
   2f600:	dec00f04 	addi	sp,sp,60
   2f604:	f800283a 	ret
   2f608:	d9000017 	ldw	r4,0(sp)
   2f60c:	11000536 	bltu	r2,r4,2f624 <__divdf3+0x6c>
   2f610:	d809883a 	mov	r4,sp
   2f614:	00300540 	call	30054 <__pack_d>
   2f618:	dfc00e17 	ldw	ra,56(sp)
   2f61c:	dec00f04 	addi	sp,sp,60
   2f620:	f800283a 	ret
   2f624:	d9800617 	ldw	r6,24(sp)
   2f628:	d9400117 	ldw	r5,4(sp)
   2f62c:	00800104 	movi	r2,4
   2f630:	314af03a 	xor	r5,r6,r5
   2f634:	d9400615 	stw	r5,24(sp)
   2f638:	18800226 	beq	r3,r2,2f644 <__divdf3+0x8c>
   2f63c:	01400084 	movi	r5,2
   2f640:	1940041e 	bne	r3,r5,2f654 <__divdf3+0x9c>
   2f644:	193feb1e 	bne	r3,r4,2f5f4 <__divdf3+0x3c>
   2f648:	010000f4 	movhi	r4,3
   2f64c:	210fc804 	addi	r4,r4,16160
   2f650:	003fe906 	br	2f5f8 <__divdf3+0x40>
   2f654:	20803326 	beq	r4,r2,2f724 <__divdf3+0x16c>
   2f658:	21403726 	beq	r4,r5,2f738 <__divdf3+0x180>
   2f65c:	d8800217 	ldw	r2,8(sp)
   2f660:	d9000717 	ldw	r4,28(sp)
   2f664:	d8c00917 	ldw	r3,36(sp)
   2f668:	da000417 	ldw	r8,16(sp)
   2f66c:	2089c83a 	sub	r4,r4,r2
   2f670:	d9000715 	stw	r4,28(sp)
   2f674:	d8800817 	ldw	r2,32(sp)
   2f678:	dbc00317 	ldw	r15,12(sp)
   2f67c:	1a000236 	bltu	r3,r8,2f688 <__divdf3+0xd0>
   2f680:	40c0081e 	bne	r8,r3,2f6a4 <__divdf3+0xec>
   2f684:	13c0072e 	bgeu	r2,r15,2f6a4 <__divdf3+0xec>
   2f688:	108b883a 	add	r5,r2,r2
   2f68c:	288d803a 	cmpltu	r6,r5,r2
   2f690:	18c7883a 	add	r3,r3,r3
   2f694:	213fffc4 	addi	r4,r4,-1
   2f698:	2805883a 	mov	r2,r5
   2f69c:	30c7883a 	add	r3,r6,r3
   2f6a0:	d9000715 	stw	r4,28(sp)
   2f6a4:	01400f44 	movi	r5,61
   2f6a8:	000f883a 	mov	r7,zero
   2f6ac:	01040034 	movhi	r4,4096
   2f6b0:	0019883a 	mov	r12,zero
   2f6b4:	001b883a 	mov	r13,zero
   2f6b8:	201697fa 	slli	r11,r4,31
   2f6bc:	3814d07a 	srli	r10,r7,1
   2f6c0:	297fffc4 	addi	r5,r5,-1
   2f6c4:	1a000936 	bltu	r3,r8,2f6ec <__divdf3+0x134>
   2f6c8:	13cdc83a 	sub	r6,r2,r15
   2f6cc:	1193803a 	cmpltu	r9,r2,r6
   2f6d0:	1a1dc83a 	sub	r14,r3,r8
   2f6d4:	40c0011e 	bne	r8,r3,2f6dc <__divdf3+0x124>
   2f6d8:	13c00436 	bltu	r2,r15,2f6ec <__divdf3+0x134>
   2f6dc:	3005883a 	mov	r2,r6
   2f6e0:	7247c83a 	sub	r3,r14,r9
   2f6e4:	61d8b03a 	or	r12,r12,r7
   2f6e8:	691ab03a 	or	r13,r13,r4
   2f6ec:	108d883a 	add	r6,r2,r2
   2f6f0:	3093803a 	cmpltu	r9,r6,r2
   2f6f4:	18c7883a 	add	r3,r3,r3
   2f6f8:	5a8eb03a 	or	r7,r11,r10
   2f6fc:	2008d07a 	srli	r4,r4,1
   2f700:	3005883a 	mov	r2,r6
   2f704:	48c7883a 	add	r3,r9,r3
   2f708:	283feb1e 	bne	r5,zero,2f6b8 <__divdf3+0x100>
   2f70c:	61003fcc 	andi	r4,r12,255
   2f710:	01402004 	movi	r5,128
   2f714:	21400b26 	beq	r4,r5,2f744 <__divdf3+0x18c>
   2f718:	db000815 	stw	r12,32(sp)
   2f71c:	db400915 	stw	r13,36(sp)
   2f720:	003fb406 	br	2f5f4 <__divdf3+0x3c>
   2f724:	d8000815 	stw	zero,32(sp)
   2f728:	d8000915 	stw	zero,36(sp)
   2f72c:	d8000715 	stw	zero,28(sp)
   2f730:	d9000504 	addi	r4,sp,20
   2f734:	003fb006 	br	2f5f8 <__divdf3+0x40>
   2f738:	d8800515 	stw	r2,20(sp)
   2f73c:	d9000504 	addi	r4,sp,20
   2f740:	003fad06 	br	2f5f8 <__divdf3+0x40>
   2f744:	6140400c 	andi	r5,r12,256
   2f748:	283ff31e 	bne	r5,zero,2f718 <__divdf3+0x160>
   2f74c:	30c4b03a 	or	r2,r6,r3
   2f750:	103ff126 	beq	r2,zero,2f718 <__divdf3+0x160>
   2f754:	6109883a 	add	r4,r12,r4
   2f758:	2305803a 	cmpltu	r2,r4,r12
   2f75c:	033fc004 	movi	r12,-256
   2f760:	2318703a 	and	r12,r4,r12
   2f764:	135b883a 	add	r13,r2,r13
   2f768:	003feb06 	br	2f718 <__divdf3+0x160>

0002f76c <__eqdf2>:
   2f76c:	defff104 	addi	sp,sp,-60
   2f770:	d9000c15 	stw	r4,48(sp)
   2f774:	d9400d15 	stw	r5,52(sp)
   2f778:	d9000c04 	addi	r4,sp,48
   2f77c:	d9400504 	addi	r5,sp,20
   2f780:	dfc00e15 	stw	ra,56(sp)
   2f784:	d9800a15 	stw	r6,40(sp)
   2f788:	d9c00b15 	stw	r7,44(sp)
   2f78c:	00302780 	call	30278 <__unpack_d>
   2f790:	d9000a04 	addi	r4,sp,40
   2f794:	d80b883a 	mov	r5,sp
   2f798:	00302780 	call	30278 <__unpack_d>
   2f79c:	d8c00517 	ldw	r3,20(sp)
   2f7a0:	00800044 	movi	r2,1
   2f7a4:	10c0052e 	bgeu	r2,r3,2f7bc <__eqdf2+0x50>
   2f7a8:	d8c00017 	ldw	r3,0(sp)
   2f7ac:	10c0032e 	bgeu	r2,r3,2f7bc <__eqdf2+0x50>
   2f7b0:	d9000504 	addi	r4,sp,20
   2f7b4:	d80b883a 	mov	r5,sp
   2f7b8:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f7bc:	dfc00e17 	ldw	ra,56(sp)
   2f7c0:	dec00f04 	addi	sp,sp,60
   2f7c4:	f800283a 	ret

0002f7c8 <__nedf2>:
   2f7c8:	defff104 	addi	sp,sp,-60
   2f7cc:	d9000c15 	stw	r4,48(sp)
   2f7d0:	d9400d15 	stw	r5,52(sp)
   2f7d4:	d9000c04 	addi	r4,sp,48
   2f7d8:	d9400504 	addi	r5,sp,20
   2f7dc:	dfc00e15 	stw	ra,56(sp)
   2f7e0:	d9800a15 	stw	r6,40(sp)
   2f7e4:	d9c00b15 	stw	r7,44(sp)
   2f7e8:	00302780 	call	30278 <__unpack_d>
   2f7ec:	d9000a04 	addi	r4,sp,40
   2f7f0:	d80b883a 	mov	r5,sp
   2f7f4:	00302780 	call	30278 <__unpack_d>
   2f7f8:	d8c00517 	ldw	r3,20(sp)
   2f7fc:	00800044 	movi	r2,1
   2f800:	10c0052e 	bgeu	r2,r3,2f818 <__nedf2+0x50>
   2f804:	d8c00017 	ldw	r3,0(sp)
   2f808:	10c0032e 	bgeu	r2,r3,2f818 <__nedf2+0x50>
   2f80c:	d9000504 	addi	r4,sp,20
   2f810:	d80b883a 	mov	r5,sp
   2f814:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f818:	dfc00e17 	ldw	ra,56(sp)
   2f81c:	dec00f04 	addi	sp,sp,60
   2f820:	f800283a 	ret

0002f824 <__gtdf2>:
   2f824:	defff104 	addi	sp,sp,-60
   2f828:	d9000c15 	stw	r4,48(sp)
   2f82c:	d9400d15 	stw	r5,52(sp)
   2f830:	d9000c04 	addi	r4,sp,48
   2f834:	d9400504 	addi	r5,sp,20
   2f838:	dfc00e15 	stw	ra,56(sp)
   2f83c:	d9800a15 	stw	r6,40(sp)
   2f840:	d9c00b15 	stw	r7,44(sp)
   2f844:	00302780 	call	30278 <__unpack_d>
   2f848:	d9000a04 	addi	r4,sp,40
   2f84c:	d80b883a 	mov	r5,sp
   2f850:	00302780 	call	30278 <__unpack_d>
   2f854:	d8c00517 	ldw	r3,20(sp)
   2f858:	00800044 	movi	r2,1
   2f85c:	10c0082e 	bgeu	r2,r3,2f880 <__gtdf2+0x5c>
   2f860:	d8c00017 	ldw	r3,0(sp)
   2f864:	10c0062e 	bgeu	r2,r3,2f880 <__gtdf2+0x5c>
   2f868:	d9000504 	addi	r4,sp,20
   2f86c:	d80b883a 	mov	r5,sp
   2f870:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f874:	dfc00e17 	ldw	ra,56(sp)
   2f878:	dec00f04 	addi	sp,sp,60
   2f87c:	f800283a 	ret
   2f880:	00bfffc4 	movi	r2,-1
   2f884:	003ffb06 	br	2f874 <__gtdf2+0x50>

0002f888 <__gedf2>:
   2f888:	defff104 	addi	sp,sp,-60
   2f88c:	d9000c15 	stw	r4,48(sp)
   2f890:	d9400d15 	stw	r5,52(sp)
   2f894:	d9000c04 	addi	r4,sp,48
   2f898:	d9400504 	addi	r5,sp,20
   2f89c:	dfc00e15 	stw	ra,56(sp)
   2f8a0:	d9800a15 	stw	r6,40(sp)
   2f8a4:	d9c00b15 	stw	r7,44(sp)
   2f8a8:	00302780 	call	30278 <__unpack_d>
   2f8ac:	d9000a04 	addi	r4,sp,40
   2f8b0:	d80b883a 	mov	r5,sp
   2f8b4:	00302780 	call	30278 <__unpack_d>
   2f8b8:	d8c00517 	ldw	r3,20(sp)
   2f8bc:	00800044 	movi	r2,1
   2f8c0:	10c0082e 	bgeu	r2,r3,2f8e4 <__gedf2+0x5c>
   2f8c4:	d8c00017 	ldw	r3,0(sp)
   2f8c8:	10c0062e 	bgeu	r2,r3,2f8e4 <__gedf2+0x5c>
   2f8cc:	d9000504 	addi	r4,sp,20
   2f8d0:	d80b883a 	mov	r5,sp
   2f8d4:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f8d8:	dfc00e17 	ldw	ra,56(sp)
   2f8dc:	dec00f04 	addi	sp,sp,60
   2f8e0:	f800283a 	ret
   2f8e4:	00bfffc4 	movi	r2,-1
   2f8e8:	003ffb06 	br	2f8d8 <__gedf2+0x50>

0002f8ec <__ltdf2>:
   2f8ec:	defff104 	addi	sp,sp,-60
   2f8f0:	d9000c15 	stw	r4,48(sp)
   2f8f4:	d9400d15 	stw	r5,52(sp)
   2f8f8:	d9000c04 	addi	r4,sp,48
   2f8fc:	d9400504 	addi	r5,sp,20
   2f900:	dfc00e15 	stw	ra,56(sp)
   2f904:	d9800a15 	stw	r6,40(sp)
   2f908:	d9c00b15 	stw	r7,44(sp)
   2f90c:	00302780 	call	30278 <__unpack_d>
   2f910:	d9000a04 	addi	r4,sp,40
   2f914:	d80b883a 	mov	r5,sp
   2f918:	00302780 	call	30278 <__unpack_d>
   2f91c:	d8c00517 	ldw	r3,20(sp)
   2f920:	00800044 	movi	r2,1
   2f924:	10c0052e 	bgeu	r2,r3,2f93c <__ltdf2+0x50>
   2f928:	d8c00017 	ldw	r3,0(sp)
   2f92c:	10c0032e 	bgeu	r2,r3,2f93c <__ltdf2+0x50>
   2f930:	d9000504 	addi	r4,sp,20
   2f934:	d80b883a 	mov	r5,sp
   2f938:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f93c:	dfc00e17 	ldw	ra,56(sp)
   2f940:	dec00f04 	addi	sp,sp,60
   2f944:	f800283a 	ret

0002f948 <__ledf2>:
   2f948:	defff104 	addi	sp,sp,-60
   2f94c:	d9000c15 	stw	r4,48(sp)
   2f950:	d9400d15 	stw	r5,52(sp)
   2f954:	d9000c04 	addi	r4,sp,48
   2f958:	d9400504 	addi	r5,sp,20
   2f95c:	dfc00e15 	stw	ra,56(sp)
   2f960:	d9800a15 	stw	r6,40(sp)
   2f964:	d9c00b15 	stw	r7,44(sp)
   2f968:	00302780 	call	30278 <__unpack_d>
   2f96c:	d9000a04 	addi	r4,sp,40
   2f970:	d80b883a 	mov	r5,sp
   2f974:	00302780 	call	30278 <__unpack_d>
   2f978:	d8c00517 	ldw	r3,20(sp)
   2f97c:	00800044 	movi	r2,1
   2f980:	10c0052e 	bgeu	r2,r3,2f998 <__ledf2+0x50>
   2f984:	d8c00017 	ldw	r3,0(sp)
   2f988:	10c0032e 	bgeu	r2,r3,2f998 <__ledf2+0x50>
   2f98c:	d9000504 	addi	r4,sp,20
   2f990:	d80b883a 	mov	r5,sp
   2f994:	003037c0 	call	3037c <__fpcmp_parts_d>
   2f998:	dfc00e17 	ldw	ra,56(sp)
   2f99c:	dec00f04 	addi	sp,sp,60
   2f9a0:	f800283a 	ret

0002f9a4 <__floatsidf>:
   2f9a4:	2004d7fa 	srli	r2,r4,31
   2f9a8:	defff904 	addi	sp,sp,-28
   2f9ac:	00c000c4 	movi	r3,3
   2f9b0:	dfc00615 	stw	ra,24(sp)
   2f9b4:	dc000515 	stw	r16,20(sp)
   2f9b8:	d8c00015 	stw	r3,0(sp)
   2f9bc:	d8800115 	stw	r2,4(sp)
   2f9c0:	2000081e 	bne	r4,zero,2f9e4 <__floatsidf+0x40>
   2f9c4:	00800084 	movi	r2,2
   2f9c8:	d8800015 	stw	r2,0(sp)
   2f9cc:	d809883a 	mov	r4,sp
   2f9d0:	00300540 	call	30054 <__pack_d>
   2f9d4:	dfc00617 	ldw	ra,24(sp)
   2f9d8:	dc000517 	ldw	r16,20(sp)
   2f9dc:	dec00704 	addi	sp,sp,28
   2f9e0:	f800283a 	ret
   2f9e4:	00c00f04 	movi	r3,60
   2f9e8:	d8c00215 	stw	r3,8(sp)
   2f9ec:	10000f1e 	bne	r2,zero,2fa2c <__floatsidf+0x88>
   2f9f0:	2021883a 	mov	r16,r4
   2f9f4:	8009883a 	mov	r4,r16
   2f9f8:	002fdf80 	call	2fdf8 <__clzsi2>
   2f9fc:	11000744 	addi	r4,r2,29
   2fa00:	0100110e 	bge	zero,r4,2fa48 <__floatsidf+0xa4>
   2fa04:	10ffff44 	addi	r3,r2,-3
   2fa08:	18001216 	blt	r3,zero,2fa54 <__floatsidf+0xb0>
   2fa0c:	80c6983a 	sll	r3,r16,r3
   2fa10:	0009883a 	mov	r4,zero
   2fa14:	014007c4 	movi	r5,31
   2fa18:	2885c83a 	sub	r2,r5,r2
   2fa1c:	d9000315 	stw	r4,12(sp)
   2fa20:	d8c00415 	stw	r3,16(sp)
   2fa24:	d8800215 	stw	r2,8(sp)
   2fa28:	003fe806 	br	2f9cc <__floatsidf+0x28>
   2fa2c:	00a00034 	movhi	r2,32768
   2fa30:	20800e26 	beq	r4,r2,2fa6c <__floatsidf+0xc8>
   2fa34:	0121c83a 	sub	r16,zero,r4
   2fa38:	8009883a 	mov	r4,r16
   2fa3c:	002fdf80 	call	2fdf8 <__clzsi2>
   2fa40:	11000744 	addi	r4,r2,29
   2fa44:	013fef16 	blt	zero,r4,2fa04 <__floatsidf+0x60>
   2fa48:	dc000315 	stw	r16,12(sp)
   2fa4c:	d8000415 	stw	zero,16(sp)
   2fa50:	003fde06 	br	2f9cc <__floatsidf+0x28>
   2fa54:	800ad07a 	srli	r5,r16,1
   2fa58:	00c007c4 	movi	r3,31
   2fa5c:	1907c83a 	sub	r3,r3,r4
   2fa60:	28c6d83a 	srl	r3,r5,r3
   2fa64:	8108983a 	sll	r4,r16,r4
   2fa68:	003fea06 	br	2fa14 <__floatsidf+0x70>
   2fa6c:	0005883a 	mov	r2,zero
   2fa70:	00f07834 	movhi	r3,49632
   2fa74:	003fd706 	br	2f9d4 <__floatsidf+0x30>

0002fa78 <__fixdfsi>:
   2fa78:	defff804 	addi	sp,sp,-32
   2fa7c:	d9000515 	stw	r4,20(sp)
   2fa80:	d9400615 	stw	r5,24(sp)
   2fa84:	d9000504 	addi	r4,sp,20
   2fa88:	d80b883a 	mov	r5,sp
   2fa8c:	dfc00715 	stw	ra,28(sp)
   2fa90:	00302780 	call	30278 <__unpack_d>
   2fa94:	d8800017 	ldw	r2,0(sp)
   2fa98:	00c00084 	movi	r3,2
   2fa9c:	10c01c26 	beq	r2,r3,2fb10 <__fixdfsi+0x98>
   2faa0:	00c00044 	movi	r3,1
   2faa4:	18801a2e 	bgeu	r3,r2,2fb10 <__fixdfsi+0x98>
   2faa8:	00c00104 	movi	r3,4
   2faac:	10c01126 	beq	r2,r3,2faf4 <__fixdfsi+0x7c>
   2fab0:	d8800217 	ldw	r2,8(sp)
   2fab4:	10001616 	blt	r2,zero,2fb10 <__fixdfsi+0x98>
   2fab8:	00c00784 	movi	r3,30
   2fabc:	18800d16 	blt	r3,r2,2faf4 <__fixdfsi+0x7c>
   2fac0:	00c00f04 	movi	r3,60
   2fac4:	1885c83a 	sub	r2,r3,r2
   2fac8:	10fff804 	addi	r3,r2,-32
   2facc:	d9400317 	ldw	r5,12(sp)
   2fad0:	d9000417 	ldw	r4,16(sp)
   2fad4:	18001616 	blt	r3,zero,2fb30 <__fixdfsi+0xb8>
   2fad8:	20c4d83a 	srl	r2,r4,r3
   2fadc:	d8c00117 	ldw	r3,4(sp)
   2fae0:	18000126 	beq	r3,zero,2fae8 <__fixdfsi+0x70>
   2fae4:	0085c83a 	sub	r2,zero,r2
   2fae8:	dfc00717 	ldw	ra,28(sp)
   2faec:	dec00804 	addi	sp,sp,32
   2faf0:	f800283a 	ret
   2faf4:	d8800117 	ldw	r2,4(sp)
   2faf8:	1000091e 	bne	r2,zero,2fb20 <__fixdfsi+0xa8>
   2fafc:	00a00034 	movhi	r2,32768
   2fb00:	10bfffc4 	addi	r2,r2,-1
   2fb04:	dfc00717 	ldw	ra,28(sp)
   2fb08:	dec00804 	addi	sp,sp,32
   2fb0c:	f800283a 	ret
   2fb10:	0005883a 	mov	r2,zero
   2fb14:	dfc00717 	ldw	ra,28(sp)
   2fb18:	dec00804 	addi	sp,sp,32
   2fb1c:	f800283a 	ret
   2fb20:	00a00034 	movhi	r2,32768
   2fb24:	dfc00717 	ldw	ra,28(sp)
   2fb28:	dec00804 	addi	sp,sp,32
   2fb2c:	f800283a 	ret
   2fb30:	2008907a 	slli	r4,r4,1
   2fb34:	018007c4 	movi	r6,31
   2fb38:	308dc83a 	sub	r6,r6,r2
   2fb3c:	2188983a 	sll	r4,r4,r6
   2fb40:	2884d83a 	srl	r2,r5,r2
   2fb44:	2084b03a 	or	r2,r4,r2
   2fb48:	003fe406 	br	2fadc <__fixdfsi+0x64>

0002fb4c <__truncdfsf2>:
   2fb4c:	defff804 	addi	sp,sp,-32
   2fb50:	d9000515 	stw	r4,20(sp)
   2fb54:	d9400615 	stw	r5,24(sp)
   2fb58:	d9000504 	addi	r4,sp,20
   2fb5c:	d80b883a 	mov	r5,sp
   2fb60:	dfc00715 	stw	ra,28(sp)
   2fb64:	00302780 	call	30278 <__unpack_d>
   2fb68:	d8800317 	ldw	r2,12(sp)
   2fb6c:	d8c00417 	ldw	r3,16(sp)
   2fb70:	01100034 	movhi	r4,16384
   2fb74:	213fffc4 	addi	r4,r4,-1
   2fb78:	100ed7ba 	srli	r7,r2,30
   2fb7c:	180690ba 	slli	r3,r3,2
   2fb80:	1104703a 	and	r2,r2,r4
   2fb84:	19ceb03a 	or	r7,r3,r7
   2fb88:	10000126 	beq	r2,zero,2fb90 <__truncdfsf2+0x44>
   2fb8c:	39c00054 	ori	r7,r7,1
   2fb90:	d9000017 	ldw	r4,0(sp)
   2fb94:	d9400117 	ldw	r5,4(sp)
   2fb98:	d9800217 	ldw	r6,8(sp)
   2fb9c:	00300280 	call	30028 <__make_fp>
   2fba0:	dfc00717 	ldw	ra,28(sp)
   2fba4:	dec00804 	addi	sp,sp,32
   2fba8:	f800283a 	ret

0002fbac <__floatunsidf>:
   2fbac:	defff904 	addi	sp,sp,-28
   2fbb0:	dc000515 	stw	r16,20(sp)
   2fbb4:	dfc00615 	stw	ra,24(sp)
   2fbb8:	d8000115 	stw	zero,4(sp)
   2fbbc:	2021883a 	mov	r16,r4
   2fbc0:	20001726 	beq	r4,zero,2fc20 <__floatunsidf+0x74>
   2fbc4:	008000c4 	movi	r2,3
   2fbc8:	d8800015 	stw	r2,0(sp)
   2fbcc:	00800f04 	movi	r2,60
   2fbd0:	d8800215 	stw	r2,8(sp)
   2fbd4:	002fdf80 	call	2fdf8 <__clzsi2>
   2fbd8:	10c00744 	addi	r3,r2,29
   2fbdc:	18001816 	blt	r3,zero,2fc40 <__floatunsidf+0x94>
   2fbe0:	18002d26 	beq	r3,zero,2fc98 <__floatunsidf+0xec>
   2fbe4:	113fff44 	addi	r4,r2,-3
   2fbe8:	20002e16 	blt	r4,zero,2fca4 <__floatunsidf+0xf8>
   2fbec:	8108983a 	sll	r4,r16,r4
   2fbf0:	0021883a 	mov	r16,zero
   2fbf4:	014007c4 	movi	r5,31
   2fbf8:	2885c83a 	sub	r2,r5,r2
   2fbfc:	dc000315 	stw	r16,12(sp)
   2fc00:	d9000415 	stw	r4,16(sp)
   2fc04:	d8800215 	stw	r2,8(sp)
   2fc08:	d809883a 	mov	r4,sp
   2fc0c:	00300540 	call	30054 <__pack_d>
   2fc10:	dfc00617 	ldw	ra,24(sp)
   2fc14:	dc000517 	ldw	r16,20(sp)
   2fc18:	dec00704 	addi	sp,sp,28
   2fc1c:	f800283a 	ret
   2fc20:	00800084 	movi	r2,2
   2fc24:	d809883a 	mov	r4,sp
   2fc28:	d8800015 	stw	r2,0(sp)
   2fc2c:	00300540 	call	30054 <__pack_d>
   2fc30:	dfc00617 	ldw	ra,24(sp)
   2fc34:	dc000517 	ldw	r16,20(sp)
   2fc38:	dec00704 	addi	sp,sp,28
   2fc3c:	f800283a 	ret
   2fc40:	00c7c83a 	sub	r3,zero,r3
   2fc44:	193ff804 	addi	r4,r3,-32
   2fc48:	20001c16 	blt	r4,zero,2fcbc <__floatunsidf+0x110>
   2fc4c:	000b883a 	mov	r5,zero
   2fc50:	2009d7fa 	srai	r4,r4,31
   2fc54:	80c6d83a 	srl	r3,r16,r3
   2fc58:	297fffc4 	addi	r5,r5,-1
   2fc5c:	2c20703a 	and	r16,r5,r16
   2fc60:	8020c03a 	cmpne	r16,r16,zero
   2fc64:	1906703a 	and	r3,r3,r4
   2fc68:	010007c4 	movi	r4,31
   2fc6c:	80c6b03a 	or	r3,r16,r3
   2fc70:	2085c83a 	sub	r2,r4,r2
   2fc74:	d809883a 	mov	r4,sp
   2fc78:	d8c00315 	stw	r3,12(sp)
   2fc7c:	d8000415 	stw	zero,16(sp)
   2fc80:	d8800215 	stw	r2,8(sp)
   2fc84:	00300540 	call	30054 <__pack_d>
   2fc88:	dfc00617 	ldw	ra,24(sp)
   2fc8c:	dc000517 	ldw	r16,20(sp)
   2fc90:	dec00704 	addi	sp,sp,28
   2fc94:	f800283a 	ret
   2fc98:	dc000315 	stw	r16,12(sp)
   2fc9c:	d8000415 	stw	zero,16(sp)
   2fca0:	003fd906 	br	2fc08 <__floatunsidf+0x5c>
   2fca4:	800ad07a 	srli	r5,r16,1
   2fca8:	010007c4 	movi	r4,31
   2fcac:	20c9c83a 	sub	r4,r4,r3
   2fcb0:	2908d83a 	srl	r4,r5,r4
   2fcb4:	80e0983a 	sll	r16,r16,r3
   2fcb8:	003fce06 	br	2fbf4 <__floatunsidf+0x48>
   2fcbc:	01400044 	movi	r5,1
   2fcc0:	28ca983a 	sll	r5,r5,r3
   2fcc4:	003fe206 	br	2fc50 <__floatunsidf+0xa4>

0002fcc8 <udivmodsi4>:
   2fcc8:	2005883a 	mov	r2,r4
   2fccc:	2900182e 	bgeu	r5,r4,2fd30 <udivmodsi4+0x68>
   2fcd0:	28001716 	blt	r5,zero,2fd30 <udivmodsi4+0x68>
   2fcd4:	01000804 	movi	r4,32
   2fcd8:	00c00044 	movi	r3,1
   2fcdc:	00000206 	br	2fce8 <udivmodsi4+0x20>
   2fce0:	20001126 	beq	r4,zero,2fd28 <udivmodsi4+0x60>
   2fce4:	28000516 	blt	r5,zero,2fcfc <udivmodsi4+0x34>
   2fce8:	294b883a 	add	r5,r5,r5
   2fcec:	213fffc4 	addi	r4,r4,-1
   2fcf0:	18c7883a 	add	r3,r3,r3
   2fcf4:	28bffa36 	bltu	r5,r2,2fce0 <udivmodsi4+0x18>
   2fcf8:	18000b26 	beq	r3,zero,2fd28 <udivmodsi4+0x60>
   2fcfc:	0009883a 	mov	r4,zero
   2fd00:	11400236 	bltu	r2,r5,2fd0c <udivmodsi4+0x44>
   2fd04:	1145c83a 	sub	r2,r2,r5
   2fd08:	20c8b03a 	or	r4,r4,r3
   2fd0c:	1806d07a 	srli	r3,r3,1
   2fd10:	280ad07a 	srli	r5,r5,1
   2fd14:	183ffa1e 	bne	r3,zero,2fd00 <udivmodsi4+0x38>
   2fd18:	3000021e 	bne	r6,zero,2fd24 <udivmodsi4+0x5c>
   2fd1c:	2005883a 	mov	r2,r4
   2fd20:	f800283a 	ret
   2fd24:	f800283a 	ret
   2fd28:	0009883a 	mov	r4,zero
   2fd2c:	003ffa06 	br	2fd18 <udivmodsi4+0x50>
   2fd30:	00c00044 	movi	r3,1
   2fd34:	0009883a 	mov	r4,zero
   2fd38:	003ff106 	br	2fd00 <udivmodsi4+0x38>

0002fd3c <__divsi3>:
   2fd3c:	defffe04 	addi	sp,sp,-8
   2fd40:	dfc00115 	stw	ra,4(sp)
   2fd44:	dc000015 	stw	r16,0(sp)
   2fd48:	20000a16 	blt	r4,zero,2fd74 <__divsi3+0x38>
   2fd4c:	0021883a 	mov	r16,zero
   2fd50:	28000b16 	blt	r5,zero,2fd80 <__divsi3+0x44>
   2fd54:	000d883a 	mov	r6,zero
   2fd58:	002fcc80 	call	2fcc8 <udivmodsi4>
   2fd5c:	80000126 	beq	r16,zero,2fd64 <__divsi3+0x28>
   2fd60:	0085c83a 	sub	r2,zero,r2
   2fd64:	dfc00117 	ldw	ra,4(sp)
   2fd68:	dc000017 	ldw	r16,0(sp)
   2fd6c:	dec00204 	addi	sp,sp,8
   2fd70:	f800283a 	ret
   2fd74:	0109c83a 	sub	r4,zero,r4
   2fd78:	04000044 	movi	r16,1
   2fd7c:	283ff50e 	bge	r5,zero,2fd54 <__divsi3+0x18>
   2fd80:	014bc83a 	sub	r5,zero,r5
   2fd84:	8400005c 	xori	r16,r16,1
   2fd88:	003ff206 	br	2fd54 <__divsi3+0x18>

0002fd8c <__modsi3>:
   2fd8c:	deffff04 	addi	sp,sp,-4
   2fd90:	dfc00015 	stw	ra,0(sp)
   2fd94:	20000516 	blt	r4,zero,2fdac <__modsi3+0x20>
   2fd98:	28000c16 	blt	r5,zero,2fdcc <__modsi3+0x40>
   2fd9c:	01800044 	movi	r6,1
   2fda0:	dfc00017 	ldw	ra,0(sp)
   2fda4:	dec00104 	addi	sp,sp,4
   2fda8:	002fcc81 	jmpi	2fcc8 <udivmodsi4>
   2fdac:	0109c83a 	sub	r4,zero,r4
   2fdb0:	28000b16 	blt	r5,zero,2fde0 <__modsi3+0x54>
   2fdb4:	01800044 	movi	r6,1
   2fdb8:	002fcc80 	call	2fcc8 <udivmodsi4>
   2fdbc:	0085c83a 	sub	r2,zero,r2
   2fdc0:	dfc00017 	ldw	ra,0(sp)
   2fdc4:	dec00104 	addi	sp,sp,4
   2fdc8:	f800283a 	ret
   2fdcc:	014bc83a 	sub	r5,zero,r5
   2fdd0:	01800044 	movi	r6,1
   2fdd4:	dfc00017 	ldw	ra,0(sp)
   2fdd8:	dec00104 	addi	sp,sp,4
   2fddc:	002fcc81 	jmpi	2fcc8 <udivmodsi4>
   2fde0:	014bc83a 	sub	r5,zero,r5
   2fde4:	003ff306 	br	2fdb4 <__modsi3+0x28>

0002fde8 <__udivsi3>:
   2fde8:	000d883a 	mov	r6,zero
   2fdec:	002fcc81 	jmpi	2fcc8 <udivmodsi4>

0002fdf0 <__umodsi3>:
   2fdf0:	01800044 	movi	r6,1
   2fdf4:	002fcc81 	jmpi	2fcc8 <udivmodsi4>

0002fdf8 <__clzsi2>:
   2fdf8:	00bfffd4 	movui	r2,65535
   2fdfc:	11000b36 	bltu	r2,r4,2fe2c <__clzsi2+0x34>
   2fe00:	00803fc4 	movi	r2,255
   2fe04:	11001e2e 	bgeu	r2,r4,2fe80 <__clzsi2+0x88>
   2fe08:	00c00204 	movi	r3,8
   2fe0c:	20c8d83a 	srl	r4,r4,r3
   2fe10:	00c000f4 	movhi	r3,3
   2fe14:	18cfcd04 	addi	r3,r3,16180
   2fe18:	00800604 	movi	r2,24
   2fe1c:	1909883a 	add	r4,r3,r4
   2fe20:	20c00003 	ldbu	r3,0(r4)
   2fe24:	10c5c83a 	sub	r2,r2,r3
   2fe28:	f800283a 	ret
   2fe2c:	00804034 	movhi	r2,256
   2fe30:	10bfffc4 	addi	r2,r2,-1
   2fe34:	11000936 	bltu	r2,r4,2fe5c <__clzsi2+0x64>
   2fe38:	00800404 	movi	r2,16
   2fe3c:	1007883a 	mov	r3,r2
   2fe40:	20c8d83a 	srl	r4,r4,r3
   2fe44:	00c000f4 	movhi	r3,3
   2fe48:	18cfcd04 	addi	r3,r3,16180
   2fe4c:	1909883a 	add	r4,r3,r4
   2fe50:	20c00003 	ldbu	r3,0(r4)
   2fe54:	10c5c83a 	sub	r2,r2,r3
   2fe58:	f800283a 	ret
   2fe5c:	00c00604 	movi	r3,24
   2fe60:	20c8d83a 	srl	r4,r4,r3
   2fe64:	00c000f4 	movhi	r3,3
   2fe68:	18cfcd04 	addi	r3,r3,16180
   2fe6c:	00800204 	movi	r2,8
   2fe70:	1909883a 	add	r4,r3,r4
   2fe74:	20c00003 	ldbu	r3,0(r4)
   2fe78:	10c5c83a 	sub	r2,r2,r3
   2fe7c:	f800283a 	ret
   2fe80:	0007883a 	mov	r3,zero
   2fe84:	20c8d83a 	srl	r4,r4,r3
   2fe88:	00c000f4 	movhi	r3,3
   2fe8c:	18cfcd04 	addi	r3,r3,16180
   2fe90:	00800804 	movi	r2,32
   2fe94:	1909883a 	add	r4,r3,r4
   2fe98:	20c00003 	ldbu	r3,0(r4)
   2fe9c:	10c5c83a 	sub	r2,r2,r3
   2fea0:	f800283a 	ret

0002fea4 <__unpack_f>:
   2fea4:	20c00017 	ldw	r3,0(r4)
   2fea8:	00802034 	movhi	r2,128
   2feac:	10bfffc4 	addi	r2,r2,-1
   2feb0:	1808d5fa 	srli	r4,r3,23
   2feb4:	180cd7fa 	srli	r6,r3,31
   2feb8:	1884703a 	and	r2,r3,r2
   2febc:	21003fcc 	andi	r4,r4,255
   2fec0:	29800115 	stw	r6,4(r5)
   2fec4:	2000111e 	bne	r4,zero,2ff0c <__unpack_f+0x68>
   2fec8:	10001a26 	beq	r2,zero,2ff34 <__unpack_f+0x90>
   2fecc:	00ffe084 	movi	r3,-126
   2fed0:	100491fa 	slli	r2,r2,7
   2fed4:	28c00215 	stw	r3,8(r5)
   2fed8:	00c000c4 	movi	r3,3
   2fedc:	28c00015 	stw	r3,0(r5)
   2fee0:	01900034 	movhi	r6,16384
   2fee4:	31bfffc4 	addi	r6,r6,-1
   2fee8:	30801036 	bltu	r6,r2,2ff2c <__unpack_f+0x88>
   2feec:	00ffe044 	movi	r3,-127
   2fef0:	1085883a 	add	r2,r2,r2
   2fef4:	1809883a 	mov	r4,r3
   2fef8:	18ffffc4 	addi	r3,r3,-1
   2fefc:	30bffc2e 	bgeu	r6,r2,2fef0 <__unpack_f+0x4c>
   2ff00:	29000215 	stw	r4,8(r5)
   2ff04:	28800315 	stw	r2,12(r5)
   2ff08:	f800283a 	ret
   2ff0c:	01803fc4 	movi	r6,255
   2ff10:	21800b26 	beq	r4,r6,2ff40 <__unpack_f+0x9c>
   2ff14:	100491fa 	slli	r2,r2,7
   2ff18:	213fe044 	addi	r4,r4,-127
   2ff1c:	00c000c4 	movi	r3,3
   2ff20:	10900034 	orhi	r2,r2,16384
   2ff24:	29000215 	stw	r4,8(r5)
   2ff28:	28c00015 	stw	r3,0(r5)
   2ff2c:	28800315 	stw	r2,12(r5)
   2ff30:	f800283a 	ret
   2ff34:	00800084 	movi	r2,2
   2ff38:	28800015 	stw	r2,0(r5)
   2ff3c:	f800283a 	ret
   2ff40:	10000526 	beq	r2,zero,2ff58 <__unpack_f+0xb4>
   2ff44:	18c0042c 	andhi	r3,r3,16
   2ff48:	18000626 	beq	r3,zero,2ff64 <__unpack_f+0xc0>
   2ff4c:	00c00044 	movi	r3,1
   2ff50:	28c00015 	stw	r3,0(r5)
   2ff54:	003ff506 	br	2ff2c <__unpack_f+0x88>
   2ff58:	00800104 	movi	r2,4
   2ff5c:	28800015 	stw	r2,0(r5)
   2ff60:	f800283a 	ret
   2ff64:	28000015 	stw	zero,0(r5)
   2ff68:	003ff006 	br	2ff2c <__unpack_f+0x88>

0002ff6c <__fpcmp_parts_f>:
   2ff6c:	20c00017 	ldw	r3,0(r4)
   2ff70:	00800044 	movi	r2,1
   2ff74:	10c0172e 	bgeu	r2,r3,2ffd4 <__fpcmp_parts_f+0x68>
   2ff78:	29800017 	ldw	r6,0(r5)
   2ff7c:	1180152e 	bgeu	r2,r6,2ffd4 <__fpcmp_parts_f+0x68>
   2ff80:	01c00104 	movi	r7,4
   2ff84:	19c02326 	beq	r3,r7,30014 <__fpcmp_parts_f+0xa8>
   2ff88:	31c00926 	beq	r6,r7,2ffb0 <__fpcmp_parts_f+0x44>
   2ff8c:	01c00084 	movi	r7,2
   2ff90:	19c00626 	beq	r3,r7,2ffac <__fpcmp_parts_f+0x40>
   2ff94:	31c01126 	beq	r6,r7,2ffdc <__fpcmp_parts_f+0x70>
   2ff98:	20c00117 	ldw	r3,4(r4)
   2ff9c:	29800117 	ldw	r6,4(r5)
   2ffa0:	19801226 	beq	r3,r6,2ffec <__fpcmp_parts_f+0x80>
   2ffa4:	1800041e 	bne	r3,zero,2ffb8 <__fpcmp_parts_f+0x4c>
   2ffa8:	f800283a 	ret
   2ffac:	30c01526 	beq	r6,r3,30004 <__fpcmp_parts_f+0x98>
   2ffb0:	28800117 	ldw	r2,4(r5)
   2ffb4:	1000071e 	bne	r2,zero,2ffd4 <__fpcmp_parts_f+0x68>
   2ffb8:	00bfffc4 	movi	r2,-1
   2ffbc:	f800283a 	ret
   2ffc0:	39801216 	blt	r7,r6,3000c <__fpcmp_parts_f+0xa0>
   2ffc4:	21000317 	ldw	r4,12(r4)
   2ffc8:	28800317 	ldw	r2,12(r5)
   2ffcc:	11000c2e 	bgeu	r2,r4,30000 <__fpcmp_parts_f+0x94>
   2ffd0:	183ff91e 	bne	r3,zero,2ffb8 <__fpcmp_parts_f+0x4c>
   2ffd4:	00800044 	movi	r2,1
   2ffd8:	f800283a 	ret
   2ffdc:	20800117 	ldw	r2,4(r4)
   2ffe0:	103ff51e 	bne	r2,zero,2ffb8 <__fpcmp_parts_f+0x4c>
   2ffe4:	00800044 	movi	r2,1
   2ffe8:	f800283a 	ret
   2ffec:	21c00217 	ldw	r7,8(r4)
   2fff0:	29800217 	ldw	r6,8(r5)
   2fff4:	31fff20e 	bge	r6,r7,2ffc0 <__fpcmp_parts_f+0x54>
   2fff8:	183fef1e 	bne	r3,zero,2ffb8 <__fpcmp_parts_f+0x4c>
   2fffc:	f800283a 	ret
   30000:	20800236 	bltu	r4,r2,3000c <__fpcmp_parts_f+0xa0>
   30004:	0005883a 	mov	r2,zero
   30008:	f800283a 	ret
   3000c:	183fea26 	beq	r3,zero,2ffb8 <__fpcmp_parts_f+0x4c>
   30010:	003ff006 	br	2ffd4 <__fpcmp_parts_f+0x68>
   30014:	30fff11e 	bne	r6,r3,2ffdc <__fpcmp_parts_f+0x70>
   30018:	28c00117 	ldw	r3,4(r5)
   3001c:	20800117 	ldw	r2,4(r4)
   30020:	1885c83a 	sub	r2,r3,r2
   30024:	f800283a 	ret

00030028 <__make_fp>:
   30028:	defffb04 	addi	sp,sp,-20
   3002c:	d9000015 	stw	r4,0(sp)
   30030:	d809883a 	mov	r4,sp
   30034:	dfc00415 	stw	ra,16(sp)
   30038:	d9400115 	stw	r5,4(sp)
   3003c:	d9800215 	stw	r6,8(sp)
   30040:	d9c00315 	stw	r7,12(sp)
   30044:	00304d40 	call	304d4 <__pack_f>
   30048:	dfc00417 	ldw	ra,16(sp)
   3004c:	dec00504 	addi	sp,sp,20
   30050:	f800283a 	ret

00030054 <__pack_d>:
   30054:	20800017 	ldw	r2,0(r4)
   30058:	defff804 	addi	sp,sp,-32
   3005c:	dcc00315 	stw	r19,12(sp)
   30060:	dc800215 	stw	r18,8(sp)
   30064:	dfc00715 	stw	ra,28(sp)
   30068:	dd800615 	stw	r22,24(sp)
   3006c:	dd400515 	stw	r21,20(sp)
   30070:	dd000415 	stw	r20,16(sp)
   30074:	dc400115 	stw	r17,4(sp)
   30078:	dc000015 	stw	r16,0(sp)
   3007c:	04800044 	movi	r18,1
   30080:	24400317 	ldw	r17,12(r4)
   30084:	24000417 	ldw	r16,16(r4)
   30088:	24c00117 	ldw	r19,4(r4)
   3008c:	9080422e 	bgeu	r18,r2,30198 <__pack_d+0x144>
   30090:	00c00104 	movi	r3,4
   30094:	10c03c26 	beq	r2,r3,30188 <__pack_d+0x134>
   30098:	00c00084 	movi	r3,2
   3009c:	10c01926 	beq	r2,r3,30104 <__pack_d+0xb0>
   300a0:	8c04b03a 	or	r2,r17,r16
   300a4:	10001726 	beq	r2,zero,30104 <__pack_d+0xb0>
   300a8:	21000217 	ldw	r4,8(r4)
   300ac:	00bf0084 	movi	r2,-1022
   300b0:	20804016 	blt	r4,r2,301b4 <__pack_d+0x160>
   300b4:	0080ffc4 	movi	r2,1023
   300b8:	11003316 	blt	r2,r4,30188 <__pack_d+0x134>
   300bc:	88803fcc 	andi	r2,r17,255
   300c0:	00c02004 	movi	r3,128
   300c4:	10c02926 	beq	r2,r3,3016c <__pack_d+0x118>
   300c8:	88801fc4 	addi	r2,r17,127
   300cc:	1463803a 	cmpltu	r17,r2,r17
   300d0:	8c21883a 	add	r16,r17,r16
   300d4:	1023883a 	mov	r17,r2
   300d8:	00880034 	movhi	r2,8192
   300dc:	10bfffc4 	addi	r2,r2,-1
   300e0:	14001c36 	bltu	r2,r16,30154 <__pack_d+0x100>
   300e4:	2100ffc4 	addi	r4,r4,1023
   300e8:	8006963a 	slli	r3,r16,24
   300ec:	8804d23a 	srli	r2,r17,8
   300f0:	8020913a 	slli	r16,r16,4
   300f4:	2101ffcc 	andi	r4,r4,2047
   300f8:	1884b03a 	or	r2,r3,r2
   300fc:	8020d33a 	srli	r16,r16,12
   30100:	00000306 	br	30110 <__pack_d+0xbc>
   30104:	0009883a 	mov	r4,zero
   30108:	0005883a 	mov	r2,zero
   3010c:	0021883a 	mov	r16,zero
   30110:	2008953a 	slli	r4,r4,20
   30114:	982697fa 	slli	r19,r19,31
   30118:	00c00434 	movhi	r3,16
   3011c:	18ffffc4 	addi	r3,r3,-1
   30120:	80e0703a 	and	r16,r16,r3
   30124:	8106b03a 	or	r3,r16,r4
   30128:	1cc6b03a 	or	r3,r3,r19
   3012c:	dfc00717 	ldw	ra,28(sp)
   30130:	dd800617 	ldw	r22,24(sp)
   30134:	dd400517 	ldw	r21,20(sp)
   30138:	dd000417 	ldw	r20,16(sp)
   3013c:	dcc00317 	ldw	r19,12(sp)
   30140:	dc800217 	ldw	r18,8(sp)
   30144:	dc400117 	ldw	r17,4(sp)
   30148:	dc000017 	ldw	r16,0(sp)
   3014c:	dec00804 	addi	sp,sp,32
   30150:	f800283a 	ret
   30154:	800697fa 	slli	r3,r16,31
   30158:	8804d07a 	srli	r2,r17,1
   3015c:	21010004 	addi	r4,r4,1024
   30160:	8020d07a 	srli	r16,r16,1
   30164:	18a2b03a 	or	r17,r3,r2
   30168:	003fdf06 	br	300e8 <__pack_d+0x94>
   3016c:	88c0400c 	andi	r3,r17,256
   30170:	183fd926 	beq	r3,zero,300d8 <__pack_d+0x84>
   30174:	8885883a 	add	r2,r17,r2
   30178:	1463803a 	cmpltu	r17,r2,r17
   3017c:	8c21883a 	add	r16,r17,r16
   30180:	1023883a 	mov	r17,r2
   30184:	003fd406 	br	300d8 <__pack_d+0x84>
   30188:	0101ffc4 	movi	r4,2047
   3018c:	0005883a 	mov	r2,zero
   30190:	0021883a 	mov	r16,zero
   30194:	003fde06 	br	30110 <__pack_d+0xbc>
   30198:	84000234 	orhi	r16,r16,8
   3019c:	00c00434 	movhi	r3,16
   301a0:	18ffffc4 	addi	r3,r3,-1
   301a4:	8805883a 	mov	r2,r17
   301a8:	80e0703a 	and	r16,r16,r3
   301ac:	0101ffc4 	movi	r4,2047
   301b0:	003fd706 	br	30110 <__pack_d+0xbc>
   301b4:	1129c83a 	sub	r20,r2,r4
   301b8:	00800e04 	movi	r2,56
   301bc:	15002716 	blt	r2,r20,3025c <__pack_d+0x208>
   301c0:	800b883a 	mov	r5,r16
   301c4:	a00d883a 	mov	r6,r20
   301c8:	8809883a 	mov	r4,r17
   301cc:	003044c0 	call	3044c <__lshrdi3>
   301d0:	9009883a 	mov	r4,r18
   301d4:	000b883a 	mov	r5,zero
   301d8:	a00d883a 	mov	r6,r20
   301dc:	102d883a 	mov	r22,r2
   301e0:	182b883a 	mov	r21,r3
   301e4:	00304900 	call	30490 <__ashldi3>
   301e8:	1009003a 	cmpeq	r4,r2,zero
   301ec:	1907c83a 	sub	r3,r3,r4
   301f0:	10bfffc4 	addi	r2,r2,-1
   301f4:	1c20703a 	and	r16,r3,r16
   301f8:	1444703a 	and	r2,r2,r17
   301fc:	1404b03a 	or	r2,r2,r16
   30200:	1004c03a 	cmpne	r2,r2,zero
   30204:	1584b03a 	or	r2,r2,r22
   30208:	11003fcc 	andi	r4,r2,255
   3020c:	01402004 	movi	r5,128
   30210:	a807883a 	mov	r3,r21
   30214:	2140131e 	bne	r4,r5,30264 <__pack_d+0x210>
   30218:	1140400c 	andi	r5,r2,256
   3021c:	28000426 	beq	r5,zero,30230 <__pack_d+0x1dc>
   30220:	1109883a 	add	r4,r2,r4
   30224:	2085803a 	cmpltu	r2,r4,r2
   30228:	1547883a 	add	r3,r2,r21
   3022c:	2005883a 	mov	r2,r4
   30230:	1808963a 	slli	r4,r3,24
   30234:	1004d23a 	srli	r2,r2,8
   30238:	1820913a 	slli	r16,r3,4
   3023c:	01440034 	movhi	r5,4096
   30240:	297fffc4 	addi	r5,r5,-1
   30244:	2084b03a 	or	r2,r4,r2
   30248:	8020d33a 	srli	r16,r16,12
   3024c:	01000044 	movi	r4,1
   30250:	28ffaf36 	bltu	r5,r3,30110 <__pack_d+0xbc>
   30254:	0009883a 	mov	r4,zero
   30258:	003fad06 	br	30110 <__pack_d+0xbc>
   3025c:	0005883a 	mov	r2,zero
   30260:	0007883a 	mov	r3,zero
   30264:	11001fc4 	addi	r4,r2,127
   30268:	2085803a 	cmpltu	r2,r4,r2
   3026c:	10c7883a 	add	r3,r2,r3
   30270:	2005883a 	mov	r2,r4
   30274:	003fee06 	br	30230 <__pack_d+0x1dc>

00030278 <__unpack_d>:
   30278:	21800117 	ldw	r6,4(r4)
   3027c:	20c00017 	ldw	r3,0(r4)
   30280:	3004d7fa 	srli	r2,r6,31
   30284:	3008d53a 	srli	r4,r6,20
   30288:	28800115 	stw	r2,4(r5)
   3028c:	2101ffcc 	andi	r4,r4,2047
   30290:	00800434 	movhi	r2,16
   30294:	10bfffc4 	addi	r2,r2,-1
   30298:	3084703a 	and	r2,r6,r2
   3029c:	20001a1e 	bne	r4,zero,30308 <__unpack_d+0x90>
   302a0:	1888b03a 	or	r4,r3,r2
   302a4:	20002626 	beq	r4,zero,30340 <__unpack_d+0xc8>
   302a8:	1808d63a 	srli	r4,r3,24
   302ac:	1004923a 	slli	r2,r2,8
   302b0:	01bf0084 	movi	r6,-1022
   302b4:	29800215 	stw	r6,8(r5)
   302b8:	2084b03a 	or	r2,r4,r2
   302bc:	010000c4 	movi	r4,3
   302c0:	29000015 	stw	r4,0(r5)
   302c4:	02040034 	movhi	r8,4096
   302c8:	423fffc4 	addi	r8,r8,-1
   302cc:	1806923a 	slli	r3,r3,8
   302d0:	40801836 	bltu	r8,r2,30334 <__unpack_d+0xbc>
   302d4:	013f0044 	movi	r4,-1023
   302d8:	18cd883a 	add	r6,r3,r3
   302dc:	30c7803a 	cmpltu	r3,r6,r3
   302e0:	1085883a 	add	r2,r2,r2
   302e4:	1885883a 	add	r2,r3,r2
   302e8:	200f883a 	mov	r7,r4
   302ec:	3007883a 	mov	r3,r6
   302f0:	213fffc4 	addi	r4,r4,-1
   302f4:	40bff82e 	bgeu	r8,r2,302d8 <__unpack_d+0x60>
   302f8:	29c00215 	stw	r7,8(r5)
   302fc:	28c00315 	stw	r3,12(r5)
   30300:	28800415 	stw	r2,16(r5)
   30304:	f800283a 	ret
   30308:	01c1ffc4 	movi	r7,2047
   3030c:	21c00f26 	beq	r4,r7,3034c <__unpack_d+0xd4>
   30310:	180cd63a 	srli	r6,r3,24
   30314:	1004923a 	slli	r2,r2,8
   30318:	213f0044 	addi	r4,r4,-1023
   3031c:	1806923a 	slli	r3,r3,8
   30320:	3084b03a 	or	r2,r6,r2
   30324:	29000215 	stw	r4,8(r5)
   30328:	010000c4 	movi	r4,3
   3032c:	10840034 	orhi	r2,r2,4096
   30330:	29000015 	stw	r4,0(r5)
   30334:	28c00315 	stw	r3,12(r5)
   30338:	28800415 	stw	r2,16(r5)
   3033c:	f800283a 	ret
   30340:	00800084 	movi	r2,2
   30344:	28800015 	stw	r2,0(r5)
   30348:	f800283a 	ret
   3034c:	1888b03a 	or	r4,r3,r2
   30350:	20000526 	beq	r4,zero,30368 <__unpack_d+0xf0>
   30354:	3180022c 	andhi	r6,r6,8
   30358:	30000626 	beq	r6,zero,30374 <__unpack_d+0xfc>
   3035c:	01000044 	movi	r4,1
   30360:	29000015 	stw	r4,0(r5)
   30364:	003ff306 	br	30334 <__unpack_d+0xbc>
   30368:	00800104 	movi	r2,4
   3036c:	28800015 	stw	r2,0(r5)
   30370:	f800283a 	ret
   30374:	28000015 	stw	zero,0(r5)
   30378:	003fee06 	br	30334 <__unpack_d+0xbc>

0003037c <__fpcmp_parts_d>:
   3037c:	20c00017 	ldw	r3,0(r4)
   30380:	00800044 	movi	r2,1
   30384:	10c0142e 	bgeu	r2,r3,303d8 <__fpcmp_parts_d+0x5c>
   30388:	29800017 	ldw	r6,0(r5)
   3038c:	1180122e 	bgeu	r2,r6,303d8 <__fpcmp_parts_d+0x5c>
   30390:	01c00104 	movi	r7,4
   30394:	19c02826 	beq	r3,r7,30438 <__fpcmp_parts_d+0xbc>
   30398:	31c00926 	beq	r6,r7,303c0 <__fpcmp_parts_d+0x44>
   3039c:	01c00084 	movi	r7,2
   303a0:	19c00626 	beq	r3,r7,303bc <__fpcmp_parts_d+0x40>
   303a4:	31c00a26 	beq	r6,r7,303d0 <__fpcmp_parts_d+0x54>
   303a8:	20c00117 	ldw	r3,4(r4)
   303ac:	29800117 	ldw	r6,4(r5)
   303b0:	19800b26 	beq	r3,r6,303e0 <__fpcmp_parts_d+0x64>
   303b4:	1800041e 	bne	r3,zero,303c8 <__fpcmp_parts_d+0x4c>
   303b8:	f800283a 	ret
   303bc:	30c01a26 	beq	r6,r3,30428 <__fpcmp_parts_d+0xac>
   303c0:	28800117 	ldw	r2,4(r5)
   303c4:	1000041e 	bne	r2,zero,303d8 <__fpcmp_parts_d+0x5c>
   303c8:	00bfffc4 	movi	r2,-1
   303cc:	f800283a 	ret
   303d0:	20800117 	ldw	r2,4(r4)
   303d4:	103ffc1e 	bne	r2,zero,303c8 <__fpcmp_parts_d+0x4c>
   303d8:	00800044 	movi	r2,1
   303dc:	f800283a 	ret
   303e0:	21c00217 	ldw	r7,8(r4)
   303e4:	29800217 	ldw	r6,8(r5)
   303e8:	31c0020e 	bge	r6,r7,303f4 <__fpcmp_parts_d+0x78>
   303ec:	183ff61e 	bne	r3,zero,303c8 <__fpcmp_parts_d+0x4c>
   303f0:	f800283a 	ret
   303f4:	39800a16 	blt	r7,r6,30420 <__fpcmp_parts_d+0xa4>
   303f8:	20800417 	ldw	r2,16(r4)
   303fc:	29800417 	ldw	r6,16(r5)
   30400:	21c00317 	ldw	r7,12(r4)
   30404:	29000317 	ldw	r4,12(r5)
   30408:	30800936 	bltu	r6,r2,30430 <__fpcmp_parts_d+0xb4>
   3040c:	1180011e 	bne	r2,r6,30414 <__fpcmp_parts_d+0x98>
   30410:	21c00736 	bltu	r4,r7,30430 <__fpcmp_parts_d+0xb4>
   30414:	11800236 	bltu	r2,r6,30420 <__fpcmp_parts_d+0xa4>
   30418:	3080031e 	bne	r6,r2,30428 <__fpcmp_parts_d+0xac>
   3041c:	3900022e 	bgeu	r7,r4,30428 <__fpcmp_parts_d+0xac>
   30420:	183fe926 	beq	r3,zero,303c8 <__fpcmp_parts_d+0x4c>
   30424:	003fec06 	br	303d8 <__fpcmp_parts_d+0x5c>
   30428:	0005883a 	mov	r2,zero
   3042c:	f800283a 	ret
   30430:	183fe926 	beq	r3,zero,303d8 <__fpcmp_parts_d+0x5c>
   30434:	003fe406 	br	303c8 <__fpcmp_parts_d+0x4c>
   30438:	30ffe51e 	bne	r6,r3,303d0 <__fpcmp_parts_d+0x54>
   3043c:	28c00117 	ldw	r3,4(r5)
   30440:	20800117 	ldw	r2,4(r4)
   30444:	1885c83a 	sub	r2,r3,r2
   30448:	f800283a 	ret

0003044c <__lshrdi3>:
   3044c:	2005883a 	mov	r2,r4
   30450:	2807883a 	mov	r3,r5
   30454:	30000826 	beq	r6,zero,30478 <__lshrdi3+0x2c>
   30458:	01000804 	movi	r4,32
   3045c:	2189c83a 	sub	r4,r4,r6
   30460:	0100060e 	bge	zero,r4,3047c <__lshrdi3+0x30>
   30464:	1184d83a 	srl	r2,r2,r6
   30468:	2908983a 	sll	r4,r5,r4
   3046c:	298cd83a 	srl	r6,r5,r6
   30470:	2084b03a 	or	r2,r4,r2
   30474:	3007883a 	mov	r3,r6
   30478:	f800283a 	ret
   3047c:	0105c83a 	sub	r2,zero,r4
   30480:	000d883a 	mov	r6,zero
   30484:	2884d83a 	srl	r2,r5,r2
   30488:	3007883a 	mov	r3,r6
   3048c:	003ffa06 	br	30478 <__lshrdi3+0x2c>

00030490 <__ashldi3>:
   30490:	2005883a 	mov	r2,r4
   30494:	2807883a 	mov	r3,r5
   30498:	30000826 	beq	r6,zero,304bc <__ashldi3+0x2c>
   3049c:	01000804 	movi	r4,32
   304a0:	2189c83a 	sub	r4,r4,r6
   304a4:	0100060e 	bge	zero,r4,304c0 <__ashldi3+0x30>
   304a8:	1108d83a 	srl	r4,r2,r4
   304ac:	2986983a 	sll	r3,r5,r6
   304b0:	118c983a 	sll	r6,r2,r6
   304b4:	20c6b03a 	or	r3,r4,r3
   304b8:	3005883a 	mov	r2,r6
   304bc:	f800283a 	ret
   304c0:	0107c83a 	sub	r3,zero,r4
   304c4:	000d883a 	mov	r6,zero
   304c8:	10c6983a 	sll	r3,r2,r3
   304cc:	3005883a 	mov	r2,r6
   304d0:	003ffa06 	br	304bc <__ashldi3+0x2c>

000304d4 <__pack_f>:
   304d4:	21400017 	ldw	r5,0(r4)
   304d8:	01800044 	movi	r6,1
   304dc:	20c00317 	ldw	r3,12(r4)
   304e0:	21c00117 	ldw	r7,4(r4)
   304e4:	3140282e 	bgeu	r6,r5,30588 <__pack_f+0xb4>
   304e8:	00800104 	movi	r2,4
   304ec:	28802326 	beq	r5,r2,3057c <__pack_f+0xa8>
   304f0:	00800084 	movi	r2,2
   304f4:	28800f26 	beq	r5,r2,30534 <__pack_f+0x60>
   304f8:	18000e26 	beq	r3,zero,30534 <__pack_f+0x60>
   304fc:	21000217 	ldw	r4,8(r4)
   30500:	00bfe084 	movi	r2,-126
   30504:	20802616 	blt	r4,r2,305a0 <__pack_f+0xcc>
   30508:	00801fc4 	movi	r2,127
   3050c:	11001b16 	blt	r2,r4,3057c <__pack_f+0xa8>
   30510:	188a703a 	and	r5,r3,r2
   30514:	00801004 	movi	r2,64
   30518:	28801126 	beq	r5,r2,30560 <__pack_f+0x8c>
   3051c:	18c00fc4 	addi	r3,r3,63
   30520:	18001316 	blt	r3,zero,30570 <__pack_f+0x9c>
   30524:	21001fc4 	addi	r4,r4,127
   30528:	180690ba 	slli	r3,r3,2
   3052c:	1806d27a 	srli	r3,r3,9
   30530:	00000206 	br	3053c <__pack_f+0x68>
   30534:	0009883a 	mov	r4,zero
   30538:	0007883a 	mov	r3,zero
   3053c:	21003fcc 	andi	r4,r4,255
   30540:	200895fa 	slli	r4,r4,23
   30544:	380a97fa 	slli	r5,r7,31
   30548:	00802034 	movhi	r2,128
   3054c:	10bfffc4 	addi	r2,r2,-1
   30550:	1886703a 	and	r3,r3,r2
   30554:	1904b03a 	or	r2,r3,r4
   30558:	1144b03a 	or	r2,r2,r5
   3055c:	f800283a 	ret
   30560:	1880200c 	andi	r2,r3,128
   30564:	103fee26 	beq	r2,zero,30520 <__pack_f+0x4c>
   30568:	18c01004 	addi	r3,r3,64
   3056c:	183fed0e 	bge	r3,zero,30524 <__pack_f+0x50>
   30570:	1806d07a 	srli	r3,r3,1
   30574:	21002004 	addi	r4,r4,128
   30578:	003feb06 	br	30528 <__pack_f+0x54>
   3057c:	013fffc4 	movi	r4,-1
   30580:	0007883a 	mov	r3,zero
   30584:	003fed06 	br	3053c <__pack_f+0x68>
   30588:	18c00434 	orhi	r3,r3,16
   3058c:	00802034 	movhi	r2,128
   30590:	10bfffc4 	addi	r2,r2,-1
   30594:	1886703a 	and	r3,r3,r2
   30598:	013fffc4 	movi	r4,-1
   3059c:	003fe706 	br	3053c <__pack_f+0x68>
   305a0:	1105c83a 	sub	r2,r2,r4
   305a4:	01000644 	movi	r4,25
   305a8:	20801216 	blt	r4,r2,305f4 <__pack_f+0x120>
   305ac:	3088983a 	sll	r4,r6,r2
   305b0:	1884d83a 	srl	r2,r3,r2
   305b4:	213fffc4 	addi	r4,r4,-1
   305b8:	20c6703a 	and	r3,r4,r3
   305bc:	1806c03a 	cmpne	r3,r3,zero
   305c0:	1884b03a 	or	r2,r3,r2
   305c4:	11001fcc 	andi	r4,r2,127
   305c8:	00c01004 	movi	r3,64
   305cc:	20c00a1e 	bne	r4,r3,305f8 <__pack_f+0x124>
   305d0:	10c0200c 	andi	r3,r2,128
   305d4:	18000126 	beq	r3,zero,305dc <__pack_f+0x108>
   305d8:	10801004 	addi	r2,r2,64
   305dc:	100690ba 	slli	r3,r2,2
   305e0:	01100034 	movhi	r4,16384
   305e4:	1105403a 	cmpgeu	r2,r2,r4
   305e8:	1806d27a 	srli	r3,r3,9
   305ec:	1009883a 	mov	r4,r2
   305f0:	003fd206 	br	3053c <__pack_f+0x68>
   305f4:	0005883a 	mov	r2,zero
   305f8:	10800fc4 	addi	r2,r2,63
   305fc:	003ff706 	br	305dc <__pack_f+0x108>

00030600 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30600:	defffe04 	addi	sp,sp,-8
   30604:	dfc00115 	stw	ra,4(sp)
   30608:	df000015 	stw	fp,0(sp)
   3060c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30610:	008000f4 	movhi	r2,3
   30614:	1096c104 	addi	r2,r2,23300
   30618:	10800017 	ldw	r2,0(r2)
   3061c:	10000526 	beq	r2,zero,30634 <alt_get_errno+0x34>
   30620:	008000f4 	movhi	r2,3
   30624:	1096c104 	addi	r2,r2,23300
   30628:	10800017 	ldw	r2,0(r2)
   3062c:	103ee83a 	callr	r2
   30630:	00000206 	br	3063c <alt_get_errno+0x3c>
   30634:	008000f4 	movhi	r2,3
   30638:	109d9504 	addi	r2,r2,30292
}
   3063c:	e037883a 	mov	sp,fp
   30640:	dfc00117 	ldw	ra,4(sp)
   30644:	df000017 	ldw	fp,0(sp)
   30648:	dec00204 	addi	sp,sp,8
   3064c:	f800283a 	ret

00030650 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   30650:	defffb04 	addi	sp,sp,-20
   30654:	dfc00415 	stw	ra,16(sp)
   30658:	df000315 	stw	fp,12(sp)
   3065c:	df000304 	addi	fp,sp,12
   30660:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   30664:	e0bfff17 	ldw	r2,-4(fp)
   30668:	10000716 	blt	r2,zero,30688 <close+0x38>
   3066c:	e13fff17 	ldw	r4,-4(fp)
   30670:	01400304 	movi	r5,12
   30674:	00211880 	call	21188 <__mulsi3>
   30678:	00c000f4 	movhi	r3,3
   3067c:	18d23404 	addi	r3,r3,18640
   30680:	10c5883a 	add	r2,r2,r3
   30684:	00000106 	br	3068c <close+0x3c>
   30688:	0005883a 	mov	r2,zero
   3068c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   30690:	e0bffd17 	ldw	r2,-12(fp)
   30694:	10001826 	beq	r2,zero,306f8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   30698:	e0bffd17 	ldw	r2,-12(fp)
   3069c:	10800017 	ldw	r2,0(r2)
   306a0:	10800417 	ldw	r2,16(r2)
   306a4:	10000626 	beq	r2,zero,306c0 <close+0x70>
   306a8:	e0bffd17 	ldw	r2,-12(fp)
   306ac:	10800017 	ldw	r2,0(r2)
   306b0:	10800417 	ldw	r2,16(r2)
   306b4:	e13ffd17 	ldw	r4,-12(fp)
   306b8:	103ee83a 	callr	r2
   306bc:	00000106 	br	306c4 <close+0x74>
   306c0:	0005883a 	mov	r2,zero
   306c4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   306c8:	e13fff17 	ldw	r4,-4(fp)
   306cc:	0030fe00 	call	30fe0 <alt_release_fd>
    if (rval < 0)
   306d0:	e0bffe17 	ldw	r2,-8(fp)
   306d4:	1000060e 	bge	r2,zero,306f0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   306d8:	00306000 	call	30600 <alt_get_errno>
   306dc:	e0fffe17 	ldw	r3,-8(fp)
   306e0:	00c7c83a 	sub	r3,zero,r3
   306e4:	10c00015 	stw	r3,0(r2)
      return -1;
   306e8:	00bfffc4 	movi	r2,-1
   306ec:	00000606 	br	30708 <close+0xb8>
    }
    return 0;
   306f0:	0005883a 	mov	r2,zero
   306f4:	00000406 	br	30708 <close+0xb8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   306f8:	00306000 	call	30600 <alt_get_errno>
   306fc:	00c01444 	movi	r3,81
   30700:	10c00015 	stw	r3,0(r2)
    return -1;
   30704:	00bfffc4 	movi	r2,-1
  }
}
   30708:	e037883a 	mov	sp,fp
   3070c:	dfc00117 	ldw	ra,4(sp)
   30710:	df000017 	ldw	fp,0(sp)
   30714:	dec00204 	addi	sp,sp,8
   30718:	f800283a 	ret

0003071c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   3071c:	defffc04 	addi	sp,sp,-16
   30720:	df000315 	stw	fp,12(sp)
   30724:	df000304 	addi	fp,sp,12
   30728:	e13ffd15 	stw	r4,-12(fp)
   3072c:	e17ffe15 	stw	r5,-8(fp)
   30730:	e1bfff15 	stw	r6,-4(fp)
  return len;
   30734:	e0bfff17 	ldw	r2,-4(fp)
}
   30738:	e037883a 	mov	sp,fp
   3073c:	df000017 	ldw	fp,0(sp)
   30740:	dec00104 	addi	sp,sp,4
   30744:	f800283a 	ret

00030748 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30748:	defffe04 	addi	sp,sp,-8
   3074c:	dfc00115 	stw	ra,4(sp)
   30750:	df000015 	stw	fp,0(sp)
   30754:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30758:	008000f4 	movhi	r2,3
   3075c:	1096c104 	addi	r2,r2,23300
   30760:	10800017 	ldw	r2,0(r2)
   30764:	10000526 	beq	r2,zero,3077c <alt_get_errno+0x34>
   30768:	008000f4 	movhi	r2,3
   3076c:	1096c104 	addi	r2,r2,23300
   30770:	10800017 	ldw	r2,0(r2)
   30774:	103ee83a 	callr	r2
   30778:	00000206 	br	30784 <alt_get_errno+0x3c>
   3077c:	008000f4 	movhi	r2,3
   30780:	109d9504 	addi	r2,r2,30292
}
   30784:	e037883a 	mov	sp,fp
   30788:	dfc00117 	ldw	ra,4(sp)
   3078c:	df000017 	ldw	fp,0(sp)
   30790:	dec00204 	addi	sp,sp,8
   30794:	f800283a 	ret

00030798 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   30798:	defffb04 	addi	sp,sp,-20
   3079c:	dfc00415 	stw	ra,16(sp)
   307a0:	df000315 	stw	fp,12(sp)
   307a4:	df000304 	addi	fp,sp,12
   307a8:	e13ffe15 	stw	r4,-8(fp)
   307ac:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   307b0:	e0bffe17 	ldw	r2,-8(fp)
   307b4:	10000716 	blt	r2,zero,307d4 <fstat+0x3c>
   307b8:	e13ffe17 	ldw	r4,-8(fp)
   307bc:	01400304 	movi	r5,12
   307c0:	00211880 	call	21188 <__mulsi3>
   307c4:	00c000f4 	movhi	r3,3
   307c8:	18d23404 	addi	r3,r3,18640
   307cc:	10c5883a 	add	r2,r2,r3
   307d0:	00000106 	br	307d8 <fstat+0x40>
   307d4:	0005883a 	mov	r2,zero
   307d8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   307dc:	e0bffd17 	ldw	r2,-12(fp)
   307e0:	10001026 	beq	r2,zero,30824 <fstat+0x8c>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   307e4:	e0bffd17 	ldw	r2,-12(fp)
   307e8:	10800017 	ldw	r2,0(r2)
   307ec:	10800817 	ldw	r2,32(r2)
   307f0:	10000726 	beq	r2,zero,30810 <fstat+0x78>
    {
      return fd->dev->fstat(fd, st);
   307f4:	e0bffd17 	ldw	r2,-12(fp)
   307f8:	10800017 	ldw	r2,0(r2)
   307fc:	10800817 	ldw	r2,32(r2)
   30800:	e13ffd17 	ldw	r4,-12(fp)
   30804:	e17fff17 	ldw	r5,-4(fp)
   30808:	103ee83a 	callr	r2
   3080c:	00000906 	br	30834 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   30810:	e0bfff17 	ldw	r2,-4(fp)
   30814:	00c80004 	movi	r3,8192
   30818:	10c00115 	stw	r3,4(r2)
      return 0;
   3081c:	0005883a 	mov	r2,zero
   30820:	00000406 	br	30834 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30824:	00307480 	call	30748 <alt_get_errno>
   30828:	00c01444 	movi	r3,81
   3082c:	10c00015 	stw	r3,0(r2)
    return -1;
   30830:	00bfffc4 	movi	r2,-1
  }
}
   30834:	e037883a 	mov	sp,fp
   30838:	dfc00117 	ldw	ra,4(sp)
   3083c:	df000017 	ldw	fp,0(sp)
   30840:	dec00204 	addi	sp,sp,8
   30844:	f800283a 	ret

00030848 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30848:	defffe04 	addi	sp,sp,-8
   3084c:	dfc00115 	stw	ra,4(sp)
   30850:	df000015 	stw	fp,0(sp)
   30854:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30858:	008000f4 	movhi	r2,3
   3085c:	1096c104 	addi	r2,r2,23300
   30860:	10800017 	ldw	r2,0(r2)
   30864:	10000526 	beq	r2,zero,3087c <alt_get_errno+0x34>
   30868:	008000f4 	movhi	r2,3
   3086c:	1096c104 	addi	r2,r2,23300
   30870:	10800017 	ldw	r2,0(r2)
   30874:	103ee83a 	callr	r2
   30878:	00000206 	br	30884 <alt_get_errno+0x3c>
   3087c:	008000f4 	movhi	r2,3
   30880:	109d9504 	addi	r2,r2,30292
}
   30884:	e037883a 	mov	sp,fp
   30888:	dfc00117 	ldw	ra,4(sp)
   3088c:	df000017 	ldw	fp,0(sp)
   30890:	dec00204 	addi	sp,sp,8
   30894:	f800283a 	ret

00030898 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   30898:	deffed04 	addi	sp,sp,-76
   3089c:	dfc01215 	stw	ra,72(sp)
   308a0:	df001115 	stw	fp,68(sp)
   308a4:	df001104 	addi	fp,sp,68
   308a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   308ac:	e0bfff17 	ldw	r2,-4(fp)
   308b0:	10000716 	blt	r2,zero,308d0 <isatty+0x38>
   308b4:	e13fff17 	ldw	r4,-4(fp)
   308b8:	01400304 	movi	r5,12
   308bc:	00211880 	call	21188 <__mulsi3>
   308c0:	00c000f4 	movhi	r3,3
   308c4:	18d23404 	addi	r3,r3,18640
   308c8:	10c5883a 	add	r2,r2,r3
   308cc:	00000106 	br	308d4 <isatty+0x3c>
   308d0:	0005883a 	mov	r2,zero
   308d4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   308d8:	e0bfef17 	ldw	r2,-68(fp)
   308dc:	10000e26 	beq	r2,zero,30918 <isatty+0x80>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   308e0:	e0bfef17 	ldw	r2,-68(fp)
   308e4:	10800017 	ldw	r2,0(r2)
   308e8:	10800817 	ldw	r2,32(r2)
   308ec:	1000021e 	bne	r2,zero,308f8 <isatty+0x60>
    {
      return 1;
   308f0:	00800044 	movi	r2,1
   308f4:	00000c06 	br	30928 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   308f8:	e0bff004 	addi	r2,fp,-64
   308fc:	e13fff17 	ldw	r4,-4(fp)
   30900:	100b883a 	mov	r5,r2
   30904:	00307980 	call	30798 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   30908:	e0bff117 	ldw	r2,-60(fp)
   3090c:	10880020 	cmpeqi	r2,r2,8192
   30910:	10803fcc 	andi	r2,r2,255
   30914:	00000406 	br	30928 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30918:	00308480 	call	30848 <alt_get_errno>
   3091c:	00c01444 	movi	r3,81
   30920:	10c00015 	stw	r3,0(r2)
    return 0;
   30924:	0005883a 	mov	r2,zero
  }
}
   30928:	e037883a 	mov	sp,fp
   3092c:	dfc00117 	ldw	ra,4(sp)
   30930:	df000017 	ldw	fp,0(sp)
   30934:	dec00204 	addi	sp,sp,8
   30938:	f800283a 	ret

0003093c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   3093c:	defffc04 	addi	sp,sp,-16
   30940:	df000315 	stw	fp,12(sp)
   30944:	df000304 	addi	fp,sp,12
   30948:	e13ffd15 	stw	r4,-12(fp)
   3094c:	e17ffe15 	stw	r5,-8(fp)
   30950:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   30954:	e0fffe17 	ldw	r3,-8(fp)
   30958:	e0bffd17 	ldw	r2,-12(fp)
   3095c:	18800e26 	beq	r3,r2,30998 <alt_load_section+0x5c>
  {
    while( to != end )
   30960:	00000a06 	br	3098c <alt_load_section+0x50>
    {
      *to++ = *from++;
   30964:	e0bffd17 	ldw	r2,-12(fp)
   30968:	10c00017 	ldw	r3,0(r2)
   3096c:	e0bffe17 	ldw	r2,-8(fp)
   30970:	10c00015 	stw	r3,0(r2)
   30974:	e0bffe17 	ldw	r2,-8(fp)
   30978:	10800104 	addi	r2,r2,4
   3097c:	e0bffe15 	stw	r2,-8(fp)
   30980:	e0bffd17 	ldw	r2,-12(fp)
   30984:	10800104 	addi	r2,r2,4
   30988:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   3098c:	e0fffe17 	ldw	r3,-8(fp)
   30990:	e0bfff17 	ldw	r2,-4(fp)
   30994:	18bff31e 	bne	r3,r2,30964 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   30998:	e037883a 	mov	sp,fp
   3099c:	df000017 	ldw	fp,0(sp)
   309a0:	dec00104 	addi	sp,sp,4
   309a4:	f800283a 	ret

000309a8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   309a8:	defffe04 	addi	sp,sp,-8
   309ac:	dfc00115 	stw	ra,4(sp)
   309b0:	df000015 	stw	fp,0(sp)
   309b4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   309b8:	010000f4 	movhi	r4,3
   309bc:	2116d804 	addi	r4,r4,23392
   309c0:	014000f4 	movhi	r5,3
   309c4:	29501b04 	addi	r5,r5,16492
   309c8:	018000f4 	movhi	r6,3
   309cc:	3196d804 	addi	r6,r6,23392
   309d0:	003093c0 	call	3093c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   309d4:	010000b4 	movhi	r4,2
   309d8:	21000804 	addi	r4,r4,32
   309dc:	014000b4 	movhi	r5,2
   309e0:	29400804 	addi	r5,r5,32
   309e4:	018000b4 	movhi	r6,2
   309e8:	31806e04 	addi	r6,r6,440
   309ec:	003093c0 	call	3093c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   309f0:	010000f4 	movhi	r4,3
   309f4:	210e6104 	addi	r4,r4,14724
   309f8:	014000f4 	movhi	r5,3
   309fc:	294e6104 	addi	r5,r5,14724
   30a00:	018000f4 	movhi	r6,3
   30a04:	31901b04 	addi	r6,r6,16492
   30a08:	003093c0 	call	3093c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   30a0c:	0032af80 	call	32af8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   30a10:	0032fb80 	call	32fb8 <alt_icache_flush_all>
}
   30a14:	e037883a 	mov	sp,fp
   30a18:	dfc00117 	ldw	ra,4(sp)
   30a1c:	df000017 	ldw	fp,0(sp)
   30a20:	dec00204 	addi	sp,sp,8
   30a24:	f800283a 	ret

00030a28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30a28:	defffe04 	addi	sp,sp,-8
   30a2c:	dfc00115 	stw	ra,4(sp)
   30a30:	df000015 	stw	fp,0(sp)
   30a34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30a38:	008000f4 	movhi	r2,3
   30a3c:	1096c104 	addi	r2,r2,23300
   30a40:	10800017 	ldw	r2,0(r2)
   30a44:	10000526 	beq	r2,zero,30a5c <alt_get_errno+0x34>
   30a48:	008000f4 	movhi	r2,3
   30a4c:	1096c104 	addi	r2,r2,23300
   30a50:	10800017 	ldw	r2,0(r2)
   30a54:	103ee83a 	callr	r2
   30a58:	00000206 	br	30a64 <alt_get_errno+0x3c>
   30a5c:	008000f4 	movhi	r2,3
   30a60:	109d9504 	addi	r2,r2,30292
}
   30a64:	e037883a 	mov	sp,fp
   30a68:	dfc00117 	ldw	ra,4(sp)
   30a6c:	df000017 	ldw	fp,0(sp)
   30a70:	dec00204 	addi	sp,sp,8
   30a74:	f800283a 	ret

00030a78 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   30a78:	defff904 	addi	sp,sp,-28
   30a7c:	dfc00615 	stw	ra,24(sp)
   30a80:	df000515 	stw	fp,20(sp)
   30a84:	df000504 	addi	fp,sp,20
   30a88:	e13ffd15 	stw	r4,-12(fp)
   30a8c:	e17ffe15 	stw	r5,-8(fp)
   30a90:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   30a94:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   30a98:	e0bffd17 	ldw	r2,-12(fp)
   30a9c:	10000716 	blt	r2,zero,30abc <lseek+0x44>
   30aa0:	e13ffd17 	ldw	r4,-12(fp)
   30aa4:	01400304 	movi	r5,12
   30aa8:	00211880 	call	21188 <__mulsi3>
   30aac:	00c000f4 	movhi	r3,3
   30ab0:	18d23404 	addi	r3,r3,18640
   30ab4:	10c5883a 	add	r2,r2,r3
   30ab8:	00000106 	br	30ac0 <lseek+0x48>
   30abc:	0005883a 	mov	r2,zero
   30ac0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   30ac4:	e0bffc17 	ldw	r2,-16(fp)
   30ac8:	10001026 	beq	r2,zero,30b0c <lseek+0x94>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   30acc:	e0bffc17 	ldw	r2,-16(fp)
   30ad0:	10800017 	ldw	r2,0(r2)
   30ad4:	10800717 	ldw	r2,28(r2)
   30ad8:	10000926 	beq	r2,zero,30b00 <lseek+0x88>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   30adc:	e0bffc17 	ldw	r2,-16(fp)
   30ae0:	10800017 	ldw	r2,0(r2)
   30ae4:	10800717 	ldw	r2,28(r2)
   30ae8:	e13ffc17 	ldw	r4,-16(fp)
   30aec:	e17ffe17 	ldw	r5,-8(fp)
   30af0:	e1bfff17 	ldw	r6,-4(fp)
   30af4:	103ee83a 	callr	r2
   30af8:	e0bffb15 	stw	r2,-20(fp)
   30afc:	00000506 	br	30b14 <lseek+0x9c>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   30b00:	00bfde84 	movi	r2,-134
   30b04:	e0bffb15 	stw	r2,-20(fp)
   30b08:	00000206 	br	30b14 <lseek+0x9c>
    }
  }
  else  
  {
    rc = -EBADFD;
   30b0c:	00bfebc4 	movi	r2,-81
   30b10:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   30b14:	e0bffb17 	ldw	r2,-20(fp)
   30b18:	1000060e 	bge	r2,zero,30b34 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   30b1c:	0030a280 	call	30a28 <alt_get_errno>
   30b20:	e0fffb17 	ldw	r3,-20(fp)
   30b24:	00c7c83a 	sub	r3,zero,r3
   30b28:	10c00015 	stw	r3,0(r2)
    rc = -1;
   30b2c:	00bfffc4 	movi	r2,-1
   30b30:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   30b34:	e0bffb17 	ldw	r2,-20(fp)
}
   30b38:	e037883a 	mov	sp,fp
   30b3c:	dfc00117 	ldw	ra,4(sp)
   30b40:	df000017 	ldw	fp,0(sp)
   30b44:	dec00204 	addi	sp,sp,8
   30b48:	f800283a 	ret

00030b4c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   30b4c:	defffd04 	addi	sp,sp,-12
   30b50:	dfc00215 	stw	ra,8(sp)
   30b54:	df000115 	stw	fp,4(sp)
   30b58:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   30b5c:	0009883a 	mov	r4,zero
   30b60:	00312880 	call	31288 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   30b64:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   30b68:	00312bc0 	call	312bc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   30b6c:	010000f4 	movhi	r4,3
   30b70:	21101004 	addi	r4,r4,16448
   30b74:	014000f4 	movhi	r5,3
   30b78:	29501004 	addi	r5,r5,16448
   30b7c:	018000f4 	movhi	r6,3
   30b80:	31901004 	addi	r6,r6,16448
   30b84:	003337c0 	call	3337c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   30b88:	0032c040 	call	32c04 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   30b8c:	010000f4 	movhi	r4,3
   30b90:	210b1804 	addi	r4,r4,11360
   30b94:	00335b00 	call	335b0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   30b98:	d126e617 	ldw	r4,-25704(gp)
   30b9c:	d0e6e717 	ldw	r3,-25700(gp)
   30ba0:	d0a6e817 	ldw	r2,-25696(gp)
   30ba4:	180b883a 	mov	r5,r3
   30ba8:	100d883a 	mov	r6,r2
   30bac:	00210400 	call	21040 <main>
   30bb0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   30bb4:	01000044 	movi	r4,1
   30bb8:	00306500 	call	30650 <close>
  exit (result);
   30bbc:	e13fff17 	ldw	r4,-4(fp)
   30bc0:	00335c40 	call	335c4 <exit>

00030bc4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   30bc4:	defffe04 	addi	sp,sp,-8
   30bc8:	df000115 	stw	fp,4(sp)
   30bcc:	df000104 	addi	fp,sp,4
   30bd0:	e13fff15 	stw	r4,-4(fp)
}
   30bd4:	e037883a 	mov	sp,fp
   30bd8:	df000017 	ldw	fp,0(sp)
   30bdc:	dec00104 	addi	sp,sp,4
   30be0:	f800283a 	ret

00030be4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   30be4:	defffe04 	addi	sp,sp,-8
   30be8:	df000115 	stw	fp,4(sp)
   30bec:	df000104 	addi	fp,sp,4
   30bf0:	e13fff15 	stw	r4,-4(fp)
}
   30bf4:	e037883a 	mov	sp,fp
   30bf8:	df000017 	ldw	fp,0(sp)
   30bfc:	dec00104 	addi	sp,sp,4
   30c00:	f800283a 	ret

00030c04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30c04:	defffe04 	addi	sp,sp,-8
   30c08:	dfc00115 	stw	ra,4(sp)
   30c0c:	df000015 	stw	fp,0(sp)
   30c10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30c14:	008000f4 	movhi	r2,3
   30c18:	1096c104 	addi	r2,r2,23300
   30c1c:	10800017 	ldw	r2,0(r2)
   30c20:	10000526 	beq	r2,zero,30c38 <alt_get_errno+0x34>
   30c24:	008000f4 	movhi	r2,3
   30c28:	1096c104 	addi	r2,r2,23300
   30c2c:	10800017 	ldw	r2,0(r2)
   30c30:	103ee83a 	callr	r2
   30c34:	00000206 	br	30c40 <alt_get_errno+0x3c>
   30c38:	008000f4 	movhi	r2,3
   30c3c:	109d9504 	addi	r2,r2,30292
}
   30c40:	e037883a 	mov	sp,fp
   30c44:	dfc00117 	ldw	ra,4(sp)
   30c48:	df000017 	ldw	fp,0(sp)
   30c4c:	dec00204 	addi	sp,sp,8
   30c50:	f800283a 	ret

00030c54 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   30c54:	defffb04 	addi	sp,sp,-20
   30c58:	dfc00415 	stw	ra,16(sp)
   30c5c:	df000315 	stw	fp,12(sp)
   30c60:	dc000215 	stw	r16,8(sp)
   30c64:	df000204 	addi	fp,sp,8
   30c68:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   30c6c:	e0bfff17 	ldw	r2,-4(fp)
   30c70:	10800217 	ldw	r2,8(r2)
   30c74:	10d00034 	orhi	r3,r2,16384
   30c78:	e0bfff17 	ldw	r2,-4(fp)
   30c7c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   30c80:	e03ffe15 	stw	zero,-8(fp)
   30c84:	00002206 	br	30d10 <alt_file_locked+0xbc>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   30c88:	040000f4 	movhi	r16,3
   30c8c:	84123404 	addi	r16,r16,18640
   30c90:	e0bffe17 	ldw	r2,-8(fp)
   30c94:	1009883a 	mov	r4,r2
   30c98:	01400304 	movi	r5,12
   30c9c:	00211880 	call	21188 <__mulsi3>
   30ca0:	8085883a 	add	r2,r16,r2
   30ca4:	10c00017 	ldw	r3,0(r2)
   30ca8:	e0bfff17 	ldw	r2,-4(fp)
   30cac:	10800017 	ldw	r2,0(r2)
   30cb0:	1880141e 	bne	r3,r2,30d04 <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   30cb4:	040000f4 	movhi	r16,3
   30cb8:	84123404 	addi	r16,r16,18640
   30cbc:	e0bffe17 	ldw	r2,-8(fp)
   30cc0:	1009883a 	mov	r4,r2
   30cc4:	01400304 	movi	r5,12
   30cc8:	00211880 	call	21188 <__mulsi3>
   30ccc:	8085883a 	add	r2,r16,r2
   30cd0:	10800204 	addi	r2,r2,8
   30cd4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   30cd8:	10000a0e 	bge	r2,zero,30d04 <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   30cdc:	e13ffe17 	ldw	r4,-8(fp)
   30ce0:	01400304 	movi	r5,12
   30ce4:	00211880 	call	21188 <__mulsi3>
   30ce8:	00c000f4 	movhi	r3,3
   30cec:	18d23404 	addi	r3,r3,18640
   30cf0:	10c7883a 	add	r3,r2,r3
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   30cf4:	e0bfff17 	ldw	r2,-4(fp)
   30cf8:	18800226 	beq	r3,r2,30d04 <alt_file_locked+0xb0>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   30cfc:	00bffcc4 	movi	r2,-13
   30d00:	00000a06 	br	30d2c <alt_file_locked+0xd8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   30d04:	e0bffe17 	ldw	r2,-8(fp)
   30d08:	10800044 	addi	r2,r2,1
   30d0c:	e0bffe15 	stw	r2,-8(fp)
   30d10:	008000f4 	movhi	r2,3
   30d14:	1096c004 	addi	r2,r2,23296
   30d18:	10800017 	ldw	r2,0(r2)
   30d1c:	1007883a 	mov	r3,r2
   30d20:	e0bffe17 	ldw	r2,-8(fp)
   30d24:	18bfd82e 	bgeu	r3,r2,30c88 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   30d28:	0005883a 	mov	r2,zero
}
   30d2c:	e037883a 	mov	sp,fp
   30d30:	dfc00217 	ldw	ra,8(sp)
   30d34:	df000117 	ldw	fp,4(sp)
   30d38:	dc000017 	ldw	r16,0(sp)
   30d3c:	dec00304 	addi	sp,sp,12
   30d40:	f800283a 	ret

00030d44 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   30d44:	defff604 	addi	sp,sp,-40
   30d48:	dfc00915 	stw	ra,36(sp)
   30d4c:	df000815 	stw	fp,32(sp)
   30d50:	df000804 	addi	fp,sp,32
   30d54:	e13ffd15 	stw	r4,-12(fp)
   30d58:	e17ffe15 	stw	r5,-8(fp)
   30d5c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   30d60:	00bfffc4 	movi	r2,-1
   30d64:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   30d68:	00bffb44 	movi	r2,-19
   30d6c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   30d70:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   30d74:	e13ffd17 	ldw	r4,-12(fp)
   30d78:	014000f4 	movhi	r5,3
   30d7c:	2956be04 	addi	r5,r5,23288
   30d80:	0032cbc0 	call	32cbc <alt_find_dev>
   30d84:	e0bff815 	stw	r2,-32(fp)
   30d88:	e0bff817 	ldw	r2,-32(fp)
   30d8c:	1000051e 	bne	r2,zero,30da4 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   30d90:	e13ffd17 	ldw	r4,-12(fp)
   30d94:	0032d4c0 	call	32d4c <alt_find_file>
   30d98:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   30d9c:	00800044 	movi	r2,1
   30da0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   30da4:	e0bff817 	ldw	r2,-32(fp)
   30da8:	10002a26 	beq	r2,zero,30e54 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   30dac:	e13ff817 	ldw	r4,-32(fp)
   30db0:	0032ee40 	call	32ee4 <alt_get_fd>
   30db4:	e0bff915 	stw	r2,-28(fp)
   30db8:	e0bff917 	ldw	r2,-28(fp)
   30dbc:	1000030e 	bge	r2,zero,30dcc <open+0x88>
    {
      status = index;
   30dc0:	e0bff917 	ldw	r2,-28(fp)
   30dc4:	e0bffa15 	stw	r2,-24(fp)
   30dc8:	00002406 	br	30e5c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   30dcc:	e13ff917 	ldw	r4,-28(fp)
   30dd0:	01400304 	movi	r5,12
   30dd4:	00211880 	call	21188 <__mulsi3>
   30dd8:	00c000f4 	movhi	r3,3
   30ddc:	18d23404 	addi	r3,r3,18640
   30de0:	10c5883a 	add	r2,r2,r3
   30de4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   30de8:	e0fffe17 	ldw	r3,-8(fp)
   30dec:	00900034 	movhi	r2,16384
   30df0:	10bfffc4 	addi	r2,r2,-1
   30df4:	1886703a 	and	r3,r3,r2
   30df8:	e0bffc17 	ldw	r2,-16(fp)
   30dfc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   30e00:	e0bffb17 	ldw	r2,-20(fp)
   30e04:	1000051e 	bne	r2,zero,30e1c <open+0xd8>
   30e08:	e13ffc17 	ldw	r4,-16(fp)
   30e0c:	0030c540 	call	30c54 <alt_file_locked>
   30e10:	e0bffa15 	stw	r2,-24(fp)
   30e14:	e0bffa17 	ldw	r2,-24(fp)
   30e18:	10001016 	blt	r2,zero,30e5c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   30e1c:	e0bff817 	ldw	r2,-32(fp)
   30e20:	10800317 	ldw	r2,12(r2)
   30e24:	10000826 	beq	r2,zero,30e48 <open+0x104>
   30e28:	e0bff817 	ldw	r2,-32(fp)
   30e2c:	10800317 	ldw	r2,12(r2)
   30e30:	e13ffc17 	ldw	r4,-16(fp)
   30e34:	e17ffd17 	ldw	r5,-12(fp)
   30e38:	e1bffe17 	ldw	r6,-8(fp)
   30e3c:	e1ffff17 	ldw	r7,-4(fp)
   30e40:	103ee83a 	callr	r2
   30e44:	00000106 	br	30e4c <open+0x108>
   30e48:	0005883a 	mov	r2,zero
   30e4c:	e0bffa15 	stw	r2,-24(fp)
   30e50:	00000206 	br	30e5c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   30e54:	00bffb44 	movi	r2,-19
   30e58:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   30e5c:	e0bffa17 	ldw	r2,-24(fp)
   30e60:	1000080e 	bge	r2,zero,30e84 <open+0x140>
  {
    alt_release_fd (index);  
   30e64:	e13ff917 	ldw	r4,-28(fp)
   30e68:	0030fe00 	call	30fe0 <alt_release_fd>
    ALT_ERRNO = -status;
   30e6c:	0030c040 	call	30c04 <alt_get_errno>
   30e70:	e0fffa17 	ldw	r3,-24(fp)
   30e74:	00c7c83a 	sub	r3,zero,r3
   30e78:	10c00015 	stw	r3,0(r2)
    return -1;
   30e7c:	00bfffc4 	movi	r2,-1
   30e80:	00000106 	br	30e88 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
   30e84:	e0bff917 	ldw	r2,-28(fp)
}
   30e88:	e037883a 	mov	sp,fp
   30e8c:	dfc00117 	ldw	ra,4(sp)
   30e90:	df000017 	ldw	fp,0(sp)
   30e94:	dec00204 	addi	sp,sp,8
   30e98:	f800283a 	ret

00030e9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30e9c:	defffe04 	addi	sp,sp,-8
   30ea0:	dfc00115 	stw	ra,4(sp)
   30ea4:	df000015 	stw	fp,0(sp)
   30ea8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30eac:	008000f4 	movhi	r2,3
   30eb0:	1096c104 	addi	r2,r2,23300
   30eb4:	10800017 	ldw	r2,0(r2)
   30eb8:	10000526 	beq	r2,zero,30ed0 <alt_get_errno+0x34>
   30ebc:	008000f4 	movhi	r2,3
   30ec0:	1096c104 	addi	r2,r2,23300
   30ec4:	10800017 	ldw	r2,0(r2)
   30ec8:	103ee83a 	callr	r2
   30ecc:	00000206 	br	30ed8 <alt_get_errno+0x3c>
   30ed0:	008000f4 	movhi	r2,3
   30ed4:	109d9504 	addi	r2,r2,30292
}
   30ed8:	e037883a 	mov	sp,fp
   30edc:	dfc00117 	ldw	ra,4(sp)
   30ee0:	df000017 	ldw	fp,0(sp)
   30ee4:	dec00204 	addi	sp,sp,8
   30ee8:	f800283a 	ret

00030eec <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   30eec:	defff904 	addi	sp,sp,-28
   30ef0:	dfc00615 	stw	ra,24(sp)
   30ef4:	df000515 	stw	fp,20(sp)
   30ef8:	df000504 	addi	fp,sp,20
   30efc:	e13ffd15 	stw	r4,-12(fp)
   30f00:	e17ffe15 	stw	r5,-8(fp)
   30f04:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   30f08:	e0bffd17 	ldw	r2,-12(fp)
   30f0c:	10000716 	blt	r2,zero,30f2c <read+0x40>
   30f10:	e13ffd17 	ldw	r4,-12(fp)
   30f14:	01400304 	movi	r5,12
   30f18:	00211880 	call	21188 <__mulsi3>
   30f1c:	00c000f4 	movhi	r3,3
   30f20:	18d23404 	addi	r3,r3,18640
   30f24:	10c5883a 	add	r2,r2,r3
   30f28:	00000106 	br	30f30 <read+0x44>
   30f2c:	0005883a 	mov	r2,zero
   30f30:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   30f34:	e0bffb17 	ldw	r2,-20(fp)
   30f38:	10002026 	beq	r2,zero,30fbc <read+0xd0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   30f3c:	e0bffb17 	ldw	r2,-20(fp)
   30f40:	10800217 	ldw	r2,8(r2)
   30f44:	108000cc 	andi	r2,r2,3
   30f48:	10800060 	cmpeqi	r2,r2,1
   30f4c:	1000171e 	bne	r2,zero,30fac <read+0xc0>
        (fd->dev->read))
   30f50:	e0bffb17 	ldw	r2,-20(fp)
   30f54:	10800017 	ldw	r2,0(r2)
   30f58:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   30f5c:	10001326 	beq	r2,zero,30fac <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   30f60:	e0bffb17 	ldw	r2,-20(fp)
   30f64:	10800017 	ldw	r2,0(r2)
   30f68:	10c00517 	ldw	r3,20(r2)
   30f6c:	e0bfff17 	ldw	r2,-4(fp)
   30f70:	e13ffb17 	ldw	r4,-20(fp)
   30f74:	e17ffe17 	ldw	r5,-8(fp)
   30f78:	100d883a 	mov	r6,r2
   30f7c:	183ee83a 	callr	r3
   30f80:	e0bffc15 	stw	r2,-16(fp)
   30f84:	e0bffc17 	ldw	r2,-16(fp)
   30f88:	1000060e 	bge	r2,zero,30fa4 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   30f8c:	0030e9c0 	call	30e9c <alt_get_errno>
   30f90:	e0fffc17 	ldw	r3,-16(fp)
   30f94:	00c7c83a 	sub	r3,zero,r3
   30f98:	10c00015 	stw	r3,0(r2)
          return -1;
   30f9c:	00bfffc4 	movi	r2,-1
   30fa0:	00000a06 	br	30fcc <read+0xe0>
        }
        return rval;
   30fa4:	e0bffc17 	ldw	r2,-16(fp)
   30fa8:	00000806 	br	30fcc <read+0xe0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   30fac:	0030e9c0 	call	30e9c <alt_get_errno>
   30fb0:	00c00344 	movi	r3,13
   30fb4:	10c00015 	stw	r3,0(r2)
   30fb8:	00000306 	br	30fc8 <read+0xdc>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   30fbc:	0030e9c0 	call	30e9c <alt_get_errno>
   30fc0:	00c01444 	movi	r3,81
   30fc4:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   30fc8:	00bfffc4 	movi	r2,-1
}
   30fcc:	e037883a 	mov	sp,fp
   30fd0:	dfc00117 	ldw	ra,4(sp)
   30fd4:	df000017 	ldw	fp,0(sp)
   30fd8:	dec00204 	addi	sp,sp,8
   30fdc:	f800283a 	ret

00030fe0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   30fe0:	defffc04 	addi	sp,sp,-16
   30fe4:	dfc00315 	stw	ra,12(sp)
   30fe8:	df000215 	stw	fp,8(sp)
   30fec:	dc000115 	stw	r16,4(sp)
   30ff0:	df000104 	addi	fp,sp,4
   30ff4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   30ff8:	e0bfff17 	ldw	r2,-4(fp)
   30ffc:	108000d0 	cmplti	r2,r2,3
   31000:	1000111e 	bne	r2,zero,31048 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   31004:	040000f4 	movhi	r16,3
   31008:	84123404 	addi	r16,r16,18640
   3100c:	e0bfff17 	ldw	r2,-4(fp)
   31010:	1009883a 	mov	r4,r2
   31014:	01400304 	movi	r5,12
   31018:	00211880 	call	21188 <__mulsi3>
   3101c:	8085883a 	add	r2,r16,r2
   31020:	10800204 	addi	r2,r2,8
   31024:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   31028:	040000f4 	movhi	r16,3
   3102c:	84123404 	addi	r16,r16,18640
   31030:	e0bfff17 	ldw	r2,-4(fp)
   31034:	1009883a 	mov	r4,r2
   31038:	01400304 	movi	r5,12
   3103c:	00211880 	call	21188 <__mulsi3>
   31040:	8085883a 	add	r2,r16,r2
   31044:	10000015 	stw	zero,0(r2)
  }
}
   31048:	e037883a 	mov	sp,fp
   3104c:	dfc00217 	ldw	ra,8(sp)
   31050:	df000117 	ldw	fp,4(sp)
   31054:	dc000017 	ldw	r16,0(sp)
   31058:	dec00304 	addi	sp,sp,12
   3105c:	f800283a 	ret

00031060 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   31060:	defff904 	addi	sp,sp,-28
   31064:	df000615 	stw	fp,24(sp)
   31068:	df000604 	addi	fp,sp,24
   3106c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31070:	0005303a 	rdctl	r2,status
   31074:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31078:	e0fffc17 	ldw	r3,-16(fp)
   3107c:	00bfff84 	movi	r2,-2
   31080:	1884703a 	and	r2,r3,r2
   31084:	1001703a 	wrctl	status,r2
  
  return context;
   31088:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   3108c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   31090:	d0a00c17 	ldw	r2,-32720(gp)
   31094:	10c000c4 	addi	r3,r2,3
   31098:	00bfff04 	movi	r2,-4
   3109c:	1884703a 	and	r2,r3,r2
   310a0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   310a4:	d0e00c17 	ldw	r3,-32720(gp)
   310a8:	e0bfff17 	ldw	r2,-4(fp)
   310ac:	1885883a 	add	r2,r3,r2
   310b0:	00c00134 	movhi	r3,4
   310b4:	18c00004 	addi	r3,r3,0
   310b8:	1880062e 	bgeu	r3,r2,310d4 <sbrk+0x74>
   310bc:	e0bffa17 	ldw	r2,-24(fp)
   310c0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   310c4:	e0bffd17 	ldw	r2,-12(fp)
   310c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   310cc:	00bfffc4 	movi	r2,-1
   310d0:	00000b06 	br	31100 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   310d4:	d0a00c17 	ldw	r2,-32720(gp)
   310d8:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
   310dc:	d0e00c17 	ldw	r3,-32720(gp)
   310e0:	e0bfff17 	ldw	r2,-4(fp)
   310e4:	1885883a 	add	r2,r3,r2
   310e8:	d0a00c15 	stw	r2,-32720(gp)
   310ec:	e0bffa17 	ldw	r2,-24(fp)
   310f0:	e0bffe15 	stw	r2,-8(fp)
   310f4:	e0bffe17 	ldw	r2,-8(fp)
   310f8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   310fc:	e0bffb17 	ldw	r2,-20(fp)
} 
   31100:	e037883a 	mov	sp,fp
   31104:	df000017 	ldw	fp,0(sp)
   31108:	dec00104 	addi	sp,sp,4
   3110c:	f800283a 	ret

00031110 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31110:	defffe04 	addi	sp,sp,-8
   31114:	dfc00115 	stw	ra,4(sp)
   31118:	df000015 	stw	fp,0(sp)
   3111c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31120:	008000f4 	movhi	r2,3
   31124:	1096c104 	addi	r2,r2,23300
   31128:	10800017 	ldw	r2,0(r2)
   3112c:	10000526 	beq	r2,zero,31144 <alt_get_errno+0x34>
   31130:	008000f4 	movhi	r2,3
   31134:	1096c104 	addi	r2,r2,23300
   31138:	10800017 	ldw	r2,0(r2)
   3113c:	103ee83a 	callr	r2
   31140:	00000206 	br	3114c <alt_get_errno+0x3c>
   31144:	008000f4 	movhi	r2,3
   31148:	109d9504 	addi	r2,r2,30292
}
   3114c:	e037883a 	mov	sp,fp
   31150:	dfc00117 	ldw	ra,4(sp)
   31154:	df000017 	ldw	fp,0(sp)
   31158:	dec00204 	addi	sp,sp,8
   3115c:	f800283a 	ret

00031160 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   31160:	defff904 	addi	sp,sp,-28
   31164:	dfc00615 	stw	ra,24(sp)
   31168:	df000515 	stw	fp,20(sp)
   3116c:	df000504 	addi	fp,sp,20
   31170:	e13ffd15 	stw	r4,-12(fp)
   31174:	e17ffe15 	stw	r5,-8(fp)
   31178:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   3117c:	e0bffd17 	ldw	r2,-12(fp)
   31180:	10000716 	blt	r2,zero,311a0 <write+0x40>
   31184:	e13ffd17 	ldw	r4,-12(fp)
   31188:	01400304 	movi	r5,12
   3118c:	00211880 	call	21188 <__mulsi3>
   31190:	00c000f4 	movhi	r3,3
   31194:	18d23404 	addi	r3,r3,18640
   31198:	10c5883a 	add	r2,r2,r3
   3119c:	00000106 	br	311a4 <write+0x44>
   311a0:	0005883a 	mov	r2,zero
   311a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   311a8:	e0bffb17 	ldw	r2,-20(fp)
   311ac:	10001f26 	beq	r2,zero,3122c <write+0xcc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   311b0:	e0bffb17 	ldw	r2,-20(fp)
   311b4:	10800217 	ldw	r2,8(r2)
   311b8:	108000cc 	andi	r2,r2,3
   311bc:	10001726 	beq	r2,zero,3121c <write+0xbc>
   311c0:	e0bffb17 	ldw	r2,-20(fp)
   311c4:	10800017 	ldw	r2,0(r2)
   311c8:	10800617 	ldw	r2,24(r2)
   311cc:	10001326 	beq	r2,zero,3121c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   311d0:	e0bffb17 	ldw	r2,-20(fp)
   311d4:	10800017 	ldw	r2,0(r2)
   311d8:	10c00617 	ldw	r3,24(r2)
   311dc:	e0bfff17 	ldw	r2,-4(fp)
   311e0:	e13ffb17 	ldw	r4,-20(fp)
   311e4:	e17ffe17 	ldw	r5,-8(fp)
   311e8:	100d883a 	mov	r6,r2
   311ec:	183ee83a 	callr	r3
   311f0:	e0bffc15 	stw	r2,-16(fp)
   311f4:	e0bffc17 	ldw	r2,-16(fp)
   311f8:	1000060e 	bge	r2,zero,31214 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   311fc:	00311100 	call	31110 <alt_get_errno>
   31200:	e0fffc17 	ldw	r3,-16(fp)
   31204:	00c7c83a 	sub	r3,zero,r3
   31208:	10c00015 	stw	r3,0(r2)
        return -1;
   3120c:	00bfffc4 	movi	r2,-1
   31210:	00000a06 	br	3123c <write+0xdc>
      }
      return rval;
   31214:	e0bffc17 	ldw	r2,-16(fp)
   31218:	00000806 	br	3123c <write+0xdc>
    }
    else
    {
      ALT_ERRNO = EACCES;
   3121c:	00311100 	call	31110 <alt_get_errno>
   31220:	00c00344 	movi	r3,13
   31224:	10c00015 	stw	r3,0(r2)
   31228:	00000306 	br	31238 <write+0xd8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   3122c:	00311100 	call	31110 <alt_get_errno>
   31230:	00c01444 	movi	r3,81
   31234:	10c00015 	stw	r3,0(r2)
  }
  return -1;
   31238:	00bfffc4 	movi	r2,-1
}
   3123c:	e037883a 	mov	sp,fp
   31240:	dfc00117 	ldw	ra,4(sp)
   31244:	df000017 	ldw	fp,0(sp)
   31248:	dec00204 	addi	sp,sp,8
   3124c:	f800283a 	ret

00031250 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   31250:	defffd04 	addi	sp,sp,-12
   31254:	dfc00215 	stw	ra,8(sp)
   31258:	df000115 	stw	fp,4(sp)
   3125c:	df000104 	addi	fp,sp,4
   31260:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   31264:	e13fff17 	ldw	r4,-4(fp)
   31268:	014000f4 	movhi	r5,3
   3126c:	2956be04 	addi	r5,r5,23288
   31270:	0032b640 	call	32b64 <alt_dev_llist_insert>
}
   31274:	e037883a 	mov	sp,fp
   31278:	dfc00117 	ldw	ra,4(sp)
   3127c:	df000017 	ldw	fp,0(sp)
   31280:	dec00204 	addi	sp,sp,8
   31284:	f800283a 	ret

00031288 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   31288:	defffd04 	addi	sp,sp,-12
   3128c:	dfc00215 	stw	ra,8(sp)
   31290:	df000115 	stw	fp,4(sp)
   31294:	df000104 	addi	fp,sp,4
   31298:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU1, cpu1);
   3129c:	00335900 	call	33590 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   312a0:	00800044 	movi	r2,1
   312a4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   312a8:	e037883a 	mov	sp,fp
   312ac:	dfc00117 	ldw	ra,4(sp)
   312b0:	df000017 	ldw	fp,0(sp)
   312b4:	dec00204 	addi	sp,sp,8
   312b8:	f800283a 	ret

000312bc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   312bc:	defffe04 	addi	sp,sp,-8
   312c0:	dfc00115 	stw	ra,4(sp)
   312c4:	df000015 	stw	fp,0(sp)
   312c8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER1, timer1);
   312cc:	01000134 	movhi	r4,4
   312d0:	21043004 	addi	r4,r4,4288
   312d4:	000b883a 	mov	r5,zero
   312d8:	01800044 	movi	r6,1
   312dc:	01c0fa04 	movi	r7,1000
   312e0:	00323080 	call	32308 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO2A, fifo1to2A);
   312e4:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO2B, fifo1to2B);
   312e8:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO2C, fifo1to2C);
   312ec:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO4, fifo1to4);
   312f0:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO5, fifo1to5);
   312f4:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO1TO6, fifo1to6);
   312f8:	0001883a 	nop
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART1, jtag_uart1);
   312fc:	010000f4 	movhi	r4,3
   31300:	21129e04 	addi	r4,r4,19064
   31304:	000b883a 	mov	r5,zero
   31308:	01800404 	movi	r6,16
   3130c:	00319940 	call	31994 <altera_avalon_jtag_uart_init>
   31310:	010000f4 	movhi	r4,3
   31314:	21129404 	addi	r4,r4,19024
   31318:	00312500 	call	31250 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
   3131c:	0001883a 	nop
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
   31320:	010000f4 	movhi	r4,3
   31324:	2116ac04 	addi	r4,r4,23216
   31328:	0032e600 	call	32e60 <alt_fs_reg>
}
   3132c:	e037883a 	mov	sp,fp
   31330:	dfc00117 	ldw	ra,4(sp)
   31334:	df000017 	ldw	fp,0(sp)
   31338:	dec00204 	addi	sp,sp,8
   3133c:	f800283a 	ret

00031340 <altera_avalon_fifo_init>:



int altera_avalon_fifo_init(alt_u32 address, alt_u32 ienable,
                            alt_u32 emptymark, alt_u32 fullmark)
{
   31340:	defffa04 	addi	sp,sp,-24
   31344:	dfc00515 	stw	ra,20(sp)
   31348:	df000415 	stw	fp,16(sp)
   3134c:	df000404 	addi	fp,sp,16
   31350:	e13ffc15 	stw	r4,-16(fp)
   31354:	e17ffd15 	stw	r5,-12(fp)
   31358:	e1bffe15 	stw	r6,-8(fp)
   3135c:	e1ffff15 	stw	r7,-4(fp)
    if(altera_avalon_fifo_clear_event(address, ALTERA_AVALON_FIFO_EVENT_ALL) != ALTERA_AVALON_FIFO_OK)
   31360:	e13ffc17 	ldw	r4,-16(fp)
   31364:	01400fc4 	movi	r5,63
   31368:	003150c0 	call	3150c <altera_avalon_fifo_clear_event>
   3136c:	10000226 	beq	r2,zero,31378 <altera_avalon_fifo_init+0x38>
    {
        return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
   31370:	00bfffc4 	movi	r2,-1
   31374:	00001306 	br	313c4 <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_ienable(address, ienable) != ALTERA_AVALON_FIFO_OK)
   31378:	e13ffc17 	ldw	r4,-16(fp)
   3137c:	e17ffd17 	ldw	r5,-12(fp)
   31380:	00315680 	call	31568 <altera_avalon_fifo_write_ienable>
   31384:	10000226 	beq	r2,zero,31390 <altera_avalon_fifo_init+0x50>
    {
         return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
   31388:	00bfff84 	movi	r2,-2
   3138c:	00000d06 	br	313c4 <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_almostfull(address, fullmark) != ALTERA_AVALON_FIFO_OK)
   31390:	e13ffc17 	ldw	r4,-16(fp)
   31394:	e17fff17 	ldw	r5,-4(fp)
   31398:	00315c00 	call	315c0 <altera_avalon_fifo_write_almostfull>
   3139c:	10000226 	beq	r2,zero,313a8 <altera_avalon_fifo_init+0x68>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   313a0:	00bfff44 	movi	r2,-3
   313a4:	00000706 	br	313c4 <altera_avalon_fifo_init+0x84>
    }
  
    if( altera_avalon_fifo_write_almostempty(address, emptymark) != ALTERA_AVALON_FIFO_OK)
   313a8:	e13ffc17 	ldw	r4,-16(fp)
   313ac:	e17ffe17 	ldw	r5,-8(fp)
   313b0:	00316180 	call	31618 <altera_avalon_fifo_write_almostempty>
   313b4:	10000226 	beq	r2,zero,313c0 <altera_avalon_fifo_init+0x80>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   313b8:	00bfff44 	movi	r2,-3
   313bc:	00000106 	br	313c4 <altera_avalon_fifo_init+0x84>
    }

    return ALTERA_AVALON_FIFO_OK;
   313c0:	0005883a 	mov	r2,zero
}
   313c4:	e037883a 	mov	sp,fp
   313c8:	dfc00117 	ldw	ra,4(sp)
   313cc:	df000017 	ldw	fp,0(sp)
   313d0:	dec00204 	addi	sp,sp,8
   313d4:	f800283a 	ret

000313d8 <altera_avalon_fifo_read_status>:

int altera_avalon_fifo_read_status(alt_u32 address, alt_u32 mask)
{
   313d8:	defffd04 	addi	sp,sp,-12
   313dc:	df000215 	stw	fp,8(sp)
   313e0:	df000204 	addi	fp,sp,8
   313e4:	e13ffe15 	stw	r4,-8(fp)
   313e8:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_STATUS(address) & mask);
   313ec:	e0bffe17 	ldw	r2,-8(fp)
   313f0:	10800104 	addi	r2,r2,4
   313f4:	10800037 	ldwio	r2,0(r2)
   313f8:	1007883a 	mov	r3,r2
   313fc:	e0bfff17 	ldw	r2,-4(fp)
   31400:	1884703a 	and	r2,r3,r2
}
   31404:	e037883a 	mov	sp,fp
   31408:	df000017 	ldw	fp,0(sp)
   3140c:	dec00104 	addi	sp,sp,4
   31410:	f800283a 	ret

00031414 <altera_avalon_fifo_read_ienable>:

int altera_avalon_fifo_read_ienable(alt_u32 address, alt_u32 mask)
{
   31414:	defffd04 	addi	sp,sp,-12
   31418:	df000215 	stw	fp,8(sp)
   3141c:	df000204 	addi	fp,sp,8
   31420:	e13ffe15 	stw	r4,-8(fp)
   31424:	e17fff15 	stw	r5,-4(fp)
	
    return (IORD_ALTERA_AVALON_FIFO_IENABLE(address) & mask);
   31428:	e0bffe17 	ldw	r2,-8(fp)
   3142c:	10800304 	addi	r2,r2,12
   31430:	10800037 	ldwio	r2,0(r2)
   31434:	1007883a 	mov	r3,r2
   31438:	e0bfff17 	ldw	r2,-4(fp)
   3143c:	1884703a 	and	r2,r3,r2
}
   31440:	e037883a 	mov	sp,fp
   31444:	df000017 	ldw	fp,0(sp)
   31448:	dec00104 	addi	sp,sp,4
   3144c:	f800283a 	ret

00031450 <altera_avalon_fifo_read_almostfull>:

int altera_avalon_fifo_read_almostfull(alt_u32 address)
{
   31450:	defffe04 	addi	sp,sp,-8
   31454:	df000115 	stw	fp,4(sp)
   31458:	df000104 	addi	fp,sp,4
   3145c:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address);
   31460:	e0bfff17 	ldw	r2,-4(fp)
   31464:	10800404 	addi	r2,r2,16
   31468:	10800037 	ldwio	r2,0(r2)
}
   3146c:	e037883a 	mov	sp,fp
   31470:	df000017 	ldw	fp,0(sp)
   31474:	dec00104 	addi	sp,sp,4
   31478:	f800283a 	ret

0003147c <altera_avalon_fifo_read_almostempty>:

int altera_avalon_fifo_read_almostempty(alt_u32 address)
{
   3147c:	defffe04 	addi	sp,sp,-8
   31480:	df000115 	stw	fp,4(sp)
   31484:	df000104 	addi	fp,sp,4
   31488:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address);
   3148c:	e0bfff17 	ldw	r2,-4(fp)
   31490:	10800504 	addi	r2,r2,20
   31494:	10800037 	ldwio	r2,0(r2)
}
   31498:	e037883a 	mov	sp,fp
   3149c:	df000017 	ldw	fp,0(sp)
   314a0:	dec00104 	addi	sp,sp,4
   314a4:	f800283a 	ret

000314a8 <altera_avalon_fifo_read_event>:

int altera_avalon_fifo_read_event(alt_u32 address, alt_u32 mask)
{
   314a8:	defffd04 	addi	sp,sp,-12
   314ac:	df000215 	stw	fp,8(sp)
   314b0:	df000204 	addi	fp,sp,8
   314b4:	e13ffe15 	stw	r4,-8(fp)
   314b8:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask);
   314bc:	e0bffe17 	ldw	r2,-8(fp)
   314c0:	10800204 	addi	r2,r2,8
   314c4:	10800037 	ldwio	r2,0(r2)
   314c8:	1007883a 	mov	r3,r2
   314cc:	e0bfff17 	ldw	r2,-4(fp)
   314d0:	1884703a 	and	r2,r3,r2
}
   314d4:	e037883a 	mov	sp,fp
   314d8:	df000017 	ldw	fp,0(sp)
   314dc:	dec00104 	addi	sp,sp,4
   314e0:	f800283a 	ret

000314e4 <altera_avalon_fifo_read_level>:

int altera_avalon_fifo_read_level(alt_u32 address)
{
   314e4:	defffe04 	addi	sp,sp,-8
   314e8:	df000115 	stw	fp,4(sp)
   314ec:	df000104 	addi	fp,sp,4
   314f0:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_LEVEL(address);
   314f4:	e0bfff17 	ldw	r2,-4(fp)
   314f8:	10800037 	ldwio	r2,0(r2)
}
   314fc:	e037883a 	mov	sp,fp
   31500:	df000017 	ldw	fp,0(sp)
   31504:	dec00104 	addi	sp,sp,4
   31508:	f800283a 	ret

0003150c <altera_avalon_fifo_clear_event>:

int altera_avalon_fifo_clear_event(alt_u32 address, alt_u32 mask)
{
   3150c:	defffd04 	addi	sp,sp,-12
   31510:	df000215 	stw	fp,8(sp)
   31514:	df000204 	addi	fp,sp,8
   31518:	e13ffe15 	stw	r4,-8(fp)
   3151c:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_EVENT(address, mask);
   31520:	e0bffe17 	ldw	r2,-8(fp)
   31524:	10800204 	addi	r2,r2,8
   31528:	e0ffff17 	ldw	r3,-4(fp)
   3152c:	10c00035 	stwio	r3,0(r2)
    if((IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask) == 0)
   31530:	e0bffe17 	ldw	r2,-8(fp)
   31534:	10800204 	addi	r2,r2,8
   31538:	10800037 	ldwio	r2,0(r2)
   3153c:	1007883a 	mov	r3,r2
   31540:	e0bfff17 	ldw	r2,-4(fp)
   31544:	1884703a 	and	r2,r3,r2
   31548:	1000021e 	bne	r2,zero,31554 <altera_avalon_fifo_clear_event+0x48>
        return ALTERA_AVALON_FIFO_OK;
   3154c:	0005883a 	mov	r2,zero
   31550:	00000106 	br	31558 <altera_avalon_fifo_clear_event+0x4c>
    else
    return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
   31554:	00bfffc4 	movi	r2,-1
}
   31558:	e037883a 	mov	sp,fp
   3155c:	df000017 	ldw	fp,0(sp)
   31560:	dec00104 	addi	sp,sp,4
   31564:	f800283a 	ret

00031568 <altera_avalon_fifo_write_ienable>:

int altera_avalon_fifo_write_ienable(alt_u32 address, alt_u32 mask)
{
   31568:	defffd04 	addi	sp,sp,-12
   3156c:	df000215 	stw	fp,8(sp)
   31570:	df000204 	addi	fp,sp,8
   31574:	e13ffe15 	stw	r4,-8(fp)
   31578:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_IENABLE(address, mask);
   3157c:	e0bffe17 	ldw	r2,-8(fp)
   31580:	10800304 	addi	r2,r2,12
   31584:	e0ffff17 	ldw	r3,-4(fp)
   31588:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_IENABLE(address) == mask)
   3158c:	e0bffe17 	ldw	r2,-8(fp)
   31590:	10800304 	addi	r2,r2,12
   31594:	10800037 	ldwio	r2,0(r2)
   31598:	1007883a 	mov	r3,r2
   3159c:	e0bfff17 	ldw	r2,-4(fp)
   315a0:	1880021e 	bne	r3,r2,315ac <altera_avalon_fifo_write_ienable+0x44>
        return ALTERA_AVALON_FIFO_OK;
   315a4:	0005883a 	mov	r2,zero
   315a8:	00000106 	br	315b0 <altera_avalon_fifo_write_ienable+0x48>
    else
        return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
   315ac:	00bfff84 	movi	r2,-2
}
   315b0:	e037883a 	mov	sp,fp
   315b4:	df000017 	ldw	fp,0(sp)
   315b8:	dec00104 	addi	sp,sp,4
   315bc:	f800283a 	ret

000315c0 <altera_avalon_fifo_write_almostfull>:

int altera_avalon_fifo_write_almostfull(alt_u32 address, alt_u32 data)
{
   315c0:	defffd04 	addi	sp,sp,-12
   315c4:	df000215 	stw	fp,8(sp)
   315c8:	df000204 	addi	fp,sp,8
   315cc:	e13ffe15 	stw	r4,-8(fp)
   315d0:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTFULL(address, data);
   315d4:	e0bffe17 	ldw	r2,-8(fp)
   315d8:	10800404 	addi	r2,r2,16
   315dc:	e0ffff17 	ldw	r3,-4(fp)
   315e0:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address) == data)
   315e4:	e0bffe17 	ldw	r2,-8(fp)
   315e8:	10800404 	addi	r2,r2,16
   315ec:	10800037 	ldwio	r2,0(r2)
   315f0:	1007883a 	mov	r3,r2
   315f4:	e0bfff17 	ldw	r2,-4(fp)
   315f8:	1880021e 	bne	r3,r2,31604 <altera_avalon_fifo_write_almostfull+0x44>
        return ALTERA_AVALON_FIFO_OK;
   315fc:	0005883a 	mov	r2,zero
   31600:	00000106 	br	31608 <altera_avalon_fifo_write_almostfull+0x48>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   31604:	00bfff44 	movi	r2,-3
}
   31608:	e037883a 	mov	sp,fp
   3160c:	df000017 	ldw	fp,0(sp)
   31610:	dec00104 	addi	sp,sp,4
   31614:	f800283a 	ret

00031618 <altera_avalon_fifo_write_almostempty>:

int altera_avalon_fifo_write_almostempty(alt_u32 address, alt_u32 data)
{
   31618:	defffd04 	addi	sp,sp,-12
   3161c:	df000215 	stw	fp,8(sp)
   31620:	df000204 	addi	fp,sp,8
   31624:	e13ffe15 	stw	r4,-8(fp)
   31628:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address, data);
   3162c:	e0bffe17 	ldw	r2,-8(fp)
   31630:	10800504 	addi	r2,r2,20
   31634:	e0ffff17 	ldw	r3,-4(fp)
   31638:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address) == data)
   3163c:	e0bffe17 	ldw	r2,-8(fp)
   31640:	10800504 	addi	r2,r2,20
   31644:	10800037 	ldwio	r2,0(r2)
   31648:	1007883a 	mov	r3,r2
   3164c:	e0bfff17 	ldw	r2,-4(fp)
   31650:	1880021e 	bne	r3,r2,3165c <altera_avalon_fifo_write_almostempty+0x44>
        return ALTERA_AVALON_FIFO_OK;
   31654:	0005883a 	mov	r2,zero
   31658:	00000106 	br	31660 <altera_avalon_fifo_write_almostempty+0x48>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   3165c:	00bfff44 	movi	r2,-3
}
   31660:	e037883a 	mov	sp,fp
   31664:	df000017 	ldw	fp,0(sp)
   31668:	dec00104 	addi	sp,sp,4
   3166c:	f800283a 	ret

00031670 <altera_avalon_fifo_write_fifo>:

int altera_avalon_fifo_write_fifo(alt_u32 write_address,
                                  alt_u32 ctrl_address,
                                  alt_u32 data)
{
   31670:	defffb04 	addi	sp,sp,-20
   31674:	dfc00415 	stw	ra,16(sp)
   31678:	df000315 	stw	fp,12(sp)
   3167c:	df000304 	addi	fp,sp,12
   31680:	e13ffd15 	stw	r4,-12(fp)
   31684:	e17ffe15 	stw	r5,-8(fp)
   31688:	e1bfff15 	stw	r6,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
   3168c:	e13ffe17 	ldw	r4,-8(fp)
   31690:	01400044 	movi	r5,1
   31694:	00313d80 	call	313d8 <altera_avalon_fifo_read_status>
   31698:	1000051e 	bne	r2,zero,316b0 <altera_avalon_fifo_write_fifo+0x40>
    {
        IOWR_ALTERA_AVALON_FIFO_DATA(write_address, data);
   3169c:	e0bffd17 	ldw	r2,-12(fp)
   316a0:	e0ffff17 	ldw	r3,-4(fp)
   316a4:	10c00035 	stwio	r3,0(r2)
        return ALTERA_AVALON_FIFO_OK;
   316a8:	0005883a 	mov	r2,zero
   316ac:	00000106 	br	316b4 <altera_avalon_fifo_write_fifo+0x44>
    }
    else
    {
        return ALTERA_AVALON_FIFO_FULL;
   316b0:	00bfff04 	movi	r2,-4
    }
}
   316b4:	e037883a 	mov	sp,fp
   316b8:	dfc00117 	ldw	ra,4(sp)
   316bc:	df000017 	ldw	fp,0(sp)
   316c0:	dec00204 	addi	sp,sp,8
   316c4:	f800283a 	ret

000316c8 <altera_avalon_read_fifo>:

int altera_avalon_read_fifo(alt_u32 read_address, alt_u32 ctrl_address, int *data)
{
   316c8:	defffa04 	addi	sp,sp,-24
   316cc:	dfc00515 	stw	ra,20(sp)
   316d0:	df000415 	stw	fp,16(sp)
   316d4:	df000404 	addi	fp,sp,16
   316d8:	e13ffd15 	stw	r4,-12(fp)
   316dc:	e17ffe15 	stw	r5,-8(fp)
   316e0:	e1bfff15 	stw	r6,-4(fp)
    int return_val = 0;
   316e4:	e03ffc15 	stw	zero,-16(fp)
    *data = 0;
   316e8:	e0bfff17 	ldw	r2,-4(fp)
   316ec:	10000015 	stw	zero,0(r2)
    
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
   316f0:	e13ffe17 	ldw	r4,-8(fp)
   316f4:	01400084 	movi	r5,2
   316f8:	00313d80 	call	313d8 <altera_avalon_fifo_read_status>
   316fc:	1000071e 	bne	r2,zero,3171c <altera_avalon_read_fifo+0x54>
    {
        return_val = altera_avalon_fifo_read_level(ctrl_address);
   31700:	e13ffe17 	ldw	r4,-8(fp)
   31704:	00314e40 	call	314e4 <altera_avalon_fifo_read_level>
   31708:	e0bffc15 	stw	r2,-16(fp)
        *data = IORD_ALTERA_AVALON_FIFO_DATA(read_address);
   3170c:	e0bffd17 	ldw	r2,-12(fp)
   31710:	10c00037 	ldwio	r3,0(r2)
   31714:	e0bfff17 	ldw	r2,-4(fp)
   31718:	10c00015 	stw	r3,0(r2)
    
    }
    return return_val;
   3171c:	e0bffc17 	ldw	r2,-16(fp)
}
   31720:	e037883a 	mov	sp,fp
   31724:	dfc00117 	ldw	ra,4(sp)
   31728:	df000017 	ldw	fp,0(sp)
   3172c:	dec00204 	addi	sp,sp,8
   31730:	f800283a 	ret

00031734 <altera_avalon_fifo_read_fifo>:

int altera_avalon_fifo_read_fifo(alt_u32 read_address, alt_u32 ctrl_address)
{
   31734:	defffc04 	addi	sp,sp,-16
   31738:	dfc00315 	stw	ra,12(sp)
   3173c:	df000215 	stw	fp,8(sp)
   31740:	df000204 	addi	fp,sp,8
   31744:	e13ffe15 	stw	r4,-8(fp)
   31748:	e17fff15 	stw	r5,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
   3174c:	e13fff17 	ldw	r4,-4(fp)
   31750:	01400084 	movi	r5,2
   31754:	00313d80 	call	313d8 <altera_avalon_fifo_read_status>
   31758:	1000031e 	bne	r2,zero,31768 <altera_avalon_fifo_read_fifo+0x34>
    {
        return IORD_ALTERA_AVALON_FIFO_DATA(read_address);
   3175c:	e0bffe17 	ldw	r2,-8(fp)
   31760:	10800037 	ldwio	r2,0(r2)
   31764:	00000106 	br	3176c <altera_avalon_fifo_read_fifo+0x38>
    }
    return 0;
   31768:	0005883a 	mov	r2,zero
}
   3176c:	e037883a 	mov	sp,fp
   31770:	dfc00117 	ldw	ra,4(sp)
   31774:	df000017 	ldw	fp,0(sp)
   31778:	dec00204 	addi	sp,sp,8
   3177c:	f800283a 	ret

00031780 <altera_avalon_fifo_write_other_info>:

int altera_avalon_fifo_write_other_info(alt_u32 write_address,
					alt_u32 ctrl_address,
					alt_u32 data)
{
   31780:	defffb04 	addi	sp,sp,-20
   31784:	dfc00415 	stw	ra,16(sp)
   31788:	df000315 	stw	fp,12(sp)
   3178c:	df000304 	addi	fp,sp,12
   31790:	e13ffd15 	stw	r4,-12(fp)
   31794:	e17ffe15 	stw	r5,-8(fp)
   31798:	e1bfff15 	stw	r6,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
   3179c:	e13ffe17 	ldw	r4,-8(fp)
   317a0:	01400044 	movi	r5,1
   317a4:	00313d80 	call	313d8 <altera_avalon_fifo_read_status>
   317a8:	1000061e 	bne	r2,zero,317c4 <altera_avalon_fifo_write_other_info+0x44>
    {
	IOWR_ALTERA_AVALON_FIFO_OTHER_INFO(write_address, data);
   317ac:	e0bffd17 	ldw	r2,-12(fp)
   317b0:	10800104 	addi	r2,r2,4
   317b4:	e0ffff17 	ldw	r3,-4(fp)
   317b8:	10c00035 	stwio	r3,0(r2)
	return ALTERA_AVALON_FIFO_OK;
   317bc:	0005883a 	mov	r2,zero
   317c0:	00000106 	br	317c8 <altera_avalon_fifo_write_other_info+0x48>
    }
    else
    {
	return ALTERA_AVALON_FIFO_FULL;
   317c4:	00bfff04 	movi	r2,-4
    }
}
   317c8:	e037883a 	mov	sp,fp
   317cc:	dfc00117 	ldw	ra,4(sp)
   317d0:	df000017 	ldw	fp,0(sp)
   317d4:	dec00204 	addi	sp,sp,8
   317d8:	f800283a 	ret

000317dc <altera_avalon_fifo_read_other_info>:

int altera_avalon_fifo_read_other_info(alt_u32 read_address)
{
   317dc:	defffe04 	addi	sp,sp,-8
   317e0:	df000115 	stw	fp,4(sp)
   317e4:	df000104 	addi	fp,sp,4
   317e8:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_OTHER_INFO(read_address);
   317ec:	e0bfff17 	ldw	r2,-4(fp)
   317f0:	10800104 	addi	r2,r2,4
   317f4:	10800037 	ldwio	r2,0(r2)
}
   317f8:	e037883a 	mov	sp,fp
   317fc:	df000017 	ldw	fp,0(sp)
   31800:	dec00104 	addi	sp,sp,4
   31804:	f800283a 	ret

00031808 <altera_avalon_fifo_read_backpressure>:

int altera_avalon_fifo_read_backpressure (alt_u32 read_address){
   31808:	defffe04 	addi	sp,sp,-8
   3180c:	df000115 	stw	fp,4(sp)
   31810:	df000104 	addi	fp,sp,4
   31814:	e13fff15 	stw	r4,-4(fp)
    // Read data from FIFO directly. If FIFO is empty and backpressure is supported, this call is backpressure.
    return IORD_ALTERA_AVALON_FIFO_DATA(read_address);  
   31818:	e0bfff17 	ldw	r2,-4(fp)
   3181c:	10800037 	ldwio	r2,0(r2)
}
   31820:	e037883a 	mov	sp,fp
   31824:	df000017 	ldw	fp,0(sp)
   31828:	dec00104 	addi	sp,sp,4
   3182c:	f800283a 	ret

00031830 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   31830:	defffa04 	addi	sp,sp,-24
   31834:	dfc00515 	stw	ra,20(sp)
   31838:	df000415 	stw	fp,16(sp)
   3183c:	df000404 	addi	fp,sp,16
   31840:	e13ffd15 	stw	r4,-12(fp)
   31844:	e17ffe15 	stw	r5,-8(fp)
   31848:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   3184c:	e0bffd17 	ldw	r2,-12(fp)
   31850:	10800017 	ldw	r2,0(r2)
   31854:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   31858:	e0bffc17 	ldw	r2,-16(fp)
   3185c:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
   31860:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   31864:	10800217 	ldw	r2,8(r2)
   31868:	1809883a 	mov	r4,r3
   3186c:	e17ffe17 	ldw	r5,-8(fp)
   31870:	e1bfff17 	ldw	r6,-4(fp)
   31874:	100f883a 	mov	r7,r2
   31878:	0031e580 	call	31e58 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   3187c:	e037883a 	mov	sp,fp
   31880:	dfc00117 	ldw	ra,4(sp)
   31884:	df000017 	ldw	fp,0(sp)
   31888:	dec00204 	addi	sp,sp,8
   3188c:	f800283a 	ret

00031890 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   31890:	defffa04 	addi	sp,sp,-24
   31894:	dfc00515 	stw	ra,20(sp)
   31898:	df000415 	stw	fp,16(sp)
   3189c:	df000404 	addi	fp,sp,16
   318a0:	e13ffd15 	stw	r4,-12(fp)
   318a4:	e17ffe15 	stw	r5,-8(fp)
   318a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   318ac:	e0bffd17 	ldw	r2,-12(fp)
   318b0:	10800017 	ldw	r2,0(r2)
   318b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   318b8:	e0bffc17 	ldw	r2,-16(fp)
   318bc:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
   318c0:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   318c4:	10800217 	ldw	r2,8(r2)
   318c8:	1809883a 	mov	r4,r3
   318cc:	e17ffe17 	ldw	r5,-8(fp)
   318d0:	e1bfff17 	ldw	r6,-4(fp)
   318d4:	100f883a 	mov	r7,r2
   318d8:	00320700 	call	32070 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   318dc:	e037883a 	mov	sp,fp
   318e0:	dfc00117 	ldw	ra,4(sp)
   318e4:	df000017 	ldw	fp,0(sp)
   318e8:	dec00204 	addi	sp,sp,8
   318ec:	f800283a 	ret

000318f0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   318f0:	defffc04 	addi	sp,sp,-16
   318f4:	dfc00315 	stw	ra,12(sp)
   318f8:	df000215 	stw	fp,8(sp)
   318fc:	df000204 	addi	fp,sp,8
   31900:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31904:	e0bfff17 	ldw	r2,-4(fp)
   31908:	10800017 	ldw	r2,0(r2)
   3190c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   31910:	e0bffe17 	ldw	r2,-8(fp)
   31914:	10c00a04 	addi	r3,r2,40
   31918:	e0bfff17 	ldw	r2,-4(fp)
   3191c:	10800217 	ldw	r2,8(r2)
   31920:	1809883a 	mov	r4,r3
   31924:	100b883a 	mov	r5,r2
   31928:	0031cfc0 	call	31cfc <altera_avalon_jtag_uart_close>
}
   3192c:	e037883a 	mov	sp,fp
   31930:	dfc00117 	ldw	ra,4(sp)
   31934:	df000017 	ldw	fp,0(sp)
   31938:	dec00204 	addi	sp,sp,8
   3193c:	f800283a 	ret

00031940 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   31940:	defffa04 	addi	sp,sp,-24
   31944:	dfc00515 	stw	ra,20(sp)
   31948:	df000415 	stw	fp,16(sp)
   3194c:	df000404 	addi	fp,sp,16
   31950:	e13ffd15 	stw	r4,-12(fp)
   31954:	e17ffe15 	stw	r5,-8(fp)
   31958:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   3195c:	e0bffd17 	ldw	r2,-12(fp)
   31960:	10800017 	ldw	r2,0(r2)
   31964:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   31968:	e0bffc17 	ldw	r2,-16(fp)
   3196c:	10800a04 	addi	r2,r2,40
   31970:	1009883a 	mov	r4,r2
   31974:	e17ffe17 	ldw	r5,-8(fp)
   31978:	e1bfff17 	ldw	r6,-4(fp)
   3197c:	0031d640 	call	31d64 <altera_avalon_jtag_uart_ioctl>
}
   31980:	e037883a 	mov	sp,fp
   31984:	dfc00117 	ldw	ra,4(sp)
   31988:	df000017 	ldw	fp,0(sp)
   3198c:	dec00204 	addi	sp,sp,8
   31990:	f800283a 	ret

00031994 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   31994:	defffa04 	addi	sp,sp,-24
   31998:	dfc00515 	stw	ra,20(sp)
   3199c:	df000415 	stw	fp,16(sp)
   319a0:	df000404 	addi	fp,sp,16
   319a4:	e13ffd15 	stw	r4,-12(fp)
   319a8:	e17ffe15 	stw	r5,-8(fp)
   319ac:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   319b0:	e0bffd17 	ldw	r2,-12(fp)
   319b4:	00c00044 	movi	r3,1
   319b8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   319bc:	e0bffd17 	ldw	r2,-12(fp)
   319c0:	10800017 	ldw	r2,0(r2)
   319c4:	10800104 	addi	r2,r2,4
   319c8:	e0fffd17 	ldw	r3,-12(fp)
   319cc:	18c00817 	ldw	r3,32(r3)
   319d0:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   319d4:	e0fffe17 	ldw	r3,-8(fp)
   319d8:	e0bfff17 	ldw	r2,-4(fp)
   319dc:	d8000015 	stw	zero,0(sp)
   319e0:	1809883a 	mov	r4,r3
   319e4:	100b883a 	mov	r5,r2
   319e8:	018000f4 	movhi	r6,3
   319ec:	31869504 	addi	r6,r6,6740
   319f0:	e1fffd17 	ldw	r7,-12(fp)
   319f4:	0032fd40 	call	32fd4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   319f8:	e0bffd17 	ldw	r2,-12(fp)
   319fc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   31a00:	e0bffd17 	ldw	r2,-12(fp)
   31a04:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   31a08:	008000f4 	movhi	r2,3
   31a0c:	109da004 	addi	r2,r2,30336
   31a10:	10800017 	ldw	r2,0(r2)
   31a14:	1809883a 	mov	r4,r3
   31a18:	100b883a 	mov	r5,r2
   31a1c:	018000f4 	movhi	r6,3
   31a20:	31871604 	addi	r6,r6,7256
   31a24:	e1fffd17 	ldw	r7,-12(fp)
   31a28:	00329b80 	call	329b8 <alt_alarm_start>
   31a2c:	1000040e 	bge	r2,zero,31a40 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   31a30:	e0bffd17 	ldw	r2,-12(fp)
   31a34:	00e00034 	movhi	r3,32768
   31a38:	18ffffc4 	addi	r3,r3,-1
   31a3c:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   31a40:	e037883a 	mov	sp,fp
   31a44:	dfc00117 	ldw	ra,4(sp)
   31a48:	df000017 	ldw	fp,0(sp)
   31a4c:	dec00204 	addi	sp,sp,8
   31a50:	f800283a 	ret

00031a54 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   31a54:	defff804 	addi	sp,sp,-32
   31a58:	df000715 	stw	fp,28(sp)
   31a5c:	df000704 	addi	fp,sp,28
   31a60:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   31a64:	e0bfff17 	ldw	r2,-4(fp)
   31a68:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   31a6c:	e0bffb17 	ldw	r2,-20(fp)
   31a70:	10800017 	ldw	r2,0(r2)
   31a74:	e0bffc15 	stw	r2,-16(fp)
   31a78:	00000106 	br	31a80 <altera_avalon_jtag_uart_irq+0x2c>
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
   31a7c:	0001883a 	nop
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31a80:	e0bffc17 	ldw	r2,-16(fp)
   31a84:	10800104 	addi	r2,r2,4
   31a88:	10800037 	ldwio	r2,0(r2)
   31a8c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   31a90:	e0bffd17 	ldw	r2,-12(fp)
   31a94:	1080c00c 	andi	r2,r2,768
   31a98:	10006a26 	beq	r2,zero,31c44 <altera_avalon_jtag_uart_irq+0x1f0>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   31a9c:	e0bffd17 	ldw	r2,-12(fp)
   31aa0:	1080400c 	andi	r2,r2,256
   31aa4:	10003326 	beq	r2,zero,31b74 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   31aa8:	00800074 	movhi	r2,1
   31aac:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31ab0:	e0bffb17 	ldw	r2,-20(fp)
   31ab4:	10800a17 	ldw	r2,40(r2)
   31ab8:	10800044 	addi	r2,r2,1
   31abc:	1081ffcc 	andi	r2,r2,2047
   31ac0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   31ac4:	e0bffb17 	ldw	r2,-20(fp)
   31ac8:	10c00b17 	ldw	r3,44(r2)
   31acc:	e0bffe17 	ldw	r2,-8(fp)
   31ad0:	18801426 	beq	r3,r2,31b24 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   31ad4:	e0bffc17 	ldw	r2,-16(fp)
   31ad8:	10800037 	ldwio	r2,0(r2)
   31adc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   31ae0:	e0bff917 	ldw	r2,-28(fp)
   31ae4:	10a0000c 	andi	r2,r2,32768
   31ae8:	10001026 	beq	r2,zero,31b2c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   31aec:	e0bffb17 	ldw	r2,-20(fp)
   31af0:	10800a17 	ldw	r2,40(r2)
   31af4:	e0fff917 	ldw	r3,-28(fp)
   31af8:	e13ffb17 	ldw	r4,-20(fp)
   31afc:	2085883a 	add	r2,r4,r2
   31b00:	10800e04 	addi	r2,r2,56
   31b04:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31b08:	e0bffb17 	ldw	r2,-20(fp)
   31b0c:	10800a17 	ldw	r2,40(r2)
   31b10:	10800044 	addi	r2,r2,1
   31b14:	10c1ffcc 	andi	r3,r2,2047
   31b18:	e0bffb17 	ldw	r2,-20(fp)
   31b1c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   31b20:	003fe306 	br	31ab0 <altera_avalon_jtag_uart_irq+0x5c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   31b24:	0001883a 	nop
   31b28:	00000106 	br	31b30 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   31b2c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   31b30:	e0bff917 	ldw	r2,-28(fp)
   31b34:	10bfffec 	andhi	r2,r2,65535
   31b38:	10000e26 	beq	r2,zero,31b74 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31b3c:	e0bffb17 	ldw	r2,-20(fp)
   31b40:	10c00817 	ldw	r3,32(r2)
   31b44:	00bfff84 	movi	r2,-2
   31b48:	1886703a 	and	r3,r3,r2
   31b4c:	e0bffb17 	ldw	r2,-20(fp)
   31b50:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   31b54:	e0bffc17 	ldw	r2,-16(fp)
   31b58:	10800104 	addi	r2,r2,4
   31b5c:	e0fffb17 	ldw	r3,-20(fp)
   31b60:	18c00817 	ldw	r3,32(r3)
   31b64:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31b68:	e0bffc17 	ldw	r2,-16(fp)
   31b6c:	10800104 	addi	r2,r2,4
   31b70:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   31b74:	e0bffd17 	ldw	r2,-12(fp)
   31b78:	1080800c 	andi	r2,r2,512
   31b7c:	103fbf26 	beq	r2,zero,31a7c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   31b80:	e0bffd17 	ldw	r2,-12(fp)
   31b84:	1004d43a 	srli	r2,r2,16
   31b88:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   31b8c:	00001406 	br	31be0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   31b90:	e0bffc17 	ldw	r2,-16(fp)
   31b94:	e0fffb17 	ldw	r3,-20(fp)
   31b98:	18c00d17 	ldw	r3,52(r3)
   31b9c:	e13ffb17 	ldw	r4,-20(fp)
   31ba0:	20c7883a 	add	r3,r4,r3
   31ba4:	18c20e04 	addi	r3,r3,2104
   31ba8:	18c00003 	ldbu	r3,0(r3)
   31bac:	18c03fcc 	andi	r3,r3,255
   31bb0:	18c0201c 	xori	r3,r3,128
   31bb4:	18ffe004 	addi	r3,r3,-128
   31bb8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31bbc:	e0bffb17 	ldw	r2,-20(fp)
   31bc0:	10800d17 	ldw	r2,52(r2)
   31bc4:	10800044 	addi	r2,r2,1
   31bc8:	10c1ffcc 	andi	r3,r2,2047
   31bcc:	e0bffb17 	ldw	r2,-20(fp)
   31bd0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   31bd4:	e0bffa17 	ldw	r2,-24(fp)
   31bd8:	10bfffc4 	addi	r2,r2,-1
   31bdc:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   31be0:	e0bffa17 	ldw	r2,-24(fp)
   31be4:	10000526 	beq	r2,zero,31bfc <altera_avalon_jtag_uart_irq+0x1a8>
   31be8:	e0bffb17 	ldw	r2,-20(fp)
   31bec:	10c00d17 	ldw	r3,52(r2)
   31bf0:	e0bffb17 	ldw	r2,-20(fp)
   31bf4:	10800c17 	ldw	r2,48(r2)
   31bf8:	18bfe51e 	bne	r3,r2,31b90 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   31bfc:	e0bffa17 	ldw	r2,-24(fp)
   31c00:	103f9e26 	beq	r2,zero,31a7c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   31c04:	e0bffb17 	ldw	r2,-20(fp)
   31c08:	10c00817 	ldw	r3,32(r2)
   31c0c:	00bfff44 	movi	r2,-3
   31c10:	1886703a 	and	r3,r3,r2
   31c14:	e0bffb17 	ldw	r2,-20(fp)
   31c18:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   31c1c:	e0bffb17 	ldw	r2,-20(fp)
   31c20:	10800017 	ldw	r2,0(r2)
   31c24:	10800104 	addi	r2,r2,4
   31c28:	e0fffb17 	ldw	r3,-20(fp)
   31c2c:	18c00817 	ldw	r3,32(r3)
   31c30:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31c34:	e0bffc17 	ldw	r2,-16(fp)
   31c38:	10800104 	addi	r2,r2,4
   31c3c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   31c40:	003f8e06 	br	31a7c <altera_avalon_jtag_uart_irq+0x28>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   31c44:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   31c48:	e037883a 	mov	sp,fp
   31c4c:	df000017 	ldw	fp,0(sp)
   31c50:	dec00104 	addi	sp,sp,4
   31c54:	f800283a 	ret

00031c58 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   31c58:	defffc04 	addi	sp,sp,-16
   31c5c:	df000315 	stw	fp,12(sp)
   31c60:	df000304 	addi	fp,sp,12
   31c64:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   31c68:	e0bfff17 	ldw	r2,-4(fp)
   31c6c:	e0bffd15 	stw	r2,-12(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   31c70:	e0bffd17 	ldw	r2,-12(fp)
   31c74:	10800017 	ldw	r2,0(r2)
   31c78:	10800104 	addi	r2,r2,4
   31c7c:	10800037 	ldwio	r2,0(r2)
   31c80:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   31c84:	e0bffe17 	ldw	r2,-8(fp)
   31c88:	1081000c 	andi	r2,r2,1024
   31c8c:	10000a26 	beq	r2,zero,31cb8 <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   31c90:	e0bffd17 	ldw	r2,-12(fp)
   31c94:	10800017 	ldw	r2,0(r2)
   31c98:	10800104 	addi	r2,r2,4
   31c9c:	e0fffd17 	ldw	r3,-12(fp)
   31ca0:	18c00817 	ldw	r3,32(r3)
   31ca4:	18c10014 	ori	r3,r3,1024
   31ca8:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   31cac:	e0bffd17 	ldw	r2,-12(fp)
   31cb0:	10000915 	stw	zero,36(r2)
   31cb4:	00000a06 	br	31ce0 <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   31cb8:	e0bffd17 	ldw	r2,-12(fp)
   31cbc:	10800917 	ldw	r2,36(r2)
   31cc0:	00e00034 	movhi	r3,32768
   31cc4:	18ffff04 	addi	r3,r3,-4
   31cc8:	18800536 	bltu	r3,r2,31ce0 <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
   31ccc:	e0bffd17 	ldw	r2,-12(fp)
   31cd0:	10800917 	ldw	r2,36(r2)
   31cd4:	10c00044 	addi	r3,r2,1
   31cd8:	e0bffd17 	ldw	r2,-12(fp)
   31cdc:	10c00915 	stw	r3,36(r2)
   31ce0:	008000f4 	movhi	r2,3
   31ce4:	109da004 	addi	r2,r2,30336
   31ce8:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   31cec:	e037883a 	mov	sp,fp
   31cf0:	df000017 	ldw	fp,0(sp)
   31cf4:	dec00104 	addi	sp,sp,4
   31cf8:	f800283a 	ret

00031cfc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   31cfc:	defffd04 	addi	sp,sp,-12
   31d00:	df000215 	stw	fp,8(sp)
   31d04:	df000204 	addi	fp,sp,8
   31d08:	e13ffe15 	stw	r4,-8(fp)
   31d0c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   31d10:	00000506 	br	31d28 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   31d14:	e0bfff17 	ldw	r2,-4(fp)
   31d18:	1090000c 	andi	r2,r2,16384
   31d1c:	10000226 	beq	r2,zero,31d28 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   31d20:	00bffd44 	movi	r2,-11
   31d24:	00000b06 	br	31d54 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   31d28:	e0bffe17 	ldw	r2,-8(fp)
   31d2c:	10c00d17 	ldw	r3,52(r2)
   31d30:	e0bffe17 	ldw	r2,-8(fp)
   31d34:	10800c17 	ldw	r2,48(r2)
   31d38:	18800526 	beq	r3,r2,31d50 <altera_avalon_jtag_uart_close+0x54>
   31d3c:	e0bffe17 	ldw	r2,-8(fp)
   31d40:	10c00917 	ldw	r3,36(r2)
   31d44:	e0bffe17 	ldw	r2,-8(fp)
   31d48:	10800117 	ldw	r2,4(r2)
   31d4c:	18bff136 	bltu	r3,r2,31d14 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   31d50:	0005883a 	mov	r2,zero
}
   31d54:	e037883a 	mov	sp,fp
   31d58:	df000017 	ldw	fp,0(sp)
   31d5c:	dec00104 	addi	sp,sp,4
   31d60:	f800283a 	ret

00031d64 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   31d64:	defffa04 	addi	sp,sp,-24
   31d68:	df000515 	stw	fp,20(sp)
   31d6c:	df000504 	addi	fp,sp,20
   31d70:	e13ffd15 	stw	r4,-12(fp)
   31d74:	e17ffe15 	stw	r5,-8(fp)
   31d78:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   31d7c:	00bff9c4 	movi	r2,-25
   31d80:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   31d84:	e0bffe17 	ldw	r2,-8(fp)
   31d88:	10da8060 	cmpeqi	r3,r2,27137
   31d8c:	1800031e 	bne	r3,zero,31d9c <altera_avalon_jtag_uart_ioctl+0x38>
   31d90:	109a80a0 	cmpeqi	r2,r2,27138
   31d94:	1000181e 	bne	r2,zero,31df8 <altera_avalon_jtag_uart_ioctl+0x94>
   31d98:	00002606 	br	31e34 <altera_avalon_jtag_uart_ioctl+0xd0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   31d9c:	e0bffd17 	ldw	r2,-12(fp)
   31da0:	10c00117 	ldw	r3,4(r2)
   31da4:	00a00034 	movhi	r2,32768
   31da8:	10bfffc4 	addi	r2,r2,-1
   31dac:	18802226 	beq	r3,r2,31e38 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      int timeout = *((int *)arg);
   31db0:	e0bfff17 	ldw	r2,-4(fp)
   31db4:	10800017 	ldw	r2,0(r2)
   31db8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   31dbc:	e0bffc17 	ldw	r2,-16(fp)
   31dc0:	10800090 	cmplti	r2,r2,2
   31dc4:	1000061e 	bne	r2,zero,31de0 <altera_avalon_jtag_uart_ioctl+0x7c>
   31dc8:	e0fffc17 	ldw	r3,-16(fp)
   31dcc:	00a00034 	movhi	r2,32768
   31dd0:	10bfffc4 	addi	r2,r2,-1
   31dd4:	18800226 	beq	r3,r2,31de0 <altera_avalon_jtag_uart_ioctl+0x7c>
   31dd8:	e0bffc17 	ldw	r2,-16(fp)
   31ddc:	00000206 	br	31de8 <altera_avalon_jtag_uart_ioctl+0x84>
   31de0:	00a00034 	movhi	r2,32768
   31de4:	10bfff84 	addi	r2,r2,-2
   31de8:	e0fffd17 	ldw	r3,-12(fp)
   31dec:	18800115 	stw	r2,4(r3)
      rc = 0;
   31df0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   31df4:	00001006 	br	31e38 <altera_avalon_jtag_uart_ioctl+0xd4>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   31df8:	e0bffd17 	ldw	r2,-12(fp)
   31dfc:	10c00117 	ldw	r3,4(r2)
   31e00:	00a00034 	movhi	r2,32768
   31e04:	10bfffc4 	addi	r2,r2,-1
   31e08:	18800d26 	beq	r3,r2,31e40 <altera_avalon_jtag_uart_ioctl+0xdc>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   31e0c:	e0bffd17 	ldw	r2,-12(fp)
   31e10:	10c00917 	ldw	r3,36(r2)
   31e14:	e0bffd17 	ldw	r2,-12(fp)
   31e18:	10800117 	ldw	r2,4(r2)
   31e1c:	1885803a 	cmpltu	r2,r3,r2
   31e20:	10c03fcc 	andi	r3,r2,255
   31e24:	e0bfff17 	ldw	r2,-4(fp)
   31e28:	10c00015 	stw	r3,0(r2)
      rc = 0;
   31e2c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   31e30:	00000306 	br	31e40 <altera_avalon_jtag_uart_ioctl+0xdc>

  default:
    break;
   31e34:	00000306 	br	31e44 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   31e38:	0001883a 	nop
   31e3c:	00000106 	br	31e44 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   31e40:	0001883a 	nop

  default:
    break;
  }

  return rc;
   31e44:	e0bffb17 	ldw	r2,-20(fp)
}
   31e48:	e037883a 	mov	sp,fp
   31e4c:	df000017 	ldw	fp,0(sp)
   31e50:	dec00104 	addi	sp,sp,4
   31e54:	f800283a 	ret

00031e58 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   31e58:	defff304 	addi	sp,sp,-52
   31e5c:	dfc00c15 	stw	ra,48(sp)
   31e60:	df000b15 	stw	fp,44(sp)
   31e64:	df000b04 	addi	fp,sp,44
   31e68:	e13ffc15 	stw	r4,-16(fp)
   31e6c:	e17ffd15 	stw	r5,-12(fp)
   31e70:	e1bffe15 	stw	r6,-8(fp)
   31e74:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   31e78:	e0bffd17 	ldw	r2,-12(fp)
   31e7c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   31e80:	00004706 	br	31fa0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   31e84:	e0bffc17 	ldw	r2,-16(fp)
   31e88:	10800a17 	ldw	r2,40(r2)
   31e8c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   31e90:	e0bffc17 	ldw	r2,-16(fp)
   31e94:	10800b17 	ldw	r2,44(r2)
   31e98:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   31e9c:	e0fff717 	ldw	r3,-36(fp)
   31ea0:	e0bff817 	ldw	r2,-32(fp)
   31ea4:	18800536 	bltu	r3,r2,31ebc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   31ea8:	e0fff717 	ldw	r3,-36(fp)
   31eac:	e0bff817 	ldw	r2,-32(fp)
   31eb0:	1885c83a 	sub	r2,r3,r2
   31eb4:	e0bff615 	stw	r2,-40(fp)
   31eb8:	00000406 	br	31ecc <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   31ebc:	00c20004 	movi	r3,2048
   31ec0:	e0bff817 	ldw	r2,-32(fp)
   31ec4:	1885c83a 	sub	r2,r3,r2
   31ec8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   31ecc:	e0bff617 	ldw	r2,-40(fp)
   31ed0:	10001e26 	beq	r2,zero,31f4c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   31ed4:	e0fffe17 	ldw	r3,-8(fp)
   31ed8:	e0bff617 	ldw	r2,-40(fp)
   31edc:	1880022e 	bgeu	r3,r2,31ee8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   31ee0:	e0bffe17 	ldw	r2,-8(fp)
   31ee4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   31ee8:	e0bff817 	ldw	r2,-32(fp)
   31eec:	10800e04 	addi	r2,r2,56
   31ef0:	e0fffc17 	ldw	r3,-16(fp)
   31ef4:	1885883a 	add	r2,r3,r2
   31ef8:	e13ff517 	ldw	r4,-44(fp)
   31efc:	100b883a 	mov	r5,r2
   31f00:	e1bff617 	ldw	r6,-40(fp)
   31f04:	00231240 	call	23124 <memcpy>
      ptr   += n;
   31f08:	e0fff517 	ldw	r3,-44(fp)
   31f0c:	e0bff617 	ldw	r2,-40(fp)
   31f10:	1885883a 	add	r2,r3,r2
   31f14:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   31f18:	e0fffe17 	ldw	r3,-8(fp)
   31f1c:	e0bff617 	ldw	r2,-40(fp)
   31f20:	1885c83a 	sub	r2,r3,r2
   31f24:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31f28:	e0fff817 	ldw	r3,-32(fp)
   31f2c:	e0bff617 	ldw	r2,-40(fp)
   31f30:	1885883a 	add	r2,r3,r2
   31f34:	10c1ffcc 	andi	r3,r2,2047
   31f38:	e0bffc17 	ldw	r2,-16(fp)
   31f3c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   31f40:	e0bffe17 	ldw	r2,-8(fp)
   31f44:	00bfcf16 	blt	zero,r2,31e84 <altera_avalon_jtag_uart_read+0x2c>
   31f48:	00000106 	br	31f50 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   31f4c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   31f50:	e0fff517 	ldw	r3,-44(fp)
   31f54:	e0bffd17 	ldw	r2,-12(fp)
   31f58:	1880141e 	bne	r3,r2,31fac <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   31f5c:	e0bfff17 	ldw	r2,-4(fp)
   31f60:	1090000c 	andi	r2,r2,16384
   31f64:	1000131e 	bne	r2,zero,31fb4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   31f68:	0001883a 	nop
   31f6c:	e0bffc17 	ldw	r2,-16(fp)
   31f70:	10c00a17 	ldw	r3,40(r2)
   31f74:	e0bff717 	ldw	r2,-36(fp)
   31f78:	1880051e 	bne	r3,r2,31f90 <altera_avalon_jtag_uart_read+0x138>
   31f7c:	e0bffc17 	ldw	r2,-16(fp)
   31f80:	10c00917 	ldw	r3,36(r2)
   31f84:	e0bffc17 	ldw	r2,-16(fp)
   31f88:	10800117 	ldw	r2,4(r2)
   31f8c:	18bff736 	bltu	r3,r2,31f6c <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   31f90:	e0bffc17 	ldw	r2,-16(fp)
   31f94:	10c00a17 	ldw	r3,40(r2)
   31f98:	e0bff717 	ldw	r2,-36(fp)
   31f9c:	18800726 	beq	r3,r2,31fbc <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   31fa0:	e0bffe17 	ldw	r2,-8(fp)
   31fa4:	00bfb716 	blt	zero,r2,31e84 <altera_avalon_jtag_uart_read+0x2c>
   31fa8:	00000506 	br	31fc0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   31fac:	0001883a 	nop
   31fb0:	00000306 	br	31fc0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   31fb4:	0001883a 	nop
   31fb8:	00000106 	br	31fc0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   31fbc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   31fc0:	e0fff517 	ldw	r3,-44(fp)
   31fc4:	e0bffd17 	ldw	r2,-12(fp)
   31fc8:	18801726 	beq	r3,r2,32028 <altera_avalon_jtag_uart_read+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31fcc:	0005303a 	rdctl	r2,status
   31fd0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31fd4:	e0fffa17 	ldw	r3,-24(fp)
   31fd8:	00bfff84 	movi	r2,-2
   31fdc:	1884703a 	and	r2,r3,r2
   31fe0:	1001703a 	wrctl	status,r2
  
  return context;
   31fe4:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   31fe8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31fec:	e0bffc17 	ldw	r2,-16(fp)
   31ff0:	10800817 	ldw	r2,32(r2)
   31ff4:	10c00054 	ori	r3,r2,1
   31ff8:	e0bffc17 	ldw	r2,-16(fp)
   31ffc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32000:	e0bffc17 	ldw	r2,-16(fp)
   32004:	10800017 	ldw	r2,0(r2)
   32008:	10800104 	addi	r2,r2,4
   3200c:	e0fffc17 	ldw	r3,-16(fp)
   32010:	18c00817 	ldw	r3,32(r3)
   32014:	10c00035 	stwio	r3,0(r2)
   32018:	e0bff917 	ldw	r2,-28(fp)
   3201c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32020:	e0bffb17 	ldw	r2,-20(fp)
   32024:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   32028:	e0fff517 	ldw	r3,-44(fp)
   3202c:	e0bffd17 	ldw	r2,-12(fp)
   32030:	18800426 	beq	r3,r2,32044 <altera_avalon_jtag_uart_read+0x1ec>
    return ptr - buffer;
   32034:	e0fff517 	ldw	r3,-44(fp)
   32038:	e0bffd17 	ldw	r2,-12(fp)
   3203c:	1885c83a 	sub	r2,r3,r2
   32040:	00000606 	br	3205c <altera_avalon_jtag_uart_read+0x204>
  else if (flags & O_NONBLOCK)
   32044:	e0bfff17 	ldw	r2,-4(fp)
   32048:	1090000c 	andi	r2,r2,16384
   3204c:	10000226 	beq	r2,zero,32058 <altera_avalon_jtag_uart_read+0x200>
    return -EWOULDBLOCK;
   32050:	00bffd44 	movi	r2,-11
   32054:	00000106 	br	3205c <altera_avalon_jtag_uart_read+0x204>
  else
    return -EIO;
   32058:	00bffec4 	movi	r2,-5
}
   3205c:	e037883a 	mov	sp,fp
   32060:	dfc00117 	ldw	ra,4(sp)
   32064:	df000017 	ldw	fp,0(sp)
   32068:	dec00204 	addi	sp,sp,8
   3206c:	f800283a 	ret

00032070 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   32070:	defff304 	addi	sp,sp,-52
   32074:	dfc00c15 	stw	ra,48(sp)
   32078:	df000b15 	stw	fp,44(sp)
   3207c:	df000b04 	addi	fp,sp,44
   32080:	e13ffc15 	stw	r4,-16(fp)
   32084:	e17ffd15 	stw	r5,-12(fp)
   32088:	e1bffe15 	stw	r6,-8(fp)
   3208c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   32090:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   32094:	e0bffd17 	ldw	r2,-12(fp)
   32098:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   3209c:	00003706 	br	3217c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   320a0:	e0bffc17 	ldw	r2,-16(fp)
   320a4:	10800c17 	ldw	r2,48(r2)
   320a8:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
   320ac:	e0bffc17 	ldw	r2,-16(fp)
   320b0:	10800d17 	ldw	r2,52(r2)
   320b4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   320b8:	e0fff817 	ldw	r3,-32(fp)
   320bc:	e0bff517 	ldw	r2,-44(fp)
   320c0:	1880062e 	bgeu	r3,r2,320dc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   320c4:	e0fff517 	ldw	r3,-44(fp)
   320c8:	e0bff817 	ldw	r2,-32(fp)
   320cc:	1885c83a 	sub	r2,r3,r2
   320d0:	10bfffc4 	addi	r2,r2,-1
   320d4:	e0bff615 	stw	r2,-40(fp)
   320d8:	00000b06 	br	32108 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   320dc:	e0bff517 	ldw	r2,-44(fp)
   320e0:	10000526 	beq	r2,zero,320f8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   320e4:	00c20004 	movi	r3,2048
   320e8:	e0bff817 	ldw	r2,-32(fp)
   320ec:	1885c83a 	sub	r2,r3,r2
   320f0:	e0bff615 	stw	r2,-40(fp)
   320f4:	00000406 	br	32108 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   320f8:	00c1ffc4 	movi	r3,2047
   320fc:	e0bff817 	ldw	r2,-32(fp)
   32100:	1885c83a 	sub	r2,r3,r2
   32104:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32108:	e0bff617 	ldw	r2,-40(fp)
   3210c:	10001e26 	beq	r2,zero,32188 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   32110:	e0fffe17 	ldw	r3,-8(fp)
   32114:	e0bff617 	ldw	r2,-40(fp)
   32118:	1880022e 	bgeu	r3,r2,32124 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   3211c:	e0bffe17 	ldw	r2,-8(fp)
   32120:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   32124:	e0bff817 	ldw	r2,-32(fp)
   32128:	10820e04 	addi	r2,r2,2104
   3212c:	e0fffc17 	ldw	r3,-16(fp)
   32130:	1885883a 	add	r2,r3,r2
   32134:	1009883a 	mov	r4,r2
   32138:	e17ffd17 	ldw	r5,-12(fp)
   3213c:	e1bff617 	ldw	r6,-40(fp)
   32140:	00231240 	call	23124 <memcpy>
      ptr   += n;
   32144:	e0fffd17 	ldw	r3,-12(fp)
   32148:	e0bff617 	ldw	r2,-40(fp)
   3214c:	1885883a 	add	r2,r3,r2
   32150:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   32154:	e0fffe17 	ldw	r3,-8(fp)
   32158:	e0bff617 	ldw	r2,-40(fp)
   3215c:	1885c83a 	sub	r2,r3,r2
   32160:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32164:	e0fff817 	ldw	r3,-32(fp)
   32168:	e0bff617 	ldw	r2,-40(fp)
   3216c:	1885883a 	add	r2,r3,r2
   32170:	10c1ffcc 	andi	r3,r2,2047
   32174:	e0bffc17 	ldw	r2,-16(fp)
   32178:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   3217c:	e0bffe17 	ldw	r2,-8(fp)
   32180:	00bfc716 	blt	zero,r2,320a0 <altera_avalon_jtag_uart_write+0x30>
   32184:	00000106 	br	3218c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   32188:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3218c:	0005303a 	rdctl	r2,status
   32190:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32194:	e0fffa17 	ldw	r3,-24(fp)
   32198:	00bfff84 	movi	r2,-2
   3219c:	1884703a 	and	r2,r3,r2
   321a0:	1001703a 	wrctl	status,r2
  
  return context;
   321a4:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   321a8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   321ac:	e0bffc17 	ldw	r2,-16(fp)
   321b0:	10800817 	ldw	r2,32(r2)
   321b4:	10c00094 	ori	r3,r2,2
   321b8:	e0bffc17 	ldw	r2,-16(fp)
   321bc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   321c0:	e0bffc17 	ldw	r2,-16(fp)
   321c4:	10800017 	ldw	r2,0(r2)
   321c8:	10800104 	addi	r2,r2,4
   321cc:	e0fffc17 	ldw	r3,-16(fp)
   321d0:	18c00817 	ldw	r3,32(r3)
   321d4:	10c00035 	stwio	r3,0(r2)
   321d8:	e0bff917 	ldw	r2,-28(fp)
   321dc:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   321e0:	e0bffb17 	ldw	r2,-20(fp)
   321e4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   321e8:	e0bffe17 	ldw	r2,-8(fp)
   321ec:	0080110e 	bge	zero,r2,32234 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   321f0:	e0bfff17 	ldw	r2,-4(fp)
   321f4:	1090000c 	andi	r2,r2,16384
   321f8:	1000111e 	bne	r2,zero,32240 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   321fc:	0001883a 	nop
   32200:	e0bffc17 	ldw	r2,-16(fp)
   32204:	10c00d17 	ldw	r3,52(r2)
   32208:	e0bff517 	ldw	r2,-44(fp)
   3220c:	1880051e 	bne	r3,r2,32224 <altera_avalon_jtag_uart_write+0x1b4>
   32210:	e0bffc17 	ldw	r2,-16(fp)
   32214:	10c00917 	ldw	r3,36(r2)
   32218:	e0bffc17 	ldw	r2,-16(fp)
   3221c:	10800117 	ldw	r2,4(r2)
   32220:	18bff736 	bltu	r3,r2,32200 <altera_avalon_jtag_uart_write+0x190>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   32224:	e0bffc17 	ldw	r2,-16(fp)
   32228:	10c00d17 	ldw	r3,52(r2)
   3222c:	e0bff517 	ldw	r2,-44(fp)
   32230:	18800526 	beq	r3,r2,32248 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   32234:	e0bffe17 	ldw	r2,-8(fp)
   32238:	00bfd016 	blt	zero,r2,3217c <altera_avalon_jtag_uart_write+0x10c>
   3223c:	00000306 	br	3224c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   32240:	0001883a 	nop
   32244:	00000106 	br	3224c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
         break;
   32248:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   3224c:	e0fffd17 	ldw	r3,-12(fp)
   32250:	e0bff717 	ldw	r2,-36(fp)
   32254:	18800426 	beq	r3,r2,32268 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   32258:	e0fffd17 	ldw	r3,-12(fp)
   3225c:	e0bff717 	ldw	r2,-36(fp)
   32260:	1885c83a 	sub	r2,r3,r2
   32264:	00000606 	br	32280 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   32268:	e0bfff17 	ldw	r2,-4(fp)
   3226c:	1090000c 	andi	r2,r2,16384
   32270:	10000226 	beq	r2,zero,3227c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   32274:	00bffd44 	movi	r2,-11
   32278:	00000106 	br	32280 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   3227c:	00bffec4 	movi	r2,-5
}
   32280:	e037883a 	mov	sp,fp
   32284:	dfc00117 	ldw	ra,4(sp)
   32288:	df000017 	ldw	fp,0(sp)
   3228c:	dec00204 	addi	sp,sp,8
   32290:	f800283a 	ret

00032294 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   32294:	defffa04 	addi	sp,sp,-24
   32298:	dfc00515 	stw	ra,20(sp)
   3229c:	df000415 	stw	fp,16(sp)
   322a0:	df000404 	addi	fp,sp,16
   322a4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   322a8:	0007883a 	mov	r3,zero
   322ac:	e0bfff17 	ldw	r2,-4(fp)
   322b0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   322b4:	e0bfff17 	ldw	r2,-4(fp)
   322b8:	10800104 	addi	r2,r2,4
   322bc:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   322c0:	0005303a 	rdctl	r2,status
   322c4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   322c8:	e0fffd17 	ldw	r3,-12(fp)
   322cc:	00bfff84 	movi	r2,-2
   322d0:	1884703a 	and	r2,r3,r2
   322d4:	1001703a 	wrctl	status,r2
  
  return context;
   322d8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   322dc:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   322e0:	003348c0 	call	3348c <alt_tick>
   322e4:	e0bffc17 	ldw	r2,-16(fp)
   322e8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   322ec:	e0bffe17 	ldw	r2,-8(fp)
   322f0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   322f4:	e037883a 	mov	sp,fp
   322f8:	dfc00117 	ldw	ra,4(sp)
   322fc:	df000017 	ldw	fp,0(sp)
   32300:	dec00204 	addi	sp,sp,8
   32304:	f800283a 	ret

00032308 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   32308:	defff804 	addi	sp,sp,-32
   3230c:	dfc00715 	stw	ra,28(sp)
   32310:	df000615 	stw	fp,24(sp)
   32314:	df000604 	addi	fp,sp,24
   32318:	e13ffc15 	stw	r4,-16(fp)
   3231c:	e17ffd15 	stw	r5,-12(fp)
   32320:	e1bffe15 	stw	r6,-8(fp)
   32324:	e1ffff15 	stw	r7,-4(fp)
   32328:	e0bfff17 	ldw	r2,-4(fp)
   3232c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   32330:	008000f4 	movhi	r2,3
   32334:	109da004 	addi	r2,r2,30336
   32338:	10800017 	ldw	r2,0(r2)
   3233c:	1000041e 	bne	r2,zero,32350 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
   32340:	008000f4 	movhi	r2,3
   32344:	109da004 	addi	r2,r2,30336
   32348:	e0fffb17 	ldw	r3,-20(fp)
   3234c:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   32350:	e0bffc17 	ldw	r2,-16(fp)
   32354:	10800104 	addi	r2,r2,4
   32358:	00c001c4 	movi	r3,7
   3235c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   32360:	d8000015 	stw	zero,0(sp)
   32364:	e13ffd17 	ldw	r4,-12(fp)
   32368:	e17ffe17 	ldw	r5,-8(fp)
   3236c:	018000f4 	movhi	r6,3
   32370:	3188a504 	addi	r6,r6,8852
   32374:	e1fffc17 	ldw	r7,-16(fp)
   32378:	0032fd40 	call	32fd4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   3237c:	e037883a 	mov	sp,fp
   32380:	dfc00117 	ldw	ra,4(sp)
   32384:	df000017 	ldw	fp,0(sp)
   32388:	dec00204 	addi	sp,sp,8
   3238c:	f800283a 	ret

00032390 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
   32390:	deffeb04 	addi	sp,sp,-84
   32394:	df001415 	stw	fp,80(sp)
   32398:	dc401315 	stw	r17,76(sp)
   3239c:	dc001215 	stw	r16,72(sp)
   323a0:	df001204 	addi	fp,sp,72
   323a4:	e13ffb15 	stw	r4,-20(fp)
   323a8:	e17ffc15 	stw	r5,-16(fp)
   323ac:	e1bffd15 	stw	r6,-12(fp)
   323b0:	e1fffe15 	stw	r7,-8(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
   323b4:	e0bffb17 	ldw	r2,-20(fp)
   323b8:	10800017 	ldw	r2,0(r2)
   323bc:	e0bfee15 	stw	r2,-72(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
   323c0:	e0bfee17 	ldw	r2,-72(fp)
   323c4:	10800217 	ldw	r2,8(r2)
   323c8:	e0bff715 	stw	r2,-36(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
   323cc:	e0bff717 	ldw	r2,-36(fp)
   323d0:	10bfffc4 	addi	r2,r2,-1
   323d4:	e0bff815 	stw	r2,-32(fp)

  while (*++ptr != 0)
   323d8:	e0bff817 	ldw	r2,-32(fp)
   323dc:	10800044 	addi	r2,r2,1
   323e0:	e0bff815 	stw	r2,-32(fp)
   323e4:	e0bff817 	ldw	r2,-32(fp)
   323e8:	10800003 	ldbu	r2,0(r2)
   323ec:	10803fcc 	andi	r2,r2,255
   323f0:	1080201c 	xori	r2,r2,128
   323f4:	10bfe004 	addi	r2,r2,-128
   323f8:	103ff71e 	bne	r2,zero,323d8 <alt_hostfs_open+0x48>
    ;

  return ptr - string;
   323fc:	e0fff817 	ldw	r3,-32(fp)
   32400:	e0bff717 	ldw	r2,-36(fp)
   32404:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
   32408:	10800044 	addi	r2,r2,1
   3240c:	e0fffc17 	ldw	r3,-16(fp)
   32410:	1885883a 	add	r2,r3,r2
   32414:	e0bffc15 	stw	r2,-16(fp)

  r3 = (int)&hcinfo;
   32418:	d0a01c04 	addi	r2,gp,-32656
   3241c:	e0bfef15 	stw	r2,-68(fp)
  r4 = (int)name;
   32420:	e0bffc17 	ldw	r2,-16(fp)
   32424:	e0bff015 	stw	r2,-64(fp)
  r5 = flags;
   32428:	e0bffd17 	ldw	r2,-12(fp)
   3242c:	e0bff115 	stw	r2,-60(fp)
  r6 = mode;
   32430:	e0bffe17 	ldw	r2,-8(fp)
   32434:	e0bff215 	stw	r2,-56(fp)
   32438:	e0bffc17 	ldw	r2,-16(fp)
   3243c:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
   32440:	e0bff917 	ldw	r2,-28(fp)
   32444:	10bfffc4 	addi	r2,r2,-1
   32448:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
   3244c:	e0bffa17 	ldw	r2,-24(fp)
   32450:	10800044 	addi	r2,r2,1
   32454:	e0bffa15 	stw	r2,-24(fp)
   32458:	e0bffa17 	ldw	r2,-24(fp)
   3245c:	10800003 	ldbu	r2,0(r2)
   32460:	10803fcc 	andi	r2,r2,255
   32464:	1080201c 	xori	r2,r2,128
   32468:	10bfe004 	addi	r2,r2,-128
   3246c:	103ff71e 	bne	r2,zero,3244c <alt_hostfs_open+0xbc>
    ;

  return ptr - string;
   32470:	e0fffa17 	ldw	r3,-24(fp)
   32474:	e0bff917 	ldw	r2,-28(fp)
   32478:	1885c83a 	sub	r2,r3,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
   3247c:	e0bff315 	stw	r2,-52(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6), "D07" (r7) : "memory" );
   32480:	e13ff017 	ldw	r4,-64(fp)
   32484:	e13fff15 	stw	r4,-4(fp)
   32488:	e17ff117 	ldw	r5,-60(fp)
   3248c:	e1bff217 	ldw	r6,-56(fp)
   32490:	e1fff317 	ldw	r7,-52(fp)
   32494:	e0ffef17 	ldw	r3,-68(fp)
   32498:	1821883a 	mov	r16,r3
   3249c:	8007883a 	mov	r3,r16
   324a0:	e13fff17 	ldw	r4,-4(fp)
   324a4:	003da07a 	break	1
   324a8:	1821883a 	mov	r16,r3
   324ac:	1023883a 	mov	r17,r2
   324b0:	e47ff415 	stw	r17,-48(fp)
   324b4:	e43fef15 	stw	r16,-68(fp)

  handle = (void *)r2;
   324b8:	e0bff417 	ldw	r2,-48(fp)
   324bc:	e0bff515 	stw	r2,-44(fp)
  error = r3;
   324c0:	e0bfef17 	ldw	r2,-68(fp)
   324c4:	e0bff615 	stw	r2,-40(fp)

  if (error == 0)
   324c8:	e0bff617 	ldw	r2,-40(fp)
   324cc:	1000031e 	bne	r2,zero,324dc <alt_hostfs_open+0x14c>
    fd->priv = handle;
   324d0:	e0bffb17 	ldw	r2,-20(fp)
   324d4:	e0fff517 	ldw	r3,-44(fp)
   324d8:	10c00115 	stw	r3,4(r2)

  return -error;
   324dc:	e0bff617 	ldw	r2,-40(fp)
   324e0:	0085c83a 	sub	r2,zero,r2
}
   324e4:	e037883a 	mov	sp,fp
   324e8:	df000217 	ldw	fp,8(sp)
   324ec:	dc400117 	ldw	r17,4(sp)
   324f0:	dc000017 	ldw	r16,0(sp)
   324f4:	dec00304 	addi	sp,sp,12
   324f8:	f800283a 	ret

000324fc <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
   324fc:	defffa04 	addi	sp,sp,-24
   32500:	df000515 	stw	fp,20(sp)
   32504:	dc000415 	stw	r16,16(sp)
   32508:	df000404 	addi	fp,sp,16
   3250c:	e13fff15 	stw	r4,-4(fp)
  int error;

  /* Input and output parameters for the hostcall */
  int r3, r4;

  r3 = (int)&hcinfo;
   32510:	d0a01904 	addi	r2,gp,-32668
   32514:	e0bffc15 	stw	r2,-16(fp)
  r4 = (int)fd->priv;
   32518:	e0bfff17 	ldw	r2,-4(fp)
   3251c:	10800117 	ldw	r2,4(r2)
   32520:	e0bffd15 	stw	r2,-12(fp)

  __asm__ volatile("break 1" : "+D03" (r3) : "D04" (r4) );
   32524:	e0bffd17 	ldw	r2,-12(fp)
   32528:	e0fffc17 	ldw	r3,-16(fp)
   3252c:	1821883a 	mov	r16,r3
   32530:	8007883a 	mov	r3,r16
   32534:	1009883a 	mov	r4,r2
   32538:	003da07a 	break	1
   3253c:	1821883a 	mov	r16,r3
   32540:	e43ffc15 	stw	r16,-16(fp)

  error = r3;
   32544:	e0bffc17 	ldw	r2,-16(fp)
   32548:	e0bffe15 	stw	r2,-8(fp)

  return -error;
   3254c:	e0bffe17 	ldw	r2,-8(fp)
   32550:	0085c83a 	sub	r2,zero,r2
}
   32554:	e037883a 	mov	sp,fp
   32558:	df000117 	ldw	fp,4(sp)
   3255c:	dc000017 	ldw	r16,0(sp)
   32560:	dec00204 	addi	sp,sp,8
   32564:	f800283a 	ret

00032568 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
   32568:	defff204 	addi	sp,sp,-56
   3256c:	df000d15 	stw	fp,52(sp)
   32570:	dc400c15 	stw	r17,48(sp)
   32574:	dc000b15 	stw	r16,44(sp)
   32578:	df000b04 	addi	fp,sp,44
   3257c:	e13ffc15 	stw	r4,-16(fp)
   32580:	e17ffd15 	stw	r5,-12(fp)
   32584:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
   32588:	d0a01604 	addi	r2,gp,-32680
   3258c:	e0bff515 	stw	r2,-44(fp)
  r4 = (int)fd->priv;
   32590:	e0bffc17 	ldw	r2,-16(fp)
   32594:	10800117 	ldw	r2,4(r2)
   32598:	e0bff615 	stw	r2,-40(fp)
  r5 = (int)ptr;
   3259c:	e0bffd17 	ldw	r2,-12(fp)
   325a0:	e0bff715 	stw	r2,-36(fp)
  r6 = len;
   325a4:	e0bffe17 	ldw	r2,-8(fp)
   325a8:	e0bff815 	stw	r2,-32(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
   325ac:	e13ff617 	ldw	r4,-40(fp)
   325b0:	e13fff15 	stw	r4,-4(fp)
   325b4:	e17ff717 	ldw	r5,-36(fp)
   325b8:	e1bff817 	ldw	r6,-32(fp)
   325bc:	e0fff517 	ldw	r3,-44(fp)
   325c0:	1821883a 	mov	r16,r3
   325c4:	8007883a 	mov	r3,r16
   325c8:	e13fff17 	ldw	r4,-4(fp)
   325cc:	003da07a 	break	1
   325d0:	1821883a 	mov	r16,r3
   325d4:	1023883a 	mov	r17,r2
   325d8:	e47ff915 	stw	r17,-28(fp)
   325dc:	e43ff515 	stw	r16,-44(fp)

  rc = r2;
   325e0:	e0bff917 	ldw	r2,-28(fp)
   325e4:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
   325e8:	e0bff517 	ldw	r2,-44(fp)
   325ec:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
   325f0:	e0bffb17 	ldw	r2,-20(fp)
   325f4:	10000326 	beq	r2,zero,32604 <alt_hostfs_read+0x9c>
   325f8:	e0bffb17 	ldw	r2,-20(fp)
   325fc:	0085c83a 	sub	r2,zero,r2
   32600:	00000106 	br	32608 <alt_hostfs_read+0xa0>
   32604:	e0bffa17 	ldw	r2,-24(fp)
}
   32608:	e037883a 	mov	sp,fp
   3260c:	df000217 	ldw	fp,8(sp)
   32610:	dc400117 	ldw	r17,4(sp)
   32614:	dc000017 	ldw	r16,0(sp)
   32618:	dec00304 	addi	sp,sp,12
   3261c:	f800283a 	ret

00032620 <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
   32620:	defff204 	addi	sp,sp,-56
   32624:	df000d15 	stw	fp,52(sp)
   32628:	dc400c15 	stw	r17,48(sp)
   3262c:	dc000b15 	stw	r16,44(sp)
   32630:	df000b04 	addi	fp,sp,44
   32634:	e13ffc15 	stw	r4,-16(fp)
   32638:	e17ffd15 	stw	r5,-12(fp)
   3263c:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
   32640:	d0a01304 	addi	r2,gp,-32692
   32644:	e0bff515 	stw	r2,-44(fp)
  r4 = (int)fd->priv;
   32648:	e0bffc17 	ldw	r2,-16(fp)
   3264c:	10800117 	ldw	r2,4(r2)
   32650:	e0bff615 	stw	r2,-40(fp)
  r5 = (int)ptr;
   32654:	e0bffd17 	ldw	r2,-12(fp)
   32658:	e0bff715 	stw	r2,-36(fp)
  r6 = len;
   3265c:	e0bffe17 	ldw	r2,-8(fp)
   32660:	e0bff815 	stw	r2,-32(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
   32664:	e13ff617 	ldw	r4,-40(fp)
   32668:	e13fff15 	stw	r4,-4(fp)
   3266c:	e17ff717 	ldw	r5,-36(fp)
   32670:	e1bff817 	ldw	r6,-32(fp)
   32674:	e0fff517 	ldw	r3,-44(fp)
   32678:	1821883a 	mov	r16,r3
   3267c:	8007883a 	mov	r3,r16
   32680:	e13fff17 	ldw	r4,-4(fp)
   32684:	003da07a 	break	1
   32688:	1821883a 	mov	r16,r3
   3268c:	1023883a 	mov	r17,r2
   32690:	e47ff915 	stw	r17,-28(fp)
   32694:	e43ff515 	stw	r16,-44(fp)

  rc = r2;
   32698:	e0bff917 	ldw	r2,-28(fp)
   3269c:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
   326a0:	e0bff517 	ldw	r2,-44(fp)
   326a4:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
   326a8:	e0bffb17 	ldw	r2,-20(fp)
   326ac:	10000326 	beq	r2,zero,326bc <alt_hostfs_write+0x9c>
   326b0:	e0bffb17 	ldw	r2,-20(fp)
   326b4:	0085c83a 	sub	r2,zero,r2
   326b8:	00000106 	br	326c0 <alt_hostfs_write+0xa0>
   326bc:	e0bffa17 	ldw	r2,-24(fp)
}
   326c0:	e037883a 	mov	sp,fp
   326c4:	df000217 	ldw	fp,8(sp)
   326c8:	dc400117 	ldw	r17,4(sp)
   326cc:	dc000017 	ldw	r16,0(sp)
   326d0:	dec00304 	addi	sp,sp,12
   326d4:	f800283a 	ret

000326d8 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
   326d8:	defff204 	addi	sp,sp,-56
   326dc:	df000d15 	stw	fp,52(sp)
   326e0:	dc400c15 	stw	r17,48(sp)
   326e4:	dc000b15 	stw	r16,44(sp)
   326e8:	df000b04 	addi	fp,sp,44
   326ec:	e13ffc15 	stw	r4,-16(fp)
   326f0:	e17ffd15 	stw	r5,-12(fp)
   326f4:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
   326f8:	d0a01004 	addi	r2,gp,-32704
   326fc:	e0bff515 	stw	r2,-44(fp)
  r4 = (int)fd->priv;
   32700:	e0bffc17 	ldw	r2,-16(fp)
   32704:	10800117 	ldw	r2,4(r2)
   32708:	e0bff615 	stw	r2,-40(fp)
  r5 = ptr;
   3270c:	e0bffd17 	ldw	r2,-12(fp)
   32710:	e0bff715 	stw	r2,-36(fp)
  r6 = dir;
   32714:	e0bffe17 	ldw	r2,-8(fp)
   32718:	e0bff815 	stw	r2,-32(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
   3271c:	e13ff617 	ldw	r4,-40(fp)
   32720:	e13fff15 	stw	r4,-4(fp)
   32724:	e17ff717 	ldw	r5,-36(fp)
   32728:	e1bff817 	ldw	r6,-32(fp)
   3272c:	e0fff517 	ldw	r3,-44(fp)
   32730:	1821883a 	mov	r16,r3
   32734:	8007883a 	mov	r3,r16
   32738:	e13fff17 	ldw	r4,-4(fp)
   3273c:	003da07a 	break	1
   32740:	1821883a 	mov	r16,r3
   32744:	1023883a 	mov	r17,r2
   32748:	e47ff915 	stw	r17,-28(fp)
   3274c:	e43ff515 	stw	r16,-44(fp)

  rc = r2;
   32750:	e0bff917 	ldw	r2,-28(fp)
   32754:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
   32758:	e0bff517 	ldw	r2,-44(fp)
   3275c:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
   32760:	e0bffb17 	ldw	r2,-20(fp)
   32764:	10000326 	beq	r2,zero,32774 <alt_hostfs_seek+0x9c>
   32768:	e0bffb17 	ldw	r2,-20(fp)
   3276c:	0085c83a 	sub	r2,zero,r2
   32770:	00000106 	br	32778 <alt_hostfs_seek+0xa0>
   32774:	e0bffa17 	ldw	r2,-24(fp)
}
   32778:	e037883a 	mov	sp,fp
   3277c:	df000217 	ldw	fp,8(sp)
   32780:	dc400117 	ldw	r17,4(sp)
   32784:	dc000017 	ldw	r16,0(sp)
   32788:	dec00304 	addi	sp,sp,12
   3278c:	f800283a 	ret

00032790 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
   32790:	deffe204 	addi	sp,sp,-120
   32794:	df001d15 	stw	fp,116(sp)
   32798:	dc401c15 	stw	r17,112(sp)
   3279c:	dc001b15 	stw	r16,108(sp)
   327a0:	df001b04 	addi	fp,sp,108
   327a4:	e13ffd15 	stw	r4,-12(fp)
   327a8:	e17ffe15 	stw	r5,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5;

  r3 = (int)&hcinfo;
   327ac:	d0a00d04 	addi	r2,gp,-32716
   327b0:	e0bfe615 	stw	r2,-104(fp)
  r4 = (int)fd->priv;
   327b4:	e0bffd17 	ldw	r2,-12(fp)
   327b8:	10800117 	ldw	r2,4(r2)
   327bc:	e0bfe715 	stw	r2,-100(fp)
  r5 = (int)&hoststat;
   327c0:	e0bfed04 	addi	r2,fp,-76
   327c4:	e0bfe815 	stw	r2,-96(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5) : "memory" );
   327c8:	e13fe717 	ldw	r4,-100(fp)
   327cc:	e13fff15 	stw	r4,-4(fp)
   327d0:	e17fe817 	ldw	r5,-96(fp)
   327d4:	e0ffe617 	ldw	r3,-104(fp)
   327d8:	1821883a 	mov	r16,r3
   327dc:	8007883a 	mov	r3,r16
   327e0:	e13fff17 	ldw	r4,-4(fp)
   327e4:	003da07a 	break	1
   327e8:	1821883a 	mov	r16,r3
   327ec:	1023883a 	mov	r17,r2
   327f0:	e47fe915 	stw	r17,-92(fp)
   327f4:	e43fe615 	stw	r16,-104(fp)

  rc = r2;
   327f8:	e0bfe917 	ldw	r2,-92(fp)
   327fc:	e0bfea15 	stw	r2,-88(fp)
  error = r3;
   32800:	e0bfe617 	ldw	r2,-104(fp)
   32804:	e0bfeb15 	stw	r2,-84(fp)

  if (error == 0)
   32808:	e0bfeb17 	ldw	r2,-84(fp)
   3280c:	1000621e 	bne	r2,zero,32998 <alt_hostfs_fstat+0x208>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
   32810:	e0bfed04 	addi	r2,fp,-76
   32814:	e0bfe515 	stw	r2,-108(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
   32818:	e0bfe517 	ldw	r2,-108(fp)
   3281c:	10801004 	addi	r2,r2,64
   32820:	e0bfec15 	stw	r2,-80(fp)
    for ( ; ptr < end ; ptr++)
   32824:	00001606 	br	32880 <alt_hostfs_fstat+0xf0>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   32828:	e0bfe517 	ldw	r2,-108(fp)
   3282c:	10800017 	ldw	r2,0(r2)
   32830:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
   32834:	e0bfe517 	ldw	r2,-108(fp)
   32838:	10800017 	ldw	r2,0(r2)
   3283c:	10803fec 	andhi	r2,r2,255
   32840:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   32844:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
   32848:	e0bfe517 	ldw	r2,-108(fp)
   3284c:	10800017 	ldw	r2,0(r2)
   32850:	10bfc00c 	andi	r2,r2,65280
   32854:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
   32858:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
   3285c:	e0bfe517 	ldw	r2,-108(fp)
   32860:	10800017 	ldw	r2,0(r2)
   32864:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
   32868:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
   3286c:	e0bfe517 	ldw	r2,-108(fp)
   32870:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
   32874:	e0bfe517 	ldw	r2,-108(fp)
   32878:	10800104 	addi	r2,r2,4
   3287c:	e0bfe515 	stw	r2,-108(fp)
   32880:	e0ffe517 	ldw	r3,-108(fp)
   32884:	e0bfec17 	ldw	r2,-80(fp)
   32888:	18bfe736 	bltu	r3,r2,32828 <alt_hostfs_fstat+0x98>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
   3288c:	e0bffe17 	ldw	r2,-8(fp)
   32890:	e0bfe515 	stw	r2,-108(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
   32894:	e0bfe517 	ldw	r2,-108(fp)
   32898:	10800f04 	addi	r2,r2,60
   3289c:	e0bfec15 	stw	r2,-80(fp)
    for ( ; ptr < end ; ptr++)
   328a0:	00000506 	br	328b8 <alt_hostfs_fstat+0x128>
      *ptr = 0;
   328a4:	e0bfe517 	ldw	r2,-108(fp)
   328a8:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
   328ac:	e0bfe517 	ldw	r2,-108(fp)
   328b0:	10800104 	addi	r2,r2,4
   328b4:	e0bfe515 	stw	r2,-108(fp)
   328b8:	e0ffe517 	ldw	r3,-108(fp)
   328bc:	e0bfec17 	ldw	r2,-80(fp)
   328c0:	18bff836 	bltu	r3,r2,328a4 <alt_hostfs_fstat+0x114>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
   328c4:	e0bfed17 	ldw	r2,-76(fp)
   328c8:	1007883a 	mov	r3,r2
   328cc:	e0bffe17 	ldw	r2,-8(fp)
   328d0:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
   328d4:	e0bfee17 	ldw	r2,-72(fp)
   328d8:	1007883a 	mov	r3,r2
   328dc:	e0bffe17 	ldw	r2,-8(fp)
   328e0:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
   328e4:	e0ffef17 	ldw	r3,-68(fp)
   328e8:	e0bffe17 	ldw	r2,-8(fp)
   328ec:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
   328f0:	e0bff017 	ldw	r2,-64(fp)
   328f4:	1007883a 	mov	r3,r2
   328f8:	e0bffe17 	ldw	r2,-8(fp)
   328fc:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
   32900:	e0bff117 	ldw	r2,-60(fp)
   32904:	1007883a 	mov	r3,r2
   32908:	e0bffe17 	ldw	r2,-8(fp)
   3290c:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
   32910:	e0bff217 	ldw	r2,-56(fp)
   32914:	1007883a 	mov	r3,r2
   32918:	e0bffe17 	ldw	r2,-8(fp)
   3291c:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
   32920:	e0bff317 	ldw	r2,-52(fp)
   32924:	1007883a 	mov	r3,r2
   32928:	e0bffe17 	ldw	r2,-8(fp)
   3292c:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
   32930:	e0bff517 	ldw	r2,-44(fp)
   32934:	1007883a 	mov	r3,r2
   32938:	e0bffe17 	ldw	r2,-8(fp)
   3293c:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
   32940:	e0bffa17 	ldw	r2,-24(fp)
   32944:	1007883a 	mov	r3,r2
   32948:	e0bffe17 	ldw	r2,-8(fp)
   3294c:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
   32950:	e0bffb17 	ldw	r2,-20(fp)
   32954:	1007883a 	mov	r3,r2
   32958:	e0bffe17 	ldw	r2,-8(fp)
   3295c:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
   32960:	e0bffc17 	ldw	r2,-16(fp)
   32964:	1007883a 	mov	r3,r2
   32968:	e0bffe17 	ldw	r2,-8(fp)
   3296c:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
   32970:	e0bff717 	ldw	r2,-36(fp)
   32974:	1007883a 	mov	r3,r2
   32978:	e0bffe17 	ldw	r2,-8(fp)
   3297c:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
   32980:	e0bff917 	ldw	r2,-28(fp)
   32984:	1007883a 	mov	r3,r2
   32988:	e0bffe17 	ldw	r2,-8(fp)
   3298c:	10c00c15 	stw	r3,48(r2)

    return rc;
   32990:	e0bfea17 	ldw	r2,-88(fp)
   32994:	00000206 	br	329a0 <alt_hostfs_fstat+0x210>
  }
  else
    return -error;
   32998:	e0bfeb17 	ldw	r2,-84(fp)
   3299c:	0085c83a 	sub	r2,zero,r2
}
   329a0:	e037883a 	mov	sp,fp
   329a4:	df000217 	ldw	fp,8(sp)
   329a8:	dc400117 	ldw	r17,4(sp)
   329ac:	dc000017 	ldw	r16,0(sp)
   329b0:	dec00304 	addi	sp,sp,12
   329b4:	f800283a 	ret

000329b8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   329b8:	defff504 	addi	sp,sp,-44
   329bc:	df000a15 	stw	fp,40(sp)
   329c0:	df000a04 	addi	fp,sp,40
   329c4:	e13ffc15 	stw	r4,-16(fp)
   329c8:	e17ffd15 	stw	r5,-12(fp)
   329cc:	e1bffe15 	stw	r6,-8(fp)
   329d0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   329d4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   329d8:	008000f4 	movhi	r2,3
   329dc:	109da004 	addi	r2,r2,30336
   329e0:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   329e4:	10003f26 	beq	r2,zero,32ae4 <alt_alarm_start+0x12c>
  {
    if (alarm)
   329e8:	e0bffc17 	ldw	r2,-16(fp)
   329ec:	10003b26 	beq	r2,zero,32adc <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   329f0:	e0bffc17 	ldw	r2,-16(fp)
   329f4:	e0fffe17 	ldw	r3,-8(fp)
   329f8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   329fc:	e0bffc17 	ldw	r2,-16(fp)
   32a00:	e0ffff17 	ldw	r3,-4(fp)
   32a04:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32a08:	0005303a 	rdctl	r2,status
   32a0c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32a10:	e0fff817 	ldw	r3,-32(fp)
   32a14:	00bfff84 	movi	r2,-2
   32a18:	1884703a 	and	r2,r3,r2
   32a1c:	1001703a 	wrctl	status,r2
  
  return context;
   32a20:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   32a24:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   32a28:	008000f4 	movhi	r2,3
   32a2c:	109da104 	addi	r2,r2,30340
   32a30:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   32a34:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   32a38:	e0fffd17 	ldw	r3,-12(fp)
   32a3c:	e0bff617 	ldw	r2,-40(fp)
   32a40:	1885883a 	add	r2,r3,r2
   32a44:	10c00044 	addi	r3,r2,1
   32a48:	e0bffc17 	ldw	r2,-16(fp)
   32a4c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   32a50:	e0bffc17 	ldw	r2,-16(fp)
   32a54:	10c00217 	ldw	r3,8(r2)
   32a58:	e0bff617 	ldw	r2,-40(fp)
   32a5c:	1880042e 	bgeu	r3,r2,32a70 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   32a60:	e0bffc17 	ldw	r2,-16(fp)
   32a64:	00c00044 	movi	r3,1
   32a68:	10c00405 	stb	r3,16(r2)
   32a6c:	00000206 	br	32a78 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   32a70:	e0bffc17 	ldw	r2,-16(fp)
   32a74:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   32a78:	e0bffc17 	ldw	r2,-16(fp)
   32a7c:	00c000f4 	movhi	r3,3
   32a80:	18d6d604 	addi	r3,r3,23384
   32a84:	e0fff915 	stw	r3,-28(fp)
   32a88:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   32a8c:	e0bffa17 	ldw	r2,-24(fp)
   32a90:	e0fff917 	ldw	r3,-28(fp)
   32a94:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32a98:	e0bff917 	ldw	r2,-28(fp)
   32a9c:	10c00017 	ldw	r3,0(r2)
   32aa0:	e0bffa17 	ldw	r2,-24(fp)
   32aa4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   32aa8:	e0bff917 	ldw	r2,-28(fp)
   32aac:	10800017 	ldw	r2,0(r2)
   32ab0:	e0fffa17 	ldw	r3,-24(fp)
   32ab4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   32ab8:	e0bff917 	ldw	r2,-28(fp)
   32abc:	e0fffa17 	ldw	r3,-24(fp)
   32ac0:	10c00015 	stw	r3,0(r2)
   32ac4:	e0bff717 	ldw	r2,-36(fp)
   32ac8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32acc:	e0bffb17 	ldw	r2,-20(fp)
   32ad0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   32ad4:	0005883a 	mov	r2,zero
   32ad8:	00000306 	br	32ae8 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   32adc:	00bffa84 	movi	r2,-22
   32ae0:	00000106 	br	32ae8 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   32ae4:	00bfde84 	movi	r2,-134
  }
}
   32ae8:	e037883a 	mov	sp,fp
   32aec:	df000017 	ldw	fp,0(sp)
   32af0:	dec00104 	addi	sp,sp,4
   32af4:	f800283a 	ret

00032af8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   32af8:	deffff04 	addi	sp,sp,-4
   32afc:	df000015 	stw	fp,0(sp)
   32b00:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   32b04:	e037883a 	mov	sp,fp
   32b08:	df000017 	ldw	fp,0(sp)
   32b0c:	dec00104 	addi	sp,sp,4
   32b10:	f800283a 	ret

00032b14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32b14:	defffe04 	addi	sp,sp,-8
   32b18:	dfc00115 	stw	ra,4(sp)
   32b1c:	df000015 	stw	fp,0(sp)
   32b20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32b24:	008000f4 	movhi	r2,3
   32b28:	1096c104 	addi	r2,r2,23300
   32b2c:	10800017 	ldw	r2,0(r2)
   32b30:	10000526 	beq	r2,zero,32b48 <alt_get_errno+0x34>
   32b34:	008000f4 	movhi	r2,3
   32b38:	1096c104 	addi	r2,r2,23300
   32b3c:	10800017 	ldw	r2,0(r2)
   32b40:	103ee83a 	callr	r2
   32b44:	00000206 	br	32b50 <alt_get_errno+0x3c>
   32b48:	008000f4 	movhi	r2,3
   32b4c:	109d9504 	addi	r2,r2,30292
}
   32b50:	e037883a 	mov	sp,fp
   32b54:	dfc00117 	ldw	ra,4(sp)
   32b58:	df000017 	ldw	fp,0(sp)
   32b5c:	dec00204 	addi	sp,sp,8
   32b60:	f800283a 	ret

00032b64 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   32b64:	defffa04 	addi	sp,sp,-24
   32b68:	dfc00515 	stw	ra,20(sp)
   32b6c:	df000415 	stw	fp,16(sp)
   32b70:	df000404 	addi	fp,sp,16
   32b74:	e13ffe15 	stw	r4,-8(fp)
   32b78:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   32b7c:	e0bffe17 	ldw	r2,-8(fp)
   32b80:	10000326 	beq	r2,zero,32b90 <alt_dev_llist_insert+0x2c>
   32b84:	e0bffe17 	ldw	r2,-8(fp)
   32b88:	10800217 	ldw	r2,8(r2)
   32b8c:	1000051e 	bne	r2,zero,32ba4 <alt_dev_llist_insert+0x40>
  {
    ALT_ERRNO = EINVAL;
   32b90:	0032b140 	call	32b14 <alt_get_errno>
   32b94:	00c00584 	movi	r3,22
   32b98:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   32b9c:	00bffa84 	movi	r2,-22
   32ba0:	00001306 	br	32bf0 <alt_dev_llist_insert+0x8c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   32ba4:	e0bffe17 	ldw	r2,-8(fp)
   32ba8:	e0ffff17 	ldw	r3,-4(fp)
   32bac:	e0fffc15 	stw	r3,-16(fp)
   32bb0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   32bb4:	e0bffd17 	ldw	r2,-12(fp)
   32bb8:	e0fffc17 	ldw	r3,-16(fp)
   32bbc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32bc0:	e0bffc17 	ldw	r2,-16(fp)
   32bc4:	10c00017 	ldw	r3,0(r2)
   32bc8:	e0bffd17 	ldw	r2,-12(fp)
   32bcc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   32bd0:	e0bffc17 	ldw	r2,-16(fp)
   32bd4:	10800017 	ldw	r2,0(r2)
   32bd8:	e0fffd17 	ldw	r3,-12(fp)
   32bdc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   32be0:	e0bffc17 	ldw	r2,-16(fp)
   32be4:	e0fffd17 	ldw	r3,-12(fp)
   32be8:	10c00015 	stw	r3,0(r2)

  return 0;  
   32bec:	0005883a 	mov	r2,zero
}
   32bf0:	e037883a 	mov	sp,fp
   32bf4:	dfc00117 	ldw	ra,4(sp)
   32bf8:	df000017 	ldw	fp,0(sp)
   32bfc:	dec00204 	addi	sp,sp,8
   32c00:	f800283a 	ret

00032c04 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   32c04:	defffd04 	addi	sp,sp,-12
   32c08:	dfc00215 	stw	ra,8(sp)
   32c0c:	df000115 	stw	fp,4(sp)
   32c10:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   32c14:	008000f4 	movhi	r2,3
   32c18:	108e6004 	addi	r2,r2,14720
   32c1c:	e0bfff15 	stw	r2,-4(fp)
   32c20:	00000606 	br	32c3c <_do_ctors+0x38>
        (*ctor) (); 
   32c24:	e0bfff17 	ldw	r2,-4(fp)
   32c28:	10800017 	ldw	r2,0(r2)
   32c2c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   32c30:	e0bfff17 	ldw	r2,-4(fp)
   32c34:	10bfff04 	addi	r2,r2,-4
   32c38:	e0bfff15 	stw	r2,-4(fp)
   32c3c:	e0ffff17 	ldw	r3,-4(fp)
   32c40:	008000f4 	movhi	r2,3
   32c44:	108e6104 	addi	r2,r2,14724
   32c48:	18bff62e 	bgeu	r3,r2,32c24 <_do_ctors+0x20>
        (*ctor) (); 
}
   32c4c:	e037883a 	mov	sp,fp
   32c50:	dfc00117 	ldw	ra,4(sp)
   32c54:	df000017 	ldw	fp,0(sp)
   32c58:	dec00204 	addi	sp,sp,8
   32c5c:	f800283a 	ret

00032c60 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   32c60:	defffd04 	addi	sp,sp,-12
   32c64:	dfc00215 	stw	ra,8(sp)
   32c68:	df000115 	stw	fp,4(sp)
   32c6c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   32c70:	008000f4 	movhi	r2,3
   32c74:	108e6004 	addi	r2,r2,14720
   32c78:	e0bfff15 	stw	r2,-4(fp)
   32c7c:	00000606 	br	32c98 <_do_dtors+0x38>
        (*dtor) (); 
   32c80:	e0bfff17 	ldw	r2,-4(fp)
   32c84:	10800017 	ldw	r2,0(r2)
   32c88:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   32c8c:	e0bfff17 	ldw	r2,-4(fp)
   32c90:	10bfff04 	addi	r2,r2,-4
   32c94:	e0bfff15 	stw	r2,-4(fp)
   32c98:	e0ffff17 	ldw	r3,-4(fp)
   32c9c:	008000f4 	movhi	r2,3
   32ca0:	108e6104 	addi	r2,r2,14724
   32ca4:	18bff62e 	bgeu	r3,r2,32c80 <_do_dtors+0x20>
        (*dtor) (); 
}
   32ca8:	e037883a 	mov	sp,fp
   32cac:	dfc00117 	ldw	ra,4(sp)
   32cb0:	df000017 	ldw	fp,0(sp)
   32cb4:	dec00204 	addi	sp,sp,8
   32cb8:	f800283a 	ret

00032cbc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   32cbc:	defffa04 	addi	sp,sp,-24
   32cc0:	dfc00515 	stw	ra,20(sp)
   32cc4:	df000415 	stw	fp,16(sp)
   32cc8:	df000404 	addi	fp,sp,16
   32ccc:	e13ffe15 	stw	r4,-8(fp)
   32cd0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   32cd4:	e0bfff17 	ldw	r2,-4(fp)
   32cd8:	10800017 	ldw	r2,0(r2)
   32cdc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   32ce0:	e13ffe17 	ldw	r4,-8(fp)
   32ce4:	00238580 	call	23858 <strlen>
   32ce8:	10800044 	addi	r2,r2,1
   32cec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   32cf0:	00000d06 	br	32d28 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   32cf4:	e0bffc17 	ldw	r2,-16(fp)
   32cf8:	10c00217 	ldw	r3,8(r2)
   32cfc:	e0bffd17 	ldw	r2,-12(fp)
   32d00:	1809883a 	mov	r4,r3
   32d04:	e17ffe17 	ldw	r5,-8(fp)
   32d08:	100d883a 	mov	r6,r2
   32d0c:	00335fc0 	call	335fc <memcmp>
   32d10:	1000021e 	bne	r2,zero,32d1c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   32d14:	e0bffc17 	ldw	r2,-16(fp)
   32d18:	00000706 	br	32d38 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   32d1c:	e0bffc17 	ldw	r2,-16(fp)
   32d20:	10800017 	ldw	r2,0(r2)
   32d24:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   32d28:	e0fffc17 	ldw	r3,-16(fp)
   32d2c:	e0bfff17 	ldw	r2,-4(fp)
   32d30:	18bff01e 	bne	r3,r2,32cf4 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   32d34:	0005883a 	mov	r2,zero
}
   32d38:	e037883a 	mov	sp,fp
   32d3c:	dfc00117 	ldw	ra,4(sp)
   32d40:	df000017 	ldw	fp,0(sp)
   32d44:	dec00204 	addi	sp,sp,8
   32d48:	f800283a 	ret

00032d4c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   32d4c:	defffb04 	addi	sp,sp,-20
   32d50:	dfc00415 	stw	ra,16(sp)
   32d54:	df000315 	stw	fp,12(sp)
   32d58:	df000304 	addi	fp,sp,12
   32d5c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   32d60:	008000f4 	movhi	r2,3
   32d64:	1096bc04 	addi	r2,r2,23280
   32d68:	10800017 	ldw	r2,0(r2)
   32d6c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   32d70:	00003106 	br	32e38 <alt_find_file+0xec>
  {
    len = strlen(next->name);
   32d74:	e0bffd17 	ldw	r2,-12(fp)
   32d78:	10800217 	ldw	r2,8(r2)
   32d7c:	1009883a 	mov	r4,r2
   32d80:	00238580 	call	23858 <strlen>
   32d84:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   32d88:	e0bffd17 	ldw	r2,-12(fp)
   32d8c:	10c00217 	ldw	r3,8(r2)
   32d90:	e0bffe17 	ldw	r2,-8(fp)
   32d94:	10bfffc4 	addi	r2,r2,-1
   32d98:	1885883a 	add	r2,r3,r2
   32d9c:	10800003 	ldbu	r2,0(r2)
   32da0:	10803fcc 	andi	r2,r2,255
   32da4:	1080201c 	xori	r2,r2,128
   32da8:	10bfe004 	addi	r2,r2,-128
   32dac:	10800bd8 	cmpnei	r2,r2,47
   32db0:	1000031e 	bne	r2,zero,32dc0 <alt_find_file+0x74>
    {
      len -= 1;
   32db4:	e0bffe17 	ldw	r2,-8(fp)
   32db8:	10bfffc4 	addi	r2,r2,-1
   32dbc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   32dc0:	e0bffe17 	ldw	r2,-8(fp)
   32dc4:	e0ffff17 	ldw	r3,-4(fp)
   32dc8:	1885883a 	add	r2,r3,r2
   32dcc:	10800003 	ldbu	r2,0(r2)
   32dd0:	10803fcc 	andi	r2,r2,255
   32dd4:	1080201c 	xori	r2,r2,128
   32dd8:	10bfe004 	addi	r2,r2,-128
   32ddc:	10800be0 	cmpeqi	r2,r2,47
   32de0:	1000081e 	bne	r2,zero,32e04 <alt_find_file+0xb8>
   32de4:	e0bffe17 	ldw	r2,-8(fp)
   32de8:	e0ffff17 	ldw	r3,-4(fp)
   32dec:	1885883a 	add	r2,r3,r2
   32df0:	10800003 	ldbu	r2,0(r2)
   32df4:	10803fcc 	andi	r2,r2,255
   32df8:	1080201c 	xori	r2,r2,128
   32dfc:	10bfe004 	addi	r2,r2,-128
   32e00:	10000a1e 	bne	r2,zero,32e2c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   32e04:	e0bffd17 	ldw	r2,-12(fp)
   32e08:	10c00217 	ldw	r3,8(r2)
   32e0c:	e0bffe17 	ldw	r2,-8(fp)
   32e10:	1809883a 	mov	r4,r3
   32e14:	e17fff17 	ldw	r5,-4(fp)
   32e18:	100d883a 	mov	r6,r2
   32e1c:	00335fc0 	call	335fc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   32e20:	1000021e 	bne	r2,zero,32e2c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   32e24:	e0bffd17 	ldw	r2,-12(fp)
   32e28:	00000806 	br	32e4c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   32e2c:	e0bffd17 	ldw	r2,-12(fp)
   32e30:	10800017 	ldw	r2,0(r2)
   32e34:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   32e38:	e0fffd17 	ldw	r3,-12(fp)
   32e3c:	008000f4 	movhi	r2,3
   32e40:	1096bc04 	addi	r2,r2,23280
   32e44:	18bfcb1e 	bne	r3,r2,32d74 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   32e48:	0005883a 	mov	r2,zero
}
   32e4c:	e037883a 	mov	sp,fp
   32e50:	dfc00117 	ldw	ra,4(sp)
   32e54:	df000017 	ldw	fp,0(sp)
   32e58:	dec00204 	addi	sp,sp,8
   32e5c:	f800283a 	ret

00032e60 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
   32e60:	defffc04 	addi	sp,sp,-16
   32e64:	df000315 	stw	fp,12(sp)
   32e68:	df000304 	addi	fp,sp,12
   32e6c:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
   32e70:	e0bfff17 	ldw	r2,-4(fp)
   32e74:	10800217 	ldw	r2,8(r2)
   32e78:	1000021e 	bne	r2,zero,32e84 <alt_fs_reg+0x24>
  {
    return -ENODEV;
   32e7c:	00bffb44 	movi	r2,-19
   32e80:	00001406 	br	32ed4 <alt_fs_reg+0x74>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
   32e84:	e0bfff17 	ldw	r2,-4(fp)
   32e88:	00c000f4 	movhi	r3,3
   32e8c:	18d6bc04 	addi	r3,r3,23280
   32e90:	e0fffd15 	stw	r3,-12(fp)
   32e94:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   32e98:	e0bffe17 	ldw	r2,-8(fp)
   32e9c:	e0fffd17 	ldw	r3,-12(fp)
   32ea0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32ea4:	e0bffd17 	ldw	r2,-12(fp)
   32ea8:	10c00017 	ldw	r3,0(r2)
   32eac:	e0bffe17 	ldw	r2,-8(fp)
   32eb0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   32eb4:	e0bffd17 	ldw	r2,-12(fp)
   32eb8:	10800017 	ldw	r2,0(r2)
   32ebc:	e0fffe17 	ldw	r3,-8(fp)
   32ec0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   32ec4:	e0bffd17 	ldw	r2,-12(fp)
   32ec8:	e0fffe17 	ldw	r3,-8(fp)
   32ecc:	10c00015 	stw	r3,0(r2)

  return 0;
   32ed0:	0005883a 	mov	r2,zero
} 
   32ed4:	e037883a 	mov	sp,fp
   32ed8:	df000017 	ldw	fp,0(sp)
   32edc:	dec00104 	addi	sp,sp,4
   32ee0:	f800283a 	ret

00032ee4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   32ee4:	defffa04 	addi	sp,sp,-24
   32ee8:	dfc00515 	stw	ra,20(sp)
   32eec:	df000415 	stw	fp,16(sp)
   32ef0:	dc000315 	stw	r16,12(sp)
   32ef4:	df000304 	addi	fp,sp,12
   32ef8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   32efc:	00bffa04 	movi	r2,-24
   32f00:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   32f04:	e03ffd15 	stw	zero,-12(fp)
   32f08:	00002106 	br	32f90 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
   32f0c:	040000f4 	movhi	r16,3
   32f10:	84123404 	addi	r16,r16,18640
   32f14:	e0bffd17 	ldw	r2,-12(fp)
   32f18:	1009883a 	mov	r4,r2
   32f1c:	01400304 	movi	r5,12
   32f20:	00211880 	call	21188 <__mulsi3>
   32f24:	8085883a 	add	r2,r16,r2
   32f28:	10800017 	ldw	r2,0(r2)
   32f2c:	1000151e 	bne	r2,zero,32f84 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
   32f30:	040000f4 	movhi	r16,3
   32f34:	84123404 	addi	r16,r16,18640
   32f38:	e0bffd17 	ldw	r2,-12(fp)
   32f3c:	1009883a 	mov	r4,r2
   32f40:	01400304 	movi	r5,12
   32f44:	00211880 	call	21188 <__mulsi3>
   32f48:	8085883a 	add	r2,r16,r2
   32f4c:	e0ffff17 	ldw	r3,-4(fp)
   32f50:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   32f54:	008000f4 	movhi	r2,3
   32f58:	1096c004 	addi	r2,r2,23296
   32f5c:	10c00017 	ldw	r3,0(r2)
   32f60:	e0bffd17 	ldw	r2,-12(fp)
   32f64:	1880040e 	bge	r3,r2,32f78 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
   32f68:	008000f4 	movhi	r2,3
   32f6c:	1096c004 	addi	r2,r2,23296
   32f70:	e0fffd17 	ldw	r3,-12(fp)
   32f74:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   32f78:	e0bffd17 	ldw	r2,-12(fp)
   32f7c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   32f80:	00000606 	br	32f9c <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   32f84:	e0bffd17 	ldw	r2,-12(fp)
   32f88:	10800044 	addi	r2,r2,1
   32f8c:	e0bffd15 	stw	r2,-12(fp)
   32f90:	e0bffd17 	ldw	r2,-12(fp)
   32f94:	10800810 	cmplti	r2,r2,32
   32f98:	103fdc1e 	bne	r2,zero,32f0c <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   32f9c:	e0bffe17 	ldw	r2,-8(fp)
}
   32fa0:	e037883a 	mov	sp,fp
   32fa4:	dfc00217 	ldw	ra,8(sp)
   32fa8:	df000117 	ldw	fp,4(sp)
   32fac:	dc000017 	ldw	r16,0(sp)
   32fb0:	dec00304 	addi	sp,sp,12
   32fb4:	f800283a 	ret

00032fb8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   32fb8:	deffff04 	addi	sp,sp,-4
   32fbc:	df000015 	stw	fp,0(sp)
   32fc0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   32fc4:	e037883a 	mov	sp,fp
   32fc8:	df000017 	ldw	fp,0(sp)
   32fcc:	dec00104 	addi	sp,sp,4
   32fd0:	f800283a 	ret

00032fd4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   32fd4:	defff904 	addi	sp,sp,-28
   32fd8:	dfc00615 	stw	ra,24(sp)
   32fdc:	df000515 	stw	fp,20(sp)
   32fe0:	df000504 	addi	fp,sp,20
   32fe4:	e13ffc15 	stw	r4,-16(fp)
   32fe8:	e17ffd15 	stw	r5,-12(fp)
   32fec:	e1bffe15 	stw	r6,-8(fp)
   32ff0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   32ff4:	e0800217 	ldw	r2,8(fp)
   32ff8:	d8800015 	stw	r2,0(sp)
   32ffc:	e13ffc17 	ldw	r4,-16(fp)
   33000:	e17ffd17 	ldw	r5,-12(fp)
   33004:	e1bffe17 	ldw	r6,-8(fp)
   33008:	e1ffff17 	ldw	r7,-4(fp)
   3300c:	00331ac0 	call	331ac <alt_iic_isr_register>
}  
   33010:	e037883a 	mov	sp,fp
   33014:	dfc00117 	ldw	ra,4(sp)
   33018:	df000017 	ldw	fp,0(sp)
   3301c:	dec00204 	addi	sp,sp,8
   33020:	f800283a 	ret

00033024 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   33024:	defff904 	addi	sp,sp,-28
   33028:	df000615 	stw	fp,24(sp)
   3302c:	df000604 	addi	fp,sp,24
   33030:	e13ffe15 	stw	r4,-8(fp)
   33034:	e17fff15 	stw	r5,-4(fp)
   33038:	e0bfff17 	ldw	r2,-4(fp)
   3303c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   33040:	0005303a 	rdctl	r2,status
   33044:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   33048:	e0fffb17 	ldw	r3,-20(fp)
   3304c:	00bfff84 	movi	r2,-2
   33050:	1884703a 	and	r2,r3,r2
   33054:	1001703a 	wrctl	status,r2
  
  return context;
   33058:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   3305c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   33060:	e0bffa17 	ldw	r2,-24(fp)
   33064:	00c00044 	movi	r3,1
   33068:	1884983a 	sll	r2,r3,r2
   3306c:	1007883a 	mov	r3,r2
   33070:	008000f4 	movhi	r2,3
   33074:	109d9f04 	addi	r2,r2,30332
   33078:	10800017 	ldw	r2,0(r2)
   3307c:	1886b03a 	or	r3,r3,r2
   33080:	008000f4 	movhi	r2,3
   33084:	109d9f04 	addi	r2,r2,30332
   33088:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3308c:	008000f4 	movhi	r2,3
   33090:	109d9f04 	addi	r2,r2,30332
   33094:	10800017 	ldw	r2,0(r2)
   33098:	100170fa 	wrctl	ienable,r2
   3309c:	e0bffc17 	ldw	r2,-16(fp)
   330a0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   330a4:	e0bffd17 	ldw	r2,-12(fp)
   330a8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   330ac:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   330b0:	e037883a 	mov	sp,fp
   330b4:	df000017 	ldw	fp,0(sp)
   330b8:	dec00104 	addi	sp,sp,4
   330bc:	f800283a 	ret

000330c0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   330c0:	defff904 	addi	sp,sp,-28
   330c4:	df000615 	stw	fp,24(sp)
   330c8:	df000604 	addi	fp,sp,24
   330cc:	e13ffe15 	stw	r4,-8(fp)
   330d0:	e17fff15 	stw	r5,-4(fp)
   330d4:	e0bfff17 	ldw	r2,-4(fp)
   330d8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   330dc:	0005303a 	rdctl	r2,status
   330e0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   330e4:	e0fffb17 	ldw	r3,-20(fp)
   330e8:	00bfff84 	movi	r2,-2
   330ec:	1884703a 	and	r2,r3,r2
   330f0:	1001703a 	wrctl	status,r2
  
  return context;
   330f4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   330f8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   330fc:	e0bffa17 	ldw	r2,-24(fp)
   33100:	00c00044 	movi	r3,1
   33104:	1884983a 	sll	r2,r3,r2
   33108:	0084303a 	nor	r2,zero,r2
   3310c:	1007883a 	mov	r3,r2
   33110:	008000f4 	movhi	r2,3
   33114:	109d9f04 	addi	r2,r2,30332
   33118:	10800017 	ldw	r2,0(r2)
   3311c:	1886703a 	and	r3,r3,r2
   33120:	008000f4 	movhi	r2,3
   33124:	109d9f04 	addi	r2,r2,30332
   33128:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3312c:	008000f4 	movhi	r2,3
   33130:	109d9f04 	addi	r2,r2,30332
   33134:	10800017 	ldw	r2,0(r2)
   33138:	100170fa 	wrctl	ienable,r2
   3313c:	e0bffc17 	ldw	r2,-16(fp)
   33140:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   33144:	e0bffd17 	ldw	r2,-12(fp)
   33148:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   3314c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   33150:	e037883a 	mov	sp,fp
   33154:	df000017 	ldw	fp,0(sp)
   33158:	dec00104 	addi	sp,sp,4
   3315c:	f800283a 	ret

00033160 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   33160:	defffc04 	addi	sp,sp,-16
   33164:	df000315 	stw	fp,12(sp)
   33168:	df000304 	addi	fp,sp,12
   3316c:	e13ffe15 	stw	r4,-8(fp)
   33170:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   33174:	000530fa 	rdctl	r2,ienable
   33178:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   3317c:	e0bfff17 	ldw	r2,-4(fp)
   33180:	00c00044 	movi	r3,1
   33184:	1884983a 	sll	r2,r3,r2
   33188:	1007883a 	mov	r3,r2
   3318c:	e0bffd17 	ldw	r2,-12(fp)
   33190:	1884703a 	and	r2,r3,r2
   33194:	1004c03a 	cmpne	r2,r2,zero
   33198:	10803fcc 	andi	r2,r2,255
}
   3319c:	e037883a 	mov	sp,fp
   331a0:	df000017 	ldw	fp,0(sp)
   331a4:	dec00104 	addi	sp,sp,4
   331a8:	f800283a 	ret

000331ac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   331ac:	defff504 	addi	sp,sp,-44
   331b0:	dfc00a15 	stw	ra,40(sp)
   331b4:	df000915 	stw	fp,36(sp)
   331b8:	df000904 	addi	fp,sp,36
   331bc:	e13ffc15 	stw	r4,-16(fp)
   331c0:	e17ffd15 	stw	r5,-12(fp)
   331c4:	e1bffe15 	stw	r6,-8(fp)
   331c8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   331cc:	00bffa84 	movi	r2,-22
   331d0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   331d4:	e0bffd17 	ldw	r2,-12(fp)
   331d8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   331dc:	e0bff817 	ldw	r2,-32(fp)
   331e0:	10800808 	cmpgei	r2,r2,32
   331e4:	1000271e 	bne	r2,zero,33284 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   331e8:	0005303a 	rdctl	r2,status
   331ec:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   331f0:	e0fffa17 	ldw	r3,-24(fp)
   331f4:	00bfff84 	movi	r2,-2
   331f8:	1884703a 	and	r2,r3,r2
   331fc:	1001703a 	wrctl	status,r2
  
  return context;
   33200:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   33204:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
   33208:	00c000f4 	movhi	r3,3
   3320c:	18ddec04 	addi	r3,r3,30640
   33210:	e0bff817 	ldw	r2,-32(fp)
   33214:	100490fa 	slli	r2,r2,3
   33218:	1885883a 	add	r2,r3,r2
   3321c:	e0fffe17 	ldw	r3,-8(fp)
   33220:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   33224:	00c000f4 	movhi	r3,3
   33228:	18ddec04 	addi	r3,r3,30640
   3322c:	e0bff817 	ldw	r2,-32(fp)
   33230:	100490fa 	slli	r2,r2,3
   33234:	1885883a 	add	r2,r3,r2
   33238:	10800104 	addi	r2,r2,4
   3323c:	e0ffff17 	ldw	r3,-4(fp)
   33240:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   33244:	e0bffe17 	ldw	r2,-8(fp)
   33248:	10000526 	beq	r2,zero,33260 <alt_iic_isr_register+0xb4>
   3324c:	e0bff817 	ldw	r2,-32(fp)
   33250:	e13ffc17 	ldw	r4,-16(fp)
   33254:	100b883a 	mov	r5,r2
   33258:	00330240 	call	33024 <alt_ic_irq_enable>
   3325c:	00000406 	br	33270 <alt_iic_isr_register+0xc4>
   33260:	e0bff817 	ldw	r2,-32(fp)
   33264:	e13ffc17 	ldw	r4,-16(fp)
   33268:	100b883a 	mov	r5,r2
   3326c:	00330c00 	call	330c0 <alt_ic_irq_disable>
   33270:	e0bff715 	stw	r2,-36(fp)
   33274:	e0bff917 	ldw	r2,-28(fp)
   33278:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3327c:	e0bffb17 	ldw	r2,-20(fp)
   33280:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   33284:	e0bff717 	ldw	r2,-36(fp)
}
   33288:	e037883a 	mov	sp,fp
   3328c:	dfc00117 	ldw	ra,4(sp)
   33290:	df000017 	ldw	fp,0(sp)
   33294:	dec00204 	addi	sp,sp,8
   33298:	f800283a 	ret

0003329c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   3329c:	defff804 	addi	sp,sp,-32
   332a0:	dfc00715 	stw	ra,28(sp)
   332a4:	df000615 	stw	fp,24(sp)
   332a8:	dc000515 	stw	r16,20(sp)
   332ac:	df000504 	addi	fp,sp,20
   332b0:	e13ffc15 	stw	r4,-16(fp)
   332b4:	e17ffd15 	stw	r5,-12(fp)
   332b8:	e1bffe15 	stw	r6,-8(fp)
   332bc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   332c0:	e13ffd17 	ldw	r4,-12(fp)
   332c4:	e17ffe17 	ldw	r5,-8(fp)
   332c8:	e1bfff17 	ldw	r6,-4(fp)
   332cc:	0030d440 	call	30d44 <open>
   332d0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   332d4:	e0bffb17 	ldw	r2,-20(fp)
   332d8:	10002216 	blt	r2,zero,33364 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   332dc:	040000f4 	movhi	r16,3
   332e0:	84123404 	addi	r16,r16,18640
   332e4:	e0bffb17 	ldw	r2,-20(fp)
   332e8:	1009883a 	mov	r4,r2
   332ec:	01400304 	movi	r5,12
   332f0:	00211880 	call	21188 <__mulsi3>
   332f4:	8085883a 	add	r2,r16,r2
   332f8:	10c00017 	ldw	r3,0(r2)
   332fc:	e0bffc17 	ldw	r2,-16(fp)
   33300:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   33304:	040000f4 	movhi	r16,3
   33308:	84123404 	addi	r16,r16,18640
   3330c:	e0bffb17 	ldw	r2,-20(fp)
   33310:	1009883a 	mov	r4,r2
   33314:	01400304 	movi	r5,12
   33318:	00211880 	call	21188 <__mulsi3>
   3331c:	8085883a 	add	r2,r16,r2
   33320:	10800104 	addi	r2,r2,4
   33324:	10c00017 	ldw	r3,0(r2)
   33328:	e0bffc17 	ldw	r2,-16(fp)
   3332c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   33330:	040000f4 	movhi	r16,3
   33334:	84123404 	addi	r16,r16,18640
   33338:	e0bffb17 	ldw	r2,-20(fp)
   3333c:	1009883a 	mov	r4,r2
   33340:	01400304 	movi	r5,12
   33344:	00211880 	call	21188 <__mulsi3>
   33348:	8085883a 	add	r2,r16,r2
   3334c:	10800204 	addi	r2,r2,8
   33350:	10c00017 	ldw	r3,0(r2)
   33354:	e0bffc17 	ldw	r2,-16(fp)
   33358:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   3335c:	e13ffb17 	ldw	r4,-20(fp)
   33360:	0030fe00 	call	30fe0 <alt_release_fd>
  }
} 
   33364:	e037883a 	mov	sp,fp
   33368:	dfc00217 	ldw	ra,8(sp)
   3336c:	df000117 	ldw	fp,4(sp)
   33370:	dc000017 	ldw	r16,0(sp)
   33374:	dec00304 	addi	sp,sp,12
   33378:	f800283a 	ret

0003337c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   3337c:	defffb04 	addi	sp,sp,-20
   33380:	dfc00415 	stw	ra,16(sp)
   33384:	df000315 	stw	fp,12(sp)
   33388:	df000304 	addi	fp,sp,12
   3338c:	e13ffd15 	stw	r4,-12(fp)
   33390:	e17ffe15 	stw	r5,-8(fp)
   33394:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   33398:	010000f4 	movhi	r4,3
   3339c:	21123704 	addi	r4,r4,18652
   333a0:	e17ffd17 	ldw	r5,-12(fp)
   333a4:	01800044 	movi	r6,1
   333a8:	01c07fc4 	movi	r7,511
   333ac:	003329c0 	call	3329c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   333b0:	010000f4 	movhi	r4,3
   333b4:	21123404 	addi	r4,r4,18640
   333b8:	e17ffe17 	ldw	r5,-8(fp)
   333bc:	000d883a 	mov	r6,zero
   333c0:	01c07fc4 	movi	r7,511
   333c4:	003329c0 	call	3329c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   333c8:	010000f4 	movhi	r4,3
   333cc:	21123a04 	addi	r4,r4,18664
   333d0:	e17fff17 	ldw	r5,-4(fp)
   333d4:	01800044 	movi	r6,1
   333d8:	01c07fc4 	movi	r7,511
   333dc:	003329c0 	call	3329c <alt_open_fd>
}  
   333e0:	e037883a 	mov	sp,fp
   333e4:	dfc00117 	ldw	ra,4(sp)
   333e8:	df000017 	ldw	fp,0(sp)
   333ec:	dec00204 	addi	sp,sp,8
   333f0:	f800283a 	ret

000333f4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   333f4:	defffa04 	addi	sp,sp,-24
   333f8:	df000515 	stw	fp,20(sp)
   333fc:	df000504 	addi	fp,sp,20
   33400:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   33404:	0005303a 	rdctl	r2,status
   33408:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3340c:	e0fffc17 	ldw	r3,-16(fp)
   33410:	00bfff84 	movi	r2,-2
   33414:	1884703a 	and	r2,r3,r2
   33418:	1001703a 	wrctl	status,r2
  
  return context;
   3341c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   33420:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   33424:	e0bfff17 	ldw	r2,-4(fp)
   33428:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   3342c:	e0bffd17 	ldw	r2,-12(fp)
   33430:	10800017 	ldw	r2,0(r2)
   33434:	e0fffd17 	ldw	r3,-12(fp)
   33438:	18c00117 	ldw	r3,4(r3)
   3343c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   33440:	e0bffd17 	ldw	r2,-12(fp)
   33444:	10800117 	ldw	r2,4(r2)
   33448:	e0fffd17 	ldw	r3,-12(fp)
   3344c:	18c00017 	ldw	r3,0(r3)
   33450:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   33454:	e0bffd17 	ldw	r2,-12(fp)
   33458:	e0fffd17 	ldw	r3,-12(fp)
   3345c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   33460:	e0bffd17 	ldw	r2,-12(fp)
   33464:	e0fffd17 	ldw	r3,-12(fp)
   33468:	10c00015 	stw	r3,0(r2)
   3346c:	e0bffb17 	ldw	r2,-20(fp)
   33470:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   33474:	e0bffe17 	ldw	r2,-8(fp)
   33478:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   3347c:	e037883a 	mov	sp,fp
   33480:	df000017 	ldw	fp,0(sp)
   33484:	dec00104 	addi	sp,sp,4
   33488:	f800283a 	ret

0003348c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   3348c:	defffb04 	addi	sp,sp,-20
   33490:	dfc00415 	stw	ra,16(sp)
   33494:	df000315 	stw	fp,12(sp)
   33498:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   3349c:	d0a02017 	ldw	r2,-32640(gp)
   334a0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   334a4:	d0a6eb17 	ldw	r2,-25684(gp)
   334a8:	10800044 	addi	r2,r2,1
   334ac:	d0a6eb15 	stw	r2,-25684(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   334b0:	00002e06 	br	3356c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   334b4:	e0bffd17 	ldw	r2,-12(fp)
   334b8:	10800017 	ldw	r2,0(r2)
   334bc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   334c0:	e0bffd17 	ldw	r2,-12(fp)
   334c4:	10800403 	ldbu	r2,16(r2)
   334c8:	10803fcc 	andi	r2,r2,255
   334cc:	10000426 	beq	r2,zero,334e0 <alt_tick+0x54>
   334d0:	d0a6eb17 	ldw	r2,-25684(gp)
   334d4:	1000021e 	bne	r2,zero,334e0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   334d8:	e0bffd17 	ldw	r2,-12(fp)
   334dc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   334e0:	e0bffd17 	ldw	r2,-12(fp)
   334e4:	10800217 	ldw	r2,8(r2)
   334e8:	d0e6eb17 	ldw	r3,-25684(gp)
   334ec:	18801d36 	bltu	r3,r2,33564 <alt_tick+0xd8>
   334f0:	e0bffd17 	ldw	r2,-12(fp)
   334f4:	10800403 	ldbu	r2,16(r2)
   334f8:	10803fcc 	andi	r2,r2,255
   334fc:	1000191e 	bne	r2,zero,33564 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   33500:	e0bffd17 	ldw	r2,-12(fp)
   33504:	10c00317 	ldw	r3,12(r2)
   33508:	e0bffd17 	ldw	r2,-12(fp)
   3350c:	10800517 	ldw	r2,20(r2)
   33510:	1009883a 	mov	r4,r2
   33514:	183ee83a 	callr	r3
   33518:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   3351c:	e0bfff17 	ldw	r2,-4(fp)
   33520:	1000031e 	bne	r2,zero,33530 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   33524:	e13ffd17 	ldw	r4,-12(fp)
   33528:	00333f40 	call	333f4 <alt_alarm_stop>
   3352c:	00000d06 	br	33564 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   33530:	e0bffd17 	ldw	r2,-12(fp)
   33534:	10c00217 	ldw	r3,8(r2)
   33538:	e0bfff17 	ldw	r2,-4(fp)
   3353c:	1887883a 	add	r3,r3,r2
   33540:	e0bffd17 	ldw	r2,-12(fp)
   33544:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   33548:	e0bffd17 	ldw	r2,-12(fp)
   3354c:	10c00217 	ldw	r3,8(r2)
   33550:	d0a6eb17 	ldw	r2,-25684(gp)
   33554:	1880032e 	bgeu	r3,r2,33564 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   33558:	e0bffd17 	ldw	r2,-12(fp)
   3355c:	00c00044 	movi	r3,1
   33560:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   33564:	e0bffe17 	ldw	r2,-8(fp)
   33568:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   3356c:	e0fffd17 	ldw	r3,-12(fp)
   33570:	d0a02004 	addi	r2,gp,-32640
   33574:	18bfcf1e 	bne	r3,r2,334b4 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   33578:	0001883a 	nop
}
   3357c:	e037883a 	mov	sp,fp
   33580:	dfc00117 	ldw	ra,4(sp)
   33584:	df000017 	ldw	fp,0(sp)
   33588:	dec00204 	addi	sp,sp,8
   3358c:	f800283a 	ret

00033590 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   33590:	deffff04 	addi	sp,sp,-4
   33594:	df000015 	stw	fp,0(sp)
   33598:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   3359c:	000170fa 	wrctl	ienable,zero
}
   335a0:	e037883a 	mov	sp,fp
   335a4:	df000017 	ldw	fp,0(sp)
   335a8:	dec00104 	addi	sp,sp,4
   335ac:	f800283a 	ret

000335b0 <atexit>:
   335b0:	200b883a 	mov	r5,r4
   335b4:	000d883a 	mov	r6,zero
   335b8:	0009883a 	mov	r4,zero
   335bc:	000f883a 	mov	r7,zero
   335c0:	00336781 	jmpi	33678 <__register_exitproc>

000335c4 <exit>:
   335c4:	defffe04 	addi	sp,sp,-8
   335c8:	000b883a 	mov	r5,zero
   335cc:	dc000015 	stw	r16,0(sp)
   335d0:	dfc00115 	stw	ra,4(sp)
   335d4:	2021883a 	mov	r16,r4
   335d8:	00337a80 	call	337a8 <__call_exitprocs>
   335dc:	008000f4 	movhi	r2,3
   335e0:	1096b604 	addi	r2,r2,23256
   335e4:	11000017 	ldw	r4,0(r2)
   335e8:	20800f17 	ldw	r2,60(r4)
   335ec:	10000126 	beq	r2,zero,335f4 <exit+0x30>
   335f0:	103ee83a 	callr	r2
   335f4:	8009883a 	mov	r4,r16
   335f8:	00339480 	call	33948 <_exit>

000335fc <memcmp>:
   335fc:	01c000c4 	movi	r7,3
   33600:	3980192e 	bgeu	r7,r6,33668 <memcmp+0x6c>
   33604:	2904b03a 	or	r2,r5,r4
   33608:	11c4703a 	and	r2,r2,r7
   3360c:	10000f26 	beq	r2,zero,3364c <memcmp+0x50>
   33610:	20c00003 	ldbu	r3,0(r4)
   33614:	28800003 	ldbu	r2,0(r5)
   33618:	1880151e 	bne	r3,r2,33670 <memcmp+0x74>
   3361c:	31bfff84 	addi	r6,r6,-2
   33620:	01ffffc4 	movi	r7,-1
   33624:	00000406 	br	33638 <memcmp+0x3c>
   33628:	20c00003 	ldbu	r3,0(r4)
   3362c:	28800003 	ldbu	r2,0(r5)
   33630:	31bfffc4 	addi	r6,r6,-1
   33634:	18800e1e 	bne	r3,r2,33670 <memcmp+0x74>
   33638:	21000044 	addi	r4,r4,1
   3363c:	29400044 	addi	r5,r5,1
   33640:	31fff91e 	bne	r6,r7,33628 <memcmp+0x2c>
   33644:	0005883a 	mov	r2,zero
   33648:	f800283a 	ret
   3364c:	20c00017 	ldw	r3,0(r4)
   33650:	28800017 	ldw	r2,0(r5)
   33654:	1880041e 	bne	r3,r2,33668 <memcmp+0x6c>
   33658:	31bfff04 	addi	r6,r6,-4
   3365c:	21000104 	addi	r4,r4,4
   33660:	29400104 	addi	r5,r5,4
   33664:	39bff936 	bltu	r7,r6,3364c <memcmp+0x50>
   33668:	303fe91e 	bne	r6,zero,33610 <memcmp+0x14>
   3366c:	003ff506 	br	33644 <memcmp+0x48>
   33670:	1885c83a 	sub	r2,r3,r2
   33674:	f800283a 	ret

00033678 <__register_exitproc>:
   33678:	defffa04 	addi	sp,sp,-24
   3367c:	008000f4 	movhi	r2,3
   33680:	1096b604 	addi	r2,r2,23256
   33684:	dc000315 	stw	r16,12(sp)
   33688:	14000017 	ldw	r16,0(r2)
   3368c:	dc400415 	stw	r17,16(sp)
   33690:	dfc00515 	stw	ra,20(sp)
   33694:	80805217 	ldw	r2,328(r16)
   33698:	2023883a 	mov	r17,r4
   3369c:	10003e26 	beq	r2,zero,33798 <__register_exitproc+0x120>
   336a0:	10c00117 	ldw	r3,4(r2)
   336a4:	020007c4 	movi	r8,31
   336a8:	40c0180e 	bge	r8,r3,3370c <__register_exitproc+0x94>
   336ac:	008000b4 	movhi	r2,2
   336b0:	108a5e04 	addi	r2,r2,10616
   336b4:	1000061e 	bne	r2,zero,336d0 <__register_exitproc+0x58>
   336b8:	00bfffc4 	movi	r2,-1
   336bc:	dfc00517 	ldw	ra,20(sp)
   336c0:	dc400417 	ldw	r17,16(sp)
   336c4:	dc000317 	ldw	r16,12(sp)
   336c8:	dec00604 	addi	sp,sp,24
   336cc:	f800283a 	ret
   336d0:	01006404 	movi	r4,400
   336d4:	d9400015 	stw	r5,0(sp)
   336d8:	d9800115 	stw	r6,4(sp)
   336dc:	d9c00215 	stw	r7,8(sp)
   336e0:	00229780 	call	22978 <malloc>
   336e4:	d9400017 	ldw	r5,0(sp)
   336e8:	d9800117 	ldw	r6,4(sp)
   336ec:	d9c00217 	ldw	r7,8(sp)
   336f0:	103ff126 	beq	r2,zero,336b8 <__register_exitproc+0x40>
   336f4:	80c05217 	ldw	r3,328(r16)
   336f8:	10000115 	stw	zero,4(r2)
   336fc:	10c00015 	stw	r3,0(r2)
   33700:	80805215 	stw	r2,328(r16)
   33704:	10006215 	stw	zero,392(r2)
   33708:	10006315 	stw	zero,396(r2)
   3370c:	10c00117 	ldw	r3,4(r2)
   33710:	88000d1e 	bne	r17,zero,33748 <__register_exitproc+0xd0>
   33714:	19000084 	addi	r4,r3,2
   33718:	2109883a 	add	r4,r4,r4
   3371c:	18c00044 	addi	r3,r3,1
   33720:	2109883a 	add	r4,r4,r4
   33724:	1109883a 	add	r4,r2,r4
   33728:	10c00115 	stw	r3,4(r2)
   3372c:	0005883a 	mov	r2,zero
   33730:	21400015 	stw	r5,0(r4)
   33734:	dfc00517 	ldw	ra,20(sp)
   33738:	dc400417 	ldw	r17,16(sp)
   3373c:	dc000317 	ldw	r16,12(sp)
   33740:	dec00604 	addi	sp,sp,24
   33744:	f800283a 	ret
   33748:	02400044 	movi	r9,1
   3374c:	12806217 	ldw	r10,392(r2)
   33750:	48d2983a 	sll	r9,r9,r3
   33754:	19000804 	addi	r4,r3,32
   33758:	18d1883a 	add	r8,r3,r3
   3375c:	2109883a 	add	r4,r4,r4
   33760:	4211883a 	add	r8,r8,r8
   33764:	2109883a 	add	r4,r4,r4
   33768:	1109883a 	add	r4,r2,r4
   3376c:	1211883a 	add	r8,r2,r8
   33770:	5254b03a 	or	r10,r10,r9
   33774:	21c02215 	stw	r7,136(r4)
   33778:	41802215 	stw	r6,136(r8)
   3377c:	12806215 	stw	r10,392(r2)
   33780:	01000084 	movi	r4,2
   33784:	893fe31e 	bne	r17,r4,33714 <__register_exitproc+0x9c>
   33788:	11006317 	ldw	r4,396(r2)
   3378c:	2252b03a 	or	r9,r4,r9
   33790:	12406315 	stw	r9,396(r2)
   33794:	003fdf06 	br	33714 <__register_exitproc+0x9c>
   33798:	008000f4 	movhi	r2,3
   3379c:	109e2c04 	addi	r2,r2,30896
   337a0:	80805215 	stw	r2,328(r16)
   337a4:	003fbe06 	br	336a0 <__register_exitproc+0x28>

000337a8 <__call_exitprocs>:
   337a8:	008000f4 	movhi	r2,3
   337ac:	1096b604 	addi	r2,r2,23256
   337b0:	10800017 	ldw	r2,0(r2)
   337b4:	defff304 	addi	sp,sp,-52
   337b8:	df000b15 	stw	fp,44(sp)
   337bc:	d8800015 	stw	r2,0(sp)
   337c0:	10805204 	addi	r2,r2,328
   337c4:	dd400815 	stw	r21,32(sp)
   337c8:	dfc00c15 	stw	ra,48(sp)
   337cc:	ddc00a15 	stw	r23,40(sp)
   337d0:	dd800915 	stw	r22,36(sp)
   337d4:	dd000715 	stw	r20,28(sp)
   337d8:	dcc00615 	stw	r19,24(sp)
   337dc:	dc800515 	stw	r18,20(sp)
   337e0:	dc400415 	stw	r17,16(sp)
   337e4:	dc000315 	stw	r16,12(sp)
   337e8:	d9000115 	stw	r4,4(sp)
   337ec:	2839883a 	mov	fp,r5
   337f0:	d8800215 	stw	r2,8(sp)
   337f4:	057fffc4 	movi	r21,-1
   337f8:	d8800017 	ldw	r2,0(sp)
   337fc:	ddc00217 	ldw	r23,8(sp)
   33800:	14805217 	ldw	r18,328(r2)
   33804:	90001726 	beq	r18,zero,33864 <__call_exitprocs+0xbc>
   33808:	94400117 	ldw	r17,4(r18)
   3380c:	8c3fffc4 	addi	r16,r17,-1
   33810:	80001116 	blt	r16,zero,33858 <__call_exitprocs+0xb0>
   33814:	8c400044 	addi	r17,r17,1
   33818:	8427883a 	add	r19,r16,r16
   3381c:	8c63883a 	add	r17,r17,r17
   33820:	95802204 	addi	r22,r18,136
   33824:	9ce7883a 	add	r19,r19,r19
   33828:	8c63883a 	add	r17,r17,r17
   3382c:	b4e7883a 	add	r19,r22,r19
   33830:	9463883a 	add	r17,r18,r17
   33834:	e0001726 	beq	fp,zero,33894 <__call_exitprocs+0xec>
   33838:	8c87c83a 	sub	r3,r17,r18
   3383c:	b0c7883a 	add	r3,r22,r3
   33840:	18c01e17 	ldw	r3,120(r3)
   33844:	1f001326 	beq	r3,fp,33894 <__call_exitprocs+0xec>
   33848:	843fffc4 	addi	r16,r16,-1
   3384c:	9cffff04 	addi	r19,r19,-4
   33850:	8c7fff04 	addi	r17,r17,-4
   33854:	857ff71e 	bne	r16,r21,33834 <__call_exitprocs+0x8c>
   33858:	008000b4 	movhi	r2,2
   3385c:	108a6304 	addi	r2,r2,10636
   33860:	10002a1e 	bne	r2,zero,3390c <__call_exitprocs+0x164>
   33864:	dfc00c17 	ldw	ra,48(sp)
   33868:	df000b17 	ldw	fp,44(sp)
   3386c:	ddc00a17 	ldw	r23,40(sp)
   33870:	dd800917 	ldw	r22,36(sp)
   33874:	dd400817 	ldw	r21,32(sp)
   33878:	dd000717 	ldw	r20,28(sp)
   3387c:	dcc00617 	ldw	r19,24(sp)
   33880:	dc800517 	ldw	r18,20(sp)
   33884:	dc400417 	ldw	r17,16(sp)
   33888:	dc000317 	ldw	r16,12(sp)
   3388c:	dec00d04 	addi	sp,sp,52
   33890:	f800283a 	ret
   33894:	91000117 	ldw	r4,4(r18)
   33898:	88c00017 	ldw	r3,0(r17)
   3389c:	213fffc4 	addi	r4,r4,-1
   338a0:	24001526 	beq	r4,r16,338f8 <__call_exitprocs+0x150>
   338a4:	88000015 	stw	zero,0(r17)
   338a8:	183fe726 	beq	r3,zero,33848 <__call_exitprocs+0xa0>
   338ac:	00800044 	movi	r2,1
   338b0:	1408983a 	sll	r4,r2,r16
   338b4:	91406217 	ldw	r5,392(r18)
   338b8:	95000117 	ldw	r20,4(r18)
   338bc:	214a703a 	and	r5,r4,r5
   338c0:	28000b26 	beq	r5,zero,338f0 <__call_exitprocs+0x148>
   338c4:	91406317 	ldw	r5,396(r18)
   338c8:	2148703a 	and	r4,r4,r5
   338cc:	20000c1e 	bne	r4,zero,33900 <__call_exitprocs+0x158>
   338d0:	99400017 	ldw	r5,0(r19)
   338d4:	d9000117 	ldw	r4,4(sp)
   338d8:	183ee83a 	callr	r3
   338dc:	90c00117 	ldw	r3,4(r18)
   338e0:	1d3fc51e 	bne	r3,r20,337f8 <__call_exitprocs+0x50>
   338e4:	b8c00017 	ldw	r3,0(r23)
   338e8:	1cbfd726 	beq	r3,r18,33848 <__call_exitprocs+0xa0>
   338ec:	003fc206 	br	337f8 <__call_exitprocs+0x50>
   338f0:	183ee83a 	callr	r3
   338f4:	003ff906 	br	338dc <__call_exitprocs+0x134>
   338f8:	94000115 	stw	r16,4(r18)
   338fc:	003fea06 	br	338a8 <__call_exitprocs+0x100>
   33900:	99000017 	ldw	r4,0(r19)
   33904:	183ee83a 	callr	r3
   33908:	003ff406 	br	338dc <__call_exitprocs+0x134>
   3390c:	90c00117 	ldw	r3,4(r18)
   33910:	1800071e 	bne	r3,zero,33930 <__call_exitprocs+0x188>
   33914:	90c00017 	ldw	r3,0(r18)
   33918:	18000926 	beq	r3,zero,33940 <__call_exitprocs+0x198>
   3391c:	9009883a 	mov	r4,r18
   33920:	b8c00015 	stw	r3,0(r23)
   33924:	002298c0 	call	2298c <free>
   33928:	bc800017 	ldw	r18,0(r23)
   3392c:	003fb506 	br	33804 <__call_exitprocs+0x5c>
   33930:	90c00017 	ldw	r3,0(r18)
   33934:	902f883a 	mov	r23,r18
   33938:	1825883a 	mov	r18,r3
   3393c:	003fb106 	br	33804 <__call_exitprocs+0x5c>
   33940:	0007883a 	mov	r3,zero
   33944:	003ffb06 	br	33934 <__call_exitprocs+0x18c>

00033948 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   33948:	defffc04 	addi	sp,sp,-16
   3394c:	df000315 	stw	fp,12(sp)
   33950:	df000304 	addi	fp,sp,12
   33954:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   33958:	0001883a 	nop
   3395c:	e0bfff17 	ldw	r2,-4(fp)
   33960:	e0bffd15 	stw	r2,-12(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  int r2 = exit_code;
   33964:	e0bffd17 	ldw	r2,-12(fp)
   33968:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   3396c:	e0bffe17 	ldw	r2,-8(fp)
   33970:	10000226 	beq	r2,zero,3397c <_exit+0x34>
    ALT_SIM_FAIL();
   33974:	002af070 	cmpltui	zero,zero,43969
   33978:	00000106 	br	33980 <_exit+0x38>
  } else {
    ALT_SIM_PASS();
   3397c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   33980:	003fff06 	br	33980 <_exit+0x38>
